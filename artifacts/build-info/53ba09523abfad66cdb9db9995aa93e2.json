{"id":"53ba09523abfad66cdb9db9995aa93e2","_format":"hh-sol-build-info-1","solcVersion":"0.8.18","solcLongVersion":"0.8.18+commit.87f61d96","input":{"language":"Solidity","sources":{"contracts/AccessKey.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\";\n\ncontract AccessKey is ERC721Enumerable {\n    mapping(uint256 => string) private _accessURIs;\n\n    constructor() ERC721(\"AccessKey\", \"AKY\") {}\n\n    function mintAccessKey(address to, uint256 tokenId, string memory accessURI) public {\n        _mint(to, tokenId);\n        _accessURIs[tokenId] = accessURI;\n    }\n\n    function getAccessURI(uint256 tokenId) public view returns (string memory) {\n        require(_exists(tokenId), \"Token does not exist\");\n        return _accessURIs[tokenId];\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/ERC721Enumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC721.sol\";\nimport \"./IERC721Enumerable.sol\";\n\n/**\n * @dev This implements an optional extension of {ERC721} defined in the EIP that adds\n * enumerability of all the token ids in the contract as well as all token ids owned by each\n * account.\n */\nabstract contract ERC721Enumerable is ERC721, IERC721Enumerable {\n    // Mapping from owner to list of owned token IDs\n    mapping(address => mapping(uint256 => uint256)) private _ownedTokens;\n\n    // Mapping from token ID to index of the owner tokens list\n    mapping(uint256 => uint256) private _ownedTokensIndex;\n\n    // Array with all token ids, used for enumeration\n    uint256[] private _allTokens;\n\n    // Mapping from token id to position in the allTokens array\n    mapping(uint256 => uint256) private _allTokensIndex;\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {\n        return interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual override returns (uint256) {\n        require(index < ERC721.balanceOf(owner), \"ERC721Enumerable: owner index out of bounds\");\n        return _ownedTokens[owner][index];\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _allTokens.length;\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-tokenByIndex}.\n     */\n    function tokenByIndex(uint256 index) public view virtual override returns (uint256) {\n        require(index < ERC721Enumerable.totalSupply(), \"ERC721Enumerable: global index out of bounds\");\n        return _allTokens[index];\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual override {\n        super._beforeTokenTransfer(from, to, tokenId);\n\n        if (from == address(0)) {\n            _addTokenToAllTokensEnumeration(tokenId);\n        } else if (from != to) {\n            _removeTokenFromOwnerEnumeration(from, tokenId);\n        }\n        if (to == address(0)) {\n            _removeTokenFromAllTokensEnumeration(tokenId);\n        } else if (to != from) {\n            _addTokenToOwnerEnumeration(to, tokenId);\n        }\n    }\n\n    /**\n     * @dev Private function to add a token to this extension's ownership-tracking data structures.\n     * @param to address representing the new owner of the given token ID\n     * @param tokenId uint256 ID of the token to be added to the tokens list of the given address\n     */\n    function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {\n        uint256 length = ERC721.balanceOf(to);\n        _ownedTokens[to][length] = tokenId;\n        _ownedTokensIndex[tokenId] = length;\n    }\n\n    /**\n     * @dev Private function to add a token to this extension's token tracking data structures.\n     * @param tokenId uint256 ID of the token to be added to the tokens list\n     */\n    function _addTokenToAllTokensEnumeration(uint256 tokenId) private {\n        _allTokensIndex[tokenId] = _allTokens.length;\n        _allTokens.push(tokenId);\n    }\n\n    /**\n     * @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\n     * while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\n     * gas optimizations e.g. when performing a transfer operation (avoiding double writes).\n     * This has O(1) time complexity, but alters the order of the _ownedTokens array.\n     * @param from address representing the previous owner of the given token ID\n     * @param tokenId uint256 ID of the token to be removed from the tokens list of the given address\n     */\n    function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {\n        // To prevent a gap in from's tokens array, we store the last token in the index of the token to delete, and\n        // then delete the last slot (swap and pop).\n\n        uint256 lastTokenIndex = ERC721.balanceOf(from) - 1;\n        uint256 tokenIndex = _ownedTokensIndex[tokenId];\n\n        // When the token to delete is the last token, the swap operation is unnecessary\n        if (tokenIndex != lastTokenIndex) {\n            uint256 lastTokenId = _ownedTokens[from][lastTokenIndex];\n\n            _ownedTokens[from][tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\n            _ownedTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\n        }\n\n        // This also deletes the contents at the last position of the array\n        delete _ownedTokensIndex[tokenId];\n        delete _ownedTokens[from][lastTokenIndex];\n    }\n\n    /**\n     * @dev Private function to remove a token from this extension's token tracking data structures.\n     * This has O(1) time complexity, but alters the order of the _allTokens array.\n     * @param tokenId uint256 ID of the token to be removed from the tokens list\n     */\n    function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {\n        // To prevent a gap in the tokens array, we store the last token in the index of the token to delete, and\n        // then delete the last slot (swap and pop).\n\n        uint256 lastTokenIndex = _allTokens.length - 1;\n        uint256 tokenIndex = _allTokensIndex[tokenId];\n\n        // When the token to delete is the last token, the swap operation is unnecessary. However, since this occurs so\n        // rarely (when the last minted token is burnt) that we still do the swap here to avoid the gas cost of adding\n        // an 'if' statement (like in _removeTokenFromOwnerEnumeration)\n        uint256 lastTokenId = _allTokens[lastTokenIndex];\n\n        _allTokens[tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\n        _allTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\n\n        // This also deletes the contents at the last position of the array\n        delete _allTokensIndex[tokenId];\n        _allTokens.pop();\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: address zero is not a valid owner\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _owners[tokenId];\n        require(owner != address(0), \"ERC721: invalid token ID\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not token owner nor approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        _requireMinted(tokenId);\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner nor approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner nor approved\");\n        _safeTransfer(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _owners[tokenId] != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId);\n\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId);\n\n        // Clear approvals\n        _approve(address(0), tokenId);\n\n        _balances[owner] -= 1;\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n\n        _afterTokenTransfer(owner, address(0), tokenId);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId);\n\n        // Clear approvals from the previous owner\n        _approve(address(0), tokenId);\n\n        _balances[from] -= 1;\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` has not been minted yet.\n     */\n    function _requireMinted(uint256 tokenId) internal view virtual {\n        require(_exists(tokenId), \"ERC721: invalid token ID\");\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC721/extensions/IERC721Enumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Enumerable is IERC721 {\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n     * Use along with {totalSupply} to enumerate all tokens.\n     */\n    function tokenByIndex(uint256 index) external view returns (uint256);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n                /// @solidity memory-safe-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"contracts/Marketplace.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract Marketplace is ERC721Enumerable, ERC721URIStorage, Ownable {\n    struct Course {\n        string uri;\n        uint256 price;\n        uint256 maxSupply;\n        uint256 minted;\n    }\n\n    uint256 public currentCourseId;\n    uint256 public currentTokenId;\n    mapping(uint256 => Course) public courses;\n    mapping(uint256 => address) public secondaryMarketSellers;\n    mapping(uint256 => uint256) public secondaryMarketPrices;\n\n    event CourseCreated(uint256 indexed courseId, string uri, uint256 price, uint256 maxSupply);\n    event NFTMinted(uint256 indexed courseId, uint256 tokenId, address indexed owner);\n    event NFTListedForSale(uint256 indexed tokenId, uint256 price, address indexed seller);\n    event NFTSold(uint256 indexed tokenId, address indexed buyer, address indexed seller);\n\n    constructor(string memory name, string memory symbol) ERC721(name, symbol) {}\n\n    /// @notice Override for ERC721Enumerable and ERC721URIStorage\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal override(ERC721, ERC721Enumerable) {\n        super._beforeTokenTransfer(from, to, tokenId);\n    }\n\n    /// @notice Override for ERC721URIStorage and ERC721\n    function _burn(uint256 tokenId) internal override(ERC721, ERC721URIStorage) {\n        super._burn(tokenId);\n    }\n\n    /// @notice Override for ERC721URIStorage\n    function tokenURI(uint256 tokenId)\n        public\n        view\n        override(ERC721, ERC721URIStorage)\n        returns (string memory)\n    {\n        return super.tokenURI(tokenId);\n    }\n\n    /// @notice Override for ERC721Enumerable\n    function supportsInterface(bytes4 interfaceId)\n        public\n        view\n        override(ERC721, ERC721Enumerable)\n        returns (bool)\n    {\n        return super.supportsInterface(interfaceId);\n    }\n\n    // Yeni bir kurs oluştur\n    function createCourse(string memory uri, uint256 price, uint256 maxSupply) public onlyOwner {\n        require(maxSupply > 0, \"Max supply must be greater than zero\");\n        require(price > 0, \"Price must be greater than zero\");\n        require(bytes(uri).length > 0, \"URI cannot be empty\");\n\n        currentCourseId++;\n        courses[currentCourseId] = Course(uri, price, maxSupply, 0);\n\n        emit CourseCreated(currentCourseId, uri, price, maxSupply);\n    }\n\n    // Kurs için NFT mint et\n    function mintCourse(uint256 courseId) public payable {\n        Course storage course = courses[courseId];\n        require(course.maxSupply > 0, \"Course does not exist\");\n        require(course.minted < course.maxSupply, \"Max supply reached\");\n        require(msg.value == course.price, \"Incorrect payment amount\");\n\n        uint256 tokenId = ++currentTokenId;\n        course.minted++;\n\n        _safeMint(msg.sender, tokenId);\n        _setTokenURI(tokenId, course.uri); // URI'yi NFT'ye bağla\n\n        emit NFTMinted(courseId, tokenId, msg.sender);\n    }\n\n    // NFT'yi ikinci el satışa koy\n    function listNFTForSale(uint256 tokenId, uint256 price) public {\n        require(ownerOf(tokenId) == msg.sender, \"You are not the owner of this NFT\");\n        require(price > 0, \"Price must be greater than zero\");\n\n        secondaryMarketSellers[tokenId] = msg.sender;\n        secondaryMarketPrices[tokenId] = price;\n\n        emit NFTListedForSale(tokenId, price, msg.sender);\n    }\n\n    // İkinci el piyasadan NFT satın al\n    function buyNFT(uint256 tokenId) public payable {\n        require(secondaryMarketPrices[tokenId] > 0, \"NFT is not for sale\");\n        require(msg.value == secondaryMarketPrices[tokenId], \"Incorrect payment amount\");\n\n        address seller = secondaryMarketSellers[tokenId];\n        require(seller != address(0), \"Seller address is invalid\");\n        require(seller != msg.sender, \"Cannot buy your own NFT\");\n\n        _transfer(seller, msg.sender, tokenId);\n        payable(seller).transfer(msg.value);\n\n        delete secondaryMarketPrices[tokenId];\n        delete secondaryMarketSellers[tokenId];\n\n        emit NFTSold(tokenId, msg.sender, seller);\n    }\n\n    // Kurs detaylarını al\n    function getCourseDetails(uint256 courseId)\n        public\n        view\n        returns (string memory, uint256, uint256, uint256)\n    {\n        Course storage course = courses[courseId];\n        require(course.maxSupply > 0, \"Course does not exist\");\n        return (course.uri, course.price, course.maxSupply, course.minted);\n    }\n\n    // Belirli bir NFT'nin satış fiyatını al\n    function getNFTSalePrice(uint256 tokenId) public view returns (uint256) {\n        return secondaryMarketPrices[tokenId];\n    }\n\n    // Belirli bir NFT'nin sahibini kontrol et\n    function getNFTOwner(uint256 tokenId) public view returns (address) {\n        return ownerOf(tokenId);\n    }\n\n    // Kullanıcının sahip olduğu NFT'leri listele\n    function getOwnedNFTs(address owner) public view returns (uint256[] memory) {\n        uint256 balance = balanceOf(owner);\n        uint256[] memory tokenIds = new uint256[](balance);\n\n        for (uint256 i = 0; i < balance; i++) {\n            tokenIds[i] = tokenOfOwnerByIndex(owner, i);\n        }\n        return tokenIds;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC721.sol\";\n\n/**\n * @dev ERC721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is ERC721 {\n    using Strings for uint256;\n\n    // Optional mapping for token URIs\n    mapping(uint256 => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\n        if (bytes(_tokenURI).length > 0) {\n            return string(abi.encodePacked(base, _tokenURI));\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        require(_exists(tokenId), \"ERC721URIStorage: URI set of nonexistent token\");\n        _tokenURIs[tokenId] = _tokenURI;\n    }\n\n    /**\n     * @dev See {ERC721-_burn}. This override additionally checks to see if a\n     * token-specific URI was set for the token, and if so, it deletes the token URI from\n     * the storage mapping.\n     */\n    function _burn(uint256 tokenId) internal virtual override {\n        super._burn(tokenId);\n\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\n            delete _tokenURIs[tokenId];\n        }\n    }\n}\n"},"contracts/Certificate.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.18;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\r\n\r\n/// @title Certificate NFT Contract for Course Completion\r\n/// @dev ERC721 token that mints non-transferable course certificates\r\ncontract Certificate is ERC721Enumerable, ERC721URIStorage, Ownable {\r\n    using Counters for Counters.Counter;\r\n\r\n    // Token ID Counter\r\n    Counters.Counter private _tokenIds;\r\n\r\n    // Mapping to track if a user already received a certificate for a course\r\n    mapping(address => mapping(uint256 => bool)) public hasCertificate;\r\n\r\n    // Events\r\n    event CertificateMinted(address indexed user, uint256 indexed courseId, uint256 tokenId);\r\n\r\n    constructor(string memory name, string memory symbol) ERC721(name, symbol) {}\r\n\r\n    /// @notice Mint a certificate to a user for a specific course\r\n    /// @param user The address of the user receiving the certificate\r\n    /// @param courseId The ID of the completed course\r\n    /// @param tokenURI The metadata URI for the certificate\r\n    function mintCertificate(\r\n        address user,\r\n        uint256 courseId,\r\n        string memory tokenURI\r\n    ) external onlyOwner returns (uint256) {\r\n        require(!hasCertificate[user][courseId], \"Certificate already issued for this course\");\r\n\r\n        _tokenIds.increment();\r\n        uint256 newTokenId = _tokenIds.current();\r\n\r\n        // Mint the NFT certificate\r\n        _safeMint(user, newTokenId);\r\n        _setTokenURI(newTokenId, tokenURI);\r\n\r\n        // Mark the certificate as issued for this user and course\r\n        hasCertificate[user][courseId] = true;\r\n\r\n        emit CertificateMinted(user, courseId, newTokenId);\r\n        return newTokenId;\r\n    }\r\n\r\n    /// @notice Override required for ERC721URIStorage\r\n    function _burn(uint256 tokenId) internal override(ERC721, ERC721URIStorage) {\r\n        super._burn(tokenId);\r\n    }\r\n\r\n    /// @notice Override required for ERC721URIStorage\r\n    function tokenURI(uint256 tokenId)\r\n        public\r\n        view\r\n        override(ERC721, ERC721URIStorage)\r\n        returns (string memory)\r\n    {\r\n        return super.tokenURI(tokenId);\r\n    }\r\n\r\n    /// @notice Override required for ERC721Enumerable and ERC721URIStorage\r\n    function _beforeTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) internal override(ERC721, ERC721Enumerable) {\r\n        require(from == address(0) || to == address(0), \"Certificates are non-transferable\");\r\n        super._beforeTokenTransfer(from, to, tokenId);\r\n    }\r\n\r\n    /// @notice Override required for ERC721Enumerable\r\n    function supportsInterface(bytes4 interfaceId)\r\n        public\r\n        view\r\n        override(ERC721, ERC721Enumerable)\r\n        returns (bool)\r\n    {\r\n        return super.supportsInterface(interfaceId);\r\n    }\r\n}\r\n"},"@openzeppelin/contracts/utils/Counters.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"2519","formattedMessage":"Warning: This declaration shadows an existing declaration.\n  --> contracts/Certificate.sol:32:9:\n   |\n32 |         string memory tokenURI\n   |         ^^^^^^^^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> contracts/Certificate.sol:56:5:\n   |\n56 |     function tokenURI(uint256 tokenId)\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"This declaration shadows an existing declaration.","secondarySourceLocations":[{"end":2368,"file":"contracts/Certificate.sol","message":"The shadowed declaration is here:","start":2172}],"severity":"warning","sourceLocation":{"end":1363,"file":"contracts/Certificate.sol","start":1341},"type":"Warning"}],"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1951],"Ownable":[112]},"id":113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":113,"sourceUnit":1952,"src":"127:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nameLocations":["683:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1951,"src":"683:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"683:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"159:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":112,"linearizedBaseContracts":[112,1951],"name":"Ownable","nameLocation":"672:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nameLocation":"713:6:0","nodeType":"VariableDeclaration","scope":112,"src":"697:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":13,"name":"OwnershipTransferred","nameLocation":"732:20:0","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:0","nodeType":"VariableDeclaration","scope":13,"src":"753:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:0","nodeType":"VariableDeclaration","scope":13,"src":"784:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:0"},"src":"726:84:0"},{"body":{"id":22,"nodeType":"Block","src":"926:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"955:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"936:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"936:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"936:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"816:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"923:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"926:0:0"},"scope":112,"src":"912:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"1084:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":26,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1094:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1094:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28,"nodeType":"ExpressionStatement","src":"1094:13:0"},{"id":29,"nodeType":"PlaceholderStatement","src":"1117:1:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"981:77:0","text":" @dev Throws if called by any account other than the owner."},"id":31,"name":"onlyOwner","nameLocation":"1072:9:0","nodeType":"ModifierDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1081:2:0"},"src":"1063:62:0","virtual":false,"visibility":"internal"},{"body":{"id":39,"nodeType":"Block","src":"1256:30:0","statements":[{"expression":{"id":37,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1273:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":36,"id":38,"nodeType":"Return","src":"1266:13:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1131:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":40,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:0","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"1215:2:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40,"src":"1247:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:0"},"scope":112,"src":"1201:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":53,"nodeType":"Block","src":"1404:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":45,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1422:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1422:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":47,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"1433:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1433:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":44,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1414:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1414:68:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1292:62:0","text":" @dev Throws if the sender is not the owner."},"id":54,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:0","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[],"src":"1379:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[],"src":"1404:0:0"},"scope":112,"src":"1359:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1885:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1922:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1914:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1914:7:0","typeDescriptions":{}}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1914:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1895:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1895:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1895:30:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1495:331:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":68,"implemented":true,"kind":"function","modifiers":[{"id":58,"kind":"modifierInvocation","modifierName":{"id":57,"name":"onlyOwner","nameLocations":["1875:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1875:9:0"},"nodeType":"ModifierInvocation","src":"1875:9:0"}],"name":"renounceOwnership","nameLocation":"1840:17:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1857:2:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1885:0:0"},"scope":112,"src":"1831:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":90,"nodeType":"Block","src":"2151:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2169:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2189:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":79,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2181:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"2181:7:0","typeDescriptions":{}}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2181:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2169:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2193:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":76,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2161:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2161:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"ExpressionStatement","src":"2161:73:0"},{"expression":{"arguments":[{"id":87,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2263:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2244:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2244:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"2244:28:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1938:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":91,"implemented":true,"kind":"function","modifiers":[{"id":74,"kind":"modifierInvocation","modifierName":{"id":73,"name":"onlyOwner","nameLocations":["2141:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2141:9:0"},"nodeType":"ModifierInvocation","src":"2141:9:0"}],"name":"transferOwnership","nameLocation":"2090:17:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"newOwner","nameLocation":"2116:8:0","nodeType":"VariableDeclaration","scope":91,"src":"2108:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2108:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2107:18:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"2151:0:0"},"scope":112,"src":"2081:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":110,"nodeType":"Block","src":"2496:124:0","statements":[{"assignments":[98],"declarations":[{"constant":false,"id":98,"mutability":"mutable","name":"oldOwner","nameLocation":"2514:8:0","nodeType":"VariableDeclaration","scope":110,"src":"2506:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":100,"initialValue":{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2525:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2506:25:0"},{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":101,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2541:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2550:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2541:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"2541:17:0"},{"eventCall":{"arguments":[{"id":106,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2594:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":107,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2604:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2573:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2573:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"EmitStatement","src":"2568:45:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"2285:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":111,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2442:18:0","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"newOwner","nameLocation":"2469:8:0","nodeType":"VariableDeclaration","scope":111,"src":"2461:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2461:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2460:18:0"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"2496:0:0"},"scope":112,"src":"2433:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":113,"src":"654:1968:0","usedErrors":[]}],"src":"102:2521:0"},"id":0},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Address":[1929],"Context":[1951],"ERC165":[2275],"ERC721":[979],"IERC165":[2287],"IERC721":[1095],"IERC721Metadata":[1634],"IERC721Receiver":[1113],"Strings":[2251]},"id":980,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":114,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:1"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":115,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":980,"sourceUnit":1096,"src":"132:23:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"./IERC721Receiver.sol","id":116,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":980,"sourceUnit":1114,"src":"156:31:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":117,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":980,"sourceUnit":1635,"src":"188:42:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":118,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":980,"sourceUnit":1930,"src":"231:33:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":119,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":980,"sourceUnit":1952,"src":"265:33:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":120,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":980,"sourceUnit":2252,"src":"299:33:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":121,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":980,"sourceUnit":2276,"src":"333:46:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":123,"name":"Context","nameLocations":["647:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":1951,"src":"647:7:1"},"id":124,"nodeType":"InheritanceSpecifier","src":"647:7:1"},{"baseName":{"id":125,"name":"ERC165","nameLocations":["656:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":2275,"src":"656:6:1"},"id":126,"nodeType":"InheritanceSpecifier","src":"656:6:1"},{"baseName":{"id":127,"name":"IERC721","nameLocations":["664:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":1095,"src":"664:7:1"},"id":128,"nodeType":"InheritanceSpecifier","src":"664:7:1"},{"baseName":{"id":129,"name":"IERC721Metadata","nameLocations":["673:15:1"],"nodeType":"IdentifierPath","referencedDeclaration":1634,"src":"673:15:1"},"id":130,"nodeType":"InheritanceSpecifier","src":"673:15:1"}],"canonicalName":"ERC721","contractDependencies":[],"contractKind":"contract","documentation":{"id":122,"nodeType":"StructuredDocumentation","src":"381:246:1","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":979,"linearizedBaseContracts":[979,1634,1095,2275,2287,1951],"name":"ERC721","nameLocation":"637:6:1","nodeType":"ContractDefinition","nodes":[{"global":false,"id":133,"libraryName":{"id":131,"name":"Address","nameLocations":["701:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":1929,"src":"701:7:1"},"nodeType":"UsingForDirective","src":"695:26:1","typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"713:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"global":false,"id":136,"libraryName":{"id":134,"name":"Strings","nameLocations":["732:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":2251,"src":"732:7:1"},"nodeType":"UsingForDirective","src":"726:26:1","typeName":{"id":135,"name":"uint256","nodeType":"ElementaryTypeName","src":"744:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":138,"mutability":"mutable","name":"_name","nameLocation":"791:5:1","nodeType":"VariableDeclaration","scope":979,"src":"776:20:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":137,"name":"string","nodeType":"ElementaryTypeName","src":"776:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":140,"mutability":"mutable","name":"_symbol","nameLocation":"838:7:1","nodeType":"VariableDeclaration","scope":979,"src":"823:22:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":139,"name":"string","nodeType":"ElementaryTypeName","src":"823:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":144,"mutability":"mutable","name":"_owners","nameLocation":"934:7:1","nodeType":"VariableDeclaration","scope":979,"src":"898:43:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":143,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":141,"name":"uint256","nodeType":"ElementaryTypeName","src":"906:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"898:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":142,"name":"address","nodeType":"ElementaryTypeName","src":"917:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":148,"mutability":"mutable","name":"_balances","nameLocation":"1028:9:1","nodeType":"VariableDeclaration","scope":979,"src":"992:45:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":147,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":145,"name":"address","nodeType":"ElementaryTypeName","src":"1000:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"992:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":146,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":152,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1129:15:1","nodeType":"VariableDeclaration","scope":979,"src":"1093:51:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":151,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":149,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1093:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":150,"name":"address","nodeType":"ElementaryTypeName","src":"1112:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":158,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1252:18:1","nodeType":"VariableDeclaration","scope":979,"src":"1199:71:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":157,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":153,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:44:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":156,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":154,"name":"address","nodeType":"ElementaryTypeName","src":"1226:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1218:24:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":155,"name":"bool","nodeType":"ElementaryTypeName","src":"1237:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":174,"nodeType":"Block","src":"1446:57:1","statements":[{"expression":{"id":168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":166,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"1456:5:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":167,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"1464:5:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1456:13:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":169,"nodeType":"ExpressionStatement","src":"1456:13:1"},{"expression":{"id":172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":170,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"1479:7:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":171,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":163,"src":"1489:7:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1479:17:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":173,"nodeType":"ExpressionStatement","src":"1479:17:1"}]},"documentation":{"id":159,"nodeType":"StructuredDocumentation","src":"1277:108:1","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":175,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":161,"mutability":"mutable","name":"name_","nameLocation":"1416:5:1","nodeType":"VariableDeclaration","scope":175,"src":"1402:19:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":160,"name":"string","nodeType":"ElementaryTypeName","src":"1402:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":163,"mutability":"mutable","name":"symbol_","nameLocation":"1437:7:1","nodeType":"VariableDeclaration","scope":175,"src":"1423:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":162,"name":"string","nodeType":"ElementaryTypeName","src":"1423:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1401:44:1"},"returnParameters":{"id":165,"nodeType":"ParameterList","parameters":[],"src":"1446:0:1"},"scope":979,"src":"1390:113:1","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2274,2286],"body":{"id":205,"nodeType":"Block","src":"1678:192:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":186,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":178,"src":"1707:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":188,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1095,"src":"1727:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1095_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$1095_$","typeString":"type(contract IERC721)"}],"id":187,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1722:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1722:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$1095","typeString":"type(contract IERC721)"}},"id":190,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1736:11:1","memberName":"interfaceId","nodeType":"MemberAccess","src":"1722:25:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1707:40:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":192,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":178,"src":"1763:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":194,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"1783:15:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1634_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1634_$","typeString":"type(contract IERC721Metadata)"}],"id":193,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1778:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1778:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$1634","typeString":"type(contract IERC721Metadata)"}},"id":196,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1800:11:1","memberName":"interfaceId","nodeType":"MemberAccess","src":"1778:33:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1763:48:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1707:104:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":201,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":178,"src":"1851:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":199,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1827:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$979_$","typeString":"type(contract super ERC721)"}},"id":200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1833:17:1","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2274,"src":"1827:23:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1827:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1707:156:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":185,"id":204,"nodeType":"Return","src":"1688:175:1"}]},"documentation":{"id":176,"nodeType":"StructuredDocumentation","src":"1509:56:1","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":206,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1579:17:1","nodeType":"FunctionDefinition","overrides":{"id":182,"nodeType":"OverrideSpecifier","overrides":[{"id":180,"name":"ERC165","nameLocations":["1646:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":2275,"src":"1646:6:1"},{"id":181,"name":"IERC165","nameLocations":["1654:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":2287,"src":"1654:7:1"}],"src":"1637:25:1"},"parameters":{"id":179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":178,"mutability":"mutable","name":"interfaceId","nameLocation":"1604:11:1","nodeType":"VariableDeclaration","scope":206,"src":"1597:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":177,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1597:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1596:20:1"},"returnParameters":{"id":185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":184,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":206,"src":"1672:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":183,"name":"bool","nodeType":"ElementaryTypeName","src":"1672:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1671:6:1"},"scope":979,"src":"1570:300:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1020],"body":{"id":229,"nodeType":"Block","src":"2010:123:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":216,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":209,"src":"2028:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2045:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2037:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":217,"name":"address","nodeType":"ElementaryTypeName","src":"2037:7:1","typeDescriptions":{}}},"id":220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2037:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2028:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572","id":222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2049:43:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","typeString":"literal_string \"ERC721: address zero is not a valid owner\""},"value":"ERC721: address zero is not a valid owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","typeString":"literal_string \"ERC721: address zero is not a valid owner\""}],"id":215,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2020:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2020:73:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":224,"nodeType":"ExpressionStatement","src":"2020:73:1"},{"expression":{"baseExpression":{"id":225,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":148,"src":"2110:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":227,"indexExpression":{"id":226,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":209,"src":"2120:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2110:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":214,"id":228,"nodeType":"Return","src":"2103:23:1"}]},"documentation":{"id":207,"nodeType":"StructuredDocumentation","src":"1876:48:1","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":230,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1938:9:1","nodeType":"FunctionDefinition","overrides":{"id":211,"nodeType":"OverrideSpecifier","overrides":[],"src":"1983:8:1"},"parameters":{"id":210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":209,"mutability":"mutable","name":"owner","nameLocation":"1956:5:1","nodeType":"VariableDeclaration","scope":230,"src":"1948:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":208,"name":"address","nodeType":"ElementaryTypeName","src":"1948:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1947:15:1"},"returnParameters":{"id":214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":213,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":230,"src":"2001:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":212,"name":"uint256","nodeType":"ElementaryTypeName","src":"2001:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2000:9:1"},"scope":979,"src":"1929:204:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1028],"body":{"id":257,"nodeType":"Block","src":"2271:137:1","statements":[{"assignments":[240],"declarations":[{"constant":false,"id":240,"mutability":"mutable","name":"owner","nameLocation":"2289:5:1","nodeType":"VariableDeclaration","scope":257,"src":"2281:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":239,"name":"address","nodeType":"ElementaryTypeName","src":"2281:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":244,"initialValue":{"baseExpression":{"id":241,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"2297:7:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":243,"indexExpression":{"id":242,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"2305:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2297:16:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2281:32:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":246,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"2331:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2348:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2340:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":247,"name":"address","nodeType":"ElementaryTypeName","src":"2340:7:1","typeDescriptions":{}}},"id":250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2340:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2331:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","id":252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2352:26:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""},"value":"ERC721: invalid token ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""}],"id":245,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2323:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2323:56:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":254,"nodeType":"ExpressionStatement","src":"2323:56:1"},{"expression":{"id":255,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"2396:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":238,"id":256,"nodeType":"Return","src":"2389:12:1"}]},"documentation":{"id":231,"nodeType":"StructuredDocumentation","src":"2139:46:1","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":258,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2199:7:1","nodeType":"FunctionDefinition","overrides":{"id":235,"nodeType":"OverrideSpecifier","overrides":[],"src":"2244:8:1"},"parameters":{"id":234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":233,"mutability":"mutable","name":"tokenId","nameLocation":"2215:7:1","nodeType":"VariableDeclaration","scope":258,"src":"2207:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":232,"name":"uint256","nodeType":"ElementaryTypeName","src":"2207:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2206:17:1"},"returnParameters":{"id":238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":237,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":258,"src":"2262:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":236,"name":"address","nodeType":"ElementaryTypeName","src":"2262:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2261:9:1"},"scope":979,"src":"2190:218:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1619],"body":{"id":267,"nodeType":"Block","src":"2539:29:1","statements":[{"expression":{"id":265,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"2556:5:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":264,"id":266,"nodeType":"Return","src":"2549:12:1"}]},"documentation":{"id":259,"nodeType":"StructuredDocumentation","src":"2414:51:1","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":268,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2479:4:1","nodeType":"FunctionDefinition","overrides":{"id":261,"nodeType":"OverrideSpecifier","overrides":[],"src":"2506:8:1"},"parameters":{"id":260,"nodeType":"ParameterList","parameters":[],"src":"2483:2:1"},"returnParameters":{"id":264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":263,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":268,"src":"2524:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":262,"name":"string","nodeType":"ElementaryTypeName","src":"2524:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2523:15:1"},"scope":979,"src":"2470:98:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1625],"body":{"id":277,"nodeType":"Block","src":"2703:31:1","statements":[{"expression":{"id":275,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"2720:7:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":274,"id":276,"nodeType":"Return","src":"2713:14:1"}]},"documentation":{"id":269,"nodeType":"StructuredDocumentation","src":"2574:53:1","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":278,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2641:6:1","nodeType":"FunctionDefinition","overrides":{"id":271,"nodeType":"OverrideSpecifier","overrides":[],"src":"2670:8:1"},"parameters":{"id":270,"nodeType":"ParameterList","parameters":[],"src":"2647:2:1"},"returnParameters":{"id":274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":273,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":278,"src":"2688:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":272,"name":"string","nodeType":"ElementaryTypeName","src":"2688:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2687:15:1"},"scope":979,"src":"2632:102:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1633],"body":{"id":316,"nodeType":"Block","src":"2888:188:1","statements":[{"expression":{"arguments":[{"id":288,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"2913:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":287,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"2898:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2898:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":290,"nodeType":"ExpressionStatement","src":"2898:23:1"},{"assignments":[292],"declarations":[{"constant":false,"id":292,"mutability":"mutable","name":"baseURI","nameLocation":"2946:7:1","nodeType":"VariableDeclaration","scope":316,"src":"2932:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":291,"name":"string","nodeType":"ElementaryTypeName","src":"2932:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":295,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":293,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"2956:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2956:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2932:34:1"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":298,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"2989:7:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":297,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2983:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":296,"name":"bytes","nodeType":"ElementaryTypeName","src":"2983:5:1","typeDescriptions":{}}},"id":299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2983:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2998:6:1","memberName":"length","nodeType":"MemberAccess","src":"2983:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3007:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2983:25:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3067:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2983:86:1","trueExpression":{"arguments":[{"arguments":[{"id":307,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"3035:7:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":308,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"3044:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3052:8:1","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2113,"src":"3044:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3044:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":305,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3018:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3022:12:1","memberName":"encodePacked","nodeType":"MemberAccess","src":"3018:16:1","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3018:45:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3011:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":303,"name":"string","nodeType":"ElementaryTypeName","src":"3011:6:1","typeDescriptions":{}}},"id":312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3011:53:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":286,"id":315,"nodeType":"Return","src":"2976:93:1"}]},"documentation":{"id":279,"nodeType":"StructuredDocumentation","src":"2740:55:1","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":317,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2809:8:1","nodeType":"FunctionDefinition","overrides":{"id":283,"nodeType":"OverrideSpecifier","overrides":[],"src":"2855:8:1"},"parameters":{"id":282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":281,"mutability":"mutable","name":"tokenId","nameLocation":"2826:7:1","nodeType":"VariableDeclaration","scope":317,"src":"2818:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":280,"name":"uint256","nodeType":"ElementaryTypeName","src":"2818:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2817:17:1"},"returnParameters":{"id":286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":285,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":317,"src":"2873:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":284,"name":"string","nodeType":"ElementaryTypeName","src":"2873:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2872:15:1"},"scope":979,"src":"2800:276:1","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":325,"nodeType":"Block","src":"3384:26:1","statements":[{"expression":{"hexValue":"","id":323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3401:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":322,"id":324,"nodeType":"Return","src":"3394:9:1"}]},"documentation":{"id":318,"nodeType":"StructuredDocumentation","src":"3082:231:1","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":326,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3327:8:1","nodeType":"FunctionDefinition","parameters":{"id":319,"nodeType":"ParameterList","parameters":[],"src":"3335:2:1"},"returnParameters":{"id":322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":321,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":326,"src":"3369:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":320,"name":"string","nodeType":"ElementaryTypeName","src":"3369:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3368:15:1"},"scope":979,"src":"3318:92:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1068],"body":{"id":368,"nodeType":"Block","src":"3537:337:1","statements":[{"assignments":[336],"declarations":[{"constant":false,"id":336,"mutability":"mutable","name":"owner","nameLocation":"3555:5:1","nodeType":"VariableDeclaration","scope":368,"src":"3547:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":335,"name":"address","nodeType":"ElementaryTypeName","src":"3547:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":341,"initialValue":{"arguments":[{"id":339,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"3578:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":337,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"3563:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$979_$","typeString":"type(contract ERC721)"}},"id":338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3570:7:1","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":258,"src":"3563:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3563:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3547:39:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":343,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"3604:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":344,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"3610:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3604:11:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572","id":346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3617:35:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""},"value":"ERC721: approval to current owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""}],"id":342,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3596:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3596:57:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":348,"nodeType":"ExpressionStatement","src":"3596:57:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":350,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"3685:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3685:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":352,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"3701:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3685:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":355,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"3727:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":356,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"3734:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3734:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":354,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"3710:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3710:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3685:62:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c","id":360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3761:64:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304","typeString":"literal_string \"ERC721: approve caller is not token owner nor approved for all\""},"value":"ERC721: approve caller is not token owner nor approved for all"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304","typeString":"literal_string \"ERC721: approve caller is not token owner nor approved for all\""}],"id":349,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3664:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3664:171:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":362,"nodeType":"ExpressionStatement","src":"3664:171:1"},{"expression":{"arguments":[{"id":364,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"3855:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":365,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"3859:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":363,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"3846:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3846:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":367,"nodeType":"ExpressionStatement","src":"3846:21:1"}]},"documentation":{"id":327,"nodeType":"StructuredDocumentation","src":"3416:46:1","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":369,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3476:7:1","nodeType":"FunctionDefinition","overrides":{"id":333,"nodeType":"OverrideSpecifier","overrides":[],"src":"3528:8:1"},"parameters":{"id":332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":329,"mutability":"mutable","name":"to","nameLocation":"3492:2:1","nodeType":"VariableDeclaration","scope":369,"src":"3484:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":328,"name":"address","nodeType":"ElementaryTypeName","src":"3484:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":331,"mutability":"mutable","name":"tokenId","nameLocation":"3504:7:1","nodeType":"VariableDeclaration","scope":369,"src":"3496:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":330,"name":"uint256","nodeType":"ElementaryTypeName","src":"3496:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3483:29:1"},"returnParameters":{"id":334,"nodeType":"ParameterList","parameters":[],"src":"3537:0:1"},"scope":979,"src":"3467:407:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1084],"body":{"id":386,"nodeType":"Block","src":"4020:82:1","statements":[{"expression":{"arguments":[{"id":379,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"4045:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":378,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"4030:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4030:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":381,"nodeType":"ExpressionStatement","src":"4030:23:1"},{"expression":{"baseExpression":{"id":382,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":152,"src":"4071:15:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":384,"indexExpression":{"id":383,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"4087:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4071:24:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":377,"id":385,"nodeType":"Return","src":"4064:31:1"}]},"documentation":{"id":370,"nodeType":"StructuredDocumentation","src":"3880:50:1","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":387,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3944:11:1","nodeType":"FunctionDefinition","overrides":{"id":374,"nodeType":"OverrideSpecifier","overrides":[],"src":"3993:8:1"},"parameters":{"id":373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":372,"mutability":"mutable","name":"tokenId","nameLocation":"3964:7:1","nodeType":"VariableDeclaration","scope":387,"src":"3956:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":371,"name":"uint256","nodeType":"ElementaryTypeName","src":"3956:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3955:17:1"},"returnParameters":{"id":377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":376,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":387,"src":"4011:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":375,"name":"address","nodeType":"ElementaryTypeName","src":"4011:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4010:9:1"},"scope":979,"src":"3935:167:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1076],"body":{"id":403,"nodeType":"Block","src":"4253:69:1","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":397,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"4282:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4282:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":399,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"4296:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":400,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"4306:8:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":396,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"4263:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4263:52:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":402,"nodeType":"ExpressionStatement","src":"4263:52:1"}]},"documentation":{"id":388,"nodeType":"StructuredDocumentation","src":"4108:56:1","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":404,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4178:17:1","nodeType":"FunctionDefinition","overrides":{"id":394,"nodeType":"OverrideSpecifier","overrides":[],"src":"4244:8:1"},"parameters":{"id":393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":390,"mutability":"mutable","name":"operator","nameLocation":"4204:8:1","nodeType":"VariableDeclaration","scope":404,"src":"4196:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":389,"name":"address","nodeType":"ElementaryTypeName","src":"4196:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":392,"mutability":"mutable","name":"approved","nameLocation":"4219:8:1","nodeType":"VariableDeclaration","scope":404,"src":"4214:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":391,"name":"bool","nodeType":"ElementaryTypeName","src":"4214:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4195:33:1"},"returnParameters":{"id":395,"nodeType":"ParameterList","parameters":[],"src":"4253:0:1"},"scope":979,"src":"4169:153:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1094],"body":{"id":421,"nodeType":"Block","src":"4491:59:1","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":415,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":158,"src":"4508:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":417,"indexExpression":{"id":416,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"4527:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4508:25:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":419,"indexExpression":{"id":418,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"4534:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4508:35:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":414,"id":420,"nodeType":"Return","src":"4501:42:1"}]},"documentation":{"id":405,"nodeType":"StructuredDocumentation","src":"4328:55:1","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":422,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4397:16:1","nodeType":"FunctionDefinition","overrides":{"id":411,"nodeType":"OverrideSpecifier","overrides":[],"src":"4467:8:1"},"parameters":{"id":410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":407,"mutability":"mutable","name":"owner","nameLocation":"4422:5:1","nodeType":"VariableDeclaration","scope":422,"src":"4414:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":406,"name":"address","nodeType":"ElementaryTypeName","src":"4414:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":409,"mutability":"mutable","name":"operator","nameLocation":"4437:8:1","nodeType":"VariableDeclaration","scope":422,"src":"4429:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":408,"name":"address","nodeType":"ElementaryTypeName","src":"4429:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4413:33:1"},"returnParameters":{"id":414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":413,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":422,"src":"4485:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":412,"name":"bool","nodeType":"ElementaryTypeName","src":"4485:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4484:6:1"},"scope":979,"src":"4388:162:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1060],"body":{"id":448,"nodeType":"Block","src":"4731:208:1","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":435,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"4820:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4820:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":437,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"4834:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":434,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"4801:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4801:41:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206e6f7220617070726f766564","id":439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4844:48:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b","typeString":"literal_string \"ERC721: caller is not token owner nor approved\""},"value":"ERC721: caller is not token owner nor approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b","typeString":"literal_string \"ERC721: caller is not token owner nor approved\""}],"id":433,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4793:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4793:100:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":441,"nodeType":"ExpressionStatement","src":"4793:100:1"},{"expression":{"arguments":[{"id":443,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":425,"src":"4914:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":444,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"4920:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":445,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"4924:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":442,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"4904:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4904:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":447,"nodeType":"ExpressionStatement","src":"4904:28:1"}]},"documentation":{"id":423,"nodeType":"StructuredDocumentation","src":"4556:51:1","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":449,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4621:12:1","nodeType":"FunctionDefinition","overrides":{"id":431,"nodeType":"OverrideSpecifier","overrides":[],"src":"4722:8:1"},"parameters":{"id":430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":425,"mutability":"mutable","name":"from","nameLocation":"4651:4:1","nodeType":"VariableDeclaration","scope":449,"src":"4643:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":424,"name":"address","nodeType":"ElementaryTypeName","src":"4643:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":427,"mutability":"mutable","name":"to","nameLocation":"4673:2:1","nodeType":"VariableDeclaration","scope":449,"src":"4665:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":426,"name":"address","nodeType":"ElementaryTypeName","src":"4665:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":429,"mutability":"mutable","name":"tokenId","nameLocation":"4693:7:1","nodeType":"VariableDeclaration","scope":449,"src":"4685:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":428,"name":"uint256","nodeType":"ElementaryTypeName","src":"4685:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4633:73:1"},"returnParameters":{"id":432,"nodeType":"ParameterList","parameters":[],"src":"4731:0:1"},"scope":979,"src":"4612:327:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1050],"body":{"id":467,"nodeType":"Block","src":"5128:56:1","statements":[{"expression":{"arguments":[{"id":461,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"5155:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":462,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"5161:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":463,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":456,"src":"5165:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5174:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":460,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[468,498],"referencedDeclaration":498,"src":"5138:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5138:39:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":466,"nodeType":"ExpressionStatement","src":"5138:39:1"}]},"documentation":{"id":450,"nodeType":"StructuredDocumentation","src":"4945:55:1","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":468,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5014:16:1","nodeType":"FunctionDefinition","overrides":{"id":458,"nodeType":"OverrideSpecifier","overrides":[],"src":"5119:8:1"},"parameters":{"id":457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":452,"mutability":"mutable","name":"from","nameLocation":"5048:4:1","nodeType":"VariableDeclaration","scope":468,"src":"5040:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":451,"name":"address","nodeType":"ElementaryTypeName","src":"5040:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":454,"mutability":"mutable","name":"to","nameLocation":"5070:2:1","nodeType":"VariableDeclaration","scope":468,"src":"5062:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":453,"name":"address","nodeType":"ElementaryTypeName","src":"5062:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":456,"mutability":"mutable","name":"tokenId","nameLocation":"5090:7:1","nodeType":"VariableDeclaration","scope":468,"src":"5082:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":455,"name":"uint256","nodeType":"ElementaryTypeName","src":"5082:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5030:73:1"},"returnParameters":{"id":459,"nodeType":"ParameterList","parameters":[],"src":"5128:0:1"},"scope":979,"src":"5005:179:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1040],"body":{"id":497,"nodeType":"Block","src":"5400:165:1","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":483,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"5437:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5437:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":485,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"5451:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":482,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"5418:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5418:41:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206e6f7220617070726f766564","id":487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5461:48:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b","typeString":"literal_string \"ERC721: caller is not token owner nor approved\""},"value":"ERC721: caller is not token owner nor approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b","typeString":"literal_string \"ERC721: caller is not token owner nor approved\""}],"id":481,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5410:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5410:100:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":489,"nodeType":"ExpressionStatement","src":"5410:100:1"},{"expression":{"arguments":[{"id":491,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":471,"src":"5534:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":492,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"5540:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":493,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"5544:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":494,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"5553:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":490,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"5520:13:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5520:38:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":496,"nodeType":"ExpressionStatement","src":"5520:38:1"}]},"documentation":{"id":469,"nodeType":"StructuredDocumentation","src":"5190:55:1","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":498,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5259:16:1","nodeType":"FunctionDefinition","overrides":{"id":479,"nodeType":"OverrideSpecifier","overrides":[],"src":"5391:8:1"},"parameters":{"id":478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":471,"mutability":"mutable","name":"from","nameLocation":"5293:4:1","nodeType":"VariableDeclaration","scope":498,"src":"5285:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":470,"name":"address","nodeType":"ElementaryTypeName","src":"5285:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":473,"mutability":"mutable","name":"to","nameLocation":"5315:2:1","nodeType":"VariableDeclaration","scope":498,"src":"5307:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":472,"name":"address","nodeType":"ElementaryTypeName","src":"5307:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":475,"mutability":"mutable","name":"tokenId","nameLocation":"5335:7:1","nodeType":"VariableDeclaration","scope":498,"src":"5327:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":474,"name":"uint256","nodeType":"ElementaryTypeName","src":"5327:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":477,"mutability":"mutable","name":"data","nameLocation":"5365:4:1","nodeType":"VariableDeclaration","scope":498,"src":"5352:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":476,"name":"bytes","nodeType":"ElementaryTypeName","src":"5352:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5275:100:1"},"returnParameters":{"id":480,"nodeType":"ParameterList","parameters":[],"src":"5400:0:1"},"scope":979,"src":"5250:315:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":526,"nodeType":"Block","src":"6566:165:1","statements":[{"expression":{"arguments":[{"id":511,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"6586:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":512,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"6592:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":513,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"6596:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":510,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"6576:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6576:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":515,"nodeType":"ExpressionStatement","src":"6576:28:1"},{"expression":{"arguments":[{"arguments":[{"id":518,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"6645:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":519,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"6651:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":520,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"6655:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":521,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"6664:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":517,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"6622:22:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6622:47:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6671:52:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":516,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6614:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6614:110:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":525,"nodeType":"ExpressionStatement","src":"6614:110:1"}]},"documentation":{"id":499,"nodeType":"StructuredDocumentation","src":"5571:850:1","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":527,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"6435:13:1","nodeType":"FunctionDefinition","parameters":{"id":508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":501,"mutability":"mutable","name":"from","nameLocation":"6466:4:1","nodeType":"VariableDeclaration","scope":527,"src":"6458:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":500,"name":"address","nodeType":"ElementaryTypeName","src":"6458:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":503,"mutability":"mutable","name":"to","nameLocation":"6488:2:1","nodeType":"VariableDeclaration","scope":527,"src":"6480:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":502,"name":"address","nodeType":"ElementaryTypeName","src":"6480:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":505,"mutability":"mutable","name":"tokenId","nameLocation":"6508:7:1","nodeType":"VariableDeclaration","scope":527,"src":"6500:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":504,"name":"uint256","nodeType":"ElementaryTypeName","src":"6500:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":507,"mutability":"mutable","name":"data","nameLocation":"6538:4:1","nodeType":"VariableDeclaration","scope":527,"src":"6525:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":506,"name":"bytes","nodeType":"ElementaryTypeName","src":"6525:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6448:100:1"},"returnParameters":{"id":509,"nodeType":"ParameterList","parameters":[],"src":"6566:0:1"},"scope":979,"src":"6426:305:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":544,"nodeType":"Block","src":"7105:54:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":535,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"7122:7:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":537,"indexExpression":{"id":536,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"7130:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7122:16:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7150:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7142:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":538,"name":"address","nodeType":"ElementaryTypeName","src":"7142:7:1","typeDescriptions":{}}},"id":541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7142:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7122:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":534,"id":543,"nodeType":"Return","src":"7115:37:1"}]},"documentation":{"id":528,"nodeType":"StructuredDocumentation","src":"6737:292:1","text":" @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."},"id":545,"implemented":true,"kind":"function","modifiers":[],"name":"_exists","nameLocation":"7043:7:1","nodeType":"FunctionDefinition","parameters":{"id":531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":530,"mutability":"mutable","name":"tokenId","nameLocation":"7059:7:1","nodeType":"VariableDeclaration","scope":545,"src":"7051:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":529,"name":"uint256","nodeType":"ElementaryTypeName","src":"7051:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7050:17:1"},"returnParameters":{"id":534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":533,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":545,"src":"7099:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":532,"name":"bool","nodeType":"ElementaryTypeName","src":"7099:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7098:6:1"},"scope":979,"src":"7034:125:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":578,"nodeType":"Block","src":"7416:162:1","statements":[{"assignments":[556],"declarations":[{"constant":false,"id":556,"mutability":"mutable","name":"owner","nameLocation":"7434:5:1","nodeType":"VariableDeclaration","scope":578,"src":"7426:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":555,"name":"address","nodeType":"ElementaryTypeName","src":"7426:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":561,"initialValue":{"arguments":[{"id":559,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"7457:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":557,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"7442:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$979_$","typeString":"type(contract ERC721)"}},"id":558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7449:7:1","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":258,"src":"7442:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7442:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7426:39:1"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":562,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"7483:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":563,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":556,"src":"7494:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7483:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":566,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":556,"src":"7520:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":567,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"7527:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":565,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"7503:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7503:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7483:52:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":571,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"7551:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":570,"name":"getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"7539:11:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7539:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":573,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"7563:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7539:31:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7483:87:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":576,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7482:89:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":554,"id":577,"nodeType":"Return","src":"7475:96:1"}]},"documentation":{"id":546,"nodeType":"StructuredDocumentation","src":"7165:147:1","text":" @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."},"id":579,"implemented":true,"kind":"function","modifiers":[],"name":"_isApprovedOrOwner","nameLocation":"7326:18:1","nodeType":"FunctionDefinition","parameters":{"id":551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":548,"mutability":"mutable","name":"spender","nameLocation":"7353:7:1","nodeType":"VariableDeclaration","scope":579,"src":"7345:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":547,"name":"address","nodeType":"ElementaryTypeName","src":"7345:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":550,"mutability":"mutable","name":"tokenId","nameLocation":"7370:7:1","nodeType":"VariableDeclaration","scope":579,"src":"7362:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":549,"name":"uint256","nodeType":"ElementaryTypeName","src":"7362:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7344:34:1"},"returnParameters":{"id":554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":553,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":579,"src":"7410:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":552,"name":"bool","nodeType":"ElementaryTypeName","src":"7410:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7409:6:1"},"scope":979,"src":"7317:261:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":593,"nodeType":"Block","src":"7973:43:1","statements":[{"expression":{"arguments":[{"id":588,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"7993:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":589,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"7997:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8006:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":587,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[594,623],"referencedDeclaration":623,"src":"7983:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7983:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":592,"nodeType":"ExpressionStatement","src":"7983:26:1"}]},"documentation":{"id":580,"nodeType":"StructuredDocumentation","src":"7584:319:1","text":" @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":594,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"7917:9:1","nodeType":"FunctionDefinition","parameters":{"id":585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":582,"mutability":"mutable","name":"to","nameLocation":"7935:2:1","nodeType":"VariableDeclaration","scope":594,"src":"7927:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":581,"name":"address","nodeType":"ElementaryTypeName","src":"7927:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":584,"mutability":"mutable","name":"tokenId","nameLocation":"7947:7:1","nodeType":"VariableDeclaration","scope":594,"src":"7939:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":583,"name":"uint256","nodeType":"ElementaryTypeName","src":"7939:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7926:29:1"},"returnParameters":{"id":586,"nodeType":"ParameterList","parameters":[],"src":"7973:0:1"},"scope":979,"src":"7908:108:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":622,"nodeType":"Block","src":"8351:195:1","statements":[{"expression":{"arguments":[{"id":605,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"8367:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":606,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":599,"src":"8371:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":604,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"8361:5:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8361:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":608,"nodeType":"ExpressionStatement","src":"8361:18:1"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"30","id":613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8441:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8433:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":611,"name":"address","nodeType":"ElementaryTypeName","src":"8433:7:1","typeDescriptions":{}}},"id":614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8433:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":615,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"8445:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":616,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":599,"src":"8449:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":617,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":601,"src":"8458:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":610,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"8410:22:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8410:53:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8477:52:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":609,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8389:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8389:150:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":621,"nodeType":"ExpressionStatement","src":"8389:150:1"}]},"documentation":{"id":595,"nodeType":"StructuredDocumentation","src":"8022:210:1","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":623,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"8246:9:1","nodeType":"FunctionDefinition","parameters":{"id":602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":597,"mutability":"mutable","name":"to","nameLocation":"8273:2:1","nodeType":"VariableDeclaration","scope":623,"src":"8265:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":596,"name":"address","nodeType":"ElementaryTypeName","src":"8265:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":599,"mutability":"mutable","name":"tokenId","nameLocation":"8293:7:1","nodeType":"VariableDeclaration","scope":623,"src":"8285:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":598,"name":"uint256","nodeType":"ElementaryTypeName","src":"8285:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":601,"mutability":"mutable","name":"data","nameLocation":"8323:4:1","nodeType":"VariableDeclaration","scope":623,"src":"8310:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":600,"name":"bytes","nodeType":"ElementaryTypeName","src":"8310:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8255:78:1"},"returnParameters":{"id":603,"nodeType":"ParameterList","parameters":[],"src":"8351:0:1"},"scope":979,"src":"8237:309:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":688,"nodeType":"Block","src":"8929:366:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":632,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"8947:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8961:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8953:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":633,"name":"address","nodeType":"ElementaryTypeName","src":"8953:7:1","typeDescriptions":{}}},"id":636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8953:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8947:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","id":638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8965:34:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""},"value":"ERC721: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""}],"id":631,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8939:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8939:61:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":640,"nodeType":"ExpressionStatement","src":"8939:61:1"},{"expression":{"arguments":[{"id":645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9018:17:1","subExpression":{"arguments":[{"id":643,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"9027:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":642,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"9019:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9019:16:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","id":646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9037:30:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""},"value":"ERC721: token already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""}],"id":641,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9010:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9010:58:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":648,"nodeType":"ExpressionStatement","src":"9010:58:1"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9108:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":651,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9100:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":650,"name":"address","nodeType":"ElementaryTypeName","src":"9100:7:1","typeDescriptions":{}}},"id":653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9100:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":654,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"9112:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":655,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"9116:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":649,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"9079:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9079:45:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":657,"nodeType":"ExpressionStatement","src":"9079:45:1"},{"expression":{"id":662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":658,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":148,"src":"9135:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":660,"indexExpression":{"id":659,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"9145:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9135:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9152:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9135:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":663,"nodeType":"ExpressionStatement","src":"9135:18:1"},{"expression":{"id":668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":664,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"9163:7:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":666,"indexExpression":{"id":665,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"9171:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9163:16:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":667,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"9182:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9163:21:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":669,"nodeType":"ExpressionStatement","src":"9163:21:1"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9217:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9209:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":671,"name":"address","nodeType":"ElementaryTypeName","src":"9209:7:1","typeDescriptions":{}}},"id":674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9209:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":675,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"9221:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":676,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"9225:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":670,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"9200:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9200:33:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":678,"nodeType":"EmitStatement","src":"9195:38:1"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9272:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9264:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":680,"name":"address","nodeType":"ElementaryTypeName","src":"9264:7:1","typeDescriptions":{}}},"id":683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9264:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":684,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"9276:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":685,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"9280:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":679,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"9244:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9244:44:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":687,"nodeType":"ExpressionStatement","src":"9244:44:1"}]},"documentation":{"id":624,"nodeType":"StructuredDocumentation","src":"8552:311:1","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":689,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8877:5:1","nodeType":"FunctionDefinition","parameters":{"id":629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":626,"mutability":"mutable","name":"to","nameLocation":"8891:2:1","nodeType":"VariableDeclaration","scope":689,"src":"8883:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":625,"name":"address","nodeType":"ElementaryTypeName","src":"8883:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":628,"mutability":"mutable","name":"tokenId","nameLocation":"8903:7:1","nodeType":"VariableDeclaration","scope":689,"src":"8895:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":627,"name":"uint256","nodeType":"ElementaryTypeName","src":"8895:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8882:29:1"},"returnParameters":{"id":630,"nodeType":"ParameterList","parameters":[],"src":"8929:0:1"},"scope":979,"src":"8868:427:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":748,"nodeType":"Block","src":"9561:357:1","statements":[{"assignments":[696],"declarations":[{"constant":false,"id":696,"mutability":"mutable","name":"owner","nameLocation":"9579:5:1","nodeType":"VariableDeclaration","scope":748,"src":"9571:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":695,"name":"address","nodeType":"ElementaryTypeName","src":"9571:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":701,"initialValue":{"arguments":[{"id":699,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"9602:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":697,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"9587:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$979_$","typeString":"type(contract ERC721)"}},"id":698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9594:7:1","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":258,"src":"9587:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9587:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9571:39:1"},{"expression":{"arguments":[{"id":703,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"9642:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9657:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":705,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9649:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":704,"name":"address","nodeType":"ElementaryTypeName","src":"9649:7:1","typeDescriptions":{}}},"id":707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9649:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":708,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"9661:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":702,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"9621:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9621:48:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":710,"nodeType":"ExpressionStatement","src":"9621:48:1"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9724:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9716:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":712,"name":"address","nodeType":"ElementaryTypeName","src":"9716:7:1","typeDescriptions":{}}},"id":715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9716:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":716,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"9728:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":711,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"9707:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9707:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":718,"nodeType":"ExpressionStatement","src":"9707:29:1"},{"expression":{"id":723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":719,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":148,"src":"9747:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":721,"indexExpression":{"id":720,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"9757:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9747:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9767:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9747:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":724,"nodeType":"ExpressionStatement","src":"9747:21:1"},{"expression":{"id":728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"9778:23:1","subExpression":{"baseExpression":{"id":725,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"9785:7:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":727,"indexExpression":{"id":726,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"9793:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9785:16:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":729,"nodeType":"ExpressionStatement","src":"9778:23:1"},{"eventCall":{"arguments":[{"id":731,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"9826:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9841:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":733,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9833:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":732,"name":"address","nodeType":"ElementaryTypeName","src":"9833:7:1","typeDescriptions":{}}},"id":735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9833:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":736,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"9845:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":730,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"9817:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9817:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":738,"nodeType":"EmitStatement","src":"9812:41:1"},{"expression":{"arguments":[{"id":740,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"9884:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9899:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":742,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9891:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":741,"name":"address","nodeType":"ElementaryTypeName","src":"9891:7:1","typeDescriptions":{}}},"id":744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9891:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":745,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"9903:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":739,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"9864:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9864:47:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":747,"nodeType":"ExpressionStatement","src":"9864:47:1"}]},"documentation":{"id":690,"nodeType":"StructuredDocumentation","src":"9301:206:1","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":749,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9521:5:1","nodeType":"FunctionDefinition","parameters":{"id":693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":692,"mutability":"mutable","name":"tokenId","nameLocation":"9535:7:1","nodeType":"VariableDeclaration","scope":749,"src":"9527:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":691,"name":"uint256","nodeType":"ElementaryTypeName","src":"9527:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9526:17:1"},"returnParameters":{"id":694,"nodeType":"ParameterList","parameters":[],"src":"9561:0:1"},"scope":979,"src":"9512:406:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":823,"nodeType":"Block","src":"10351:496:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":762,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"10384:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":760,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"10369:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$979_$","typeString":"type(contract ERC721)"}},"id":761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10376:7:1","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":258,"src":"10369:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10369:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":764,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"10396:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10369:31:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572","id":766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10402:39:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""},"value":"ERC721: transfer from incorrect owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""}],"id":759,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10361:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10361:81:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":768,"nodeType":"ExpressionStatement","src":"10361:81:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":770,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"10460:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10474:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10466:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":771,"name":"address","nodeType":"ElementaryTypeName","src":"10466:7:1","typeDescriptions":{}}},"id":774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10466:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10460:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373","id":776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10478:38:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""},"value":"ERC721: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""}],"id":769,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10452:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10452:65:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":778,"nodeType":"ExpressionStatement","src":"10452:65:1"},{"expression":{"arguments":[{"id":780,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"10549:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":781,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"10555:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":782,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"10559:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":779,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"10528:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10528:39:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":784,"nodeType":"ExpressionStatement","src":"10528:39:1"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10646:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10638:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":786,"name":"address","nodeType":"ElementaryTypeName","src":"10638:7:1","typeDescriptions":{}}},"id":789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10638:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":790,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"10650:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":785,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"10629:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10629:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":792,"nodeType":"ExpressionStatement","src":"10629:29:1"},{"expression":{"id":797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":793,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":148,"src":"10669:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":795,"indexExpression":{"id":794,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"10679:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10669:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10688:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10669:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":798,"nodeType":"ExpressionStatement","src":"10669:20:1"},{"expression":{"id":803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":799,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":148,"src":"10699:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":801,"indexExpression":{"id":800,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"10709:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10699:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10716:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10699:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":804,"nodeType":"ExpressionStatement","src":"10699:18:1"},{"expression":{"id":809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":805,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"10727:7:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":807,"indexExpression":{"id":806,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"10735:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10727:16:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":808,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"10746:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10727:21:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":810,"nodeType":"ExpressionStatement","src":"10727:21:1"},{"eventCall":{"arguments":[{"id":812,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"10773:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":813,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"10779:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":814,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"10783:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":811,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"10764:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10764:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":816,"nodeType":"EmitStatement","src":"10759:32:1"},{"expression":{"arguments":[{"id":818,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"10822:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":819,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"10828:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":820,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"10832:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":817,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"10802:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10802:38:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":822,"nodeType":"ExpressionStatement","src":"10802:38:1"}]},"documentation":{"id":750,"nodeType":"StructuredDocumentation","src":"9924:313:1","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":824,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"10251:9:1","nodeType":"FunctionDefinition","parameters":{"id":757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":752,"mutability":"mutable","name":"from","nameLocation":"10278:4:1","nodeType":"VariableDeclaration","scope":824,"src":"10270:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":751,"name":"address","nodeType":"ElementaryTypeName","src":"10270:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":754,"mutability":"mutable","name":"to","nameLocation":"10300:2:1","nodeType":"VariableDeclaration","scope":824,"src":"10292:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":753,"name":"address","nodeType":"ElementaryTypeName","src":"10292:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":756,"mutability":"mutable","name":"tokenId","nameLocation":"10320:7:1","nodeType":"VariableDeclaration","scope":824,"src":"10312:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":755,"name":"uint256","nodeType":"ElementaryTypeName","src":"10312:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10260:73:1"},"returnParameters":{"id":758,"nodeType":"ParameterList","parameters":[],"src":"10351:0:1"},"scope":979,"src":"10242:605:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":847,"nodeType":"Block","src":"11023:107:1","statements":[{"expression":{"id":836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":832,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":152,"src":"11033:15:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":834,"indexExpression":{"id":833,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"11049:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11033:24:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":835,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"11060:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11033:29:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":837,"nodeType":"ExpressionStatement","src":"11033:29:1"},{"eventCall":{"arguments":[{"arguments":[{"id":841,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"11101:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":839,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"11086:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$979_$","typeString":"type(contract ERC721)"}},"id":840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11093:7:1","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":258,"src":"11086:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11086:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":843,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"11111:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":844,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"11115:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":838,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1003,"src":"11077:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11077:46:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":846,"nodeType":"EmitStatement","src":"11072:51:1"}]},"documentation":{"id":825,"nodeType":"StructuredDocumentation","src":"10853:101:1","text":" @dev Approve `to` to operate on `tokenId`\n Emits an {Approval} event."},"id":848,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10968:8:1","nodeType":"FunctionDefinition","parameters":{"id":830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":827,"mutability":"mutable","name":"to","nameLocation":"10985:2:1","nodeType":"VariableDeclaration","scope":848,"src":"10977:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":826,"name":"address","nodeType":"ElementaryTypeName","src":"10977:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":829,"mutability":"mutable","name":"tokenId","nameLocation":"10997:7:1","nodeType":"VariableDeclaration","scope":848,"src":"10989:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":828,"name":"uint256","nodeType":"ElementaryTypeName","src":"10989:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10976:29:1"},"returnParameters":{"id":831,"nodeType":"ParameterList","parameters":[],"src":"11023:0:1"},"scope":979,"src":"10959:171:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":879,"nodeType":"Block","src":"11389:184:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":859,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"11407:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":860,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"11416:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11407:17:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","id":862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11426:27:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""},"value":"ERC721: approve to caller"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""}],"id":858,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11399:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11399:55:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":864,"nodeType":"ExpressionStatement","src":"11399:55:1"},{"expression":{"id":871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":865,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":158,"src":"11464:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":868,"indexExpression":{"id":866,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"11483:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11464:25:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":869,"indexExpression":{"id":867,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"11490:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11464:35:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":870,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"11502:8:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11464:46:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":872,"nodeType":"ExpressionStatement","src":"11464:46:1"},{"eventCall":{"arguments":[{"id":874,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"11540:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":875,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"11547:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":876,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"11557:8:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":873,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"11525:14:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11525:41:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":878,"nodeType":"EmitStatement","src":"11520:46:1"}]},"documentation":{"id":849,"nodeType":"StructuredDocumentation","src":"11136:125:1","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."},"id":880,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"11275:18:1","nodeType":"FunctionDefinition","parameters":{"id":856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":851,"mutability":"mutable","name":"owner","nameLocation":"11311:5:1","nodeType":"VariableDeclaration","scope":880,"src":"11303:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":850,"name":"address","nodeType":"ElementaryTypeName","src":"11303:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":853,"mutability":"mutable","name":"operator","nameLocation":"11334:8:1","nodeType":"VariableDeclaration","scope":880,"src":"11326:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":852,"name":"address","nodeType":"ElementaryTypeName","src":"11326:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":855,"mutability":"mutable","name":"approved","nameLocation":"11357:8:1","nodeType":"VariableDeclaration","scope":880,"src":"11352:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":854,"name":"bool","nodeType":"ElementaryTypeName","src":"11352:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11293:78:1"},"returnParameters":{"id":857,"nodeType":"ParameterList","parameters":[],"src":"11389:0:1"},"scope":979,"src":"11266:307:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":893,"nodeType":"Block","src":"11720:70:1","statements":[{"expression":{"arguments":[{"arguments":[{"id":888,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":883,"src":"11746:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":887,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"11738:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11738:16:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","id":890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11756:26:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""},"value":"ERC721: invalid token ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""}],"id":886,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11730:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11730:53:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":892,"nodeType":"ExpressionStatement","src":"11730:53:1"}]},"documentation":{"id":881,"nodeType":"StructuredDocumentation","src":"11579:73:1","text":" @dev Reverts if the `tokenId` has not been minted yet."},"id":894,"implemented":true,"kind":"function","modifiers":[],"name":"_requireMinted","nameLocation":"11666:14:1","nodeType":"FunctionDefinition","parameters":{"id":884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":883,"mutability":"mutable","name":"tokenId","nameLocation":"11689:7:1","nodeType":"VariableDeclaration","scope":894,"src":"11681:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":882,"name":"uint256","nodeType":"ElementaryTypeName","src":"11681:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11680:17:1"},"returnParameters":{"id":885,"nodeType":"ParameterList","parameters":[],"src":"11720:0:1"},"scope":979,"src":"11657:133:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":955,"nodeType":"Block","src":"12497:676:1","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":908,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":899,"src":"12511:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12514:10:1","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1652,"src":"12511:13:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12511:15:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":953,"nodeType":"Block","src":"13131:36:1","statements":[{"expression":{"hexValue":"74727565","id":951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13152:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":907,"id":952,"nodeType":"Return","src":"13145:11:1"}]},"id":954,"nodeType":"IfStatement","src":"12507:660:1","trueBody":{"id":950,"nodeType":"Block","src":"12528:597:1","statements":[{"clauses":[{"block":{"id":930,"nodeType":"Block","src":"12642:91:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":924,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"12667:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":925,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"12677:15:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1113_$","typeString":"type(contract IERC721Receiver)"}},"id":926,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12693:16:1","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1112,"src":"12677:32:1","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":927,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12710:8:1","memberName":"selector","nodeType":"MemberAccess","src":"12677:41:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"12667:51:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":907,"id":929,"nodeType":"Return","src":"12660:58:1"}]},"errorName":"","id":931,"nodeType":"TryCatchClause","parameters":{"id":923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":922,"mutability":"mutable","name":"retval","nameLocation":"12634:6:1","nodeType":"VariableDeclaration","scope":931,"src":"12627:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":921,"name":"bytes4","nodeType":"ElementaryTypeName","src":"12627:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"12626:15:1"},"src":"12618:115:1"},{"block":{"id":947,"nodeType":"Block","src":"12762:353:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":935,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"12784:6:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12791:6:1","memberName":"length","nodeType":"MemberAccess","src":"12784:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12801:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12784:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":945,"nodeType":"Block","src":"12911:190:1","statements":[{"AST":{"nodeType":"YulBlock","src":"12997:86:1","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13034:2:1","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"13038:6:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13030:3:1"},"nodeType":"YulFunctionCall","src":"13030:15:1"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"13053:6:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13047:5:1"},"nodeType":"YulFunctionCall","src":"13047:13:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13023:6:1"},"nodeType":"YulFunctionCall","src":"13023:38:1"},"nodeType":"YulExpressionStatement","src":"13023:38:1"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":933,"isOffset":false,"isSlot":false,"src":"13038:6:1","valueSize":1},{"declaration":933,"isOffset":false,"isSlot":false,"src":"13053:6:1","valueSize":1}],"id":944,"nodeType":"InlineAssembly","src":"12988:95:1"}]},"id":946,"nodeType":"IfStatement","src":"12780:321:1","trueBody":{"id":943,"nodeType":"Block","src":"12804:101:1","statements":[{"expression":{"arguments":[{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12833:52:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":939,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"12826:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12826:60:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":942,"nodeType":"ExpressionStatement","src":"12826:60:1"}]}}]},"errorName":"","id":948,"nodeType":"TryCatchClause","parameters":{"id":934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":933,"mutability":"mutable","name":"reason","nameLocation":"12754:6:1","nodeType":"VariableDeclaration","scope":948,"src":"12741:19:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":932,"name":"bytes","nodeType":"ElementaryTypeName","src":"12741:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"12740:21:1"},"src":"12734:381:1"}],"externalCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":915,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"12583:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12583:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":917,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"12597:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":918,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"12603:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":919,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":903,"src":"12612:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":912,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":899,"src":"12562:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":911,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"12546:15:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1113_$","typeString":"type(contract IERC721Receiver)"}},"id":913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12546:19:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$1113","typeString":"contract IERC721Receiver"}},"id":914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12566:16:1","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1112,"src":"12546:36:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12546:71:1","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":949,"nodeType":"TryStatement","src":"12542:573:1"}]}}]},"documentation":{"id":895,"nodeType":"StructuredDocumentation","src":"11796:541:1","text":" @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"},"id":956,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOnERC721Received","nameLocation":"12351:22:1","nodeType":"FunctionDefinition","parameters":{"id":904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":897,"mutability":"mutable","name":"from","nameLocation":"12391:4:1","nodeType":"VariableDeclaration","scope":956,"src":"12383:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":896,"name":"address","nodeType":"ElementaryTypeName","src":"12383:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":899,"mutability":"mutable","name":"to","nameLocation":"12413:2:1","nodeType":"VariableDeclaration","scope":956,"src":"12405:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":898,"name":"address","nodeType":"ElementaryTypeName","src":"12405:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":901,"mutability":"mutable","name":"tokenId","nameLocation":"12433:7:1","nodeType":"VariableDeclaration","scope":956,"src":"12425:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":900,"name":"uint256","nodeType":"ElementaryTypeName","src":"12425:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":903,"mutability":"mutable","name":"data","nameLocation":"12463:4:1","nodeType":"VariableDeclaration","scope":956,"src":"12450:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":902,"name":"bytes","nodeType":"ElementaryTypeName","src":"12450:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"12373:100:1"},"returnParameters":{"id":907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":906,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":956,"src":"12491:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":905,"name":"bool","nodeType":"ElementaryTypeName","src":"12491:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12490:6:1"},"scope":979,"src":"12342:831:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":966,"nodeType":"Block","src":"13849:2:1","statements":[]},"documentation":{"id":957,"nodeType":"StructuredDocumentation","src":"13179:545:1","text":" @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":967,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"13738:20:1","nodeType":"FunctionDefinition","parameters":{"id":964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":959,"mutability":"mutable","name":"from","nameLocation":"13776:4:1","nodeType":"VariableDeclaration","scope":967,"src":"13768:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":958,"name":"address","nodeType":"ElementaryTypeName","src":"13768:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":961,"mutability":"mutable","name":"to","nameLocation":"13798:2:1","nodeType":"VariableDeclaration","scope":967,"src":"13790:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":960,"name":"address","nodeType":"ElementaryTypeName","src":"13790:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":963,"mutability":"mutable","name":"tokenId","nameLocation":"13818:7:1","nodeType":"VariableDeclaration","scope":967,"src":"13810:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":962,"name":"uint256","nodeType":"ElementaryTypeName","src":"13810:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13758:73:1"},"returnParameters":{"id":965,"nodeType":"ParameterList","parameters":[],"src":"13849:0:1"},"scope":979,"src":"13729:122:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":977,"nodeType":"Block","src":"14342:2:1","statements":[]},"documentation":{"id":968,"nodeType":"StructuredDocumentation","src":"13857:361:1","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":978,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"14232:19:1","nodeType":"FunctionDefinition","parameters":{"id":975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":970,"mutability":"mutable","name":"from","nameLocation":"14269:4:1","nodeType":"VariableDeclaration","scope":978,"src":"14261:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":969,"name":"address","nodeType":"ElementaryTypeName","src":"14261:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":972,"mutability":"mutable","name":"to","nameLocation":"14291:2:1","nodeType":"VariableDeclaration","scope":978,"src":"14283:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":971,"name":"address","nodeType":"ElementaryTypeName","src":"14283:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":974,"mutability":"mutable","name":"tokenId","nameLocation":"14311:7:1","nodeType":"VariableDeclaration","scope":978,"src":"14303:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":973,"name":"uint256","nodeType":"ElementaryTypeName","src":"14303:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14251:73:1"},"returnParameters":{"id":976,"nodeType":"ParameterList","parameters":[],"src":"14342:0:1"},"scope":979,"src":"14223:121:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":980,"src":"628:13718:1","usedErrors":[]}],"src":"107:14240:1"},"id":1},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[2287],"IERC721":[1095]},"id":1096,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":981,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:2"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":982,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1096,"sourceUnit":2288,"src":"133:47:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":984,"name":"IERC165","nameLocations":["271:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":2287,"src":"271:7:2"},"id":985,"nodeType":"InheritanceSpecifier","src":"271:7:2"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":983,"nodeType":"StructuredDocumentation","src":"182:67:2","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":1095,"linearizedBaseContracts":[1095,2287],"name":"IERC721","nameLocation":"260:7:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":986,"nodeType":"StructuredDocumentation","src":"285:88:2","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":994,"name":"Transfer","nameLocation":"384:8:2","nodeType":"EventDefinition","parameters":{"id":993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":988,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"409:4:2","nodeType":"VariableDeclaration","scope":994,"src":"393:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":987,"name":"address","nodeType":"ElementaryTypeName","src":"393:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":990,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"431:2:2","nodeType":"VariableDeclaration","scope":994,"src":"415:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":989,"name":"address","nodeType":"ElementaryTypeName","src":"415:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":992,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"451:7:2","nodeType":"VariableDeclaration","scope":994,"src":"435:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":991,"name":"uint256","nodeType":"ElementaryTypeName","src":"435:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"392:67:2"},"src":"378:82:2"},{"anonymous":false,"documentation":{"id":995,"nodeType":"StructuredDocumentation","src":"466:94:2","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1003,"name":"Approval","nameLocation":"571:8:2","nodeType":"EventDefinition","parameters":{"id":1002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":997,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"596:5:2","nodeType":"VariableDeclaration","scope":1003,"src":"580:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":996,"name":"address","nodeType":"ElementaryTypeName","src":"580:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":999,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"619:8:2","nodeType":"VariableDeclaration","scope":1003,"src":"603:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":998,"name":"address","nodeType":"ElementaryTypeName","src":"603:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1001,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"645:7:2","nodeType":"VariableDeclaration","scope":1003,"src":"629:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1000,"name":"uint256","nodeType":"ElementaryTypeName","src":"629:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"579:74:2"},"src":"565:89:2"},{"anonymous":false,"documentation":{"id":1004,"nodeType":"StructuredDocumentation","src":"660:117:2","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1012,"name":"ApprovalForAll","nameLocation":"788:14:2","nodeType":"EventDefinition","parameters":{"id":1011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1006,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"819:5:2","nodeType":"VariableDeclaration","scope":1012,"src":"803:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1005,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1008,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"842:8:2","nodeType":"VariableDeclaration","scope":1012,"src":"826:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1007,"name":"address","nodeType":"ElementaryTypeName","src":"826:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1010,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"857:8:2","nodeType":"VariableDeclaration","scope":1012,"src":"852:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1009,"name":"bool","nodeType":"ElementaryTypeName","src":"852:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"802:64:2"},"src":"782:85:2"},{"documentation":{"id":1013,"nodeType":"StructuredDocumentation","src":"873:76:2","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":1020,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"963:9:2","nodeType":"FunctionDefinition","parameters":{"id":1016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1015,"mutability":"mutable","name":"owner","nameLocation":"981:5:2","nodeType":"VariableDeclaration","scope":1020,"src":"973:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1014,"name":"address","nodeType":"ElementaryTypeName","src":"973:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"972:15:2"},"returnParameters":{"id":1019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1018,"mutability":"mutable","name":"balance","nameLocation":"1019:7:2","nodeType":"VariableDeclaration","scope":1020,"src":"1011:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1017,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1010:17:2"},"scope":1095,"src":"954:74:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1021,"nodeType":"StructuredDocumentation","src":"1034:131:2","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":1028,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1179:7:2","nodeType":"FunctionDefinition","parameters":{"id":1024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1023,"mutability":"mutable","name":"tokenId","nameLocation":"1195:7:2","nodeType":"VariableDeclaration","scope":1028,"src":"1187:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1022,"name":"uint256","nodeType":"ElementaryTypeName","src":"1187:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1186:17:2"},"returnParameters":{"id":1027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1026,"mutability":"mutable","name":"owner","nameLocation":"1235:5:2","nodeType":"VariableDeclaration","scope":1028,"src":"1227:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1025,"name":"address","nodeType":"ElementaryTypeName","src":"1227:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1226:15:2"},"scope":1095,"src":"1170:72:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1029,"nodeType":"StructuredDocumentation","src":"1248:556:2","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":1040,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1818:16:2","nodeType":"FunctionDefinition","parameters":{"id":1038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1031,"mutability":"mutable","name":"from","nameLocation":"1852:4:2","nodeType":"VariableDeclaration","scope":1040,"src":"1844:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1030,"name":"address","nodeType":"ElementaryTypeName","src":"1844:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1033,"mutability":"mutable","name":"to","nameLocation":"1874:2:2","nodeType":"VariableDeclaration","scope":1040,"src":"1866:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1032,"name":"address","nodeType":"ElementaryTypeName","src":"1866:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1035,"mutability":"mutable","name":"tokenId","nameLocation":"1894:7:2","nodeType":"VariableDeclaration","scope":1040,"src":"1886:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1034,"name":"uint256","nodeType":"ElementaryTypeName","src":"1886:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1037,"mutability":"mutable","name":"data","nameLocation":"1926:4:2","nodeType":"VariableDeclaration","scope":1040,"src":"1911:19:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1036,"name":"bytes","nodeType":"ElementaryTypeName","src":"1911:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1834:102:2"},"returnParameters":{"id":1039,"nodeType":"ParameterList","parameters":[],"src":"1945:0:2"},"scope":1095,"src":"1809:137:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1041,"nodeType":"StructuredDocumentation","src":"1952:687:2","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":1050,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2653:16:2","nodeType":"FunctionDefinition","parameters":{"id":1048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1043,"mutability":"mutable","name":"from","nameLocation":"2687:4:2","nodeType":"VariableDeclaration","scope":1050,"src":"2679:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1042,"name":"address","nodeType":"ElementaryTypeName","src":"2679:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1045,"mutability":"mutable","name":"to","nameLocation":"2709:2:2","nodeType":"VariableDeclaration","scope":1050,"src":"2701:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1044,"name":"address","nodeType":"ElementaryTypeName","src":"2701:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1047,"mutability":"mutable","name":"tokenId","nameLocation":"2729:7:2","nodeType":"VariableDeclaration","scope":1050,"src":"2721:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1046,"name":"uint256","nodeType":"ElementaryTypeName","src":"2721:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2669:73:2"},"returnParameters":{"id":1049,"nodeType":"ParameterList","parameters":[],"src":"2751:0:2"},"scope":1095,"src":"2644:108:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1051,"nodeType":"StructuredDocumentation","src":"2758:504:2","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1060,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3276:12:2","nodeType":"FunctionDefinition","parameters":{"id":1058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1053,"mutability":"mutable","name":"from","nameLocation":"3306:4:2","nodeType":"VariableDeclaration","scope":1060,"src":"3298:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1052,"name":"address","nodeType":"ElementaryTypeName","src":"3298:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1055,"mutability":"mutable","name":"to","nameLocation":"3328:2:2","nodeType":"VariableDeclaration","scope":1060,"src":"3320:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1054,"name":"address","nodeType":"ElementaryTypeName","src":"3320:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1057,"mutability":"mutable","name":"tokenId","nameLocation":"3348:7:2","nodeType":"VariableDeclaration","scope":1060,"src":"3340:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1056,"name":"uint256","nodeType":"ElementaryTypeName","src":"3340:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3288:73:2"},"returnParameters":{"id":1059,"nodeType":"ParameterList","parameters":[],"src":"3370:0:2"},"scope":1095,"src":"3267:104:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1061,"nodeType":"StructuredDocumentation","src":"3377:452:2","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1068,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3843:7:2","nodeType":"FunctionDefinition","parameters":{"id":1066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1063,"mutability":"mutable","name":"to","nameLocation":"3859:2:2","nodeType":"VariableDeclaration","scope":1068,"src":"3851:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1062,"name":"address","nodeType":"ElementaryTypeName","src":"3851:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1065,"mutability":"mutable","name":"tokenId","nameLocation":"3871:7:2","nodeType":"VariableDeclaration","scope":1068,"src":"3863:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1064,"name":"uint256","nodeType":"ElementaryTypeName","src":"3863:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3850:29:2"},"returnParameters":{"id":1067,"nodeType":"ParameterList","parameters":[],"src":"3888:0:2"},"scope":1095,"src":"3834:55:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1069,"nodeType":"StructuredDocumentation","src":"3895:309:2","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":1076,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4218:17:2","nodeType":"FunctionDefinition","parameters":{"id":1074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1071,"mutability":"mutable","name":"operator","nameLocation":"4244:8:2","nodeType":"VariableDeclaration","scope":1076,"src":"4236:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1070,"name":"address","nodeType":"ElementaryTypeName","src":"4236:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1073,"mutability":"mutable","name":"_approved","nameLocation":"4259:9:2","nodeType":"VariableDeclaration","scope":1076,"src":"4254:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1072,"name":"bool","nodeType":"ElementaryTypeName","src":"4254:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4235:34:2"},"returnParameters":{"id":1075,"nodeType":"ParameterList","parameters":[],"src":"4278:0:2"},"scope":1095,"src":"4209:70:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1077,"nodeType":"StructuredDocumentation","src":"4285:139:2","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":1084,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4438:11:2","nodeType":"FunctionDefinition","parameters":{"id":1080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1079,"mutability":"mutable","name":"tokenId","nameLocation":"4458:7:2","nodeType":"VariableDeclaration","scope":1084,"src":"4450:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1078,"name":"uint256","nodeType":"ElementaryTypeName","src":"4450:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4449:17:2"},"returnParameters":{"id":1083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1082,"mutability":"mutable","name":"operator","nameLocation":"4498:8:2","nodeType":"VariableDeclaration","scope":1084,"src":"4490:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1081,"name":"address","nodeType":"ElementaryTypeName","src":"4490:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4489:18:2"},"scope":1095,"src":"4429:79:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1085,"nodeType":"StructuredDocumentation","src":"4514:138:2","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":1094,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4666:16:2","nodeType":"FunctionDefinition","parameters":{"id":1090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1087,"mutability":"mutable","name":"owner","nameLocation":"4691:5:2","nodeType":"VariableDeclaration","scope":1094,"src":"4683:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1086,"name":"address","nodeType":"ElementaryTypeName","src":"4683:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1089,"mutability":"mutable","name":"operator","nameLocation":"4706:8:2","nodeType":"VariableDeclaration","scope":1094,"src":"4698:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1088,"name":"address","nodeType":"ElementaryTypeName","src":"4698:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4682:33:2"},"returnParameters":{"id":1093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1092,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1094,"src":"4739:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1091,"name":"bool","nodeType":"ElementaryTypeName","src":"4739:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4738:6:2"},"scope":1095,"src":"4657:88:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1096,"src":"250:4497:2","usedErrors":[]}],"src":"108:4640:2"},"id":2},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[1113]},"id":1114,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1097,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"116:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1098,"nodeType":"StructuredDocumentation","src":"141:152:3","text":" @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."},"fullyImplemented":false,"id":1113,"linearizedBaseContracts":[1113],"name":"IERC721Receiver","nameLocation":"304:15:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1099,"nodeType":"StructuredDocumentation","src":"326:493:3","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":1112,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"833:16:3","nodeType":"FunctionDefinition","parameters":{"id":1108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1101,"mutability":"mutable","name":"operator","nameLocation":"867:8:3","nodeType":"VariableDeclaration","scope":1112,"src":"859:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1100,"name":"address","nodeType":"ElementaryTypeName","src":"859:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1103,"mutability":"mutable","name":"from","nameLocation":"893:4:3","nodeType":"VariableDeclaration","scope":1112,"src":"885:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1102,"name":"address","nodeType":"ElementaryTypeName","src":"885:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1105,"mutability":"mutable","name":"tokenId","nameLocation":"915:7:3","nodeType":"VariableDeclaration","scope":1112,"src":"907:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1104,"name":"uint256","nodeType":"ElementaryTypeName","src":"907:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1107,"mutability":"mutable","name":"data","nameLocation":"947:4:3","nodeType":"VariableDeclaration","scope":1112,"src":"932:19:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1106,"name":"bytes","nodeType":"ElementaryTypeName","src":"932:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"849:108:3"},"returnParameters":{"id":1111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1110,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1112,"src":"976:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1109,"name":"bytes4","nodeType":"ElementaryTypeName","src":"976:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"975:8:3"},"scope":1113,"src":"824:160:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1114,"src":"294:692:3","usedErrors":[]}],"src":"116:871:3"},"id":3},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol","exportedSymbols":{"Address":[1929],"Context":[1951],"ERC165":[2275],"ERC721":[979],"ERC721Enumerable":[1451],"IERC165":[2287],"IERC721":[1095],"IERC721Enumerable":[1607],"IERC721Metadata":[1634],"IERC721Receiver":[1113],"Strings":[2251]},"id":1452,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1115,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"113:23:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":1116,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1452,"sourceUnit":980,"src":"138:23:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol","file":"./IERC721Enumerable.sol","id":1117,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1452,"sourceUnit":1608,"src":"162:33:4","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1119,"name":"ERC721","nameLocations":["435:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":979,"src":"435:6:4"},"id":1120,"nodeType":"InheritanceSpecifier","src":"435:6:4"},{"baseName":{"id":1121,"name":"IERC721Enumerable","nameLocations":["443:17:4"],"nodeType":"IdentifierPath","referencedDeclaration":1607,"src":"443:17:4"},"id":1122,"nodeType":"InheritanceSpecifier","src":"443:17:4"}],"canonicalName":"ERC721Enumerable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1118,"nodeType":"StructuredDocumentation","src":"197:199:4","text":" @dev This implements an optional extension of {ERC721} defined in the EIP that adds\n enumerability of all the token ids in the contract as well as all token ids owned by each\n account."},"fullyImplemented":false,"id":1451,"linearizedBaseContracts":[1451,1607,979,1634,1095,2275,2287,1951],"name":"ERC721Enumerable","nameLocation":"415:16:4","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1128,"mutability":"mutable","name":"_ownedTokens","nameLocation":"576:12:4","nodeType":"VariableDeclaration","scope":1451,"src":"520:68:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"typeName":{"id":1127,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1123,"name":"address","nodeType":"ElementaryTypeName","src":"528:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"520:47:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1126,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1124,"name":"uint256","nodeType":"ElementaryTypeName","src":"547:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"539:27:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1125,"name":"uint256","nodeType":"ElementaryTypeName","src":"558:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":1132,"mutability":"mutable","name":"_ownedTokensIndex","nameLocation":"694:17:4","nodeType":"VariableDeclaration","scope":1451,"src":"658:53:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":1131,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1129,"name":"uint256","nodeType":"ElementaryTypeName","src":"666:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"658:27:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1130,"name":"uint256","nodeType":"ElementaryTypeName","src":"677:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1135,"mutability":"mutable","name":"_allTokens","nameLocation":"790:10:4","nodeType":"VariableDeclaration","scope":1451,"src":"772:28:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[]"},"typeName":{"baseType":{"id":1133,"name":"uint256","nodeType":"ElementaryTypeName","src":"772:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1134,"nodeType":"ArrayTypeName","src":"772:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"private"},{"constant":false,"id":1139,"mutability":"mutable","name":"_allTokensIndex","nameLocation":"907:15:4","nodeType":"VariableDeclaration","scope":1451,"src":"871:51:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":1138,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1136,"name":"uint256","nodeType":"ElementaryTypeName","src":"879:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"871:27:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1137,"name":"uint256","nodeType":"ElementaryTypeName","src":"890:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"baseFunctions":[206,2286],"body":{"id":1162,"nodeType":"Block","src":"1098:114:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1150,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"1115:11:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1152,"name":"IERC721Enumerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"1135:17:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Enumerable_$1607_$","typeString":"type(contract IERC721Enumerable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Enumerable_$1607_$","typeString":"type(contract IERC721Enumerable)"}],"id":1151,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1130:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1130:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Enumerable_$1607","typeString":"type(contract IERC721Enumerable)"}},"id":1154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1154:11:4","memberName":"interfaceId","nodeType":"MemberAccess","src":"1130:35:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1115:50:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1158,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"1193:11:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1156,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1169:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721Enumerable_$1451_$","typeString":"type(contract super ERC721Enumerable)"}},"id":1157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1175:17:4","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":206,"src":"1169:23:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1169:36:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1115:90:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1149,"id":1161,"nodeType":"Return","src":"1108:97:4"}]},"documentation":{"id":1140,"nodeType":"StructuredDocumentation","src":"929:56:4","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1163,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"999:17:4","nodeType":"FunctionDefinition","overrides":{"id":1146,"nodeType":"OverrideSpecifier","overrides":[{"id":1144,"name":"IERC165","nameLocations":["1066:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":2287,"src":"1066:7:4"},{"id":1145,"name":"ERC721","nameLocations":["1075:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":979,"src":"1075:6:4"}],"src":"1057:25:4"},"parameters":{"id":1143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1142,"mutability":"mutable","name":"interfaceId","nameLocation":"1024:11:4","nodeType":"VariableDeclaration","scope":1163,"src":"1017:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1141,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1017:6:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1016:20:4"},"returnParameters":{"id":1149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1148,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1163,"src":"1092:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1147,"name":"bool","nodeType":"ElementaryTypeName","src":"1092:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1091:6:4"},"scope":1451,"src":"990:222:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1598],"body":{"id":1190,"nodeType":"Block","src":"1397:147:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1175,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"1415:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[{"id":1178,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"1440:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1176,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"1423:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$979_$","typeString":"type(contract ERC721)"}},"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1430:9:4","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":230,"src":"1423:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1423:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1415:31:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243373231456e756d657261626c653a206f776e657220696e646578206f7574206f6620626f756e6473","id":1181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1448:45:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c","typeString":"literal_string \"ERC721Enumerable: owner index out of bounds\""},"value":"ERC721Enumerable: owner index out of bounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c","typeString":"literal_string \"ERC721Enumerable: owner index out of bounds\""}],"id":1174,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1407:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1407:87:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1183,"nodeType":"ExpressionStatement","src":"1407:87:4"},{"expression":{"baseExpression":{"baseExpression":{"id":1184,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"1511:12:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":1186,"indexExpression":{"id":1185,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"1524:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1511:19:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1188,"indexExpression":{"id":1187,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"1531:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1511:26:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1173,"id":1189,"nodeType":"Return","src":"1504:33:4"}]},"documentation":{"id":1164,"nodeType":"StructuredDocumentation","src":"1218:68:4","text":" @dev See {IERC721Enumerable-tokenOfOwnerByIndex}."},"functionSelector":"2f745c59","id":1191,"implemented":true,"kind":"function","modifiers":[],"name":"tokenOfOwnerByIndex","nameLocation":"1300:19:4","nodeType":"FunctionDefinition","overrides":{"id":1170,"nodeType":"OverrideSpecifier","overrides":[],"src":"1370:8:4"},"parameters":{"id":1169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1166,"mutability":"mutable","name":"owner","nameLocation":"1328:5:4","nodeType":"VariableDeclaration","scope":1191,"src":"1320:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1165,"name":"address","nodeType":"ElementaryTypeName","src":"1320:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1168,"mutability":"mutable","name":"index","nameLocation":"1343:5:4","nodeType":"VariableDeclaration","scope":1191,"src":"1335:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1167,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1319:30:4"},"returnParameters":{"id":1173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1172,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1191,"src":"1388:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1171,"name":"uint256","nodeType":"ElementaryTypeName","src":"1388:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1387:9:4"},"scope":1451,"src":"1291:253:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1588],"body":{"id":1201,"nodeType":"Block","src":"1685:41:4","statements":[{"expression":{"expression":{"id":1198,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"1702:10:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1713:6:4","memberName":"length","nodeType":"MemberAccess","src":"1702:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1197,"id":1200,"nodeType":"Return","src":"1695:24:4"}]},"documentation":{"id":1192,"nodeType":"StructuredDocumentation","src":"1550:60:4","text":" @dev See {IERC721Enumerable-totalSupply}."},"functionSelector":"18160ddd","id":1202,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"1624:11:4","nodeType":"FunctionDefinition","overrides":{"id":1194,"nodeType":"OverrideSpecifier","overrides":[],"src":"1658:8:4"},"parameters":{"id":1193,"nodeType":"ParameterList","parameters":[],"src":"1635:2:4"},"returnParameters":{"id":1197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1196,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1202,"src":"1676:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1195,"name":"uint256","nodeType":"ElementaryTypeName","src":"1676:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1675:9:4"},"scope":1451,"src":"1615:111:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1606],"body":{"id":1224,"nodeType":"Block","src":"1882:146:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1212,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"1900:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1213,"name":"ERC721Enumerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"1908:16:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Enumerable_$1451_$","typeString":"type(contract ERC721Enumerable)"}},"id":1214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1925:11:4","memberName":"totalSupply","nodeType":"MemberAccess","referencedDeclaration":1202,"src":"1908:28:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1908:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1900:38:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243373231456e756d657261626c653a20676c6f62616c20696e646578206f7574206f6620626f756e6473","id":1217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1940:46:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc","typeString":"literal_string \"ERC721Enumerable: global index out of bounds\""},"value":"ERC721Enumerable: global index out of bounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc","typeString":"literal_string \"ERC721Enumerable: global index out of bounds\""}],"id":1211,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1892:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:95:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1219,"nodeType":"ExpressionStatement","src":"1892:95:4"},{"expression":{"baseExpression":{"id":1220,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"2004:10:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1222,"indexExpression":{"id":1221,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"2015:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2004:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1210,"id":1223,"nodeType":"Return","src":"1997:24:4"}]},"documentation":{"id":1203,"nodeType":"StructuredDocumentation","src":"1732:61:4","text":" @dev See {IERC721Enumerable-tokenByIndex}."},"functionSelector":"4f6ccce7","id":1225,"implemented":true,"kind":"function","modifiers":[],"name":"tokenByIndex","nameLocation":"1807:12:4","nodeType":"FunctionDefinition","overrides":{"id":1207,"nodeType":"OverrideSpecifier","overrides":[],"src":"1855:8:4"},"parameters":{"id":1206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1205,"mutability":"mutable","name":"index","nameLocation":"1828:5:4","nodeType":"VariableDeclaration","scope":1225,"src":"1820:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1204,"name":"uint256","nodeType":"ElementaryTypeName","src":"1820:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1819:15:4"},"returnParameters":{"id":1210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1209,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1225,"src":"1873:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1208,"name":"uint256","nodeType":"ElementaryTypeName","src":"1873:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1872:9:4"},"scope":1451,"src":"1798:230:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[967],"body":{"id":1288,"nodeType":"Block","src":"2753:443:4","statements":[{"expression":{"arguments":[{"id":1239,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"2790:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1240,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"2796:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1241,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"2800:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1236,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2763:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721Enumerable_$1451_$","typeString":"type(contract super ERC721Enumerable)"}},"id":1238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2769:20:4","memberName":"_beforeTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":967,"src":"2763:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2763:45:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1243,"nodeType":"ExpressionStatement","src":"2763:45:4"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1244,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"2823:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2839:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2831:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1245,"name":"address","nodeType":"ElementaryTypeName","src":"2831:7:4","typeDescriptions":{}}},"id":1248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2823:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1255,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"2918:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1256,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"2926:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2918:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1264,"nodeType":"IfStatement","src":"2914:88:4","trueBody":{"id":1263,"nodeType":"Block","src":"2930:72:4","statements":[{"expression":{"arguments":[{"id":1259,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"2977:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1260,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"2983:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1258,"name":"_removeTokenFromOwnerEnumeration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"2944:32:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2944:47:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1262,"nodeType":"ExpressionStatement","src":"2944:47:4"}]}},"id":1265,"nodeType":"IfStatement","src":"2819:183:4","trueBody":{"id":1254,"nodeType":"Block","src":"2843:65:4","statements":[{"expression":{"arguments":[{"id":1251,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"2889:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1250,"name":"_addTokenToAllTokensEnumeration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"2857:31:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2857:40:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1253,"nodeType":"ExpressionStatement","src":"2857:40:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1266,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"3015:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3029:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3021:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1267,"name":"address","nodeType":"ElementaryTypeName","src":"3021:7:4","typeDescriptions":{}}},"id":1270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3021:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3015:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1277,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"3113:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1278,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"3119:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3113:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1286,"nodeType":"IfStatement","src":"3109:81:4","trueBody":{"id":1285,"nodeType":"Block","src":"3125:65:4","statements":[{"expression":{"arguments":[{"id":1281,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"3167:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1282,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"3171:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1280,"name":"_addTokenToOwnerEnumeration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"3139:27:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3139:40:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1284,"nodeType":"ExpressionStatement","src":"3139:40:4"}]}},"id":1287,"nodeType":"IfStatement","src":"3011:179:4","trueBody":{"id":1276,"nodeType":"Block","src":"3033:70:4","statements":[{"expression":{"arguments":[{"id":1273,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"3084:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1272,"name":"_removeTokenFromAllTokensEnumeration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1450,"src":"3047:36:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3047:45:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1275,"nodeType":"ExpressionStatement","src":"3047:45:4"}]}}]},"documentation":{"id":1226,"nodeType":"StructuredDocumentation","src":"2034:585:4","text":" @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1289,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"2633:20:4","nodeType":"FunctionDefinition","overrides":{"id":1234,"nodeType":"OverrideSpecifier","overrides":[],"src":"2744:8:4"},"parameters":{"id":1233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1228,"mutability":"mutable","name":"from","nameLocation":"2671:4:4","nodeType":"VariableDeclaration","scope":1289,"src":"2663:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1227,"name":"address","nodeType":"ElementaryTypeName","src":"2663:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1230,"mutability":"mutable","name":"to","nameLocation":"2693:2:4","nodeType":"VariableDeclaration","scope":1289,"src":"2685:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1229,"name":"address","nodeType":"ElementaryTypeName","src":"2685:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1232,"mutability":"mutable","name":"tokenId","nameLocation":"2713:7:4","nodeType":"VariableDeclaration","scope":1289,"src":"2705:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1231,"name":"uint256","nodeType":"ElementaryTypeName","src":"2705:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2653:73:4"},"returnParameters":{"id":1235,"nodeType":"ParameterList","parameters":[],"src":"2753:0:4"},"scope":1451,"src":"2624:572:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1318,"nodeType":"Block","src":"3564:143:4","statements":[{"assignments":[1298],"declarations":[{"constant":false,"id":1298,"mutability":"mutable","name":"length","nameLocation":"3582:6:4","nodeType":"VariableDeclaration","scope":1318,"src":"3574:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1297,"name":"uint256","nodeType":"ElementaryTypeName","src":"3574:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1303,"initialValue":{"arguments":[{"id":1301,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"3608:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1299,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"3591:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$979_$","typeString":"type(contract ERC721)"}},"id":1300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3598:9:4","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":230,"src":"3591:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3591:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3574:37:4"},{"expression":{"id":1310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1304,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"3621:12:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":1307,"indexExpression":{"id":1305,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"3634:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3621:16:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1308,"indexExpression":{"id":1306,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"3638:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3621:24:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1309,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"3648:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3621:34:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1311,"nodeType":"ExpressionStatement","src":"3621:34:4"},{"expression":{"id":1316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1312,"name":"_ownedTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"3665:17:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1314,"indexExpression":{"id":1313,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"3683:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3665:26:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1315,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"3694:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3665:35:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1317,"nodeType":"ExpressionStatement","src":"3665:35:4"}]},"documentation":{"id":1290,"nodeType":"StructuredDocumentation","src":"3202:283:4","text":" @dev Private function to add a token to this extension's ownership-tracking data structures.\n @param to address representing the new owner of the given token ID\n @param tokenId uint256 ID of the token to be added to the tokens list of the given address"},"id":1319,"implemented":true,"kind":"function","modifiers":[],"name":"_addTokenToOwnerEnumeration","nameLocation":"3499:27:4","nodeType":"FunctionDefinition","parameters":{"id":1295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1292,"mutability":"mutable","name":"to","nameLocation":"3535:2:4","nodeType":"VariableDeclaration","scope":1319,"src":"3527:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1291,"name":"address","nodeType":"ElementaryTypeName","src":"3527:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1294,"mutability":"mutable","name":"tokenId","nameLocation":"3547:7:4","nodeType":"VariableDeclaration","scope":1319,"src":"3539:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1293,"name":"uint256","nodeType":"ElementaryTypeName","src":"3539:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3526:29:4"},"returnParameters":{"id":1296,"nodeType":"ParameterList","parameters":[],"src":"3564:0:4"},"scope":1451,"src":"3490:217:4","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1338,"nodeType":"Block","src":"3968:95:4","statements":[{"expression":{"id":1330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1325,"name":"_allTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"3978:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1327,"indexExpression":{"id":1326,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1322,"src":"3994:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3978:24:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1328,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"4005:10:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4016:6:4","memberName":"length","nodeType":"MemberAccess","src":"4005:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3978:44:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1331,"nodeType":"ExpressionStatement","src":"3978:44:4"},{"expression":{"arguments":[{"id":1335,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1322,"src":"4048:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1332,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"4032:10:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4043:4:4","memberName":"push","nodeType":"MemberAccess","src":"4032:15:4","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":1336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:24:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1337,"nodeType":"ExpressionStatement","src":"4032:24:4"}]},"documentation":{"id":1320,"nodeType":"StructuredDocumentation","src":"3713:184:4","text":" @dev Private function to add a token to this extension's token tracking data structures.\n @param tokenId uint256 ID of the token to be added to the tokens list"},"id":1339,"implemented":true,"kind":"function","modifiers":[],"name":"_addTokenToAllTokensEnumeration","nameLocation":"3911:31:4","nodeType":"FunctionDefinition","parameters":{"id":1323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1322,"mutability":"mutable","name":"tokenId","nameLocation":"3951:7:4","nodeType":"VariableDeclaration","scope":1339,"src":"3943:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1321,"name":"uint256","nodeType":"ElementaryTypeName","src":"3943:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3942:17:4"},"returnParameters":{"id":1324,"nodeType":"ParameterList","parameters":[],"src":"3968:0:4"},"scope":1451,"src":"3902:161:4","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1401,"nodeType":"Block","src":"4761:889:4","statements":[{"assignments":[1348],"declarations":[{"constant":false,"id":1348,"mutability":"mutable","name":"lastTokenIndex","nameLocation":"4950:14:4","nodeType":"VariableDeclaration","scope":1401,"src":"4942:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1347,"name":"uint256","nodeType":"ElementaryTypeName","src":"4942:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1355,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1351,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1342,"src":"4984:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1349,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"4967:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$979_$","typeString":"type(contract ERC721)"}},"id":1350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4974:9:4","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":230,"src":"4967:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4967:22:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4992:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4967:26:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4942:51:4"},{"assignments":[1357],"declarations":[{"constant":false,"id":1357,"mutability":"mutable","name":"tokenIndex","nameLocation":"5011:10:4","nodeType":"VariableDeclaration","scope":1401,"src":"5003:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1356,"name":"uint256","nodeType":"ElementaryTypeName","src":"5003:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1361,"initialValue":{"baseExpression":{"id":1358,"name":"_ownedTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"5024:17:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1360,"indexExpression":{"id":1359,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"5042:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5024:26:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5003:47:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1362,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"5154:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1363,"name":"lastTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"5168:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5154:28:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1388,"nodeType":"IfStatement","src":"5150:323:4","trueBody":{"id":1387,"nodeType":"Block","src":"5184:289:4","statements":[{"assignments":[1366],"declarations":[{"constant":false,"id":1366,"mutability":"mutable","name":"lastTokenId","nameLocation":"5206:11:4","nodeType":"VariableDeclaration","scope":1387,"src":"5198:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1365,"name":"uint256","nodeType":"ElementaryTypeName","src":"5198:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1372,"initialValue":{"baseExpression":{"baseExpression":{"id":1367,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"5220:12:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":1369,"indexExpression":{"id":1368,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1342,"src":"5233:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5220:18:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1371,"indexExpression":{"id":1370,"name":"lastTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"5239:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5220:34:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5198:56:4"},{"expression":{"id":1379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1373,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"5269:12:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":1376,"indexExpression":{"id":1374,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1342,"src":"5282:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5269:18:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1377,"indexExpression":{"id":1375,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"5288:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5269:30:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1378,"name":"lastTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"5302:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5269:44:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1380,"nodeType":"ExpressionStatement","src":"5269:44:4"},{"expression":{"id":1385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1381,"name":"_ownedTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"5385:17:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1383,"indexExpression":{"id":1382,"name":"lastTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"5403:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5385:30:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1384,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"5418:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5385:43:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1386,"nodeType":"ExpressionStatement","src":"5385:43:4"}]}},{"expression":{"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"5559:33:4","subExpression":{"baseExpression":{"id":1389,"name":"_ownedTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"5566:17:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1391,"indexExpression":{"id":1390,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"5584:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5566:26:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1393,"nodeType":"ExpressionStatement","src":"5559:33:4"},{"expression":{"id":1399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"5602:41:4","subExpression":{"baseExpression":{"baseExpression":{"id":1394,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"5609:12:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":1396,"indexExpression":{"id":1395,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1342,"src":"5622:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5609:18:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1398,"indexExpression":{"id":1397,"name":"lastTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"5628:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5609:34:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1400,"nodeType":"ExpressionStatement","src":"5602:41:4"}]},"documentation":{"id":1340,"nodeType":"StructuredDocumentation","src":"4069:606:4","text":" @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\n while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\n gas optimizations e.g. when performing a transfer operation (avoiding double writes).\n This has O(1) time complexity, but alters the order of the _ownedTokens array.\n @param from address representing the previous owner of the given token ID\n @param tokenId uint256 ID of the token to be removed from the tokens list of the given address"},"id":1402,"implemented":true,"kind":"function","modifiers":[],"name":"_removeTokenFromOwnerEnumeration","nameLocation":"4689:32:4","nodeType":"FunctionDefinition","parameters":{"id":1345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1342,"mutability":"mutable","name":"from","nameLocation":"4730:4:4","nodeType":"VariableDeclaration","scope":1402,"src":"4722:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1341,"name":"address","nodeType":"ElementaryTypeName","src":"4722:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1344,"mutability":"mutable","name":"tokenId","nameLocation":"4744:7:4","nodeType":"VariableDeclaration","scope":1402,"src":"4736:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1343,"name":"uint256","nodeType":"ElementaryTypeName","src":"4736:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4721:31:4"},"returnParameters":{"id":1346,"nodeType":"ParameterList","parameters":[],"src":"4761:0:4"},"scope":1451,"src":"4680:970:4","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1449,"nodeType":"Block","src":"6009:990:4","statements":[{"assignments":[1409],"declarations":[{"constant":false,"id":1409,"mutability":"mutable","name":"lastTokenIndex","nameLocation":"6195:14:4","nodeType":"VariableDeclaration","scope":1449,"src":"6187:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1408,"name":"uint256","nodeType":"ElementaryTypeName","src":"6187:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1414,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1410,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"6212:10:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6223:6:4","memberName":"length","nodeType":"MemberAccess","src":"6212:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6232:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6212:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6187:46:4"},{"assignments":[1416],"declarations":[{"constant":false,"id":1416,"mutability":"mutable","name":"tokenIndex","nameLocation":"6251:10:4","nodeType":"VariableDeclaration","scope":1449,"src":"6243:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1415,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1420,"initialValue":{"baseExpression":{"id":1417,"name":"_allTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"6264:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1419,"indexExpression":{"id":1418,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1405,"src":"6280:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6264:24:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6243:45:4"},{"assignments":[1422],"declarations":[{"constant":false,"id":1422,"mutability":"mutable","name":"lastTokenId","nameLocation":"6618:11:4","nodeType":"VariableDeclaration","scope":1449,"src":"6610:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1421,"name":"uint256","nodeType":"ElementaryTypeName","src":"6610:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1426,"initialValue":{"baseExpression":{"id":1423,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"6632:10:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1425,"indexExpression":{"id":1424,"name":"lastTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1409,"src":"6643:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6632:26:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6610:48:4"},{"expression":{"id":1431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1427,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"6669:10:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1429,"indexExpression":{"id":1428,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"6680:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6669:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1430,"name":"lastTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1422,"src":"6694:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6669:36:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1432,"nodeType":"ExpressionStatement","src":"6669:36:4"},{"expression":{"id":1437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1433,"name":"_allTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"6773:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1435,"indexExpression":{"id":1434,"name":"lastTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1422,"src":"6789:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6773:28:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1436,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"6804:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6773:41:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1438,"nodeType":"ExpressionStatement","src":"6773:41:4"},{"expression":{"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"6935:31:4","subExpression":{"baseExpression":{"id":1439,"name":"_allTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"6942:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1441,"indexExpression":{"id":1440,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1405,"src":"6958:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6942:24:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1443,"nodeType":"ExpressionStatement","src":"6935:31:4"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1444,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"6976:10:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6987:3:4","memberName":"pop","nodeType":"MemberAccess","src":"6976:14:4","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer)"}},"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6976:16:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1448,"nodeType":"ExpressionStatement","src":"6976:16:4"}]},"documentation":{"id":1403,"nodeType":"StructuredDocumentation","src":"5656:277:4","text":" @dev Private function to remove a token from this extension's token tracking data structures.\n This has O(1) time complexity, but alters the order of the _allTokens array.\n @param tokenId uint256 ID of the token to be removed from the tokens list"},"id":1450,"implemented":true,"kind":"function","modifiers":[],"name":"_removeTokenFromAllTokensEnumeration","nameLocation":"5947:36:4","nodeType":"FunctionDefinition","parameters":{"id":1406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1405,"mutability":"mutable","name":"tokenId","nameLocation":"5992:7:4","nodeType":"VariableDeclaration","scope":1450,"src":"5984:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1404,"name":"uint256","nodeType":"ElementaryTypeName","src":"5984:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5983:17:4"},"returnParameters":{"id":1407,"nodeType":"ParameterList","parameters":[],"src":"6009:0:4"},"scope":1451,"src":"5938:1061:4","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1452,"src":"397:6604:4","usedErrors":[]}],"src":"113:6889:4"},"id":4},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","exportedSymbols":{"Address":[1929],"Context":[1951],"ERC165":[2275],"ERC721":[979],"ERC721URIStorage":[1576],"IERC165":[2287],"IERC721":[1095],"IERC721Metadata":[1634],"IERC721Receiver":[1113],"Strings":[2251]},"id":1577,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1453,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"128:23:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":1454,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1577,"sourceUnit":980,"src":"153:23:5","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1456,"name":"ERC721","nameLocations":["286:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":979,"src":"286:6:5"},"id":1457,"nodeType":"InheritanceSpecifier","src":"286:6:5"}],"canonicalName":"ERC721URIStorage","contractDependencies":[],"contractKind":"contract","documentation":{"id":1455,"nodeType":"StructuredDocumentation","src":"178:69:5","text":" @dev ERC721 token with storage based token URI management."},"fullyImplemented":false,"id":1576,"linearizedBaseContracts":[1576,979,1634,1095,2275,2287,1951],"name":"ERC721URIStorage","nameLocation":"266:16:5","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1460,"libraryName":{"id":1458,"name":"Strings","nameLocations":["305:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":2251,"src":"305:7:5"},"nodeType":"UsingForDirective","src":"299:26:5","typeName":{"id":1459,"name":"uint256","nodeType":"ElementaryTypeName","src":"317:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":1464,"mutability":"mutable","name":"_tokenURIs","nameLocation":"405:10:5","nodeType":"VariableDeclaration","scope":1576,"src":"370:45:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"typeName":{"id":1463,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1461,"name":"uint256","nodeType":"ElementaryTypeName","src":"378:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"370:26:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1462,"name":"string","nodeType":"ElementaryTypeName","src":"389:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"private"},{"baseFunctions":[317],"body":{"id":1522,"nodeType":"Block","src":"570:520:5","statements":[{"expression":{"arguments":[{"id":1474,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"595:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1473,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"580:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"580:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1476,"nodeType":"ExpressionStatement","src":"580:23:5"},{"assignments":[1478],"declarations":[{"constant":false,"id":1478,"mutability":"mutable","name":"_tokenURI","nameLocation":"628:9:5","nodeType":"VariableDeclaration","scope":1522,"src":"614:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1477,"name":"string","nodeType":"ElementaryTypeName","src":"614:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1482,"initialValue":{"baseExpression":{"id":1479,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1464,"src":"640:10:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":1481,"indexExpression":{"id":1480,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"651:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"640:19:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"614:45:5"},{"assignments":[1484],"declarations":[{"constant":false,"id":1484,"mutability":"mutable","name":"base","nameLocation":"683:4:5","nodeType":"VariableDeclaration","scope":1522,"src":"669:18:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1483,"name":"string","nodeType":"ElementaryTypeName","src":"669:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1487,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1485,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"690:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"690:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"669:31:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1490,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1484,"src":"779:4:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"773:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1488,"name":"bytes","nodeType":"ElementaryTypeName","src":"773:5:5","typeDescriptions":{}}},"id":1491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"773:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"785:6:5","memberName":"length","nodeType":"MemberAccess","src":"773:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"795:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"773:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1498,"nodeType":"IfStatement","src":"769:70:5","trueBody":{"id":1497,"nodeType":"Block","src":"798:41:5","statements":[{"expression":{"id":1495,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"819:9:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1472,"id":1496,"nodeType":"Return","src":"812:16:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1501,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"947:9:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"941:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1499,"name":"bytes","nodeType":"ElementaryTypeName","src":"941:5:5","typeDescriptions":{}}},"id":1502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"941:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"958:6:5","memberName":"length","nodeType":"MemberAccess","src":"941:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"967:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"941:27:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1516,"nodeType":"IfStatement","src":"937:106:5","trueBody":{"id":1515,"nodeType":"Block","src":"970:73:5","statements":[{"expression":{"arguments":[{"arguments":[{"id":1510,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1484,"src":"1015:4:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1511,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"1021:9:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1508,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"998:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1002:12:5","memberName":"encodePacked","nodeType":"MemberAccess","src":"998:16:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"998:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"991:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1506,"name":"string","nodeType":"ElementaryTypeName","src":"991:6:5","typeDescriptions":{}}},"id":1513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"991:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1472,"id":1514,"nodeType":"Return","src":"984:48:5"}]}},{"expression":{"arguments":[{"id":1519,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"1075:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1517,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1060:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$1576_$","typeString":"type(contract super ERC721URIStorage)"}},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1066:8:5","memberName":"tokenURI","nodeType":"MemberAccess","referencedDeclaration":317,"src":"1060:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":1520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1060:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1472,"id":1521,"nodeType":"Return","src":"1053:30:5"}]},"documentation":{"id":1465,"nodeType":"StructuredDocumentation","src":"422:55:5","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":1523,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"491:8:5","nodeType":"FunctionDefinition","overrides":{"id":1469,"nodeType":"OverrideSpecifier","overrides":[],"src":"537:8:5"},"parameters":{"id":1468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1467,"mutability":"mutable","name":"tokenId","nameLocation":"508:7:5","nodeType":"VariableDeclaration","scope":1523,"src":"500:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1466,"name":"uint256","nodeType":"ElementaryTypeName","src":"500:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"499:17:5"},"returnParameters":{"id":1472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1471,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1523,"src":"555:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1470,"name":"string","nodeType":"ElementaryTypeName","src":"555:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"554:15:5"},"scope":1576,"src":"482:608:5","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1544,"nodeType":"Block","src":"1318:133:5","statements":[{"expression":{"arguments":[{"arguments":[{"id":1533,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1526,"src":"1344:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1532,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"1336:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":1534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1336:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524337323155524953746f726167653a2055524920736574206f66206e6f6e6578697374656e7420746f6b656e","id":1535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1354:48:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","typeString":"literal_string \"ERC721URIStorage: URI set of nonexistent token\""},"value":"ERC721URIStorage: URI set of nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","typeString":"literal_string \"ERC721URIStorage: URI set of nonexistent token\""}],"id":1531,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1328:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1328:75:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1537,"nodeType":"ExpressionStatement","src":"1328:75:5"},{"expression":{"id":1542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1538,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1464,"src":"1413:10:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":1540,"indexExpression":{"id":1539,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1526,"src":"1424:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1413:19:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1541,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1528,"src":"1435:9:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1413:31:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1543,"nodeType":"ExpressionStatement","src":"1413:31:5"}]},"documentation":{"id":1524,"nodeType":"StructuredDocumentation","src":"1096:136:5","text":" @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Requirements:\n - `tokenId` must exist."},"id":1545,"implemented":true,"kind":"function","modifiers":[],"name":"_setTokenURI","nameLocation":"1246:12:5","nodeType":"FunctionDefinition","parameters":{"id":1529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1526,"mutability":"mutable","name":"tokenId","nameLocation":"1267:7:5","nodeType":"VariableDeclaration","scope":1545,"src":"1259:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1525,"name":"uint256","nodeType":"ElementaryTypeName","src":"1259:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1528,"mutability":"mutable","name":"_tokenURI","nameLocation":"1290:9:5","nodeType":"VariableDeclaration","scope":1545,"src":"1276:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1527,"name":"string","nodeType":"ElementaryTypeName","src":"1276:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1258:42:5"},"returnParameters":{"id":1530,"nodeType":"ParameterList","parameters":[],"src":"1318:0:5"},"scope":1576,"src":"1237:214:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[749],"body":{"id":1574,"nodeType":"Block","src":"1727:142:5","statements":[{"expression":{"arguments":[{"id":1555,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1548,"src":"1749:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1552,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1737:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$1576_$","typeString":"type(contract super ERC721URIStorage)"}},"id":1554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1743:5:5","memberName":"_burn","nodeType":"MemberAccess","referencedDeclaration":749,"src":"1737:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1737:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1557,"nodeType":"ExpressionStatement","src":"1737:20:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"baseExpression":{"id":1560,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1464,"src":"1778:10:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":1562,"indexExpression":{"id":1561,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1548,"src":"1789:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1778:19:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":1559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1772:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1558,"name":"bytes","nodeType":"ElementaryTypeName","src":"1772:5:5","typeDescriptions":{}}},"id":1563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1772:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":1564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1799:6:5","memberName":"length","nodeType":"MemberAccess","src":"1772:33:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1809:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1772:38:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1573,"nodeType":"IfStatement","src":"1768:95:5","trueBody":{"id":1572,"nodeType":"Block","src":"1812:51:5","statements":[{"expression":{"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"1826:26:5","subExpression":{"baseExpression":{"id":1567,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1464,"src":"1833:10:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":1569,"indexExpression":{"id":1568,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1548,"src":"1844:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1833:19:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1571,"nodeType":"ExpressionStatement","src":"1826:26:5"}]}}]},"documentation":{"id":1546,"nodeType":"StructuredDocumentation","src":"1457:207:5","text":" @dev See {ERC721-_burn}. This override additionally checks to see if a\n token-specific URI was set for the token, and if so, it deletes the token URI from\n the storage mapping."},"id":1575,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"1678:5:5","nodeType":"FunctionDefinition","overrides":{"id":1550,"nodeType":"OverrideSpecifier","overrides":[],"src":"1718:8:5"},"parameters":{"id":1549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1548,"mutability":"mutable","name":"tokenId","nameLocation":"1692:7:5","nodeType":"VariableDeclaration","scope":1575,"src":"1684:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1547,"name":"uint256","nodeType":"ElementaryTypeName","src":"1684:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1683:17:5"},"returnParameters":{"id":1551,"nodeType":"ParameterList","parameters":[],"src":"1727:0:5"},"scope":1576,"src":"1669:200:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1577,"src":"248:1623:5","usedErrors":[]}],"src":"128:1744:5"},"id":5},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol","exportedSymbols":{"IERC165":[2287],"IERC721":[1095],"IERC721Enumerable":[1607]},"id":1608,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1578,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"129:23:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":1579,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1608,"sourceUnit":1096,"src":"154:24:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1581,"name":"IERC721","nameLocations":["348:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":1095,"src":"348:7:6"},"id":1582,"nodeType":"InheritanceSpecifier","src":"348:7:6"}],"canonicalName":"IERC721Enumerable","contractDependencies":[],"contractKind":"interface","documentation":{"id":1580,"nodeType":"StructuredDocumentation","src":"180:136:6","text":" @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":1607,"linearizedBaseContracts":[1607,1095,2287],"name":"IERC721Enumerable","nameLocation":"327:17:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1583,"nodeType":"StructuredDocumentation","src":"362:82:6","text":" @dev Returns the total amount of tokens stored by the contract."},"functionSelector":"18160ddd","id":1588,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"458:11:6","nodeType":"FunctionDefinition","parameters":{"id":1584,"nodeType":"ParameterList","parameters":[],"src":"469:2:6"},"returnParameters":{"id":1587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1586,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1588,"src":"495:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1585,"name":"uint256","nodeType":"ElementaryTypeName","src":"495:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"494:9:6"},"scope":1607,"src":"449:55:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1589,"nodeType":"StructuredDocumentation","src":"510:171:6","text":" @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."},"functionSelector":"2f745c59","id":1598,"implemented":false,"kind":"function","modifiers":[],"name":"tokenOfOwnerByIndex","nameLocation":"695:19:6","nodeType":"FunctionDefinition","parameters":{"id":1594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1591,"mutability":"mutable","name":"owner","nameLocation":"723:5:6","nodeType":"VariableDeclaration","scope":1598,"src":"715:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1590,"name":"address","nodeType":"ElementaryTypeName","src":"715:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1593,"mutability":"mutable","name":"index","nameLocation":"738:5:6","nodeType":"VariableDeclaration","scope":1598,"src":"730:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1592,"name":"uint256","nodeType":"ElementaryTypeName","src":"730:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"714:30:6"},"returnParameters":{"id":1597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1596,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1598,"src":"768:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1595,"name":"uint256","nodeType":"ElementaryTypeName","src":"768:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"767:9:6"},"scope":1607,"src":"686:91:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1599,"nodeType":"StructuredDocumentation","src":"783:164:6","text":" @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."},"functionSelector":"4f6ccce7","id":1606,"implemented":false,"kind":"function","modifiers":[],"name":"tokenByIndex","nameLocation":"961:12:6","nodeType":"FunctionDefinition","parameters":{"id":1602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1601,"mutability":"mutable","name":"index","nameLocation":"982:5:6","nodeType":"VariableDeclaration","scope":1606,"src":"974:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1600,"name":"uint256","nodeType":"ElementaryTypeName","src":"974:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"973:15:6"},"returnParameters":{"id":1605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1604,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1606,"src":"1012:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1603,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1011:9:6"},"scope":1607,"src":"952:69:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1608,"src":"317:706:6","usedErrors":[]}],"src":"129:895:6"},"id":6},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC165":[2287],"IERC721":[1095],"IERC721Metadata":[1634]},"id":1635,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1609,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":1610,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1635,"sourceUnit":1096,"src":"137:24:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1612,"name":"IERC721","nameLocations":["326:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":1095,"src":"326:7:7"},"id":1613,"nodeType":"InheritanceSpecifier","src":"326:7:7"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1611,"nodeType":"StructuredDocumentation","src":"163:133:7","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":1634,"linearizedBaseContracts":[1634,1095,2287],"name":"IERC721Metadata","nameLocation":"307:15:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1614,"nodeType":"StructuredDocumentation","src":"340:58:7","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":1619,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"412:4:7","nodeType":"FunctionDefinition","parameters":{"id":1615,"nodeType":"ParameterList","parameters":[],"src":"416:2:7"},"returnParameters":{"id":1618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1617,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1619,"src":"442:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1616,"name":"string","nodeType":"ElementaryTypeName","src":"442:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"441:15:7"},"scope":1634,"src":"403:54:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1620,"nodeType":"StructuredDocumentation","src":"463:60:7","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":1625,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"537:6:7","nodeType":"FunctionDefinition","parameters":{"id":1621,"nodeType":"ParameterList","parameters":[],"src":"543:2:7"},"returnParameters":{"id":1624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1623,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1625,"src":"569:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1622,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"568:15:7"},"scope":1634,"src":"528:56:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1626,"nodeType":"StructuredDocumentation","src":"590:90:7","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":1633,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"694:8:7","nodeType":"FunctionDefinition","parameters":{"id":1629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1628,"mutability":"mutable","name":"tokenId","nameLocation":"711:7:7","nodeType":"VariableDeclaration","scope":1633,"src":"703:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1627,"name":"uint256","nodeType":"ElementaryTypeName","src":"703:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"702:17:7"},"returnParameters":{"id":1632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1631,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1633,"src":"743:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1630,"name":"string","nodeType":"ElementaryTypeName","src":"743:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"742:15:7"},"scope":1634,"src":"685:73:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1635,"src":"297:463:7","usedErrors":[]}],"src":"112:649:7"},"id":7},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[1929]},"id":1930,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1636,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:8"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":1637,"nodeType":"StructuredDocumentation","src":"126:67:8","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1929,"linearizedBaseContracts":[1929],"name":"Address","nameLocation":"202:7:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":1651,"nodeType":"Block","src":"1241:254:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1645,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"1465:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1473:4:8","memberName":"code","nodeType":"MemberAccess","src":"1465:12:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1478:6:8","memberName":"length","nodeType":"MemberAccess","src":"1465:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1487:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1465:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1644,"id":1650,"nodeType":"Return","src":"1458:30:8"}]},"documentation":{"id":1638,"nodeType":"StructuredDocumentation","src":"216:954:8","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":1652,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1184:10:8","nodeType":"FunctionDefinition","parameters":{"id":1641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1640,"mutability":"mutable","name":"account","nameLocation":"1203:7:8","nodeType":"VariableDeclaration","scope":1652,"src":"1195:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1639,"name":"address","nodeType":"ElementaryTypeName","src":"1195:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1194:17:8"},"returnParameters":{"id":1644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1643,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1652,"src":"1235:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1642,"name":"bool","nodeType":"ElementaryTypeName","src":"1235:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1234:6:8"},"scope":1929,"src":"1175:320:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1685,"nodeType":"Block","src":"2483:241:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1663,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2509:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1929","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1929","typeString":"library Address"}],"id":1662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2501:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1661,"name":"address","nodeType":"ElementaryTypeName","src":"2501:7:8","typeDescriptions":{}}},"id":1664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2501:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2515:7:8","memberName":"balance","nodeType":"MemberAccess","src":"2501:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1666,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"2526:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2501:31:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":1668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2534:31:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":1660,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2493:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2493:73:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1670,"nodeType":"ExpressionStatement","src":"2493:73:8"},{"assignments":[1672,null],"declarations":[{"constant":false,"id":1672,"mutability":"mutable","name":"success","nameLocation":"2583:7:8","nodeType":"VariableDeclaration","scope":1685,"src":"2578:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1671,"name":"bool","nodeType":"ElementaryTypeName","src":"2578:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1679,"initialValue":{"arguments":[{"hexValue":"","id":1677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2626:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1673,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1655,"src":"2596:9:8","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2606:4:8","memberName":"call","nodeType":"MemberAccess","src":"2596:14:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1675,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"2618:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2596:29:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2596:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2577:52:8"},{"expression":{"arguments":[{"id":1681,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"2647:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":1682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2656:60:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":1680,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2639:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:78:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1684,"nodeType":"ExpressionStatement","src":"2639:78:8"}]},"documentation":{"id":1653,"nodeType":"StructuredDocumentation","src":"1501:906:8","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1686,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2421:9:8","nodeType":"FunctionDefinition","parameters":{"id":1658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1655,"mutability":"mutable","name":"recipient","nameLocation":"2447:9:8","nodeType":"VariableDeclaration","scope":1686,"src":"2431:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1654,"name":"address","nodeType":"ElementaryTypeName","src":"2431:15:8","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1657,"mutability":"mutable","name":"amount","nameLocation":"2466:6:8","nodeType":"VariableDeclaration","scope":1686,"src":"2458:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1656,"name":"uint256","nodeType":"ElementaryTypeName","src":"2458:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:43:8"},"returnParameters":{"id":1659,"nodeType":"ParameterList","parameters":[],"src":"2483:0:8"},"scope":1929,"src":"2412:312:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1702,"nodeType":"Block","src":"3555:84:8","statements":[{"expression":{"arguments":[{"id":1697,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1689,"src":"3585:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1698,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"3593:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":1699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3599:32:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":1696,"name":"functionCall","nodeType":"Identifier","overloadedDeclarations":[1703,1723],"referencedDeclaration":1723,"src":"3572:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3572:60:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1695,"id":1701,"nodeType":"Return","src":"3565:67:8"}]},"documentation":{"id":1687,"nodeType":"StructuredDocumentation","src":"2730:731:8","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":1703,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3475:12:8","nodeType":"FunctionDefinition","parameters":{"id":1692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1689,"mutability":"mutable","name":"target","nameLocation":"3496:6:8","nodeType":"VariableDeclaration","scope":1703,"src":"3488:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1688,"name":"address","nodeType":"ElementaryTypeName","src":"3488:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1691,"mutability":"mutable","name":"data","nameLocation":"3517:4:8","nodeType":"VariableDeclaration","scope":1703,"src":"3504:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1690,"name":"bytes","nodeType":"ElementaryTypeName","src":"3504:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3487:35:8"},"returnParameters":{"id":1695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1703,"src":"3541:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1693,"name":"bytes","nodeType":"ElementaryTypeName","src":"3541:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3540:14:8"},"scope":1929,"src":"3466:173:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1722,"nodeType":"Block","src":"4008:76:8","statements":[{"expression":{"arguments":[{"id":1716,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"4047:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1717,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1708,"src":"4055:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4061:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1719,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"4064:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1715,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1743,1793],"referencedDeclaration":1793,"src":"4025:21:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4025:52:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1714,"id":1721,"nodeType":"Return","src":"4018:59:8"}]},"documentation":{"id":1704,"nodeType":"StructuredDocumentation","src":"3645:211:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1723,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3870:12:8","nodeType":"FunctionDefinition","parameters":{"id":1711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1706,"mutability":"mutable","name":"target","nameLocation":"3900:6:8","nodeType":"VariableDeclaration","scope":1723,"src":"3892:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1705,"name":"address","nodeType":"ElementaryTypeName","src":"3892:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1708,"mutability":"mutable","name":"data","nameLocation":"3929:4:8","nodeType":"VariableDeclaration","scope":1723,"src":"3916:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1707,"name":"bytes","nodeType":"ElementaryTypeName","src":"3916:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1710,"mutability":"mutable","name":"errorMessage","nameLocation":"3957:12:8","nodeType":"VariableDeclaration","scope":1723,"src":"3943:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1709,"name":"string","nodeType":"ElementaryTypeName","src":"3943:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3882:93:8"},"returnParameters":{"id":1714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1713,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1723,"src":"3994:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1712,"name":"bytes","nodeType":"ElementaryTypeName","src":"3994:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3993:14:8"},"scope":1929,"src":"3861:223:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1742,"nodeType":"Block","src":"4589:111:8","statements":[{"expression":{"arguments":[{"id":1736,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"4628:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1737,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"4636:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1738,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"4642:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":1739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4649:43:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":1735,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1743,1793],"referencedDeclaration":1793,"src":"4606:21:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4606:87:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1734,"id":1741,"nodeType":"Return","src":"4599:94:8"}]},"documentation":{"id":1724,"nodeType":"StructuredDocumentation","src":"4090:351:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":1743,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4455:21:8","nodeType":"FunctionDefinition","parameters":{"id":1731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1726,"mutability":"mutable","name":"target","nameLocation":"4494:6:8","nodeType":"VariableDeclaration","scope":1743,"src":"4486:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1725,"name":"address","nodeType":"ElementaryTypeName","src":"4486:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1728,"mutability":"mutable","name":"data","nameLocation":"4523:4:8","nodeType":"VariableDeclaration","scope":1743,"src":"4510:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1727,"name":"bytes","nodeType":"ElementaryTypeName","src":"4510:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1730,"mutability":"mutable","name":"value","nameLocation":"4545:5:8","nodeType":"VariableDeclaration","scope":1743,"src":"4537:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1729,"name":"uint256","nodeType":"ElementaryTypeName","src":"4537:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4476:80:8"},"returnParameters":{"id":1734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1733,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1743,"src":"4575:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1732,"name":"bytes","nodeType":"ElementaryTypeName","src":"4575:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4574:14:8"},"scope":1929,"src":"4446:254:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1792,"nodeType":"Block","src":"5127:320:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1760,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5153:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1929","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1929","typeString":"library Address"}],"id":1759,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5145:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1758,"name":"address","nodeType":"ElementaryTypeName","src":"5145:7:8","typeDescriptions":{}}},"id":1761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5145:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5159:7:8","memberName":"balance","nodeType":"MemberAccess","src":"5145:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1763,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"5170:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5145:30:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":1765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5177:40:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":1757,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5137:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5137:81:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1767,"nodeType":"ExpressionStatement","src":"5137:81:8"},{"expression":{"arguments":[{"arguments":[{"id":1770,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"5247:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1769,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"5236:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5236:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":1772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5256:31:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":1768,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5228:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5228:60:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1774,"nodeType":"ExpressionStatement","src":"5228:60:8"},{"assignments":[1776,1778],"declarations":[{"constant":false,"id":1776,"mutability":"mutable","name":"success","nameLocation":"5305:7:8","nodeType":"VariableDeclaration","scope":1792,"src":"5300:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1775,"name":"bool","nodeType":"ElementaryTypeName","src":"5300:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1778,"mutability":"mutable","name":"returndata","nameLocation":"5327:10:8","nodeType":"VariableDeclaration","scope":1792,"src":"5314:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1777,"name":"bytes","nodeType":"ElementaryTypeName","src":"5314:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1785,"initialValue":{"arguments":[{"id":1783,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"5367:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1779,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"5341:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5348:4:8","memberName":"call","nodeType":"MemberAccess","src":"5341:11:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1781,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"5360:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5341:25:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5341:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5299:73:8"},{"expression":{"arguments":[{"id":1787,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"5406:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1788,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1778,"src":"5415:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1789,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"5427:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1786,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1928,"src":"5389:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:51:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1756,"id":1791,"nodeType":"Return","src":"5382:58:8"}]},"documentation":{"id":1744,"nodeType":"StructuredDocumentation","src":"4706:237:8","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1793,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4957:21:8","nodeType":"FunctionDefinition","parameters":{"id":1753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1746,"mutability":"mutable","name":"target","nameLocation":"4996:6:8","nodeType":"VariableDeclaration","scope":1793,"src":"4988:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1745,"name":"address","nodeType":"ElementaryTypeName","src":"4988:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1748,"mutability":"mutable","name":"data","nameLocation":"5025:4:8","nodeType":"VariableDeclaration","scope":1793,"src":"5012:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1747,"name":"bytes","nodeType":"ElementaryTypeName","src":"5012:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1750,"mutability":"mutable","name":"value","nameLocation":"5047:5:8","nodeType":"VariableDeclaration","scope":1793,"src":"5039:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1749,"name":"uint256","nodeType":"ElementaryTypeName","src":"5039:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1752,"mutability":"mutable","name":"errorMessage","nameLocation":"5076:12:8","nodeType":"VariableDeclaration","scope":1793,"src":"5062:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1751,"name":"string","nodeType":"ElementaryTypeName","src":"5062:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4978:116:8"},"returnParameters":{"id":1756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1755,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1793,"src":"5113:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1754,"name":"bytes","nodeType":"ElementaryTypeName","src":"5113:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5112:14:8"},"scope":1929,"src":"4948:499:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1809,"nodeType":"Block","src":"5724:97:8","statements":[{"expression":{"arguments":[{"id":1804,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"5760:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1805,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"5768:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":1806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5774:39:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":1803,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[1810,1845],"referencedDeclaration":1845,"src":"5741:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5741:73:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1802,"id":1808,"nodeType":"Return","src":"5734:80:8"}]},"documentation":{"id":1794,"nodeType":"StructuredDocumentation","src":"5453:166:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1810,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5633:18:8","nodeType":"FunctionDefinition","parameters":{"id":1799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1796,"mutability":"mutable","name":"target","nameLocation":"5660:6:8","nodeType":"VariableDeclaration","scope":1810,"src":"5652:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1795,"name":"address","nodeType":"ElementaryTypeName","src":"5652:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1798,"mutability":"mutable","name":"data","nameLocation":"5681:4:8","nodeType":"VariableDeclaration","scope":1810,"src":"5668:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1797,"name":"bytes","nodeType":"ElementaryTypeName","src":"5668:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5651:35:8"},"returnParameters":{"id":1802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1801,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1810,"src":"5710:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1800,"name":"bytes","nodeType":"ElementaryTypeName","src":"5710:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5709:14:8"},"scope":1929,"src":"5624:197:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1844,"nodeType":"Block","src":"6163:228:8","statements":[{"expression":{"arguments":[{"arguments":[{"id":1824,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1813,"src":"6192:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1823,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"6181:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6181:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374","id":1826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6201:38:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""},"value":"Address: static call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""}],"id":1822,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6173:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6173:67:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1828,"nodeType":"ExpressionStatement","src":"6173:67:8"},{"assignments":[1830,1832],"declarations":[{"constant":false,"id":1830,"mutability":"mutable","name":"success","nameLocation":"6257:7:8","nodeType":"VariableDeclaration","scope":1844,"src":"6252:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1829,"name":"bool","nodeType":"ElementaryTypeName","src":"6252:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1832,"mutability":"mutable","name":"returndata","nameLocation":"6279:10:8","nodeType":"VariableDeclaration","scope":1844,"src":"6266:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1831,"name":"bytes","nodeType":"ElementaryTypeName","src":"6266:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1837,"initialValue":{"arguments":[{"id":1835,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"6311:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1833,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1813,"src":"6293:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6300:10:8","memberName":"staticcall","nodeType":"MemberAccess","src":"6293:17:8","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6293:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6251:65:8"},{"expression":{"arguments":[{"id":1839,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1830,"src":"6350:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1840,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"6359:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1841,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1817,"src":"6371:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1838,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1928,"src":"6333:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":1842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6333:51:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1821,"id":1843,"nodeType":"Return","src":"6326:58:8"}]},"documentation":{"id":1811,"nodeType":"StructuredDocumentation","src":"5827:173:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1845,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6014:18:8","nodeType":"FunctionDefinition","parameters":{"id":1818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1813,"mutability":"mutable","name":"target","nameLocation":"6050:6:8","nodeType":"VariableDeclaration","scope":1845,"src":"6042:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1812,"name":"address","nodeType":"ElementaryTypeName","src":"6042:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1815,"mutability":"mutable","name":"data","nameLocation":"6079:4:8","nodeType":"VariableDeclaration","scope":1845,"src":"6066:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1814,"name":"bytes","nodeType":"ElementaryTypeName","src":"6066:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1817,"mutability":"mutable","name":"errorMessage","nameLocation":"6107:12:8","nodeType":"VariableDeclaration","scope":1845,"src":"6093:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1816,"name":"string","nodeType":"ElementaryTypeName","src":"6093:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6032:93:8"},"returnParameters":{"id":1821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1820,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1845,"src":"6149:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1819,"name":"bytes","nodeType":"ElementaryTypeName","src":"6149:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6148:14:8"},"scope":1929,"src":"6005:386:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1861,"nodeType":"Block","src":"6667:101:8","statements":[{"expression":{"arguments":[{"id":1856,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"6705:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1857,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"6713:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":1858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6719:41:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":1855,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[1862,1897],"referencedDeclaration":1897,"src":"6684:20:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6684:77:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1854,"id":1860,"nodeType":"Return","src":"6677:84:8"}]},"documentation":{"id":1846,"nodeType":"StructuredDocumentation","src":"6397:168:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1862,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6579:20:8","nodeType":"FunctionDefinition","parameters":{"id":1851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1848,"mutability":"mutable","name":"target","nameLocation":"6608:6:8","nodeType":"VariableDeclaration","scope":1862,"src":"6600:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1847,"name":"address","nodeType":"ElementaryTypeName","src":"6600:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1850,"mutability":"mutable","name":"data","nameLocation":"6629:4:8","nodeType":"VariableDeclaration","scope":1862,"src":"6616:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1849,"name":"bytes","nodeType":"ElementaryTypeName","src":"6616:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6599:35:8"},"returnParameters":{"id":1854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1853,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1862,"src":"6653:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1852,"name":"bytes","nodeType":"ElementaryTypeName","src":"6653:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6652:14:8"},"scope":1929,"src":"6570:198:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1896,"nodeType":"Block","src":"7109:232:8","statements":[{"expression":{"arguments":[{"arguments":[{"id":1876,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"7138:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1875,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"7127:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7127:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374","id":1878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7147:40:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""},"value":"Address: delegate call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""}],"id":1874,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7119:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7119:69:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1880,"nodeType":"ExpressionStatement","src":"7119:69:8"},{"assignments":[1882,1884],"declarations":[{"constant":false,"id":1882,"mutability":"mutable","name":"success","nameLocation":"7205:7:8","nodeType":"VariableDeclaration","scope":1896,"src":"7200:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1881,"name":"bool","nodeType":"ElementaryTypeName","src":"7200:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1884,"mutability":"mutable","name":"returndata","nameLocation":"7227:10:8","nodeType":"VariableDeclaration","scope":1896,"src":"7214:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1883,"name":"bytes","nodeType":"ElementaryTypeName","src":"7214:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1889,"initialValue":{"arguments":[{"id":1887,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1867,"src":"7261:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1885,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"7241:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7248:12:8","memberName":"delegatecall","nodeType":"MemberAccess","src":"7241:19:8","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7241:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7199:67:8"},{"expression":{"arguments":[{"id":1891,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"7300:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1892,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"7309:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1893,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1869,"src":"7321:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1890,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1928,"src":"7283:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":1894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7283:51:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1873,"id":1895,"nodeType":"Return","src":"7276:58:8"}]},"documentation":{"id":1863,"nodeType":"StructuredDocumentation","src":"6774:175:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1897,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6963:20:8","nodeType":"FunctionDefinition","parameters":{"id":1870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1865,"mutability":"mutable","name":"target","nameLocation":"7001:6:8","nodeType":"VariableDeclaration","scope":1897,"src":"6993:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1864,"name":"address","nodeType":"ElementaryTypeName","src":"6993:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1867,"mutability":"mutable","name":"data","nameLocation":"7030:4:8","nodeType":"VariableDeclaration","scope":1897,"src":"7017:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1866,"name":"bytes","nodeType":"ElementaryTypeName","src":"7017:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1869,"mutability":"mutable","name":"errorMessage","nameLocation":"7058:12:8","nodeType":"VariableDeclaration","scope":1897,"src":"7044:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1868,"name":"string","nodeType":"ElementaryTypeName","src":"7044:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6983:93:8"},"returnParameters":{"id":1873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1872,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1897,"src":"7095:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1871,"name":"bytes","nodeType":"ElementaryTypeName","src":"7095:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7094:14:8"},"scope":1929,"src":"6954:387:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1927,"nodeType":"Block","src":"7721:582:8","statements":[{"condition":{"id":1909,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"7735:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1925,"nodeType":"Block","src":"7792:505:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1913,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1902,"src":"7876:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7887:6:8","memberName":"length","nodeType":"MemberAccess","src":"7876:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7876:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1923,"nodeType":"Block","src":"8234:53:8","statements":[{"expression":{"arguments":[{"id":1920,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"8259:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1919,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"8252:6:8","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8252:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1922,"nodeType":"ExpressionStatement","src":"8252:20:8"}]},"id":1924,"nodeType":"IfStatement","src":"7872:415:8","trueBody":{"id":1918,"nodeType":"Block","src":"7899:329:8","statements":[{"AST":{"nodeType":"YulBlock","src":"8069:145:8","statements":[{"nodeType":"YulVariableDeclaration","src":"8091:40:8","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"8120:10:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8114:5:8"},"nodeType":"YulFunctionCall","src":"8114:17:8"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"8095:15:8","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8163:2:8","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"8167:10:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8159:3:8"},"nodeType":"YulFunctionCall","src":"8159:19:8"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"8180:15:8"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8152:6:8"},"nodeType":"YulFunctionCall","src":"8152:44:8"},"nodeType":"YulExpressionStatement","src":"8152:44:8"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1902,"isOffset":false,"isSlot":false,"src":"8120:10:8","valueSize":1},{"declaration":1902,"isOffset":false,"isSlot":false,"src":"8167:10:8","valueSize":1}],"id":1917,"nodeType":"InlineAssembly","src":"8060:154:8"}]}}]},"id":1926,"nodeType":"IfStatement","src":"7731:566:8","trueBody":{"id":1912,"nodeType":"Block","src":"7744:42:8","statements":[{"expression":{"id":1910,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1902,"src":"7765:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1908,"id":1911,"nodeType":"Return","src":"7758:17:8"}]}}]},"documentation":{"id":1898,"nodeType":"StructuredDocumentation","src":"7347:209:8","text":" @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"},"id":1928,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"7570:16:8","nodeType":"FunctionDefinition","parameters":{"id":1905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1900,"mutability":"mutable","name":"success","nameLocation":"7601:7:8","nodeType":"VariableDeclaration","scope":1928,"src":"7596:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1899,"name":"bool","nodeType":"ElementaryTypeName","src":"7596:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1902,"mutability":"mutable","name":"returndata","nameLocation":"7631:10:8","nodeType":"VariableDeclaration","scope":1928,"src":"7618:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1901,"name":"bytes","nodeType":"ElementaryTypeName","src":"7618:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1904,"mutability":"mutable","name":"errorMessage","nameLocation":"7665:12:8","nodeType":"VariableDeclaration","scope":1928,"src":"7651:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1903,"name":"string","nodeType":"ElementaryTypeName","src":"7651:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7586:97:8"},"returnParameters":{"id":1908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1907,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1928,"src":"7707:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1906,"name":"bytes","nodeType":"ElementaryTypeName","src":"7707:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7706:14:8"},"scope":1929,"src":"7561:742:8","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1930,"src":"194:8111:8","usedErrors":[]}],"src":"101:8205:8"},"id":8},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1951]},"id":1952,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1931,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:9"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1932,"nodeType":"StructuredDocumentation","src":"111:496:9","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1951,"linearizedBaseContracts":[1951],"name":"Context","nameLocation":"626:7:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":1940,"nodeType":"Block","src":"702:34:9","statements":[{"expression":{"expression":{"id":1937,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:9","memberName":"sender","nodeType":"MemberAccess","src":"719:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1936,"id":1939,"nodeType":"Return","src":"712:17:9"}]},"id":1941,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:9","nodeType":"FunctionDefinition","parameters":{"id":1933,"nodeType":"ParameterList","parameters":[],"src":"659:2:9"},"returnParameters":{"id":1936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1935,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1941,"src":"693:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1934,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:9"},"scope":1951,"src":"640:96:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1949,"nodeType":"Block","src":"809:32:9","statements":[{"expression":{"expression":{"id":1946,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:4:9","memberName":"data","nodeType":"MemberAccess","src":"826:8:9","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1945,"id":1948,"nodeType":"Return","src":"819:15:9"}]},"id":1950,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:9","nodeType":"FunctionDefinition","parameters":{"id":1942,"nodeType":"ParameterList","parameters":[],"src":"759:2:9"},"returnParameters":{"id":1945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1944,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1950,"src":"793:14:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1943,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:9"},"scope":1951,"src":"742:99:9","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1952,"src":"608:235:9","usedErrors":[]}],"src":"86:758:9"},"id":9},"@openzeppelin/contracts/utils/Counters.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Counters.sol","exportedSymbols":{"Counters":[2025]},"id":2026,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1953,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"87:23:10"},{"abstract":false,"baseContracts":[],"canonicalName":"Counters","contractDependencies":[],"contractKind":"library","documentation":{"id":1954,"nodeType":"StructuredDocumentation","src":"112:311:10","text":" @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"},"fullyImplemented":true,"id":2025,"linearizedBaseContracts":[2025],"name":"Counters","nameLocation":"432:8:10","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Counters.Counter","id":1957,"members":[{"constant":false,"id":1956,"mutability":"mutable","name":"_value","nameLocation":"794:6:10","nodeType":"VariableDeclaration","scope":1957,"src":"786:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1955,"name":"uint256","nodeType":"ElementaryTypeName","src":"786:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Counter","nameLocation":"454:7:10","nodeType":"StructDefinition","scope":2025,"src":"447:374:10","visibility":"public"},{"body":{"id":1968,"nodeType":"Block","src":"901:38:10","statements":[{"expression":{"expression":{"id":1965,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"918:7:10","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1957_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1966,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"926:6:10","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":1956,"src":"918:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1964,"id":1967,"nodeType":"Return","src":"911:21:10"}]},"id":1969,"implemented":true,"kind":"function","modifiers":[],"name":"current","nameLocation":"836:7:10","nodeType":"FunctionDefinition","parameters":{"id":1961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1960,"mutability":"mutable","name":"counter","nameLocation":"860:7:10","nodeType":"VariableDeclaration","scope":1969,"src":"844:23:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1957_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":1959,"nodeType":"UserDefinedTypeName","pathNode":{"id":1958,"name":"Counter","nameLocations":["844:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":1957,"src":"844:7:10"},"referencedDeclaration":1957,"src":"844:7:10","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1957_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"843:25:10"},"returnParameters":{"id":1964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1963,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1969,"src":"892:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1962,"name":"uint256","nodeType":"ElementaryTypeName","src":"892:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"891:9:10"},"scope":2025,"src":"827:112:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1982,"nodeType":"Block","src":"998:70:10","statements":[{"id":1981,"nodeType":"UncheckedBlock","src":"1008:54:10","statements":[{"expression":{"id":1979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1975,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1972,"src":"1032:7:10","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1957_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1977,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1040:6:10","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":1956,"src":"1032:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1050:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1032:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1980,"nodeType":"ExpressionStatement","src":"1032:19:10"}]}]},"id":1983,"implemented":true,"kind":"function","modifiers":[],"name":"increment","nameLocation":"954:9:10","nodeType":"FunctionDefinition","parameters":{"id":1973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1972,"mutability":"mutable","name":"counter","nameLocation":"980:7:10","nodeType":"VariableDeclaration","scope":1983,"src":"964:23:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1957_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":1971,"nodeType":"UserDefinedTypeName","pathNode":{"id":1970,"name":"Counter","nameLocations":["964:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":1957,"src":"964:7:10"},"referencedDeclaration":1957,"src":"964:7:10","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1957_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"963:25:10"},"returnParameters":{"id":1974,"nodeType":"ParameterList","parameters":[],"src":"998:0:10"},"scope":2025,"src":"945:123:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2010,"nodeType":"Block","src":"1127:176:10","statements":[{"assignments":[1990],"declarations":[{"constant":false,"id":1990,"mutability":"mutable","name":"value","nameLocation":"1145:5:10","nodeType":"VariableDeclaration","scope":2010,"src":"1137:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1989,"name":"uint256","nodeType":"ElementaryTypeName","src":"1137:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1993,"initialValue":{"expression":{"id":1991,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1986,"src":"1153:7:10","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1957_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1992,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1161:6:10","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":1956,"src":"1153:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1137:30:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1995,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1990,"src":"1185:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1193:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1185:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f756e7465723a2064656372656d656e74206f766572666c6f77","id":1998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1196:29:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""},"value":"Counter: decrement overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""}],"id":1994,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1177:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1177:49:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2000,"nodeType":"ExpressionStatement","src":"1177:49:10"},{"id":2009,"nodeType":"UncheckedBlock","src":"1236:61:10","statements":[{"expression":{"id":2007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2001,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1986,"src":"1260:7:10","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1957_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":2003,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1268:6:10","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":1956,"src":"1260:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2004,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1990,"src":"1277:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1285:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1277:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1260:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2008,"nodeType":"ExpressionStatement","src":"1260:26:10"}]}]},"id":2011,"implemented":true,"kind":"function","modifiers":[],"name":"decrement","nameLocation":"1083:9:10","nodeType":"FunctionDefinition","parameters":{"id":1987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1986,"mutability":"mutable","name":"counter","nameLocation":"1109:7:10","nodeType":"VariableDeclaration","scope":2011,"src":"1093:23:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1957_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":1985,"nodeType":"UserDefinedTypeName","pathNode":{"id":1984,"name":"Counter","nameLocations":["1093:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":1957,"src":"1093:7:10"},"referencedDeclaration":1957,"src":"1093:7:10","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1957_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1092:25:10"},"returnParameters":{"id":1988,"nodeType":"ParameterList","parameters":[],"src":"1127:0:10"},"scope":2025,"src":"1074:229:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2023,"nodeType":"Block","src":"1358:35:10","statements":[{"expression":{"id":2021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2017,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2014,"src":"1368:7:10","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1957_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":2019,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1376:6:10","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":1956,"src":"1368:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1385:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1368:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2022,"nodeType":"ExpressionStatement","src":"1368:18:10"}]},"id":2024,"implemented":true,"kind":"function","modifiers":[],"name":"reset","nameLocation":"1318:5:10","nodeType":"FunctionDefinition","parameters":{"id":2015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2014,"mutability":"mutable","name":"counter","nameLocation":"1340:7:10","nodeType":"VariableDeclaration","scope":2024,"src":"1324:23:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1957_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":2013,"nodeType":"UserDefinedTypeName","pathNode":{"id":2012,"name":"Counter","nameLocations":["1324:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":1957,"src":"1324:7:10"},"referencedDeclaration":1957,"src":"1324:7:10","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1957_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1323:25:10"},"returnParameters":{"id":2016,"nodeType":"ParameterList","parameters":[],"src":"1358:0:10"},"scope":2025,"src":"1309:84:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2026,"src":"424:971:10","usedErrors":[]}],"src":"87:1309:10"},"id":10},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Strings":[2251]},"id":2252,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2027,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:11"},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2028,"nodeType":"StructuredDocumentation","src":"126:34:11","text":" @dev String operations."},"fullyImplemented":true,"id":2251,"linearizedBaseContracts":[2251],"name":"Strings","nameLocation":"169:7:11","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2031,"mutability":"constant","name":"_HEX_SYMBOLS","nameLocation":"208:12:11","nodeType":"VariableDeclaration","scope":2251,"src":"183:58:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2029,"name":"bytes16","nodeType":"ElementaryTypeName","src":"183:7:11","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"223:18:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2034,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"270:15:11","nodeType":"VariableDeclaration","scope":2251,"src":"247:43:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2032,"name":"uint8","nodeType":"ElementaryTypeName","src":"247:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"288:2:11","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":2112,"nodeType":"Block","src":"463:632:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2042,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"665:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"674:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"665:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2048,"nodeType":"IfStatement","src":"661:51:11","trueBody":{"id":2047,"nodeType":"Block","src":"677:35:11","statements":[{"expression":{"hexValue":"30","id":2045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"698:3:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"functionReturnParameters":2041,"id":2046,"nodeType":"Return","src":"691:10:11"}]}},{"assignments":[2050],"declarations":[{"constant":false,"id":2050,"mutability":"mutable","name":"temp","nameLocation":"729:4:11","nodeType":"VariableDeclaration","scope":2112,"src":"721:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2049,"name":"uint256","nodeType":"ElementaryTypeName","src":"721:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2052,"initialValue":{"id":2051,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"736:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"721:20:11"},{"assignments":[2054],"declarations":[{"constant":false,"id":2054,"mutability":"mutable","name":"digits","nameLocation":"759:6:11","nodeType":"VariableDeclaration","scope":2112,"src":"751:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2053,"name":"uint256","nodeType":"ElementaryTypeName","src":"751:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2055,"nodeType":"VariableDeclarationStatement","src":"751:14:11"},{"body":{"id":2066,"nodeType":"Block","src":"793:57:11","statements":[{"expression":{"id":2060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"807:8:11","subExpression":{"id":2059,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"807:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2061,"nodeType":"ExpressionStatement","src":"807:8:11"},{"expression":{"id":2064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2062,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"829:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"837:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"829:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2065,"nodeType":"ExpressionStatement","src":"829:10:11"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2056,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"782:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"790:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"782:9:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2067,"nodeType":"WhileStatement","src":"775:75:11"},{"assignments":[2069],"declarations":[{"constant":false,"id":2069,"mutability":"mutable","name":"buffer","nameLocation":"872:6:11","nodeType":"VariableDeclaration","scope":2112,"src":"859:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2068,"name":"bytes","nodeType":"ElementaryTypeName","src":"859:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2074,"initialValue":{"arguments":[{"id":2072,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"891:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2071,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"881:9:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2070,"name":"bytes","nodeType":"ElementaryTypeName","src":"885:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"881:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"859:39:11"},{"body":{"id":2105,"nodeType":"Block","src":"927:131:11","statements":[{"expression":{"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2078,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"941:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":2079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"951:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"941:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2081,"nodeType":"ExpressionStatement","src":"941:11:11"},{"expression":{"id":2099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2082,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"966:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2084,"indexExpression":{"id":2083,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"973:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"966:14:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3438","id":2089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"996:2:11","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2092,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"1009:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"3130","id":2093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1017:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1009:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2091,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1001:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2090,"name":"uint256","nodeType":"ElementaryTypeName","src":"1001:7:11","typeDescriptions":{}}},"id":2095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1001:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"996:24:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"990:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2087,"name":"uint8","nodeType":"ElementaryTypeName","src":"990:5:11","typeDescriptions":{}}},"id":2097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"990:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2086,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"983:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2085,"name":"bytes1","nodeType":"ElementaryTypeName","src":"983:6:11","typeDescriptions":{}}},"id":2098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"983:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"966:56:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2100,"nodeType":"ExpressionStatement","src":"966:56:11"},{"expression":{"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2101,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"1036:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1045:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1036:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2104,"nodeType":"ExpressionStatement","src":"1036:11:11"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2075,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"915:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"924:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"915:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2106,"nodeType":"WhileStatement","src":"908:150:11"},{"expression":{"arguments":[{"id":2109,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"1081:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1074:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2107,"name":"string","nodeType":"ElementaryTypeName","src":"1074:6:11","typeDescriptions":{}}},"id":2110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1074:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2041,"id":2111,"nodeType":"Return","src":"1067:21:11"}]},"documentation":{"id":2035,"nodeType":"StructuredDocumentation","src":"297:90:11","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2113,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"401:8:11","nodeType":"FunctionDefinition","parameters":{"id":2038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2037,"mutability":"mutable","name":"value","nameLocation":"418:5:11","nodeType":"VariableDeclaration","scope":2113,"src":"410:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2036,"name":"uint256","nodeType":"ElementaryTypeName","src":"410:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:15:11"},"returnParameters":{"id":2041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2040,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2113,"src":"448:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2039,"name":"string","nodeType":"ElementaryTypeName","src":"448:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"447:15:11"},"scope":2251,"src":"392:703:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2153,"nodeType":"Block","src":"1274:255:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2121,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"1288:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1288:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2127,"nodeType":"IfStatement","src":"1284:54:11","trueBody":{"id":2126,"nodeType":"Block","src":"1300:38:11","statements":[{"expression":{"hexValue":"30783030","id":2124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1321:6:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4","typeString":"literal_string \"0x00\""},"value":"0x00"},"functionReturnParameters":2120,"id":2125,"nodeType":"Return","src":"1314:13:11"}]}},{"assignments":[2129],"declarations":[{"constant":false,"id":2129,"mutability":"mutable","name":"temp","nameLocation":"1355:4:11","nodeType":"VariableDeclaration","scope":2153,"src":"1347:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2128,"name":"uint256","nodeType":"ElementaryTypeName","src":"1347:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2131,"initialValue":{"id":2130,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"1362:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1347:20:11"},{"assignments":[2133],"declarations":[{"constant":false,"id":2133,"mutability":"mutable","name":"length","nameLocation":"1385:6:11","nodeType":"VariableDeclaration","scope":2153,"src":"1377:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2132,"name":"uint256","nodeType":"ElementaryTypeName","src":"1377:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2135,"initialValue":{"hexValue":"30","id":2134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1394:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1377:18:11"},{"body":{"id":2146,"nodeType":"Block","src":"1423:57:11","statements":[{"expression":{"id":2140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1437:8:11","subExpression":{"id":2139,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2133,"src":"1437:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2141,"nodeType":"ExpressionStatement","src":"1437:8:11"},{"expression":{"id":2144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2142,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"1459:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":2143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1468:1:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"1459:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2145,"nodeType":"ExpressionStatement","src":"1459:10:11"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2136,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"1412:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1420:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1412:9:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2147,"nodeType":"WhileStatement","src":"1405:75:11"},{"expression":{"arguments":[{"id":2149,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"1508:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2150,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2133,"src":"1515:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2148,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2154,2230,2250],"referencedDeclaration":2230,"src":"1496:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1496:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2120,"id":2152,"nodeType":"Return","src":"1489:33:11"}]},"documentation":{"id":2114,"nodeType":"StructuredDocumentation","src":"1101:94:11","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2154,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1209:11:11","nodeType":"FunctionDefinition","parameters":{"id":2117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2116,"mutability":"mutable","name":"value","nameLocation":"1229:5:11","nodeType":"VariableDeclaration","scope":2154,"src":"1221:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2115,"name":"uint256","nodeType":"ElementaryTypeName","src":"1221:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:15:11"},"returnParameters":{"id":2120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2119,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2154,"src":"1259:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2118,"name":"string","nodeType":"ElementaryTypeName","src":"1259:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1258:15:11"},"scope":2251,"src":"1200:329:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2229,"nodeType":"Block","src":"1742:351:11","statements":[{"assignments":[2165],"declarations":[{"constant":false,"id":2165,"mutability":"mutable","name":"buffer","nameLocation":"1765:6:11","nodeType":"VariableDeclaration","scope":2229,"src":"1752:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2164,"name":"bytes","nodeType":"ElementaryTypeName","src":"1752:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2174,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1784:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2169,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2159,"src":"1788:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1784:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1797:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1784:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2167,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1774:9:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2166,"name":"bytes","nodeType":"ElementaryTypeName","src":"1778:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1774:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1752:47:11"},{"expression":{"id":2179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2175,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"1809:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2177,"indexExpression":{"hexValue":"30","id":2176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1816:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1809:9:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1821:3:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1809:15:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2180,"nodeType":"ExpressionStatement","src":"1809:15:11"},{"expression":{"id":2185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2181,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"1834:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2183,"indexExpression":{"hexValue":"31","id":2182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1841:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1834:9:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1846:3:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"1834:15:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2186,"nodeType":"ExpressionStatement","src":"1834:15:11"},{"body":{"id":2215,"nodeType":"Block","src":"1904:87:11","statements":[{"expression":{"id":2209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2201,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"1918:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2203,"indexExpression":{"id":2202,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"1925:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1918:9:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2204,"name":"_HEX_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2031,"src":"1930:12:11","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2208,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2205,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2157,"src":"1943:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1951:3:11","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"1943:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1930:25:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"1918:37:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2210,"nodeType":"ExpressionStatement","src":"1918:37:11"},{"expression":{"id":2213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2211,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2157,"src":"1969:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1979:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"1969:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2214,"nodeType":"ExpressionStatement","src":"1969:11:11"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2195,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"1892:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1896:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1892:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2216,"initializationExpression":{"assignments":[2188],"declarations":[{"constant":false,"id":2188,"mutability":"mutable","name":"i","nameLocation":"1872:1:11","nodeType":"VariableDeclaration","scope":2216,"src":"1864:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2187,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2194,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1876:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2190,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2159,"src":"1880:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1876:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1889:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1876:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1864:26:11"},"loopExpression":{"expression":{"id":2199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"1899:3:11","subExpression":{"id":2198,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"1901:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2200,"nodeType":"ExpressionStatement","src":"1899:3:11"},"nodeType":"ForStatement","src":"1859:132:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2218,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2157,"src":"2008:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2017:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2008:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":2221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2020:34:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":2217,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2000:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2000:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2223,"nodeType":"ExpressionStatement","src":"2000:55:11"},{"expression":{"arguments":[{"id":2226,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"2079:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2072:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2224,"name":"string","nodeType":"ElementaryTypeName","src":"2072:6:11","typeDescriptions":{}}},"id":2227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2072:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2163,"id":2228,"nodeType":"Return","src":"2065:21:11"}]},"documentation":{"id":2155,"nodeType":"StructuredDocumentation","src":"1535:112:11","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2230,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1661:11:11","nodeType":"FunctionDefinition","parameters":{"id":2160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2157,"mutability":"mutable","name":"value","nameLocation":"1681:5:11","nodeType":"VariableDeclaration","scope":2230,"src":"1673:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2156,"name":"uint256","nodeType":"ElementaryTypeName","src":"1673:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2159,"mutability":"mutable","name":"length","nameLocation":"1696:6:11","nodeType":"VariableDeclaration","scope":2230,"src":"1688:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2158,"name":"uint256","nodeType":"ElementaryTypeName","src":"1688:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1672:31:11"},"returnParameters":{"id":2163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2162,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2230,"src":"1727:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2161,"name":"string","nodeType":"ElementaryTypeName","src":"1727:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1726:15:11"},"scope":2251,"src":"1652:441:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2249,"nodeType":"Block","src":"2318:76:11","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2243,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"2363:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2242,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2355:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2241,"name":"uint160","nodeType":"ElementaryTypeName","src":"2355:7:11","typeDescriptions":{}}},"id":2244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2355:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2347:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2239,"name":"uint256","nodeType":"ElementaryTypeName","src":"2347:7:11","typeDescriptions":{}}},"id":2245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2347:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2246,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"2371:15:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2238,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2154,2230,2250],"referencedDeclaration":2230,"src":"2335:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:52:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2237,"id":2248,"nodeType":"Return","src":"2328:59:11"}]},"documentation":{"id":2231,"nodeType":"StructuredDocumentation","src":"2099:141:11","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":2250,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2254:11:11","nodeType":"FunctionDefinition","parameters":{"id":2234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2233,"mutability":"mutable","name":"addr","nameLocation":"2274:4:11","nodeType":"VariableDeclaration","scope":2250,"src":"2266:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2232,"name":"address","nodeType":"ElementaryTypeName","src":"2266:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2265:14:11"},"returnParameters":{"id":2237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2236,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2250,"src":"2303:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2235,"name":"string","nodeType":"ElementaryTypeName","src":"2303:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2302:15:11"},"scope":2251,"src":"2245:149:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2252,"src":"161:2235:11","usedErrors":[]}],"src":"101:2296:11"},"id":11},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[2275],"IERC165":[2287]},"id":2276,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2253,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:12"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":2254,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2276,"sourceUnit":2288,"src":"124:23:12","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2256,"name":"IERC165","nameLocations":["754:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":2287,"src":"754:7:12"},"id":2257,"nodeType":"InheritanceSpecifier","src":"754:7:12"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":2255,"nodeType":"StructuredDocumentation","src":"149:576:12","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":2275,"linearizedBaseContracts":[2275,2287],"name":"ERC165","nameLocation":"744:6:12","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[2286],"body":{"id":2273,"nodeType":"Block","src":"920:64:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2266,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"937:11:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2268,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"957:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$2287_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$2287_$","typeString":"type(contract IERC165)"}],"id":2267,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"952:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$2287","typeString":"type(contract IERC165)"}},"id":2270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"966:11:12","memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2265,"id":2272,"nodeType":"Return","src":"930:47:12"}]},"documentation":{"id":2258,"nodeType":"StructuredDocumentation","src":"768:56:12","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":2274,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"838:17:12","nodeType":"FunctionDefinition","overrides":{"id":2262,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:12"},"parameters":{"id":2261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2260,"mutability":"mutable","name":"interfaceId","nameLocation":"863:11:12","nodeType":"VariableDeclaration","scope":2274,"src":"856:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2259,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:12"},"returnParameters":{"id":2265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2274,"src":"914:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2263,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:12"},"scope":2275,"src":"829:155:12","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":2276,"src":"726:260:12","usedErrors":[]}],"src":"99:888:12"},"id":12},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[2287]},"id":2288,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2277,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:13"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":2278,"nodeType":"StructuredDocumentation","src":"125:279:13","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":2287,"linearizedBaseContracts":[2287],"name":"IERC165","nameLocation":"415:7:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2279,"nodeType":"StructuredDocumentation","src":"429:340:13","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":2286,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:13","nodeType":"FunctionDefinition","parameters":{"id":2282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2281,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:13","nodeType":"VariableDeclaration","scope":2286,"src":"801:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2280,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:13"},"returnParameters":{"id":2285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2284,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2286,"src":"844:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2283,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:13"},"scope":2287,"src":"774:76:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2288,"src":"405:447:13","usedErrors":[]}],"src":"100:753:13"},"id":13},"contracts/AccessKey.sol":{"ast":{"absolutePath":"contracts/AccessKey.sol","exportedSymbols":{"AccessKey":[2345],"Address":[1929],"Context":[1951],"ERC165":[2275],"ERC721":[979],"ERC721Enumerable":[1451],"IERC165":[2287],"IERC721":[1095],"IERC721Enumerable":[1607],"IERC721Metadata":[1634],"IERC721Receiver":[1113],"Strings":[2251]},"id":2346,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2289,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"32:24:14"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol","id":2290,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2346,"sourceUnit":1452,"src":"58:78:14","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2291,"name":"ERC721Enumerable","nameLocations":["160:16:14"],"nodeType":"IdentifierPath","referencedDeclaration":1451,"src":"160:16:14"},"id":2292,"nodeType":"InheritanceSpecifier","src":"160:16:14"}],"canonicalName":"AccessKey","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2345,"linearizedBaseContracts":[2345,1451,1607,979,1634,1095,2275,2287,1951],"name":"AccessKey","nameLocation":"147:9:14","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":2296,"mutability":"mutable","name":"_accessURIs","nameLocation":"218:11:14","nodeType":"VariableDeclaration","scope":2345,"src":"183:46:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"typeName":{"id":2295,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2293,"name":"uint256","nodeType":"ElementaryTypeName","src":"191:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"183:26:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2294,"name":"string","nodeType":"ElementaryTypeName","src":"202:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"private"},{"body":{"id":2303,"nodeType":"Block","src":"277:2:14","statements":[]},"id":2304,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"4163636573734b6579","id":2299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"257:11:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_c8c0cedfc19760be1784e40afe1d32b48ae9aa2a82703ce4bbd4680c47a79cfd","typeString":"literal_string \"AccessKey\""},"value":"AccessKey"},{"hexValue":"414b59","id":2300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"270:5:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_03bff73150caf049e58068e2094b90ef7fc09c96712b3f26a4c1eb34c31a07cf","typeString":"literal_string \"AKY\""},"value":"AKY"}],"id":2301,"kind":"baseConstructorSpecifier","modifierName":{"id":2298,"name":"ERC721","nameLocations":["250:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":979,"src":"250:6:14"},"nodeType":"ModifierInvocation","src":"250:26:14"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2297,"nodeType":"ParameterList","parameters":[],"src":"247:2:14"},"returnParameters":{"id":2302,"nodeType":"ParameterList","parameters":[],"src":"277:0:14"},"scope":2345,"src":"236:43:14","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2324,"nodeType":"Block","src":"369:77:14","statements":[{"expression":{"arguments":[{"id":2314,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"385:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2315,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2308,"src":"389:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2313,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"379:5:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"379:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2317,"nodeType":"ExpressionStatement","src":"379:18:14"},{"expression":{"id":2322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2318,"name":"_accessURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"407:11:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":2320,"indexExpression":{"id":2319,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2308,"src":"419:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"407:20:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2321,"name":"accessURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2310,"src":"430:9:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"407:32:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2323,"nodeType":"ExpressionStatement","src":"407:32:14"}]},"functionSelector":"5cdda2fa","id":2325,"implemented":true,"kind":"function","modifiers":[],"name":"mintAccessKey","nameLocation":"294:13:14","nodeType":"FunctionDefinition","parameters":{"id":2311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2306,"mutability":"mutable","name":"to","nameLocation":"316:2:14","nodeType":"VariableDeclaration","scope":2325,"src":"308:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2305,"name":"address","nodeType":"ElementaryTypeName","src":"308:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2308,"mutability":"mutable","name":"tokenId","nameLocation":"328:7:14","nodeType":"VariableDeclaration","scope":2325,"src":"320:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2307,"name":"uint256","nodeType":"ElementaryTypeName","src":"320:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2310,"mutability":"mutable","name":"accessURI","nameLocation":"351:9:14","nodeType":"VariableDeclaration","scope":2325,"src":"337:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2309,"name":"string","nodeType":"ElementaryTypeName","src":"337:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"307:54:14"},"returnParameters":{"id":2312,"nodeType":"ParameterList","parameters":[],"src":"369:0:14"},"scope":2345,"src":"285:161:14","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2343,"nodeType":"Block","src":"527:103:14","statements":[{"expression":{"arguments":[{"arguments":[{"id":2334,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2327,"src":"553:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2333,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"545:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":2335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"545:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20646f6573206e6f74206578697374","id":2336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"563:22:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""},"value":"Token does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""}],"id":2332,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"537:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"537:49:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2338,"nodeType":"ExpressionStatement","src":"537:49:14"},{"expression":{"baseExpression":{"id":2339,"name":"_accessURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"603:11:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":2341,"indexExpression":{"id":2340,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2327,"src":"615:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"603:20:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":2331,"id":2342,"nodeType":"Return","src":"596:27:14"}]},"functionSelector":"a2c512cb","id":2344,"implemented":true,"kind":"function","modifiers":[],"name":"getAccessURI","nameLocation":"461:12:14","nodeType":"FunctionDefinition","parameters":{"id":2328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2327,"mutability":"mutable","name":"tokenId","nameLocation":"482:7:14","nodeType":"VariableDeclaration","scope":2344,"src":"474:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2326,"name":"uint256","nodeType":"ElementaryTypeName","src":"474:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"473:17:14"},"returnParameters":{"id":2331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2330,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2344,"src":"512:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2329,"name":"string","nodeType":"ElementaryTypeName","src":"512:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"511:15:14"},"scope":2345,"src":"452:178:14","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":2346,"src":"138:494:14","usedErrors":[]}],"src":"32:601:14"},"id":14},"contracts/Certificate.sol":{"ast":{"absolutePath":"contracts/Certificate.sol","exportedSymbols":{"Address":[1929],"Certificate":[2543],"Context":[1951],"Counters":[2025],"ERC165":[2275],"ERC721":[979],"ERC721Enumerable":[1451],"ERC721URIStorage":[1576],"IERC165":[2287],"IERC721":[1095],"IERC721Enumerable":[1607],"IERC721Metadata":[1634],"IERC721Receiver":[1113],"Ownable":[112],"Strings":[2251]},"id":2544,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2347,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"33:24:15"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol","id":2348,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2544,"sourceUnit":1452,"src":"61:78:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","id":2349,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2544,"sourceUnit":1577,"src":"141:78:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":2350,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2544,"sourceUnit":113,"src":"221:52:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Counters.sol","file":"@openzeppelin/contracts/utils/Counters.sol","id":2351,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2544,"sourceUnit":2026,"src":"275:52:15","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2353,"name":"ERC721Enumerable","nameLocations":["485:16:15"],"nodeType":"IdentifierPath","referencedDeclaration":1451,"src":"485:16:15"},"id":2354,"nodeType":"InheritanceSpecifier","src":"485:16:15"},{"baseName":{"id":2355,"name":"ERC721URIStorage","nameLocations":["503:16:15"],"nodeType":"IdentifierPath","referencedDeclaration":1576,"src":"503:16:15"},"id":2356,"nodeType":"InheritanceSpecifier","src":"503:16:15"},{"baseName":{"id":2357,"name":"Ownable","nameLocations":["521:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":112,"src":"521:7:15"},"id":2358,"nodeType":"InheritanceSpecifier","src":"521:7:15"}],"canonicalName":"Certificate","contractDependencies":[],"contractKind":"contract","documentation":{"id":2352,"nodeType":"StructuredDocumentation","src":"331:130:15","text":"@title Certificate NFT Contract for Course Completion\n @dev ERC721 token that mints non-transferable course certificates"},"fullyImplemented":true,"id":2543,"linearizedBaseContracts":[2543,112,1576,1451,1607,979,1634,1095,2275,2287,1951],"name":"Certificate","nameLocation":"470:11:15","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2362,"libraryName":{"id":2359,"name":"Counters","nameLocations":["542:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":2025,"src":"542:8:15"},"nodeType":"UsingForDirective","src":"536:36:15","typeName":{"id":2361,"nodeType":"UserDefinedTypeName","pathNode":{"id":2360,"name":"Counters.Counter","nameLocations":["555:8:15","564:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":1957,"src":"555:16:15"},"referencedDeclaration":1957,"src":"555:16:15","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1957_storage_ptr","typeString":"struct Counters.Counter"}}},{"constant":false,"id":2365,"mutability":"mutable","name":"_tokenIds","nameLocation":"630:9:15","nodeType":"VariableDeclaration","scope":2543,"src":"605:34:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1957_storage","typeString":"struct Counters.Counter"},"typeName":{"id":2364,"nodeType":"UserDefinedTypeName","pathNode":{"id":2363,"name":"Counters.Counter","nameLocations":["605:8:15","614:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":1957,"src":"605:16:15"},"referencedDeclaration":1957,"src":"605:16:15","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1957_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"private"},{"constant":false,"functionSelector":"0ce7ed98","id":2371,"mutability":"mutable","name":"hasCertificate","nameLocation":"779:14:15","nodeType":"VariableDeclaration","scope":2543,"src":"727:66:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"},"typeName":{"id":2370,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2366,"name":"address","nodeType":"ElementaryTypeName","src":"735:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"727:44:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2369,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2367,"name":"uint256","nodeType":"ElementaryTypeName","src":"754:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"746:24:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2368,"name":"bool","nodeType":"ElementaryTypeName","src":"765:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"public"},{"anonymous":false,"eventSelector":"fb2a8276c788bcdeaec6f4ec55f21fc636460802e63cb7e05337309232a1b905","id":2379,"name":"CertificateMinted","nameLocation":"823:17:15","nodeType":"EventDefinition","parameters":{"id":2378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2373,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"857:4:15","nodeType":"VariableDeclaration","scope":2379,"src":"841:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2372,"name":"address","nodeType":"ElementaryTypeName","src":"841:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2375,"indexed":true,"mutability":"mutable","name":"courseId","nameLocation":"879:8:15","nodeType":"VariableDeclaration","scope":2379,"src":"863:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2374,"name":"uint256","nodeType":"ElementaryTypeName","src":"863:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2377,"indexed":false,"mutability":"mutable","name":"tokenId","nameLocation":"897:7:15","nodeType":"VariableDeclaration","scope":2379,"src":"889:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2376,"name":"uint256","nodeType":"ElementaryTypeName","src":"889:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"840:65:15"},"src":"817:89:15"},{"body":{"id":2390,"nodeType":"Block","src":"989:2:15","statements":[]},"id":2391,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":2386,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"975:4:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2387,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2383,"src":"981:6:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":2388,"kind":"baseConstructorSpecifier","modifierName":{"id":2385,"name":"ERC721","nameLocations":["968:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":979,"src":"968:6:15"},"nodeType":"ModifierInvocation","src":"968:20:15"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2381,"mutability":"mutable","name":"name","nameLocation":"940:4:15","nodeType":"VariableDeclaration","scope":2391,"src":"926:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2380,"name":"string","nodeType":"ElementaryTypeName","src":"926:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2383,"mutability":"mutable","name":"symbol","nameLocation":"960:6:15","nodeType":"VariableDeclaration","scope":2391,"src":"946:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2382,"name":"string","nodeType":"ElementaryTypeName","src":"946:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"925:42:15"},"returnParameters":{"id":2389,"nodeType":"ParameterList","parameters":[],"src":"989:0:15"},"scope":2543,"src":"914:77:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2452,"nodeType":"Block","src":"1408:521:15","statements":[{"expression":{"arguments":[{"id":2411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1427:31:15","subExpression":{"baseExpression":{"baseExpression":{"id":2406,"name":"hasCertificate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2371,"src":"1428:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"}},"id":2408,"indexExpression":{"id":2407,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"1443:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1428:20:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":2410,"indexExpression":{"id":2409,"name":"courseId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2396,"src":"1449:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1428:30:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436572746966696361746520616c72656164792069737375656420666f72207468697320636f75727365","id":2412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1460:44:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c27c27ff6242e5bd79390ca1eefbf48595a03e84aa4e6aa818e3eb06e9b5656c","typeString":"literal_string \"Certificate already issued for this course\""},"value":"Certificate already issued for this course"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c27c27ff6242e5bd79390ca1eefbf48595a03e84aa4e6aa818e3eb06e9b5656c","typeString":"literal_string \"Certificate already issued for this course\""}],"id":2405,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1419:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1419:86:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2414,"nodeType":"ExpressionStatement","src":"1419:86:15"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2415,"name":"_tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"1518:9:15","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1957_storage","typeString":"struct Counters.Counter storage ref"}},"id":2417,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1528:9:15","memberName":"increment","nodeType":"MemberAccess","referencedDeclaration":1983,"src":"1518:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Counter_$1957_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$1957_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer)"}},"id":2418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1518:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2419,"nodeType":"ExpressionStatement","src":"1518:21:15"},{"assignments":[2421],"declarations":[{"constant":false,"id":2421,"mutability":"mutable","name":"newTokenId","nameLocation":"1558:10:15","nodeType":"VariableDeclaration","scope":2452,"src":"1550:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2420,"name":"uint256","nodeType":"ElementaryTypeName","src":"1550:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2425,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2422,"name":"_tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"1571:9:15","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1957_storage","typeString":"struct Counters.Counter storage ref"}},"id":2423,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1581:7:15","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":1969,"src":"1571:17:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$1957_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1957_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":2424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1571:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1550:40:15"},{"expression":{"arguments":[{"id":2427,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"1650:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2428,"name":"newTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"1656:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2426,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[594,623],"referencedDeclaration":594,"src":"1640:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1640:27:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2430,"nodeType":"ExpressionStatement","src":"1640:27:15"},{"expression":{"arguments":[{"id":2432,"name":"newTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"1691:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2433,"name":"tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"1703:8:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2431,"name":"_setTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"1678:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":2434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1678:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2435,"nodeType":"ExpressionStatement","src":"1678:34:15"},{"expression":{"id":2442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2436,"name":"hasCertificate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2371,"src":"1793:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"}},"id":2439,"indexExpression":{"id":2437,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"1808:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1793:20:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":2440,"indexExpression":{"id":2438,"name":"courseId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2396,"src":"1814:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1793:30:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1826:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1793:37:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2443,"nodeType":"ExpressionStatement","src":"1793:37:15"},{"eventCall":{"arguments":[{"id":2445,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"1866:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2446,"name":"courseId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2396,"src":"1872:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2447,"name":"newTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"1882:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2444,"name":"CertificateMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2379,"src":"1848:17:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":2448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1848:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2449,"nodeType":"EmitStatement","src":"1843:50:15"},{"expression":{"id":2450,"name":"newTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"1911:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2404,"id":2451,"nodeType":"Return","src":"1904:17:15"}]},"documentation":{"id":2392,"nodeType":"StructuredDocumentation","src":"999:251:15","text":"@notice Mint a certificate to a user for a specific course\n @param user The address of the user receiving the certificate\n @param courseId The ID of the completed course\n @param tokenURI The metadata URI for the certificate"},"functionSelector":"a70d0e45","id":2453,"implemented":true,"kind":"function","modifiers":[{"id":2401,"kind":"modifierInvocation","modifierName":{"id":2400,"name":"onlyOwner","nameLocations":["1380:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1380:9:15"},"nodeType":"ModifierInvocation","src":"1380:9:15"}],"name":"mintCertificate","nameLocation":"1265:15:15","nodeType":"FunctionDefinition","parameters":{"id":2399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2394,"mutability":"mutable","name":"user","nameLocation":"1299:4:15","nodeType":"VariableDeclaration","scope":2453,"src":"1291:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2393,"name":"address","nodeType":"ElementaryTypeName","src":"1291:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2396,"mutability":"mutable","name":"courseId","nameLocation":"1322:8:15","nodeType":"VariableDeclaration","scope":2453,"src":"1314:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2395,"name":"uint256","nodeType":"ElementaryTypeName","src":"1314:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2398,"mutability":"mutable","name":"tokenURI","nameLocation":"1355:8:15","nodeType":"VariableDeclaration","scope":2453,"src":"1341:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2397,"name":"string","nodeType":"ElementaryTypeName","src":"1341:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1280:90:15"},"returnParameters":{"id":2404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2403,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2453,"src":"1399:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2402,"name":"uint256","nodeType":"ElementaryTypeName","src":"1399:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1398:9:15"},"scope":2543,"src":"1256:673:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[749,1575],"body":{"id":2468,"nodeType":"Block","src":"2069:39:15","statements":[{"expression":{"arguments":[{"id":2465,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2456,"src":"2092:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2462,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2080:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_Certificate_$2543_$","typeString":"type(contract super Certificate)"}},"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2086:5:15","memberName":"_burn","nodeType":"MemberAccess","referencedDeclaration":1575,"src":"2080:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2080:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2467,"nodeType":"ExpressionStatement","src":"2080:20:15"}]},"documentation":{"id":2454,"nodeType":"StructuredDocumentation","src":"1937:50:15","text":"@notice Override required for ERC721URIStorage"},"id":2469,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"2002:5:15","nodeType":"FunctionDefinition","overrides":{"id":2460,"nodeType":"OverrideSpecifier","overrides":[{"id":2458,"name":"ERC721","nameLocations":["2043:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":979,"src":"2043:6:15"},{"id":2459,"name":"ERC721URIStorage","nameLocations":["2051:16:15"],"nodeType":"IdentifierPath","referencedDeclaration":1576,"src":"2051:16:15"}],"src":"2034:34:15"},"parameters":{"id":2457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2456,"mutability":"mutable","name":"tokenId","nameLocation":"2016:7:15","nodeType":"VariableDeclaration","scope":2469,"src":"2008:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2455,"name":"uint256","nodeType":"ElementaryTypeName","src":"2008:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2007:17:15"},"returnParameters":{"id":2461,"nodeType":"ParameterList","parameters":[],"src":"2069:0:15"},"scope":2543,"src":"1993:115:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[317,1523],"body":{"id":2485,"nodeType":"Block","src":"2319:49:15","statements":[{"expression":{"arguments":[{"id":2482,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2472,"src":"2352:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2480,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2337:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_Certificate_$2543_$","typeString":"type(contract super Certificate)"}},"id":2481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2343:8:15","memberName":"tokenURI","nodeType":"MemberAccess","referencedDeclaration":1523,"src":"2337:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":2483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2337:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2479,"id":2484,"nodeType":"Return","src":"2330:30:15"}]},"documentation":{"id":2470,"nodeType":"StructuredDocumentation","src":"2116:50:15","text":"@notice Override required for ERC721URIStorage"},"functionSelector":"c87b56dd","id":2486,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2181:8:15","nodeType":"FunctionDefinition","overrides":{"id":2476,"nodeType":"OverrideSpecifier","overrides":[{"id":2474,"name":"ERC721","nameLocations":["2255:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":979,"src":"2255:6:15"},{"id":2475,"name":"ERC721URIStorage","nameLocations":["2263:16:15"],"nodeType":"IdentifierPath","referencedDeclaration":1576,"src":"2263:16:15"}],"src":"2246:34:15"},"parameters":{"id":2473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2472,"mutability":"mutable","name":"tokenId","nameLocation":"2198:7:15","nodeType":"VariableDeclaration","scope":2486,"src":"2190:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2471,"name":"uint256","nodeType":"ElementaryTypeName","src":"2190:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2189:17:15"},"returnParameters":{"id":2479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2478,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2486,"src":"2299:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2477,"name":"string","nodeType":"ElementaryTypeName","src":"2299:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2298:15:15"},"scope":2543,"src":"2172:196:15","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[967,1289],"body":{"id":2524,"nodeType":"Block","src":"2604:159:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2500,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2489,"src":"2623:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2639:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2631:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2501,"name":"address","nodeType":"ElementaryTypeName","src":"2631:7:15","typeDescriptions":{}}},"id":2504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2631:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2623:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2506,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2491,"src":"2645:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2659:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2651:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2507,"name":"address","nodeType":"ElementaryTypeName","src":"2651:7:15","typeDescriptions":{}}},"id":2510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2651:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2645:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2623:38:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43657274696669636174657320617265206e6f6e2d7472616e7366657261626c65","id":2513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2663:35:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_3054708b0a11b38511bc7d353b1f656d5fdd977e39d245846af7029381d44603","typeString":"literal_string \"Certificates are non-transferable\""},"value":"Certificates are non-transferable"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3054708b0a11b38511bc7d353b1f656d5fdd977e39d245846af7029381d44603","typeString":"literal_string \"Certificates are non-transferable\""}],"id":2499,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2615:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2615:84:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2515,"nodeType":"ExpressionStatement","src":"2615:84:15"},{"expression":{"arguments":[{"id":2519,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2489,"src":"2737:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2520,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2491,"src":"2743:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2521,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2493,"src":"2747:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2516,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2710:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_Certificate_$2543_$","typeString":"type(contract super Certificate)"}},"id":2518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2716:20:15","memberName":"_beforeTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":1289,"src":"2710:26:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2710:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2523,"nodeType":"ExpressionStatement","src":"2710:45:15"}]},"documentation":{"id":2487,"nodeType":"StructuredDocumentation","src":"2376:71:15","text":"@notice Override required for ERC721Enumerable and ERC721URIStorage"},"id":2525,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"2462:20:15","nodeType":"FunctionDefinition","overrides":{"id":2497,"nodeType":"OverrideSpecifier","overrides":[{"id":2495,"name":"ERC721","nameLocations":["2578:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":979,"src":"2578:6:15"},{"id":2496,"name":"ERC721Enumerable","nameLocations":["2586:16:15"],"nodeType":"IdentifierPath","referencedDeclaration":1451,"src":"2586:16:15"}],"src":"2569:34:15"},"parameters":{"id":2494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2489,"mutability":"mutable","name":"from","nameLocation":"2501:4:15","nodeType":"VariableDeclaration","scope":2525,"src":"2493:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2488,"name":"address","nodeType":"ElementaryTypeName","src":"2493:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2491,"mutability":"mutable","name":"to","nameLocation":"2524:2:15","nodeType":"VariableDeclaration","scope":2525,"src":"2516:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2490,"name":"address","nodeType":"ElementaryTypeName","src":"2516:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2493,"mutability":"mutable","name":"tokenId","nameLocation":"2545:7:15","nodeType":"VariableDeclaration","scope":2525,"src":"2537:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2492,"name":"uint256","nodeType":"ElementaryTypeName","src":"2537:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2482:77:15"},"returnParameters":{"id":2498,"nodeType":"ParameterList","parameters":[],"src":"2604:0:15"},"scope":2543,"src":"2453:310:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[206,1163],"body":{"id":2541,"nodeType":"Block","src":"2977:62:15","statements":[{"expression":{"arguments":[{"id":2538,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"3019:11:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":2536,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2995:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_Certificate_$2543_$","typeString":"type(contract super Certificate)"}},"id":2537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3001:17:15","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1163,"src":"2995:23:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2995:36:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2535,"id":2540,"nodeType":"Return","src":"2988:43:15"}]},"documentation":{"id":2526,"nodeType":"StructuredDocumentation","src":"2771:50:15","text":"@notice Override required for ERC721Enumerable"},"functionSelector":"01ffc9a7","id":2542,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2836:17:15","nodeType":"FunctionDefinition","overrides":{"id":2532,"nodeType":"OverrideSpecifier","overrides":[{"id":2530,"name":"ERC721","nameLocations":["2922:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":979,"src":"2922:6:15"},{"id":2531,"name":"ERC721Enumerable","nameLocations":["2930:16:15"],"nodeType":"IdentifierPath","referencedDeclaration":1451,"src":"2930:16:15"}],"src":"2913:34:15"},"parameters":{"id":2529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2528,"mutability":"mutable","name":"interfaceId","nameLocation":"2861:11:15","nodeType":"VariableDeclaration","scope":2542,"src":"2854:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2527,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2854:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2853:20:15"},"returnParameters":{"id":2535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2534,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2542,"src":"2966:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2533,"name":"bool","nodeType":"ElementaryTypeName","src":"2966:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2965:6:15"},"scope":2543,"src":"2827:212:15","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":2544,"src":"461:2581:15","usedErrors":[]}],"src":"33:3011:15"},"id":15},"contracts/Marketplace.sol":{"ast":{"absolutePath":"contracts/Marketplace.sol","exportedSymbols":{"Address":[1929],"Context":[1951],"ERC165":[2275],"ERC721":[979],"ERC721Enumerable":[1451],"ERC721URIStorage":[1576],"IERC165":[2287],"IERC721":[1095],"IERC721Enumerable":[1607],"IERC721Metadata":[1634],"IERC721Receiver":[1113],"Marketplace":[3064],"Ownable":[112],"Strings":[2251]},"id":3065,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2545,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"32:24:16"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol","id":2546,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3065,"sourceUnit":1452,"src":"58:78:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","id":2547,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3065,"sourceUnit":1577,"src":"137:78:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":2548,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3065,"sourceUnit":113,"src":"216:52:16","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2549,"name":"ERC721Enumerable","nameLocations":["294:16:16"],"nodeType":"IdentifierPath","referencedDeclaration":1451,"src":"294:16:16"},"id":2550,"nodeType":"InheritanceSpecifier","src":"294:16:16"},{"baseName":{"id":2551,"name":"ERC721URIStorage","nameLocations":["312:16:16"],"nodeType":"IdentifierPath","referencedDeclaration":1576,"src":"312:16:16"},"id":2552,"nodeType":"InheritanceSpecifier","src":"312:16:16"},{"baseName":{"id":2553,"name":"Ownable","nameLocations":["330:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":112,"src":"330:7:16"},"id":2554,"nodeType":"InheritanceSpecifier","src":"330:7:16"}],"canonicalName":"Marketplace","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3064,"linearizedBaseContracts":[3064,112,1576,1451,1607,979,1634,1095,2275,2287,1951],"name":"Marketplace","nameLocation":"279:11:16","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Marketplace.Course","id":2563,"members":[{"constant":false,"id":2556,"mutability":"mutable","name":"uri","nameLocation":"375:3:16","nodeType":"VariableDeclaration","scope":2563,"src":"368:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2555,"name":"string","nodeType":"ElementaryTypeName","src":"368:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2558,"mutability":"mutable","name":"price","nameLocation":"396:5:16","nodeType":"VariableDeclaration","scope":2563,"src":"388:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2557,"name":"uint256","nodeType":"ElementaryTypeName","src":"388:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2560,"mutability":"mutable","name":"maxSupply","nameLocation":"419:9:16","nodeType":"VariableDeclaration","scope":2563,"src":"411:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2559,"name":"uint256","nodeType":"ElementaryTypeName","src":"411:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2562,"mutability":"mutable","name":"minted","nameLocation":"446:6:16","nodeType":"VariableDeclaration","scope":2563,"src":"438:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2561,"name":"uint256","nodeType":"ElementaryTypeName","src":"438:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Course","nameLocation":"351:6:16","nodeType":"StructDefinition","scope":3064,"src":"344:115:16","visibility":"public"},{"constant":false,"functionSelector":"2f77f003","id":2565,"mutability":"mutable","name":"currentCourseId","nameLocation":"480:15:16","nodeType":"VariableDeclaration","scope":3064,"src":"465:30:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2564,"name":"uint256","nodeType":"ElementaryTypeName","src":"465:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"009a9b7b","id":2567,"mutability":"mutable","name":"currentTokenId","nameLocation":"516:14:16","nodeType":"VariableDeclaration","scope":3064,"src":"501:29:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2566,"name":"uint256","nodeType":"ElementaryTypeName","src":"501:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"96f979d2","id":2572,"mutability":"mutable","name":"courses","nameLocation":"570:7:16","nodeType":"VariableDeclaration","scope":3064,"src":"536:41:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Course_$2563_storage_$","typeString":"mapping(uint256 => struct Marketplace.Course)"},"typeName":{"id":2571,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2568,"name":"uint256","nodeType":"ElementaryTypeName","src":"544:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"536:26:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Course_$2563_storage_$","typeString":"mapping(uint256 => struct Marketplace.Course)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2570,"nodeType":"UserDefinedTypeName","pathNode":{"id":2569,"name":"Course","nameLocations":["555:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":2563,"src":"555:6:16"},"referencedDeclaration":2563,"src":"555:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_Course_$2563_storage_ptr","typeString":"struct Marketplace.Course"}}},"visibility":"public"},{"constant":false,"functionSelector":"50e35181","id":2576,"mutability":"mutable","name":"secondaryMarketSellers","nameLocation":"618:22:16","nodeType":"VariableDeclaration","scope":3064,"src":"583:57:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":2575,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2573,"name":"uint256","nodeType":"ElementaryTypeName","src":"591:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"583:27:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2574,"name":"address","nodeType":"ElementaryTypeName","src":"602:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"public"},{"constant":false,"functionSelector":"71267f1f","id":2580,"mutability":"mutable","name":"secondaryMarketPrices","nameLocation":"681:21:16","nodeType":"VariableDeclaration","scope":3064,"src":"646:56:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":2579,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2577,"name":"uint256","nodeType":"ElementaryTypeName","src":"654:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"646:27:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2578,"name":"uint256","nodeType":"ElementaryTypeName","src":"665:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"62a03295cf3254097619e4c525c459f4c5385f131ff770541e79b7e63ac9d3a1","id":2590,"name":"CourseCreated","nameLocation":"715:13:16","nodeType":"EventDefinition","parameters":{"id":2589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2582,"indexed":true,"mutability":"mutable","name":"courseId","nameLocation":"745:8:16","nodeType":"VariableDeclaration","scope":2590,"src":"729:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2581,"name":"uint256","nodeType":"ElementaryTypeName","src":"729:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2584,"indexed":false,"mutability":"mutable","name":"uri","nameLocation":"762:3:16","nodeType":"VariableDeclaration","scope":2590,"src":"755:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2583,"name":"string","nodeType":"ElementaryTypeName","src":"755:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2586,"indexed":false,"mutability":"mutable","name":"price","nameLocation":"775:5:16","nodeType":"VariableDeclaration","scope":2590,"src":"767:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2585,"name":"uint256","nodeType":"ElementaryTypeName","src":"767:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2588,"indexed":false,"mutability":"mutable","name":"maxSupply","nameLocation":"790:9:16","nodeType":"VariableDeclaration","scope":2590,"src":"782:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2587,"name":"uint256","nodeType":"ElementaryTypeName","src":"782:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"728:72:16"},"src":"709:92:16"},{"anonymous":false,"eventSelector":"fca9437e237ca408a74cca23e3078fd1f6c700960dac7f09f8c6cf5177aefe1a","id":2598,"name":"NFTMinted","nameLocation":"812:9:16","nodeType":"EventDefinition","parameters":{"id":2597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2592,"indexed":true,"mutability":"mutable","name":"courseId","nameLocation":"838:8:16","nodeType":"VariableDeclaration","scope":2598,"src":"822:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2591,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2594,"indexed":false,"mutability":"mutable","name":"tokenId","nameLocation":"856:7:16","nodeType":"VariableDeclaration","scope":2598,"src":"848:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2593,"name":"uint256","nodeType":"ElementaryTypeName","src":"848:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2596,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"881:5:16","nodeType":"VariableDeclaration","scope":2598,"src":"865:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2595,"name":"address","nodeType":"ElementaryTypeName","src":"865:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"821:66:16"},"src":"806:82:16"},{"anonymous":false,"eventSelector":"f78e8b672552c30bd4dc6a4d47324c771c972cde77a97fe66da1c8d7adbdbd16","id":2606,"name":"NFTListedForSale","nameLocation":"899:16:16","nodeType":"EventDefinition","parameters":{"id":2605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2600,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"932:7:16","nodeType":"VariableDeclaration","scope":2606,"src":"916:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2599,"name":"uint256","nodeType":"ElementaryTypeName","src":"916:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2602,"indexed":false,"mutability":"mutable","name":"price","nameLocation":"949:5:16","nodeType":"VariableDeclaration","scope":2606,"src":"941:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2601,"name":"uint256","nodeType":"ElementaryTypeName","src":"941:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2604,"indexed":true,"mutability":"mutable","name":"seller","nameLocation":"972:6:16","nodeType":"VariableDeclaration","scope":2606,"src":"956:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2603,"name":"address","nodeType":"ElementaryTypeName","src":"956:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"915:64:16"},"src":"893:87:16"},{"anonymous":false,"eventSelector":"f076e74c3b31fba126074acbffcdd9d113b723bf30ad339f58dfe3002a8310df","id":2614,"name":"NFTSold","nameLocation":"991:7:16","nodeType":"EventDefinition","parameters":{"id":2613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2608,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"1015:7:16","nodeType":"VariableDeclaration","scope":2614,"src":"999:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2607,"name":"uint256","nodeType":"ElementaryTypeName","src":"999:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2610,"indexed":true,"mutability":"mutable","name":"buyer","nameLocation":"1040:5:16","nodeType":"VariableDeclaration","scope":2614,"src":"1024:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2609,"name":"address","nodeType":"ElementaryTypeName","src":"1024:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2612,"indexed":true,"mutability":"mutable","name":"seller","nameLocation":"1063:6:16","nodeType":"VariableDeclaration","scope":2614,"src":"1047:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2611,"name":"address","nodeType":"ElementaryTypeName","src":"1047:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"998:72:16"},"src":"985:86:16"},{"body":{"id":2625,"nodeType":"Block","src":"1152:2:16","statements":[]},"id":2626,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":2621,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2616,"src":"1138:4:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2622,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2618,"src":"1144:6:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":2623,"kind":"baseConstructorSpecifier","modifierName":{"id":2620,"name":"ERC721","nameLocations":["1131:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":979,"src":"1131:6:16"},"nodeType":"ModifierInvocation","src":"1131:20:16"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2616,"mutability":"mutable","name":"name","nameLocation":"1103:4:16","nodeType":"VariableDeclaration","scope":2626,"src":"1089:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2615,"name":"string","nodeType":"ElementaryTypeName","src":"1089:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2618,"mutability":"mutable","name":"symbol","nameLocation":"1123:6:16","nodeType":"VariableDeclaration","scope":2626,"src":"1109:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2617,"name":"string","nodeType":"ElementaryTypeName","src":"1109:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1088:42:16"},"returnParameters":{"id":2624,"nodeType":"ParameterList","parameters":[],"src":"1152:0:16"},"scope":3064,"src":"1077:77:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[967,1289],"body":{"id":2647,"nodeType":"Block","src":"1374:62:16","statements":[{"expression":{"arguments":[{"id":2642,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2629,"src":"1411:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2643,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2631,"src":"1417:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2644,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"1421:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2639,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1384:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_Marketplace_$3064_$","typeString":"type(contract super Marketplace)"}},"id":2641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1390:20:16","memberName":"_beforeTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":1289,"src":"1384:26:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1384:45:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2646,"nodeType":"ExpressionStatement","src":"1384:45:16"}]},"documentation":{"id":2627,"nodeType":"StructuredDocumentation","src":"1160:62:16","text":"@notice Override for ERC721Enumerable and ERC721URIStorage"},"id":2648,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"1236:20:16","nodeType":"FunctionDefinition","overrides":{"id":2637,"nodeType":"OverrideSpecifier","overrides":[{"id":2635,"name":"ERC721","nameLocations":["1348:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":979,"src":"1348:6:16"},{"id":2636,"name":"ERC721Enumerable","nameLocations":["1356:16:16"],"nodeType":"IdentifierPath","referencedDeclaration":1451,"src":"1356:16:16"}],"src":"1339:34:16"},"parameters":{"id":2634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2629,"mutability":"mutable","name":"from","nameLocation":"1274:4:16","nodeType":"VariableDeclaration","scope":2648,"src":"1266:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2628,"name":"address","nodeType":"ElementaryTypeName","src":"1266:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2631,"mutability":"mutable","name":"to","nameLocation":"1296:2:16","nodeType":"VariableDeclaration","scope":2648,"src":"1288:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2630,"name":"address","nodeType":"ElementaryTypeName","src":"1288:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2633,"mutability":"mutable","name":"tokenId","nameLocation":"1316:7:16","nodeType":"VariableDeclaration","scope":2648,"src":"1308:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2632,"name":"uint256","nodeType":"ElementaryTypeName","src":"1308:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1256:73:16"},"returnParameters":{"id":2638,"nodeType":"ParameterList","parameters":[],"src":"1374:0:16"},"scope":3064,"src":"1227:209:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[749,1575],"body":{"id":2663,"nodeType":"Block","src":"1575:37:16","statements":[{"expression":{"arguments":[{"id":2660,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2651,"src":"1597:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2657,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1585:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_Marketplace_$3064_$","typeString":"type(contract super Marketplace)"}},"id":2659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1591:5:16","memberName":"_burn","nodeType":"MemberAccess","referencedDeclaration":1575,"src":"1585:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1585:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2662,"nodeType":"ExpressionStatement","src":"1585:20:16"}]},"documentation":{"id":2649,"nodeType":"StructuredDocumentation","src":"1442:52:16","text":"@notice Override for ERC721URIStorage and ERC721"},"id":2664,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"1508:5:16","nodeType":"FunctionDefinition","overrides":{"id":2655,"nodeType":"OverrideSpecifier","overrides":[{"id":2653,"name":"ERC721","nameLocations":["1549:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":979,"src":"1549:6:16"},{"id":2654,"name":"ERC721URIStorage","nameLocations":["1557:16:16"],"nodeType":"IdentifierPath","referencedDeclaration":1576,"src":"1557:16:16"}],"src":"1540:34:16"},"parameters":{"id":2652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2651,"mutability":"mutable","name":"tokenId","nameLocation":"1522:7:16","nodeType":"VariableDeclaration","scope":2664,"src":"1514:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2650,"name":"uint256","nodeType":"ElementaryTypeName","src":"1514:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1513:17:16"},"returnParameters":{"id":2656,"nodeType":"ParameterList","parameters":[],"src":"1575:0:16"},"scope":3064,"src":"1499:113:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[317,1523],"body":{"id":2680,"nodeType":"Block","src":"1806:47:16","statements":[{"expression":{"arguments":[{"id":2677,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"1838:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2675,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1823:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_Marketplace_$3064_$","typeString":"type(contract super Marketplace)"}},"id":2676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1829:8:16","memberName":"tokenURI","nodeType":"MemberAccess","referencedDeclaration":1523,"src":"1823:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":2678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1823:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2674,"id":2679,"nodeType":"Return","src":"1816:30:16"}]},"documentation":{"id":2665,"nodeType":"StructuredDocumentation","src":"1618:41:16","text":"@notice Override for ERC721URIStorage"},"functionSelector":"c87b56dd","id":2681,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"1673:8:16","nodeType":"FunctionDefinition","overrides":{"id":2671,"nodeType":"OverrideSpecifier","overrides":[{"id":2669,"name":"ERC721","nameLocations":["1744:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":979,"src":"1744:6:16"},{"id":2670,"name":"ERC721URIStorage","nameLocations":["1752:16:16"],"nodeType":"IdentifierPath","referencedDeclaration":1576,"src":"1752:16:16"}],"src":"1735:34:16"},"parameters":{"id":2668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2667,"mutability":"mutable","name":"tokenId","nameLocation":"1690:7:16","nodeType":"VariableDeclaration","scope":2681,"src":"1682:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2666,"name":"uint256","nodeType":"ElementaryTypeName","src":"1682:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1681:17:16"},"returnParameters":{"id":2674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2673,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2681,"src":"1787:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2672,"name":"string","nodeType":"ElementaryTypeName","src":"1787:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1786:15:16"},"scope":3064,"src":"1664:189:16","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[206,1163],"body":{"id":2697,"nodeType":"Block","src":"2050:60:16","statements":[{"expression":{"arguments":[{"id":2694,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"2091:11:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":2692,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2067:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_Marketplace_$3064_$","typeString":"type(contract super Marketplace)"}},"id":2693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2073:17:16","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1163,"src":"2067:23:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":2695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2067:36:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2691,"id":2696,"nodeType":"Return","src":"2060:43:16"}]},"documentation":{"id":2682,"nodeType":"StructuredDocumentation","src":"1859:41:16","text":"@notice Override for ERC721Enumerable"},"functionSelector":"01ffc9a7","id":2698,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1914:17:16","nodeType":"FunctionDefinition","overrides":{"id":2688,"nodeType":"OverrideSpecifier","overrides":[{"id":2686,"name":"ERC721","nameLocations":["1997:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":979,"src":"1997:6:16"},{"id":2687,"name":"ERC721Enumerable","nameLocations":["2005:16:16"],"nodeType":"IdentifierPath","referencedDeclaration":1451,"src":"2005:16:16"}],"src":"1988:34:16"},"parameters":{"id":2685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2684,"mutability":"mutable","name":"interfaceId","nameLocation":"1939:11:16","nodeType":"VariableDeclaration","scope":2698,"src":"1932:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2683,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1932:6:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1931:20:16"},"returnParameters":{"id":2691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2690,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2698,"src":"2040:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2689,"name":"bool","nodeType":"ElementaryTypeName","src":"2040:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2039:6:16"},"scope":3064,"src":"1905:205:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2755,"nodeType":"Block","src":"2238:371:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2710,"name":"maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2704,"src":"2256:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2268:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2256:13:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d617820737570706c79206d7573742062652067726561746572207468616e207a65726f","id":2713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2271:38:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_ff2a6ad38fa379170c2ddbded7badfdd50fc7c2231d5868bae93e2c4ed779e10","typeString":"literal_string \"Max supply must be greater than zero\""},"value":"Max supply must be greater than zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ff2a6ad38fa379170c2ddbded7badfdd50fc7c2231d5868bae93e2c4ed779e10","typeString":"literal_string \"Max supply must be greater than zero\""}],"id":2709,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2248:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2248:62:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2715,"nodeType":"ExpressionStatement","src":"2248:62:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2717,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2702,"src":"2328:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2336:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2328:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5072696365206d7573742062652067726561746572207468616e207a65726f","id":2720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2339:33:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0","typeString":"literal_string \"Price must be greater than zero\""},"value":"Price must be greater than zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0","typeString":"literal_string \"Price must be greater than zero\""}],"id":2716,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2320:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2320:53:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2722,"nodeType":"ExpressionStatement","src":"2320:53:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2726,"name":"uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"2397:3:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2391:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2724,"name":"bytes","nodeType":"ElementaryTypeName","src":"2391:5:16","typeDescriptions":{}}},"id":2727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2391:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2402:6:16","memberName":"length","nodeType":"MemberAccess","src":"2391:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2411:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2391:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5552492063616e6e6f7420626520656d707479","id":2731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2414:21:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_035d4514157dcf2506923e1232babe38012bd57de24345ac363305b5db6b8231","typeString":"literal_string \"URI cannot be empty\""},"value":"URI cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_035d4514157dcf2506923e1232babe38012bd57de24345ac363305b5db6b8231","typeString":"literal_string \"URI cannot be empty\""}],"id":2723,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2383:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2383:53:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2733,"nodeType":"ExpressionStatement","src":"2383:53:16"},{"expression":{"id":2735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2447:17:16","subExpression":{"id":2734,"name":"currentCourseId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2565,"src":"2447:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2736,"nodeType":"ExpressionStatement","src":"2447:17:16"},{"expression":{"id":2746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2737,"name":"courses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"2474:7:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Course_$2563_storage_$","typeString":"mapping(uint256 => struct Marketplace.Course storage ref)"}},"id":2739,"indexExpression":{"id":2738,"name":"currentCourseId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2565,"src":"2482:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2474:24:16","typeDescriptions":{"typeIdentifier":"t_struct$_Course_$2563_storage","typeString":"struct Marketplace.Course storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2741,"name":"uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"2508:3:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2742,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2702,"src":"2513:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2743,"name":"maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2704,"src":"2520:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":2744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2531:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2740,"name":"Course","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2563,"src":"2501:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Course_$2563_storage_ptr_$","typeString":"type(struct Marketplace.Course storage pointer)"}},"id":2745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2501:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Course_$2563_memory_ptr","typeString":"struct Marketplace.Course memory"}},"src":"2474:59:16","typeDescriptions":{"typeIdentifier":"t_struct$_Course_$2563_storage","typeString":"struct Marketplace.Course storage ref"}},"id":2747,"nodeType":"ExpressionStatement","src":"2474:59:16"},{"eventCall":{"arguments":[{"id":2749,"name":"currentCourseId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2565,"src":"2563:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2750,"name":"uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"2580:3:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2751,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2702,"src":"2585:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2752,"name":"maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2704,"src":"2592:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2748,"name":"CourseCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"2549:13:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,string memory,uint256,uint256)"}},"id":2753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2549:53:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2754,"nodeType":"EmitStatement","src":"2544:58:16"}]},"functionSelector":"ae0ec5e4","id":2756,"implemented":true,"kind":"function","modifiers":[{"id":2707,"kind":"modifierInvocation","modifierName":{"id":2706,"name":"onlyOwner","nameLocations":["2228:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2228:9:16"},"nodeType":"ModifierInvocation","src":"2228:9:16"}],"name":"createCourse","nameLocation":"2155:12:16","nodeType":"FunctionDefinition","parameters":{"id":2705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2700,"mutability":"mutable","name":"uri","nameLocation":"2182:3:16","nodeType":"VariableDeclaration","scope":2756,"src":"2168:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2699,"name":"string","nodeType":"ElementaryTypeName","src":"2168:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2702,"mutability":"mutable","name":"price","nameLocation":"2195:5:16","nodeType":"VariableDeclaration","scope":2756,"src":"2187:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2701,"name":"uint256","nodeType":"ElementaryTypeName","src":"2187:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2704,"mutability":"mutable","name":"maxSupply","nameLocation":"2210:9:16","nodeType":"VariableDeclaration","scope":2756,"src":"2202:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2703,"name":"uint256","nodeType":"ElementaryTypeName","src":"2202:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2167:53:16"},"returnParameters":{"id":2708,"nodeType":"ParameterList","parameters":[],"src":"2238:0:16"},"scope":3064,"src":"2146:463:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2823,"nodeType":"Block","src":"2698:501:16","statements":[{"assignments":[2763],"declarations":[{"constant":false,"id":2763,"mutability":"mutable","name":"course","nameLocation":"2723:6:16","nodeType":"VariableDeclaration","scope":2823,"src":"2708:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Course_$2563_storage_ptr","typeString":"struct Marketplace.Course"},"typeName":{"id":2762,"nodeType":"UserDefinedTypeName","pathNode":{"id":2761,"name":"Course","nameLocations":["2708:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":2563,"src":"2708:6:16"},"referencedDeclaration":2563,"src":"2708:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_Course_$2563_storage_ptr","typeString":"struct Marketplace.Course"}},"visibility":"internal"}],"id":2767,"initialValue":{"baseExpression":{"id":2764,"name":"courses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"2732:7:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Course_$2563_storage_$","typeString":"mapping(uint256 => struct Marketplace.Course storage ref)"}},"id":2766,"indexExpression":{"id":2765,"name":"courseId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2758,"src":"2740:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2732:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_Course_$2563_storage","typeString":"struct Marketplace.Course storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2708:41:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2769,"name":"course","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"2767:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_Course_$2563_storage_ptr","typeString":"struct Marketplace.Course storage pointer"}},"id":2770,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2774:9:16","memberName":"maxSupply","nodeType":"MemberAccess","referencedDeclaration":2560,"src":"2767:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2786:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2767:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f7572736520646f6573206e6f74206578697374","id":2773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2789:23:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_ccfca96006449b50817dba143e911165630be54db84ae071755573159103f718","typeString":"literal_string \"Course does not exist\""},"value":"Course does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ccfca96006449b50817dba143e911165630be54db84ae071755573159103f718","typeString":"literal_string \"Course does not exist\""}],"id":2768,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2759:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2759:54:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2775,"nodeType":"ExpressionStatement","src":"2759:54:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2777,"name":"course","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"2831:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_Course_$2563_storage_ptr","typeString":"struct Marketplace.Course storage pointer"}},"id":2778,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2838:6:16","memberName":"minted","nodeType":"MemberAccess","referencedDeclaration":2562,"src":"2831:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2779,"name":"course","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"2847:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_Course_$2563_storage_ptr","typeString":"struct Marketplace.Course storage pointer"}},"id":2780,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2854:9:16","memberName":"maxSupply","nodeType":"MemberAccess","referencedDeclaration":2560,"src":"2847:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2831:32:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d617820737570706c792072656163686564","id":2782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2865:20:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_cf40cb9708e1320ee04bc59cb2f8b4ce47ba0c93638609957810c412abce51a7","typeString":"literal_string \"Max supply reached\""},"value":"Max supply reached"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cf40cb9708e1320ee04bc59cb2f8b4ce47ba0c93638609957810c412abce51a7","typeString":"literal_string \"Max supply reached\""}],"id":2776,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2823:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2823:63:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2784,"nodeType":"ExpressionStatement","src":"2823:63:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2786,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2904:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2908:5:16","memberName":"value","nodeType":"MemberAccess","src":"2904:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2788,"name":"course","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"2917:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_Course_$2563_storage_ptr","typeString":"struct Marketplace.Course storage pointer"}},"id":2789,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2924:5:16","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":2558,"src":"2917:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2904:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e636f7272656374207061796d656e7420616d6f756e74","id":2791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2931:26:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d","typeString":"literal_string \"Incorrect payment amount\""},"value":"Incorrect payment amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d","typeString":"literal_string \"Incorrect payment amount\""}],"id":2785,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2896:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2896:62:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2793,"nodeType":"ExpressionStatement","src":"2896:62:16"},{"assignments":[2795],"declarations":[{"constant":false,"id":2795,"mutability":"mutable","name":"tokenId","nameLocation":"2977:7:16","nodeType":"VariableDeclaration","scope":2823,"src":"2969:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2794,"name":"uint256","nodeType":"ElementaryTypeName","src":"2969:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2798,"initialValue":{"id":2797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"2987:16:16","subExpression":{"id":2796,"name":"currentTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"2989:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2969:34:16"},{"expression":{"id":2802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3013:15:16","subExpression":{"expression":{"id":2799,"name":"course","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"3013:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_Course_$2563_storage_ptr","typeString":"struct Marketplace.Course storage pointer"}},"id":2801,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3020:6:16","memberName":"minted","nodeType":"MemberAccess","referencedDeclaration":2562,"src":"3013:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2803,"nodeType":"ExpressionStatement","src":"3013:15:16"},{"expression":{"arguments":[{"expression":{"id":2805,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3049:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3053:6:16","memberName":"sender","nodeType":"MemberAccess","src":"3049:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2807,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"3061:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2804,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[594,623],"referencedDeclaration":594,"src":"3039:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3039:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2809,"nodeType":"ExpressionStatement","src":"3039:30:16"},{"expression":{"arguments":[{"id":2811,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"3092:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2812,"name":"course","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"3101:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_Course_$2563_storage_ptr","typeString":"struct Marketplace.Course storage pointer"}},"id":2813,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3108:3:16","memberName":"uri","nodeType":"MemberAccess","referencedDeclaration":2556,"src":"3101:10:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":2810,"name":"_setTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"3079:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":2814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3079:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2815,"nodeType":"ExpressionStatement","src":"3079:33:16"},{"eventCall":{"arguments":[{"id":2817,"name":"courseId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2758,"src":"3162:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2818,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"3172:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2819,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3181:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3185:6:16","memberName":"sender","nodeType":"MemberAccess","src":"3181:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2816,"name":"NFTMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"3152:9:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,uint256,address)"}},"id":2821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3152:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2822,"nodeType":"EmitStatement","src":"3147:45:16"}]},"functionSelector":"e71ef657","id":2824,"implemented":true,"kind":"function","modifiers":[],"name":"mintCourse","nameLocation":"2654:10:16","nodeType":"FunctionDefinition","parameters":{"id":2759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2758,"mutability":"mutable","name":"courseId","nameLocation":"2673:8:16","nodeType":"VariableDeclaration","scope":2824,"src":"2665:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2757,"name":"uint256","nodeType":"ElementaryTypeName","src":"2665:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2664:18:16"},"returnParameters":{"id":2760,"nodeType":"ParameterList","parameters":[],"src":"2698:0:16"},"scope":3064,"src":"2645:554:16","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":2868,"nodeType":"Block","src":"3305:319:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2833,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"3331:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2832,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"3323:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3323:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2835,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3343:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3347:6:16","memberName":"sender","nodeType":"MemberAccess","src":"3343:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3323:30:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"596f7520617265206e6f7420746865206f776e6572206f662074686973204e4654","id":2838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3355:35:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab","typeString":"literal_string \"You are not the owner of this NFT\""},"value":"You are not the owner of this NFT"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab","typeString":"literal_string \"You are not the owner of this NFT\""}],"id":2831,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3315:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3315:76:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2840,"nodeType":"ExpressionStatement","src":"3315:76:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2842,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2828,"src":"3409:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3417:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3409:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5072696365206d7573742062652067726561746572207468616e207a65726f","id":2845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3420:33:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0","typeString":"literal_string \"Price must be greater than zero\""},"value":"Price must be greater than zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0","typeString":"literal_string \"Price must be greater than zero\""}],"id":2841,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3401:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3401:53:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2847,"nodeType":"ExpressionStatement","src":"3401:53:16"},{"expression":{"id":2853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2848,"name":"secondaryMarketSellers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2576,"src":"3465:22:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2850,"indexExpression":{"id":2849,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"3488:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3465:31:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2851,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3499:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3503:6:16","memberName":"sender","nodeType":"MemberAccess","src":"3499:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3465:44:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2854,"nodeType":"ExpressionStatement","src":"3465:44:16"},{"expression":{"id":2859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2855,"name":"secondaryMarketPrices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2580,"src":"3519:21:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2857,"indexExpression":{"id":2856,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"3541:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3519:30:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2858,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2828,"src":"3552:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3519:38:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2860,"nodeType":"ExpressionStatement","src":"3519:38:16"},{"eventCall":{"arguments":[{"id":2862,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"3590:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2863,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2828,"src":"3599:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2864,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3606:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3610:6:16","memberName":"sender","nodeType":"MemberAccess","src":"3606:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2861,"name":"NFTListedForSale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2606,"src":"3573:16:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,uint256,address)"}},"id":2866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3573:44:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2867,"nodeType":"EmitStatement","src":"3568:49:16"}]},"functionSelector":"b2733b39","id":2869,"implemented":true,"kind":"function","modifiers":[],"name":"listNFTForSale","nameLocation":"3251:14:16","nodeType":"FunctionDefinition","parameters":{"id":2829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2826,"mutability":"mutable","name":"tokenId","nameLocation":"3274:7:16","nodeType":"VariableDeclaration","scope":2869,"src":"3266:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2825,"name":"uint256","nodeType":"ElementaryTypeName","src":"3266:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2828,"mutability":"mutable","name":"price","nameLocation":"3291:5:16","nodeType":"VariableDeclaration","scope":2869,"src":"3283:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2827,"name":"uint256","nodeType":"ElementaryTypeName","src":"3283:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3265:32:16"},"returnParameters":{"id":2830,"nodeType":"ParameterList","parameters":[],"src":"3305:0:16"},"scope":3064,"src":"3242:382:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2950,"nodeType":"Block","src":"3720:608:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2875,"name":"secondaryMarketPrices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2580,"src":"3738:21:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2877,"indexExpression":{"id":2876,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"3760:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3738:30:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3771:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3738:34:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e4654206973206e6f7420666f722073616c65","id":2880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3774:21:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_9a7dba745c3f0f725179d2251b074ed7a58cdde5cc676b2b7aa39aa411348738","typeString":"literal_string \"NFT is not for sale\""},"value":"NFT is not for sale"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9a7dba745c3f0f725179d2251b074ed7a58cdde5cc676b2b7aa39aa411348738","typeString":"literal_string \"NFT is not for sale\""}],"id":2874,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3730:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3730:66:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2882,"nodeType":"ExpressionStatement","src":"3730:66:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2884,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3814:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3818:5:16","memberName":"value","nodeType":"MemberAccess","src":"3814:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"baseExpression":{"id":2886,"name":"secondaryMarketPrices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2580,"src":"3827:21:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2888,"indexExpression":{"id":2887,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"3849:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3827:30:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3814:43:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e636f7272656374207061796d656e7420616d6f756e74","id":2890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3859:26:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d","typeString":"literal_string \"Incorrect payment amount\""},"value":"Incorrect payment amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d","typeString":"literal_string \"Incorrect payment amount\""}],"id":2883,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3806:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3806:80:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2892,"nodeType":"ExpressionStatement","src":"3806:80:16"},{"assignments":[2894],"declarations":[{"constant":false,"id":2894,"mutability":"mutable","name":"seller","nameLocation":"3905:6:16","nodeType":"VariableDeclaration","scope":2950,"src":"3897:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2893,"name":"address","nodeType":"ElementaryTypeName","src":"3897:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2898,"initialValue":{"baseExpression":{"id":2895,"name":"secondaryMarketSellers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2576,"src":"3914:22:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2897,"indexExpression":{"id":2896,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"3937:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3914:31:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3897:48:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2900,"name":"seller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"3963:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3981:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3973:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2901,"name":"address","nodeType":"ElementaryTypeName","src":"3973:7:16","typeDescriptions":{}}},"id":2904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3973:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3963:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53656c6c6572206164647265737320697320696e76616c6964","id":2906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3985:27:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_834b432a4e87c587845860939bf8e755f9f318d7c4fb8e86316d9612e589ff75","typeString":"literal_string \"Seller address is invalid\""},"value":"Seller address is invalid"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_834b432a4e87c587845860939bf8e755f9f318d7c4fb8e86316d9612e589ff75","typeString":"literal_string \"Seller address is invalid\""}],"id":2899,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3955:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3955:58:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2908,"nodeType":"ExpressionStatement","src":"3955:58:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2910,"name":"seller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"4031:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":2911,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4041:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4045:6:16","memberName":"sender","nodeType":"MemberAccess","src":"4041:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4031:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f742062757920796f7572206f776e204e4654","id":2914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4053:25:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_ac3e45816bda8dc820919e382b7d1b646106c7d91795ad0d20f7673c058e493f","typeString":"literal_string \"Cannot buy your own NFT\""},"value":"Cannot buy your own NFT"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ac3e45816bda8dc820919e382b7d1b646106c7d91795ad0d20f7673c058e493f","typeString":"literal_string \"Cannot buy your own NFT\""}],"id":2909,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4023:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4023:56:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2916,"nodeType":"ExpressionStatement","src":"4023:56:16"},{"expression":{"arguments":[{"id":2918,"name":"seller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"4100:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2919,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4108:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4112:6:16","memberName":"sender","nodeType":"MemberAccess","src":"4108:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2921,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"4120:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2917,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"4090:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4090:38:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2923,"nodeType":"ExpressionStatement","src":"4090:38:16"},{"expression":{"arguments":[{"expression":{"id":2929,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4163:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4167:5:16","memberName":"value","nodeType":"MemberAccess","src":"4163:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2926,"name":"seller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"4146:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4138:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":2924,"name":"address","nodeType":"ElementaryTypeName","src":"4138:8:16","stateMutability":"payable","typeDescriptions":{}}},"id":2927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4138:15:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4154:8:16","memberName":"transfer","nodeType":"MemberAccess","src":"4138:24:16","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4138:35:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2932,"nodeType":"ExpressionStatement","src":"4138:35:16"},{"expression":{"id":2936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4184:37:16","subExpression":{"baseExpression":{"id":2933,"name":"secondaryMarketPrices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2580,"src":"4191:21:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2935,"indexExpression":{"id":2934,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"4213:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4191:30:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2937,"nodeType":"ExpressionStatement","src":"4184:37:16"},{"expression":{"id":2941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4231:38:16","subExpression":{"baseExpression":{"id":2938,"name":"secondaryMarketSellers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2576,"src":"4238:22:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2940,"indexExpression":{"id":2939,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"4261:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4238:31:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2942,"nodeType":"ExpressionStatement","src":"4231:38:16"},{"eventCall":{"arguments":[{"id":2944,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"4293:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2945,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4302:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4306:6:16","memberName":"sender","nodeType":"MemberAccess","src":"4302:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2947,"name":"seller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"4314:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2943,"name":"NFTSold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2614,"src":"4285:7:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$","typeString":"function (uint256,address,address)"}},"id":2948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4285:36:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2949,"nodeType":"EmitStatement","src":"4280:41:16"}]},"functionSelector":"51ed8288","id":2951,"implemented":true,"kind":"function","modifiers":[],"name":"buyNFT","nameLocation":"3681:6:16","nodeType":"FunctionDefinition","parameters":{"id":2872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2871,"mutability":"mutable","name":"tokenId","nameLocation":"3696:7:16","nodeType":"VariableDeclaration","scope":2951,"src":"3688:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2870,"name":"uint256","nodeType":"ElementaryTypeName","src":"3688:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3687:17:16"},"returnParameters":{"id":2873,"nodeType":"ParameterList","parameters":[],"src":"3720:0:16"},"scope":3064,"src":"3672:656:16","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":2989,"nodeType":"Block","src":"4498:198:16","statements":[{"assignments":[2966],"declarations":[{"constant":false,"id":2966,"mutability":"mutable","name":"course","nameLocation":"4523:6:16","nodeType":"VariableDeclaration","scope":2989,"src":"4508:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Course_$2563_storage_ptr","typeString":"struct Marketplace.Course"},"typeName":{"id":2965,"nodeType":"UserDefinedTypeName","pathNode":{"id":2964,"name":"Course","nameLocations":["4508:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":2563,"src":"4508:6:16"},"referencedDeclaration":2563,"src":"4508:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_Course_$2563_storage_ptr","typeString":"struct Marketplace.Course"}},"visibility":"internal"}],"id":2970,"initialValue":{"baseExpression":{"id":2967,"name":"courses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"4532:7:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Course_$2563_storage_$","typeString":"mapping(uint256 => struct Marketplace.Course storage ref)"}},"id":2969,"indexExpression":{"id":2968,"name":"courseId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2953,"src":"4540:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4532:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_Course_$2563_storage","typeString":"struct Marketplace.Course storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4508:41:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2972,"name":"course","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"4567:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_Course_$2563_storage_ptr","typeString":"struct Marketplace.Course storage pointer"}},"id":2973,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4574:9:16","memberName":"maxSupply","nodeType":"MemberAccess","referencedDeclaration":2560,"src":"4567:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4586:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4567:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f7572736520646f6573206e6f74206578697374","id":2976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4589:23:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_ccfca96006449b50817dba143e911165630be54db84ae071755573159103f718","typeString":"literal_string \"Course does not exist\""},"value":"Course does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ccfca96006449b50817dba143e911165630be54db84ae071755573159103f718","typeString":"literal_string \"Course does not exist\""}],"id":2971,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4559:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4559:54:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2978,"nodeType":"ExpressionStatement","src":"4559:54:16"},{"expression":{"components":[{"expression":{"id":2979,"name":"course","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"4631:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_Course_$2563_storage_ptr","typeString":"struct Marketplace.Course storage pointer"}},"id":2980,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4638:3:16","memberName":"uri","nodeType":"MemberAccess","referencedDeclaration":2556,"src":"4631:10:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"expression":{"id":2981,"name":"course","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"4643:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_Course_$2563_storage_ptr","typeString":"struct Marketplace.Course storage pointer"}},"id":2982,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4650:5:16","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":2558,"src":"4643:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2983,"name":"course","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"4657:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_Course_$2563_storage_ptr","typeString":"struct Marketplace.Course storage pointer"}},"id":2984,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4664:9:16","memberName":"maxSupply","nodeType":"MemberAccess","referencedDeclaration":2560,"src":"4657:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2985,"name":"course","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"4675:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_Course_$2563_storage_ptr","typeString":"struct Marketplace.Course storage pointer"}},"id":2986,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4682:6:16","memberName":"minted","nodeType":"MemberAccess","referencedDeclaration":2562,"src":"4675:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2987,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4630:59:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_string_storage_$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(string storage ref,uint256,uint256,uint256)"}},"functionReturnParameters":2963,"id":2988,"nodeType":"Return","src":"4623:66:16"}]},"functionSelector":"610b31a6","id":2990,"implemented":true,"kind":"function","modifiers":[],"name":"getCourseDetails","nameLocation":"4372:16:16","nodeType":"FunctionDefinition","parameters":{"id":2954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2953,"mutability":"mutable","name":"courseId","nameLocation":"4397:8:16","nodeType":"VariableDeclaration","scope":2990,"src":"4389:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2952,"name":"uint256","nodeType":"ElementaryTypeName","src":"4389:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4388:18:16"},"returnParameters":{"id":2963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2956,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2990,"src":"4452:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2955,"name":"string","nodeType":"ElementaryTypeName","src":"4452:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2958,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2990,"src":"4467:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2957,"name":"uint256","nodeType":"ElementaryTypeName","src":"4467:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2960,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2990,"src":"4476:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2959,"name":"uint256","nodeType":"ElementaryTypeName","src":"4476:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2962,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2990,"src":"4485:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2961,"name":"uint256","nodeType":"ElementaryTypeName","src":"4485:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4451:42:16"},"scope":3064,"src":"4363:333:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3001,"nodeType":"Block","src":"4823:54:16","statements":[{"expression":{"baseExpression":{"id":2997,"name":"secondaryMarketPrices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2580,"src":"4840:21:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2999,"indexExpression":{"id":2998,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2992,"src":"4862:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4840:30:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2996,"id":3000,"nodeType":"Return","src":"4833:37:16"}]},"functionSelector":"b25360df","id":3002,"implemented":true,"kind":"function","modifiers":[],"name":"getNFTSalePrice","nameLocation":"4760:15:16","nodeType":"FunctionDefinition","parameters":{"id":2993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2992,"mutability":"mutable","name":"tokenId","nameLocation":"4784:7:16","nodeType":"VariableDeclaration","scope":3002,"src":"4776:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2991,"name":"uint256","nodeType":"ElementaryTypeName","src":"4776:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4775:17:16"},"returnParameters":{"id":2996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2995,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3002,"src":"4814:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2994,"name":"uint256","nodeType":"ElementaryTypeName","src":"4814:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4813:9:16"},"scope":3064,"src":"4751:126:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3013,"nodeType":"Block","src":"4998:40:16","statements":[{"expression":{"arguments":[{"id":3010,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"5023:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3009,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"5015:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":3011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5015:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3008,"id":3012,"nodeType":"Return","src":"5008:23:16"}]},"functionSelector":"deaea2e3","id":3014,"implemented":true,"kind":"function","modifiers":[],"name":"getNFTOwner","nameLocation":"4939:11:16","nodeType":"FunctionDefinition","parameters":{"id":3005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3004,"mutability":"mutable","name":"tokenId","nameLocation":"4959:7:16","nodeType":"VariableDeclaration","scope":3014,"src":"4951:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3003,"name":"uint256","nodeType":"ElementaryTypeName","src":"4951:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4950:17:16"},"returnParameters":{"id":3008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3007,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3014,"src":"4989:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3006,"name":"address","nodeType":"ElementaryTypeName","src":"4989:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4988:9:16"},"scope":3064,"src":"4930:108:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3062,"nodeType":"Block","src":"5174:252:16","statements":[{"assignments":[3023],"declarations":[{"constant":false,"id":3023,"mutability":"mutable","name":"balance","nameLocation":"5192:7:16","nodeType":"VariableDeclaration","scope":3062,"src":"5184:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3022,"name":"uint256","nodeType":"ElementaryTypeName","src":"5184:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3027,"initialValue":{"arguments":[{"id":3025,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3016,"src":"5212:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3024,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"5202:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":3026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5202:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5184:34:16"},{"assignments":[3032],"declarations":[{"constant":false,"id":3032,"mutability":"mutable","name":"tokenIds","nameLocation":"5245:8:16","nodeType":"VariableDeclaration","scope":3062,"src":"5228:25:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3030,"name":"uint256","nodeType":"ElementaryTypeName","src":"5228:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3031,"nodeType":"ArrayTypeName","src":"5228:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3038,"initialValue":{"arguments":[{"id":3036,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"5270:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3035,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5256:13:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3033,"name":"uint256","nodeType":"ElementaryTypeName","src":"5260:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3034,"nodeType":"ArrayTypeName","src":"5260:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5256:22:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5228:50:16"},{"body":{"id":3058,"nodeType":"Block","src":"5327:68:16","statements":[{"expression":{"id":3056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3049,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3032,"src":"5341:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3051,"indexExpression":{"id":3050,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"5350:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5341:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3053,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3016,"src":"5375:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3054,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"5382:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3052,"name":"tokenOfOwnerByIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"5355:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":3055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5355:29:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5341:43:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3057,"nodeType":"ExpressionStatement","src":"5341:43:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3043,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"5309:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3044,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"5313:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5309:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3059,"initializationExpression":{"assignments":[3040],"declarations":[{"constant":false,"id":3040,"mutability":"mutable","name":"i","nameLocation":"5302:1:16","nodeType":"VariableDeclaration","scope":3059,"src":"5294:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3039,"name":"uint256","nodeType":"ElementaryTypeName","src":"5294:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3042,"initialValue":{"hexValue":"30","id":3041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5306:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5294:13:16"},"loopExpression":{"expression":{"id":3047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5322:3:16","subExpression":{"id":3046,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"5322:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3048,"nodeType":"ExpressionStatement","src":"5322:3:16"},"nodeType":"ForStatement","src":"5289:106:16"},{"expression":{"id":3060,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3032,"src":"5411:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":3021,"id":3061,"nodeType":"Return","src":"5404:15:16"}]},"functionSelector":"18148f1b","id":3063,"implemented":true,"kind":"function","modifiers":[],"name":"getOwnedNFTs","nameLocation":"5107:12:16","nodeType":"FunctionDefinition","parameters":{"id":3017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3016,"mutability":"mutable","name":"owner","nameLocation":"5128:5:16","nodeType":"VariableDeclaration","scope":3063,"src":"5120:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3015,"name":"address","nodeType":"ElementaryTypeName","src":"5120:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5119:15:16"},"returnParameters":{"id":3021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3020,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3063,"src":"5156:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3018,"name":"uint256","nodeType":"ElementaryTypeName","src":"5156:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3019,"nodeType":"ArrayTypeName","src":"5156:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5155:18:16"},"scope":3064,"src":"5098:328:16","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":3065,"src":"270:5158:16","usedErrors":[]}],"src":"32:5397:16"},"id":16}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"constructor":{"details":"Initializes the contract by setting a `name` and a `symbol` to the token collection."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_175":{"entryPoint":null,"id":175,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":376,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":451,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":502,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":247,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":99,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":278,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":746,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":635,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1067,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_uint256":{"entryPoint":882,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1028,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":902,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1222,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":332,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":767,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":693,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1192,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":193,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":892,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1160,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":646,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":146,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":942,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":119,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":124,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":114,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":109,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":129,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":783,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1147,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1000,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":796,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":952,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":995,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8574:17","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:17","statements":[{"nodeType":"YulAssignment","src":"57:19:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:17"},"nodeType":"YulFunctionCall","src":"67:9:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:17"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:17","type":""}],"src":"7:75:17"},{"body":{"nodeType":"YulBlock","src":"177:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:17"},"nodeType":"YulFunctionCall","src":"187:12:17"},"nodeType":"YulExpressionStatement","src":"187:12:17"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:17"},{"body":{"nodeType":"YulBlock","src":"300:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:17"},"nodeType":"YulFunctionCall","src":"310:12:17"},"nodeType":"YulExpressionStatement","src":"310:12:17"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:17"},{"body":{"nodeType":"YulBlock","src":"423:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:17"},"nodeType":"YulFunctionCall","src":"433:12:17"},"nodeType":"YulExpressionStatement","src":"433:12:17"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:17"},{"body":{"nodeType":"YulBlock","src":"546:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:17"},"nodeType":"YulFunctionCall","src":"556:12:17"},"nodeType":"YulExpressionStatement","src":"556:12:17"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:17"},{"body":{"nodeType":"YulBlock","src":"628:54:17","statements":[{"nodeType":"YulAssignment","src":"638:38:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:17"},"nodeType":"YulFunctionCall","src":"652:14:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:17","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:17"},"nodeType":"YulFunctionCall","src":"668:7:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:17"},"nodeType":"YulFunctionCall","src":"648:28:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:17"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:17","type":""}],"src":"580:102:17"},{"body":{"nodeType":"YulBlock","src":"716:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:17"},"nodeType":"YulFunctionCall","src":"726:88:17"},"nodeType":"YulExpressionStatement","src":"726:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:17","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:17"},"nodeType":"YulFunctionCall","src":"823:15:17"},"nodeType":"YulExpressionStatement","src":"823:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:17"},"nodeType":"YulFunctionCall","src":"847:15:17"},"nodeType":"YulExpressionStatement","src":"847:15:17"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:17"},{"body":{"nodeType":"YulBlock","src":"917:238:17","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:17","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:17"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:17"},"nodeType":"YulFunctionCall","src":"957:27:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:17"},"nodeType":"YulFunctionCall","src":"945:40:17"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:17"},"nodeType":"YulFunctionCall","src":"1098:18:17"},"nodeType":"YulExpressionStatement","src":"1098:18:17"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:17"},"nodeType":"YulFunctionCall","src":"1036:34:17"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:17"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:17"},"nodeType":"YulFunctionCall","src":"1072:22:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:17"},"nodeType":"YulFunctionCall","src":"1033:62:17"},"nodeType":"YulIf","src":"1030:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:17","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:17"},"nodeType":"YulFunctionCall","src":"1127:22:17"},"nodeType":"YulExpressionStatement","src":"1127:22:17"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:17","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:17","type":""}],"src":"874:281:17"},{"body":{"nodeType":"YulBlock","src":"1202:88:17","statements":[{"nodeType":"YulAssignment","src":"1212:30:17","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:17"},"nodeType":"YulFunctionCall","src":"1222:20:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:17"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:17"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:17"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:17"},"nodeType":"YulFunctionCall","src":"1251:33:17"},"nodeType":"YulExpressionStatement","src":"1251:33:17"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:17","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:17","type":""}],"src":"1161:129:17"},{"body":{"nodeType":"YulBlock","src":"1363:241:17","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:17"},"nodeType":"YulFunctionCall","src":"1470:18:17"},"nodeType":"YulExpressionStatement","src":"1470:18:17"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:17"},"nodeType":"YulFunctionCall","src":"1437:30:17"},"nodeType":"YulIf","src":"1434:56:17"},{"nodeType":"YulAssignment","src":"1500:37:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:17"},"nodeType":"YulFunctionCall","src":"1508:29:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:17"}]},{"nodeType":"YulAssignment","src":"1574:23:17","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:17"},"nodeType":"YulFunctionCall","src":"1582:15:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:17"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:17","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:17","type":""}],"src":"1296:308:17"},{"body":{"nodeType":"YulBlock","src":"1672:184:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1682:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"1691:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1686:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"1751:63:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1776:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"1781:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:17"},"nodeType":"YulFunctionCall","src":"1772:11:17"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1795:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"1800:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1791:3:17"},"nodeType":"YulFunctionCall","src":"1791:11:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1785:5:17"},"nodeType":"YulFunctionCall","src":"1785:18:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1765:6:17"},"nodeType":"YulFunctionCall","src":"1765:39:17"},"nodeType":"YulExpressionStatement","src":"1765:39:17"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1712:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"1715:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1709:2:17"},"nodeType":"YulFunctionCall","src":"1709:13:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1723:19:17","statements":[{"nodeType":"YulAssignment","src":"1725:15:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1734:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"1737:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1730:3:17"},"nodeType":"YulFunctionCall","src":"1730:10:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1725:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"1705:3:17","statements":[]},"src":"1701:113:17"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1834:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"1839:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1830:3:17"},"nodeType":"YulFunctionCall","src":"1830:16:17"},{"kind":"number","nodeType":"YulLiteral","src":"1848:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1823:6:17"},"nodeType":"YulFunctionCall","src":"1823:27:17"},"nodeType":"YulExpressionStatement","src":"1823:27:17"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1654:3:17","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1659:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"1664:6:17","type":""}],"src":"1610:246:17"},{"body":{"nodeType":"YulBlock","src":"1957:339:17","statements":[{"nodeType":"YulAssignment","src":"1967:75:17","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2034:6:17"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1992:41:17"},"nodeType":"YulFunctionCall","src":"1992:49:17"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1976:15:17"},"nodeType":"YulFunctionCall","src":"1976:66:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1967:5:17"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2058:5:17"},{"name":"length","nodeType":"YulIdentifier","src":"2065:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2051:6:17"},"nodeType":"YulFunctionCall","src":"2051:21:17"},"nodeType":"YulExpressionStatement","src":"2051:21:17"},{"nodeType":"YulVariableDeclaration","src":"2081:27:17","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2096:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"2103:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2092:3:17"},"nodeType":"YulFunctionCall","src":"2092:16:17"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2085:3:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"2146:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2148:77:17"},"nodeType":"YulFunctionCall","src":"2148:79:17"},"nodeType":"YulExpressionStatement","src":"2148:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2127:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"2132:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2123:3:17"},"nodeType":"YulFunctionCall","src":"2123:16:17"},{"name":"end","nodeType":"YulIdentifier","src":"2141:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2120:2:17"},"nodeType":"YulFunctionCall","src":"2120:25:17"},"nodeType":"YulIf","src":"2117:112:17"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2273:3:17"},{"name":"dst","nodeType":"YulIdentifier","src":"2278:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"2283:6:17"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2238:34:17"},"nodeType":"YulFunctionCall","src":"2238:52:17"},"nodeType":"YulExpressionStatement","src":"2238:52:17"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1930:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"1935:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"1943:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1951:5:17","type":""}],"src":"1862:434:17"},{"body":{"nodeType":"YulBlock","src":"2389:282:17","statements":[{"body":{"nodeType":"YulBlock","src":"2438:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2440:77:17"},"nodeType":"YulFunctionCall","src":"2440:79:17"},"nodeType":"YulExpressionStatement","src":"2440:79:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2417:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"2425:4:17","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2413:3:17"},"nodeType":"YulFunctionCall","src":"2413:17:17"},{"name":"end","nodeType":"YulIdentifier","src":"2432:3:17"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2409:3:17"},"nodeType":"YulFunctionCall","src":"2409:27:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2402:6:17"},"nodeType":"YulFunctionCall","src":"2402:35:17"},"nodeType":"YulIf","src":"2399:122:17"},{"nodeType":"YulVariableDeclaration","src":"2530:27:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2550:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2544:5:17"},"nodeType":"YulFunctionCall","src":"2544:13:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2534:6:17","type":""}]},{"nodeType":"YulAssignment","src":"2566:99:17","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2638:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"2646:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2634:3:17"},"nodeType":"YulFunctionCall","src":"2634:17:17"},{"name":"length","nodeType":"YulIdentifier","src":"2653:6:17"},{"name":"end","nodeType":"YulIdentifier","src":"2661:3:17"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2575:58:17"},"nodeType":"YulFunctionCall","src":"2575:90:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2566:5:17"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2367:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"2375:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2383:5:17","type":""}],"src":"2316:355:17"},{"body":{"nodeType":"YulBlock","src":"2791:739:17","statements":[{"body":{"nodeType":"YulBlock","src":"2837:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2839:77:17"},"nodeType":"YulFunctionCall","src":"2839:79:17"},"nodeType":"YulExpressionStatement","src":"2839:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2812:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"2821:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2808:3:17"},"nodeType":"YulFunctionCall","src":"2808:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"2833:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2804:3:17"},"nodeType":"YulFunctionCall","src":"2804:32:17"},"nodeType":"YulIf","src":"2801:119:17"},{"nodeType":"YulBlock","src":"2930:291:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2945:38:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2969:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2980:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2965:3:17"},"nodeType":"YulFunctionCall","src":"2965:17:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2959:5:17"},"nodeType":"YulFunctionCall","src":"2959:24:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2949:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"3030:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3032:77:17"},"nodeType":"YulFunctionCall","src":"3032:79:17"},"nodeType":"YulExpressionStatement","src":"3032:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3002:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"3010:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2999:2:17"},"nodeType":"YulFunctionCall","src":"2999:30:17"},"nodeType":"YulIf","src":"2996:117:17"},{"nodeType":"YulAssignment","src":"3127:84:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3183:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"3194:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3179:3:17"},"nodeType":"YulFunctionCall","src":"3179:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3203:7:17"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3137:41:17"},"nodeType":"YulFunctionCall","src":"3137:74:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3127:6:17"}]}]},{"nodeType":"YulBlock","src":"3231:292:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3246:39:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3270:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3281:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3266:3:17"},"nodeType":"YulFunctionCall","src":"3266:18:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3260:5:17"},"nodeType":"YulFunctionCall","src":"3260:25:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3250:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"3332:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3334:77:17"},"nodeType":"YulFunctionCall","src":"3334:79:17"},"nodeType":"YulExpressionStatement","src":"3334:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3304:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"3312:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3301:2:17"},"nodeType":"YulFunctionCall","src":"3301:30:17"},"nodeType":"YulIf","src":"3298:117:17"},{"nodeType":"YulAssignment","src":"3429:84:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3485:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"3496:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3481:3:17"},"nodeType":"YulFunctionCall","src":"3481:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3505:7:17"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3439:41:17"},"nodeType":"YulFunctionCall","src":"3439:74:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3429:6:17"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2753:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2764:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2776:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2784:6:17","type":""}],"src":"2677:853:17"},{"body":{"nodeType":"YulBlock","src":"3595:40:17","statements":[{"nodeType":"YulAssignment","src":"3606:22:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3622:5:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3616:5:17"},"nodeType":"YulFunctionCall","src":"3616:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3606:6:17"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3578:5:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3588:6:17","type":""}],"src":"3536:99:17"},{"body":{"nodeType":"YulBlock","src":"3669:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3686:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3689:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3679:6:17"},"nodeType":"YulFunctionCall","src":"3679:88:17"},"nodeType":"YulExpressionStatement","src":"3679:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3783:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3786:4:17","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3776:6:17"},"nodeType":"YulFunctionCall","src":"3776:15:17"},"nodeType":"YulExpressionStatement","src":"3776:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3807:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3810:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3800:6:17"},"nodeType":"YulFunctionCall","src":"3800:15:17"},"nodeType":"YulExpressionStatement","src":"3800:15:17"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"3641:180:17"},{"body":{"nodeType":"YulBlock","src":"3878:269:17","statements":[{"nodeType":"YulAssignment","src":"3888:22:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3902:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"3908:1:17","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3898:3:17"},"nodeType":"YulFunctionCall","src":"3898:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3888:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"3919:38:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3949:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"3955:1:17","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3945:3:17"},"nodeType":"YulFunctionCall","src":"3945:12:17"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3923:18:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"3996:51:17","statements":[{"nodeType":"YulAssignment","src":"4010:27:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4024:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"4032:4:17","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4020:3:17"},"nodeType":"YulFunctionCall","src":"4020:17:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4010:6:17"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3976:18:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3969:6:17"},"nodeType":"YulFunctionCall","src":"3969:26:17"},"nodeType":"YulIf","src":"3966:81:17"},{"body":{"nodeType":"YulBlock","src":"4099:42:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"4113:16:17"},"nodeType":"YulFunctionCall","src":"4113:18:17"},"nodeType":"YulExpressionStatement","src":"4113:18:17"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4063:18:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4086:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"4094:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4083:2:17"},"nodeType":"YulFunctionCall","src":"4083:14:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4060:2:17"},"nodeType":"YulFunctionCall","src":"4060:38:17"},"nodeType":"YulIf","src":"4057:84:17"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3862:4:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3871:6:17","type":""}],"src":"3827:320:17"},{"body":{"nodeType":"YulBlock","src":"4207:87:17","statements":[{"nodeType":"YulAssignment","src":"4217:11:17","value":{"name":"ptr","nodeType":"YulIdentifier","src":"4225:3:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4217:4:17"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4245:1:17","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"4248:3:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4238:6:17"},"nodeType":"YulFunctionCall","src":"4238:14:17"},"nodeType":"YulExpressionStatement","src":"4238:14:17"},{"nodeType":"YulAssignment","src":"4261:26:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4279:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4282:4:17","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4269:9:17"},"nodeType":"YulFunctionCall","src":"4269:18:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4261:4:17"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"4194:3:17","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"4202:4:17","type":""}],"src":"4153:141:17"},{"body":{"nodeType":"YulBlock","src":"4344:49:17","statements":[{"nodeType":"YulAssignment","src":"4354:33:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4372:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"4379:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:17"},"nodeType":"YulFunctionCall","src":"4368:14:17"},{"kind":"number","nodeType":"YulLiteral","src":"4384:2:17","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4364:3:17"},"nodeType":"YulFunctionCall","src":"4364:23:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4354:6:17"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4327:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4337:6:17","type":""}],"src":"4300:93:17"},{"body":{"nodeType":"YulBlock","src":"4452:54:17","statements":[{"nodeType":"YulAssignment","src":"4462:37:17","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"4487:4:17"},{"name":"value","nodeType":"YulIdentifier","src":"4493:5:17"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4483:3:17"},"nodeType":"YulFunctionCall","src":"4483:16:17"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"4462:8:17"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"4427:4:17","type":""},{"name":"value","nodeType":"YulTypedName","src":"4433:5:17","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"4443:8:17","type":""}],"src":"4399:107:17"},{"body":{"nodeType":"YulBlock","src":"4588:317:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4598:35:17","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"4619:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"4631:1:17","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4615:3:17"},"nodeType":"YulFunctionCall","src":"4615:18:17"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"4602:9:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4642:109:17","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4673:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4684:66:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4654:18:17"},"nodeType":"YulFunctionCall","src":"4654:97:17"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"4646:4:17","type":""}]},{"nodeType":"YulAssignment","src":"4760:51:17","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4791:9:17"},{"name":"toInsert","nodeType":"YulIdentifier","src":"4802:8:17"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4772:18:17"},"nodeType":"YulFunctionCall","src":"4772:39:17"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4760:8:17"}]},{"nodeType":"YulAssignment","src":"4820:30:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4833:5:17"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"4844:4:17"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4840:3:17"},"nodeType":"YulFunctionCall","src":"4840:9:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4829:3:17"},"nodeType":"YulFunctionCall","src":"4829:21:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4820:5:17"}]},{"nodeType":"YulAssignment","src":"4859:40:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4872:5:17"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4883:8:17"},{"name":"mask","nodeType":"YulIdentifier","src":"4893:4:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4879:3:17"},"nodeType":"YulFunctionCall","src":"4879:19:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4869:2:17"},"nodeType":"YulFunctionCall","src":"4869:30:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4859:6:17"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4549:5:17","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"4556:10:17","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"4568:8:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4581:6:17","type":""}],"src":"4512:393:17"},{"body":{"nodeType":"YulBlock","src":"4956:32:17","statements":[{"nodeType":"YulAssignment","src":"4966:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"4977:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4966:7:17"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4938:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4948:7:17","type":""}],"src":"4911:77:17"},{"body":{"nodeType":"YulBlock","src":"5026:28:17","statements":[{"nodeType":"YulAssignment","src":"5036:12:17","value":{"name":"value","nodeType":"YulIdentifier","src":"5043:5:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5036:3:17"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5012:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5022:3:17","type":""}],"src":"4994:60:17"},{"body":{"nodeType":"YulBlock","src":"5120:82:17","statements":[{"nodeType":"YulAssignment","src":"5130:66:17","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5188:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5170:17:17"},"nodeType":"YulFunctionCall","src":"5170:24:17"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"5161:8:17"},"nodeType":"YulFunctionCall","src":"5161:34:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5143:17:17"},"nodeType":"YulFunctionCall","src":"5143:53:17"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5130:9:17"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5100:5:17","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5110:9:17","type":""}],"src":"5060:142:17"},{"body":{"nodeType":"YulBlock","src":"5255:28:17","statements":[{"nodeType":"YulAssignment","src":"5265:12:17","value":{"name":"value","nodeType":"YulIdentifier","src":"5272:5:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5265:3:17"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5241:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5251:3:17","type":""}],"src":"5208:75:17"},{"body":{"nodeType":"YulBlock","src":"5365:193:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5375:63:17","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"5430:7:17"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5399:30:17"},"nodeType":"YulFunctionCall","src":"5399:39:17"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"5379:16:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5454:4:17"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5494:4:17"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5488:5:17"},"nodeType":"YulFunctionCall","src":"5488:11:17"},{"name":"offset","nodeType":"YulIdentifier","src":"5501:6:17"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"5533:16:17"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"5509:23:17"},"nodeType":"YulFunctionCall","src":"5509:41:17"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"5460:27:17"},"nodeType":"YulFunctionCall","src":"5460:91:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5447:6:17"},"nodeType":"YulFunctionCall","src":"5447:105:17"},"nodeType":"YulExpressionStatement","src":"5447:105:17"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5342:4:17","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5348:6:17","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"5356:7:17","type":""}],"src":"5289:269:17"},{"body":{"nodeType":"YulBlock","src":"5613:24:17","statements":[{"nodeType":"YulAssignment","src":"5623:8:17","value":{"kind":"number","nodeType":"YulLiteral","src":"5630:1:17","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5623:3:17"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5609:3:17","type":""}],"src":"5564:73:17"},{"body":{"nodeType":"YulBlock","src":"5696:136:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5706:46:17","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"5720:30:17"},"nodeType":"YulFunctionCall","src":"5720:32:17"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"5710:6:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5805:4:17"},{"name":"offset","nodeType":"YulIdentifier","src":"5811:6:17"},{"name":"zero_0","nodeType":"YulIdentifier","src":"5819:6:17"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5761:43:17"},"nodeType":"YulFunctionCall","src":"5761:65:17"},"nodeType":"YulExpressionStatement","src":"5761:65:17"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5682:4:17","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5688:6:17","type":""}],"src":"5643:189:17"},{"body":{"nodeType":"YulBlock","src":"5888:136:17","statements":[{"body":{"nodeType":"YulBlock","src":"5955:63:17","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5999:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"6006:1:17","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"5969:29:17"},"nodeType":"YulFunctionCall","src":"5969:39:17"},"nodeType":"YulExpressionStatement","src":"5969:39:17"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5908:5:17"},{"name":"end","nodeType":"YulIdentifier","src":"5915:3:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5905:2:17"},"nodeType":"YulFunctionCall","src":"5905:14:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5920:26:17","statements":[{"nodeType":"YulAssignment","src":"5922:22:17","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5935:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"5942:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5931:3:17"},"nodeType":"YulFunctionCall","src":"5931:13:17"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"5922:5:17"}]}]},"pre":{"nodeType":"YulBlock","src":"5902:2:17","statements":[]},"src":"5898:120:17"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"5876:5:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"5883:3:17","type":""}],"src":"5838:186:17"},{"body":{"nodeType":"YulBlock","src":"6109:464:17","statements":[{"body":{"nodeType":"YulBlock","src":"6135:431:17","statements":[{"nodeType":"YulVariableDeclaration","src":"6149:54:17","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6197:5:17"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"6165:31:17"},"nodeType":"YulFunctionCall","src":"6165:38:17"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"6153:8:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6216:63:17","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6239:8:17"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6267:10:17"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6249:17:17"},"nodeType":"YulFunctionCall","src":"6249:29:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6235:3:17"},"nodeType":"YulFunctionCall","src":"6235:44:17"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"6220:11:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"6436:27:17","statements":[{"nodeType":"YulAssignment","src":"6438:23:17","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"6453:8:17"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6438:11:17"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6420:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"6432:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6417:2:17"},"nodeType":"YulFunctionCall","src":"6417:18:17"},"nodeType":"YulIf","src":"6414:49:17"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6505:11:17"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6522:8:17"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6550:3:17"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6532:17:17"},"nodeType":"YulFunctionCall","src":"6532:22:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6518:3:17"},"nodeType":"YulFunctionCall","src":"6518:37:17"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"6476:28:17"},"nodeType":"YulFunctionCall","src":"6476:80:17"},"nodeType":"YulExpressionStatement","src":"6476:80:17"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6126:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"6131:2:17","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6123:2:17"},"nodeType":"YulFunctionCall","src":"6123:11:17"},"nodeType":"YulIf","src":"6120:446:17"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"6085:5:17","type":""},{"name":"len","nodeType":"YulTypedName","src":"6092:3:17","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"6097:10:17","type":""}],"src":"6030:543:17"},{"body":{"nodeType":"YulBlock","src":"6642:54:17","statements":[{"nodeType":"YulAssignment","src":"6652:37:17","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"6677:4:17"},{"name":"value","nodeType":"YulIdentifier","src":"6683:5:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6673:3:17"},"nodeType":"YulFunctionCall","src":"6673:16:17"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"6652:8:17"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"6617:4:17","type":""},{"name":"value","nodeType":"YulTypedName","src":"6623:5:17","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"6633:8:17","type":""}],"src":"6579:117:17"},{"body":{"nodeType":"YulBlock","src":"6753:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"6763:68:17","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6812:1:17","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"6815:5:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6808:3:17"},"nodeType":"YulFunctionCall","src":"6808:13:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6827:1:17","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6823:3:17"},"nodeType":"YulFunctionCall","src":"6823:6:17"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"6779:28:17"},"nodeType":"YulFunctionCall","src":"6779:51:17"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6775:3:17"},"nodeType":"YulFunctionCall","src":"6775:56:17"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"6767:4:17","type":""}]},{"nodeType":"YulAssignment","src":"6840:25:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6854:4:17"},{"name":"mask","nodeType":"YulIdentifier","src":"6860:4:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6850:3:17"},"nodeType":"YulFunctionCall","src":"6850:15:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"6840:6:17"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6730:4:17","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"6736:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"6746:6:17","type":""}],"src":"6702:169:17"},{"body":{"nodeType":"YulBlock","src":"6957:214:17","statements":[{"nodeType":"YulAssignment","src":"7090:37:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7117:4:17"},{"name":"len","nodeType":"YulIdentifier","src":"7123:3:17"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"7098:18:17"},"nodeType":"YulFunctionCall","src":"7098:29:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7090:4:17"}]},{"nodeType":"YulAssignment","src":"7136:29:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7147:4:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7157:1:17","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"7160:3:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7153:3:17"},"nodeType":"YulFunctionCall","src":"7153:11:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7144:2:17"},"nodeType":"YulFunctionCall","src":"7144:21:17"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"7136:4:17"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6938:4:17","type":""},{"name":"len","nodeType":"YulTypedName","src":"6944:3:17","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"6952:4:17","type":""}],"src":"6876:295:17"},{"body":{"nodeType":"YulBlock","src":"7268:1303:17","statements":[{"nodeType":"YulVariableDeclaration","src":"7279:51:17","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7326:3:17"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7293:32:17"},"nodeType":"YulFunctionCall","src":"7293:37:17"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"7283:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"7415:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7417:16:17"},"nodeType":"YulFunctionCall","src":"7417:18:17"},"nodeType":"YulExpressionStatement","src":"7417:18:17"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7387:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"7395:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7384:2:17"},"nodeType":"YulFunctionCall","src":"7384:30:17"},"nodeType":"YulIf","src":"7381:56:17"},{"nodeType":"YulVariableDeclaration","src":"7447:52:17","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7493:4:17"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"7487:5:17"},"nodeType":"YulFunctionCall","src":"7487:11:17"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"7461:25:17"},"nodeType":"YulFunctionCall","src":"7461:38:17"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"7451:6:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7592:4:17"},{"name":"oldLen","nodeType":"YulIdentifier","src":"7598:6:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"7606:6:17"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"7546:45:17"},"nodeType":"YulFunctionCall","src":"7546:67:17"},"nodeType":"YulExpressionStatement","src":"7546:67:17"},{"nodeType":"YulVariableDeclaration","src":"7623:18:17","value":{"kind":"number","nodeType":"YulLiteral","src":"7640:1:17","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"7627:9:17","type":""}]},{"nodeType":"YulAssignment","src":"7651:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"7664:4:17","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"7651:9:17"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"7715:611:17","statements":[{"nodeType":"YulVariableDeclaration","src":"7729:37:17","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7748:6:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7760:4:17","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7756:3:17"},"nodeType":"YulFunctionCall","src":"7756:9:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7744:3:17"},"nodeType":"YulFunctionCall","src":"7744:22:17"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"7733:7:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7780:51:17","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7826:4:17"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"7794:31:17"},"nodeType":"YulFunctionCall","src":"7794:37:17"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"7784:6:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7844:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"7853:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7848:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"7912:163:17","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7937:6:17"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7955:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"7960:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7951:3:17"},"nodeType":"YulFunctionCall","src":"7951:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7945:5:17"},"nodeType":"YulFunctionCall","src":"7945:26:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7930:6:17"},"nodeType":"YulFunctionCall","src":"7930:42:17"},"nodeType":"YulExpressionStatement","src":"7930:42:17"},{"nodeType":"YulAssignment","src":"7989:24:17","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8003:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"8011:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7999:3:17"},"nodeType":"YulFunctionCall","src":"7999:14:17"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7989:6:17"}]},{"nodeType":"YulAssignment","src":"8030:31:17","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8047:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"8058:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8043:3:17"},"nodeType":"YulFunctionCall","src":"8043:18:17"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8030:9:17"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7878:1:17"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"7881:7:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7875:2:17"},"nodeType":"YulFunctionCall","src":"7875:14:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7890:21:17","statements":[{"nodeType":"YulAssignment","src":"7892:17:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7901:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"7904:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7897:3:17"},"nodeType":"YulFunctionCall","src":"7897:12:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7892:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"7871:3:17","statements":[]},"src":"7867:208:17"},{"body":{"nodeType":"YulBlock","src":"8111:156:17","statements":[{"nodeType":"YulVariableDeclaration","src":"8129:43:17","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8156:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8161:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8152:3:17"},"nodeType":"YulFunctionCall","src":"8152:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8146:5:17"},"nodeType":"YulFunctionCall","src":"8146:26:17"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"8133:9:17","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8196:6:17"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"8223:9:17"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8238:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"8246:4:17","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8234:3:17"},"nodeType":"YulFunctionCall","src":"8234:17:17"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"8204:18:17"},"nodeType":"YulFunctionCall","src":"8204:48:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8189:6:17"},"nodeType":"YulFunctionCall","src":"8189:64:17"},"nodeType":"YulExpressionStatement","src":"8189:64:17"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"8094:7:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"8103:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8091:2:17"},"nodeType":"YulFunctionCall","src":"8091:19:17"},"nodeType":"YulIf","src":"8088:179:17"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8287:4:17"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8301:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"8309:1:17","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8297:3:17"},"nodeType":"YulFunctionCall","src":"8297:14:17"},{"kind":"number","nodeType":"YulLiteral","src":"8313:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8293:3:17"},"nodeType":"YulFunctionCall","src":"8293:22:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8280:6:17"},"nodeType":"YulFunctionCall","src":"8280:36:17"},"nodeType":"YulExpressionStatement","src":"8280:36:17"}]},"nodeType":"YulCase","src":"7708:618:17","value":{"kind":"number","nodeType":"YulLiteral","src":"7713:1:17","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"8343:222:17","statements":[{"nodeType":"YulVariableDeclaration","src":"8357:14:17","value":{"kind":"number","nodeType":"YulLiteral","src":"8370:1:17","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8361:5:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"8394:67:17","statements":[{"nodeType":"YulAssignment","src":"8412:35:17","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8431:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8436:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8427:3:17"},"nodeType":"YulFunctionCall","src":"8427:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8421:5:17"},"nodeType":"YulFunctionCall","src":"8421:26:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8412:5:17"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"8387:6:17"},"nodeType":"YulIf","src":"8384:77:17"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8481:4:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8540:5:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"8547:6:17"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"8487:52:17"},"nodeType":"YulFunctionCall","src":"8487:67:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8474:6:17"},"nodeType":"YulFunctionCall","src":"8474:81:17"},"nodeType":"YulExpressionStatement","src":"8474:81:17"}]},"nodeType":"YulCase","src":"8335:230:17","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7688:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"7696:2:17","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7685:2:17"},"nodeType":"YulFunctionCall","src":"7685:14:17"},"nodeType":"YulSwitch","src":"7678:887:17"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"7257:4:17","type":""},{"name":"src","nodeType":"YulTypedName","src":"7263:3:17","type":""}],"src":"7176:1395:17"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":17,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162002710380380620027108339818101604052810190620000379190620001f6565b8160009081620000489190620004c6565b5080600190816200005a9190620004c6565b505050620005ad565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000cc8262000081565b810181811067ffffffffffffffff82111715620000ee57620000ed62000092565b5b80604052505050565b60006200010362000063565b9050620001118282620000c1565b919050565b600067ffffffffffffffff82111562000134576200013362000092565b5b6200013f8262000081565b9050602081019050919050565b60005b838110156200016c5780820151818401526020810190506200014f565b60008484015250505050565b60006200018f620001898462000116565b620000f7565b905082815260208101848484011115620001ae57620001ad6200007c565b5b620001bb8482856200014c565b509392505050565b600082601f830112620001db57620001da62000077565b5b8151620001ed84826020860162000178565b91505092915050565b6000806040838503121562000210576200020f6200006d565b5b600083015167ffffffffffffffff81111562000231576200023062000072565b5b6200023f85828601620001c3565b925050602083015167ffffffffffffffff81111562000263576200026262000072565b5b6200027185828601620001c3565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002ce57607f821691505b602082108103620002e457620002e362000286565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200034e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200030f565b6200035a86836200030f565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003a7620003a16200039b8462000372565b6200037c565b62000372565b9050919050565b6000819050919050565b620003c38362000386565b620003db620003d282620003ae565b8484546200031c565b825550505050565b600090565b620003f2620003e3565b620003ff818484620003b8565b505050565b5b8181101562000427576200041b600082620003e8565b60018101905062000405565b5050565b601f82111562000476576200044081620002ea565b6200044b84620002ff565b810160208510156200045b578190505b620004736200046a85620002ff565b83018262000404565b50505b505050565b600082821c905092915050565b60006200049b600019846008026200047b565b1980831691505092915050565b6000620004b6838362000488565b9150826002028217905092915050565b620004d1826200027b565b67ffffffffffffffff811115620004ed57620004ec62000092565b5b620004f98254620002b5565b620005068282856200042b565b600060209050601f8311600181146200053e576000841562000529578287015190505b620005358582620004a8565b865550620005a5565b601f1984166200054e86620002ea565b60005b82811015620005785784890151825560018201915060208501945060208101905062000551565b8683101562000598578489015162000594601f89168262000488565b8355505b6001600288020188555050505b505050505050565b61215380620005bd6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb46514610224578063b88d4fde14610240578063c87b56dd1461025c578063e985e9c51461028c576100cf565b80636352211e146101a657806370a08231146101d657806395d89b4114610206576100cf565b806301ffc9a7146100d457806306fdde0314610104578063081812fc14610122578063095ea7b31461015257806323b872dd1461016e57806342842e0e1461018a575b600080fd5b6100ee60048036038101906100e991906113b7565b6102bc565b6040516100fb91906113ff565b60405180910390f35b61010c61039e565b60405161011991906114aa565b60405180910390f35b61013c60048036038101906101379190611502565b610430565b6040516101499190611570565b60405180910390f35b61016c600480360381019061016791906115b7565b610476565b005b610188600480360381019061018391906115f7565b61058d565b005b6101a4600480360381019061019f91906115f7565b6105ed565b005b6101c060048036038101906101bb9190611502565b61060d565b6040516101cd9190611570565b60405180910390f35b6101f060048036038101906101eb919061164a565b6106be565b6040516101fd9190611686565b60405180910390f35b61020e610775565b60405161021b91906114aa565b60405180910390f35b61023e600480360381019061023991906116cd565b610807565b005b61025a60048036038101906102559190611842565b61081d565b005b61027660048036038101906102719190611502565b61087f565b60405161028391906114aa565b60405180910390f35b6102a660048036038101906102a191906118c5565b6108e7565b6040516102b391906113ff565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061039757506103968261097b565b5b9050919050565b6060600080546103ad90611934565b80601f01602080910402602001604051908101604052809291908181526020018280546103d990611934565b80156104265780601f106103fb57610100808354040283529160200191610426565b820191906000526020600020905b81548152906001019060200180831161040957829003601f168201915b5050505050905090565b600061043b826109e5565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104818261060d565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036104f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e8906119d7565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610510610a30565b73ffffffffffffffffffffffffffffffffffffffff16148061053f575061053e81610539610a30565b6108e7565b5b61057e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057590611a69565b60405180910390fd5b6105888383610a38565b505050565b61059e610598610a30565b82610af1565b6105dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d490611afb565b60405180910390fd5b6105e8838383610b86565b505050565b6106088383836040518060200160405280600081525061081d565b505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ac90611b67565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361072e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072590611bf9565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606001805461078490611934565b80601f01602080910402602001604051908101604052809291908181526020018280546107b090611934565b80156107fd5780601f106107d2576101008083540402835291602001916107fd565b820191906000526020600020905b8154815290600101906020018083116107e057829003601f168201915b5050505050905090565b610819610812610a30565b8383610dec565b5050565b61082e610828610a30565b83610af1565b61086d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086490611afb565b60405180910390fd5b61087984848484610f58565b50505050565b606061088a826109e5565b6000610894610fb4565b905060008151116108b457604051806020016040528060008152506108df565b806108be84610fcb565b6040516020016108cf929190611c55565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6109ee8161112b565b610a2d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2490611b67565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610aab8361060d565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610afd8361060d565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610b3f5750610b3e81856108e7565b5b80610b7d57508373ffffffffffffffffffffffffffffffffffffffff16610b6584610430565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610ba68261060d565b73ffffffffffffffffffffffffffffffffffffffff1614610bfc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf390611ceb565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c6b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6290611d7d565b60405180910390fd5b610c76838383611197565b610c81600082610a38565b6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610cd19190611dcc565b925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d289190611e00565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610de783838361119c565b505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e5a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e5190611e80565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610f4b91906113ff565b60405180910390a3505050565b610f63848484610b86565b610f6f848484846111a1565b610fae576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fa590611f12565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b606060008203611012576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611126565b600082905060005b6000821461104457808061102d90611f32565b915050600a8261103d9190611fa9565b915061101a565b60008167ffffffffffffffff8111156110605761105f611717565b5b6040519080825280601f01601f1916602001820160405280156110925781602001600182028036833780820191505090505b5090505b6000851461111f576001826110ab9190611dcc565b9150600a856110ba9190611fda565b60306110c69190611e00565b60f81b8183815181106110dc576110db61200b565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a856111189190611fa9565b9450611096565b8093505050505b919050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b505050565b505050565b60006111c28473ffffffffffffffffffffffffffffffffffffffff16611328565b1561131b578373ffffffffffffffffffffffffffffffffffffffff1663150b7a026111eb610a30565b8786866040518563ffffffff1660e01b815260040161120d949392919061208f565b6020604051808303816000875af192505050801561124957506040513d601f19601f8201168201806040525081019061124691906120f0565b60015b6112cb573d8060008114611279576040519150601f19603f3d011682016040523d82523d6000602084013e61127e565b606091505b5060008151036112c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112ba90611f12565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611320565b600190505b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6113948161135f565b811461139f57600080fd5b50565b6000813590506113b18161138b565b92915050565b6000602082840312156113cd576113cc611355565b5b60006113db848285016113a2565b91505092915050565b60008115159050919050565b6113f9816113e4565b82525050565b600060208201905061141460008301846113f0565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611454578082015181840152602081019050611439565b60008484015250505050565b6000601f19601f8301169050919050565b600061147c8261141a565b6114868185611425565b9350611496818560208601611436565b61149f81611460565b840191505092915050565b600060208201905081810360008301526114c48184611471565b905092915050565b6000819050919050565b6114df816114cc565b81146114ea57600080fd5b50565b6000813590506114fc816114d6565b92915050565b60006020828403121561151857611517611355565b5b6000611526848285016114ed565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061155a8261152f565b9050919050565b61156a8161154f565b82525050565b60006020820190506115856000830184611561565b92915050565b6115948161154f565b811461159f57600080fd5b50565b6000813590506115b18161158b565b92915050565b600080604083850312156115ce576115cd611355565b5b60006115dc858286016115a2565b92505060206115ed858286016114ed565b9150509250929050565b6000806000606084860312156116105761160f611355565b5b600061161e868287016115a2565b935050602061162f868287016115a2565b9250506040611640868287016114ed565b9150509250925092565b6000602082840312156116605761165f611355565b5b600061166e848285016115a2565b91505092915050565b611680816114cc565b82525050565b600060208201905061169b6000830184611677565b92915050565b6116aa816113e4565b81146116b557600080fd5b50565b6000813590506116c7816116a1565b92915050565b600080604083850312156116e4576116e3611355565b5b60006116f2858286016115a2565b9250506020611703858286016116b8565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61174f82611460565b810181811067ffffffffffffffff8211171561176e5761176d611717565b5b80604052505050565b600061178161134b565b905061178d8282611746565b919050565b600067ffffffffffffffff8211156117ad576117ac611717565b5b6117b682611460565b9050602081019050919050565b82818337600083830152505050565b60006117e56117e084611792565b611777565b90508281526020810184848401111561180157611800611712565b5b61180c8482856117c3565b509392505050565b600082601f8301126118295761182861170d565b5b81356118398482602086016117d2565b91505092915050565b6000806000806080858703121561185c5761185b611355565b5b600061186a878288016115a2565b945050602061187b878288016115a2565b935050604061188c878288016114ed565b925050606085013567ffffffffffffffff8111156118ad576118ac61135a565b5b6118b987828801611814565b91505092959194509250565b600080604083850312156118dc576118db611355565b5b60006118ea858286016115a2565b92505060206118fb858286016115a2565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061194c57607f821691505b60208210810361195f5761195e611905565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b60006119c1602183611425565b91506119cc82611965565b604082019050919050565b600060208201905081810360008301526119f0816119b4565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c0000602082015250565b6000611a53603e83611425565b9150611a5e826119f7565b604082019050919050565b60006020820190508181036000830152611a8281611a46565b9050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206e6f7220617070726f766564000000000000000000000000000000000000602082015250565b6000611ae5602e83611425565b9150611af082611a89565b604082019050919050565b60006020820190508181036000830152611b1481611ad8565b9050919050565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b6000611b51601883611425565b9150611b5c82611b1b565b602082019050919050565b60006020820190508181036000830152611b8081611b44565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b6000611be3602983611425565b9150611bee82611b87565b604082019050919050565b60006020820190508181036000830152611c1281611bd6565b9050919050565b600081905092915050565b6000611c2f8261141a565b611c398185611c19565b9350611c49818560208601611436565b80840191505092915050565b6000611c618285611c24565b9150611c6d8284611c24565b91508190509392505050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b6000611cd5602583611425565b9150611ce082611c79565b604082019050919050565b60006020820190508181036000830152611d0481611cc8565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611d67602483611425565b9150611d7282611d0b565b604082019050919050565b60006020820190508181036000830152611d9681611d5a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611dd7826114cc565b9150611de2836114cc565b9250828203905081811115611dfa57611df9611d9d565b5b92915050565b6000611e0b826114cc565b9150611e16836114cc565b9250828201905080821115611e2e57611e2d611d9d565b5b92915050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b6000611e6a601983611425565b9150611e7582611e34565b602082019050919050565b60006020820190508181036000830152611e9981611e5d565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b6000611efc603283611425565b9150611f0782611ea0565b604082019050919050565b60006020820190508181036000830152611f2b81611eef565b9050919050565b6000611f3d826114cc565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611f6f57611f6e611d9d565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611fb4826114cc565b9150611fbf836114cc565b925082611fcf57611fce611f7a565b5b828204905092915050565b6000611fe5826114cc565b9150611ff0836114cc565b92508261200057611fff611f7a565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081519050919050565b600082825260208201905092915050565b60006120618261203a565b61206b8185612045565b935061207b818560208601611436565b61208481611460565b840191505092915050565b60006080820190506120a46000830187611561565b6120b16020830186611561565b6120be6040830185611677565b81810360608301526120d08184612056565b905095945050505050565b6000815190506120ea8161138b565b92915050565b60006020828403121561210657612105611355565b5b6000612114848285016120db565b9150509291505056fea26469706673582212209a27420b02b7a543a0b0294acb3109f24bdf46ba96f0baa42e09d77153711f2664736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2710 CODESIZE SUB DUP1 PUSH3 0x2710 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1F6 JUMP JUMPDEST DUP2 PUSH1 0x0 SWAP1 DUP2 PUSH3 0x48 SWAP2 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0x5A SWAP2 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST POP POP POP PUSH3 0x5AD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0xCC DUP3 PUSH3 0x81 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0xEE JUMPI PUSH3 0xED PUSH3 0x92 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x103 PUSH3 0x63 JUMP JUMPDEST SWAP1 POP PUSH3 0x111 DUP3 DUP3 PUSH3 0xC1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x134 JUMPI PUSH3 0x133 PUSH3 0x92 JUMP JUMPDEST JUMPDEST PUSH3 0x13F DUP3 PUSH3 0x81 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x16C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x14F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x18F PUSH3 0x189 DUP5 PUSH3 0x116 JUMP JUMPDEST PUSH3 0xF7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1AE JUMPI PUSH3 0x1AD PUSH3 0x7C JUMP JUMPDEST JUMPDEST PUSH3 0x1BB DUP5 DUP3 DUP6 PUSH3 0x14C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1DB JUMPI PUSH3 0x1DA PUSH3 0x77 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x1ED DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x178 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x210 JUMPI PUSH3 0x20F PUSH3 0x6D JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x231 JUMPI PUSH3 0x230 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH3 0x23F DUP6 DUP3 DUP7 ADD PUSH3 0x1C3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x263 JUMPI PUSH3 0x262 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH3 0x271 DUP6 DUP3 DUP7 ADD PUSH3 0x1C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2CE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2E4 JUMPI PUSH3 0x2E3 PUSH3 0x286 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x34E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x30F JUMP JUMPDEST PUSH3 0x35A DUP7 DUP4 PUSH3 0x30F JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3A7 PUSH3 0x3A1 PUSH3 0x39B DUP5 PUSH3 0x372 JUMP JUMPDEST PUSH3 0x37C JUMP JUMPDEST PUSH3 0x372 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3C3 DUP4 PUSH3 0x386 JUMP JUMPDEST PUSH3 0x3DB PUSH3 0x3D2 DUP3 PUSH3 0x3AE JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x31C JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x3F2 PUSH3 0x3E3 JUMP JUMPDEST PUSH3 0x3FF DUP2 DUP5 DUP5 PUSH3 0x3B8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x427 JUMPI PUSH3 0x41B PUSH1 0x0 DUP3 PUSH3 0x3E8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x405 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x476 JUMPI PUSH3 0x440 DUP2 PUSH3 0x2EA JUMP JUMPDEST PUSH3 0x44B DUP5 PUSH3 0x2FF JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x45B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x473 PUSH3 0x46A DUP6 PUSH3 0x2FF JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x404 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x49B PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x47B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4B6 DUP4 DUP4 PUSH3 0x488 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4D1 DUP3 PUSH3 0x27B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4ED JUMPI PUSH3 0x4EC PUSH3 0x92 JUMP JUMPDEST JUMPDEST PUSH3 0x4F9 DUP3 SLOAD PUSH3 0x2B5 JUMP JUMPDEST PUSH3 0x506 DUP3 DUP3 DUP6 PUSH3 0x42B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x53E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x529 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x535 DUP6 DUP3 PUSH3 0x4A8 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x5A5 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x54E DUP7 PUSH3 0x2EA JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x578 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x551 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x598 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x594 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x488 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2153 DUP1 PUSH3 0x5BD PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x28C JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x206 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x18A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x13B7 JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x13FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x14AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x1502 JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x1570 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x15B7 JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x15F7 JUMP JUMPDEST PUSH2 0x58D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x15F7 JUMP JUMPDEST PUSH2 0x5ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x1502 JUMP JUMPDEST PUSH2 0x60D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x1570 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x164A JUMP JUMPDEST PUSH2 0x6BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x1686 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH2 0x775 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x14AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x16CD JUMP JUMPDEST PUSH2 0x807 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x1842 JUMP JUMPDEST PUSH2 0x81D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x1502 JUMP JUMPDEST PUSH2 0x87F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x14AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x18C5 JUMP JUMPDEST PUSH2 0x8E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x13FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x387 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x397 JUMPI POP PUSH2 0x396 DUP3 PUSH2 0x97B JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x3AD SWAP1 PUSH2 0x1934 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D9 SWAP1 PUSH2 0x1934 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x426 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x426 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x409 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43B DUP3 PUSH2 0x9E5 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x481 DUP3 PUSH2 0x60D JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E8 SWAP1 PUSH2 0x19D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x510 PUSH2 0xA30 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x53F JUMPI POP PUSH2 0x53E DUP2 PUSH2 0x539 PUSH2 0xA30 JUMP JUMPDEST PUSH2 0x8E7 JUMP JUMPDEST JUMPDEST PUSH2 0x57E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x575 SWAP1 PUSH2 0x1A69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x588 DUP4 DUP4 PUSH2 0xA38 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x59E PUSH2 0x598 PUSH2 0xA30 JUMP JUMPDEST DUP3 PUSH2 0xAF1 JUMP JUMPDEST PUSH2 0x5DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D4 SWAP1 PUSH2 0x1AFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E8 DUP4 DUP4 DUP4 PUSH2 0xB86 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x608 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x81D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AC SWAP1 PUSH2 0x1B67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x72E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x725 SWAP1 PUSH2 0x1BF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x784 SWAP1 PUSH2 0x1934 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7B0 SWAP1 PUSH2 0x1934 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7FD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7D2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7FD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7E0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x819 PUSH2 0x812 PUSH2 0xA30 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xDEC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x82E PUSH2 0x828 PUSH2 0xA30 JUMP JUMPDEST DUP4 PUSH2 0xAF1 JUMP JUMPDEST PUSH2 0x86D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x864 SWAP1 PUSH2 0x1AFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x879 DUP5 DUP5 DUP5 DUP5 PUSH2 0xF58 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x88A DUP3 PUSH2 0x9E5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x894 PUSH2 0xFB4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x8B4 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8DF JUMP JUMPDEST DUP1 PUSH2 0x8BE DUP5 PUSH2 0xFCB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8CF SWAP3 SWAP2 SWAP1 PUSH2 0x1C55 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9EE DUP2 PUSH2 0x112B JUMP JUMPDEST PUSH2 0xA2D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA24 SWAP1 PUSH2 0x1B67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAAB DUP4 PUSH2 0x60D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAFD DUP4 PUSH2 0x60D JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xB3F JUMPI POP PUSH2 0xB3E DUP2 DUP6 PUSH2 0x8E7 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xB7D JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB65 DUP5 PUSH2 0x430 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBA6 DUP3 PUSH2 0x60D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBFC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF3 SWAP1 PUSH2 0x1CEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC6B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC62 SWAP1 PUSH2 0x1D7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC76 DUP4 DUP4 DUP4 PUSH2 0x1197 JUMP JUMPDEST PUSH2 0xC81 PUSH1 0x0 DUP3 PUSH2 0xA38 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xCD1 SWAP2 SWAP1 PUSH2 0x1DCC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD28 SWAP2 SWAP1 PUSH2 0x1E00 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xDE7 DUP4 DUP4 DUP4 PUSH2 0x119C JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE5A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE51 SWAP1 PUSH2 0x1E80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xF4B SWAP2 SWAP1 PUSH2 0x13FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xF63 DUP5 DUP5 DUP5 PUSH2 0xB86 JUMP JUMPDEST PUSH2 0xF6F DUP5 DUP5 DUP5 DUP5 PUSH2 0x11A1 JUMP JUMPDEST PUSH2 0xFAE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFA5 SWAP1 PUSH2 0x1F12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 SUB PUSH2 0x1012 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x1126 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x1044 JUMPI DUP1 DUP1 PUSH2 0x102D SWAP1 PUSH2 0x1F32 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x103D SWAP2 SWAP1 PUSH2 0x1FA9 JUMP JUMPDEST SWAP2 POP PUSH2 0x101A JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1060 JUMPI PUSH2 0x105F PUSH2 0x1717 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1092 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0x111F JUMPI PUSH1 0x1 DUP3 PUSH2 0x10AB SWAP2 SWAP1 PUSH2 0x1DCC JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x10BA SWAP2 SWAP1 PUSH2 0x1FDA JUMP JUMPDEST PUSH1 0x30 PUSH2 0x10C6 SWAP2 SWAP1 PUSH2 0x1E00 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x10DC JUMPI PUSH2 0x10DB PUSH2 0x200B JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x1118 SWAP2 SWAP1 PUSH2 0x1FA9 JUMP JUMPDEST SWAP5 POP PUSH2 0x1096 JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C2 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1328 JUMP JUMPDEST ISZERO PUSH2 0x131B JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x11EB PUSH2 0xA30 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x120D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x208F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1249 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1246 SWAP2 SWAP1 PUSH2 0x20F0 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x12CB JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1279 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x127E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x12C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12BA SWAP1 PUSH2 0x1F12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x1320 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1394 DUP2 PUSH2 0x135F JUMP JUMPDEST DUP2 EQ PUSH2 0x139F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13B1 DUP2 PUSH2 0x138B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13CD JUMPI PUSH2 0x13CC PUSH2 0x1355 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13DB DUP5 DUP3 DUP6 ADD PUSH2 0x13A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13F9 DUP2 PUSH2 0x13E4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1414 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1454 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1439 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x147C DUP3 PUSH2 0x141A JUMP JUMPDEST PUSH2 0x1486 DUP2 DUP6 PUSH2 0x1425 JUMP JUMPDEST SWAP4 POP PUSH2 0x1496 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1436 JUMP JUMPDEST PUSH2 0x149F DUP2 PUSH2 0x1460 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14C4 DUP2 DUP5 PUSH2 0x1471 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14DF DUP2 PUSH2 0x14CC JUMP JUMPDEST DUP2 EQ PUSH2 0x14EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14FC DUP2 PUSH2 0x14D6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1518 JUMPI PUSH2 0x1517 PUSH2 0x1355 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1526 DUP5 DUP3 DUP6 ADD PUSH2 0x14ED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x155A DUP3 PUSH2 0x152F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x156A DUP2 PUSH2 0x154F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1585 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1561 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1594 DUP2 PUSH2 0x154F JUMP JUMPDEST DUP2 EQ PUSH2 0x159F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15B1 DUP2 PUSH2 0x158B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15CE JUMPI PUSH2 0x15CD PUSH2 0x1355 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15DC DUP6 DUP3 DUP7 ADD PUSH2 0x15A2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15ED DUP6 DUP3 DUP7 ADD PUSH2 0x14ED JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1610 JUMPI PUSH2 0x160F PUSH2 0x1355 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x161E DUP7 DUP3 DUP8 ADD PUSH2 0x15A2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x162F DUP7 DUP3 DUP8 ADD PUSH2 0x15A2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1640 DUP7 DUP3 DUP8 ADD PUSH2 0x14ED JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1660 JUMPI PUSH2 0x165F PUSH2 0x1355 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x166E DUP5 DUP3 DUP6 ADD PUSH2 0x15A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1680 DUP2 PUSH2 0x14CC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x169B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1677 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16AA DUP2 PUSH2 0x13E4 JUMP JUMPDEST DUP2 EQ PUSH2 0x16B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16C7 DUP2 PUSH2 0x16A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16E4 JUMPI PUSH2 0x16E3 PUSH2 0x1355 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16F2 DUP6 DUP3 DUP7 ADD PUSH2 0x15A2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1703 DUP6 DUP3 DUP7 ADD PUSH2 0x16B8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x174F DUP3 PUSH2 0x1460 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x176E JUMPI PUSH2 0x176D PUSH2 0x1717 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1781 PUSH2 0x134B JUMP JUMPDEST SWAP1 POP PUSH2 0x178D DUP3 DUP3 PUSH2 0x1746 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x17AD JUMPI PUSH2 0x17AC PUSH2 0x1717 JUMP JUMPDEST JUMPDEST PUSH2 0x17B6 DUP3 PUSH2 0x1460 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17E5 PUSH2 0x17E0 DUP5 PUSH2 0x1792 JUMP JUMPDEST PUSH2 0x1777 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1801 JUMPI PUSH2 0x1800 PUSH2 0x1712 JUMP JUMPDEST JUMPDEST PUSH2 0x180C DUP5 DUP3 DUP6 PUSH2 0x17C3 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1829 JUMPI PUSH2 0x1828 PUSH2 0x170D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1839 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x17D2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x185C JUMPI PUSH2 0x185B PUSH2 0x1355 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x186A DUP8 DUP3 DUP9 ADD PUSH2 0x15A2 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x187B DUP8 DUP3 DUP9 ADD PUSH2 0x15A2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x188C DUP8 DUP3 DUP9 ADD PUSH2 0x14ED JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18AD JUMPI PUSH2 0x18AC PUSH2 0x135A JUMP JUMPDEST JUMPDEST PUSH2 0x18B9 DUP8 DUP3 DUP9 ADD PUSH2 0x1814 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18DC JUMPI PUSH2 0x18DB PUSH2 0x1355 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18EA DUP6 DUP3 DUP7 ADD PUSH2 0x15A2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18FB DUP6 DUP3 DUP7 ADD PUSH2 0x15A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x194C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x195F JUMPI PUSH2 0x195E PUSH2 0x1905 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19C1 PUSH1 0x21 DUP4 PUSH2 0x1425 JUMP JUMPDEST SWAP2 POP PUSH2 0x19CC DUP3 PUSH2 0x1965 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19F0 DUP2 PUSH2 0x19B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206E6F7220617070726F76656420666F7220616C6C0000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A53 PUSH1 0x3E DUP4 PUSH2 0x1425 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A5E DUP3 PUSH2 0x19F7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A82 DUP2 PUSH2 0x1A46 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206E6F7220617070726F766564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AE5 PUSH1 0x2E DUP4 PUSH2 0x1425 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AF0 DUP3 PUSH2 0x1A89 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B14 DUP2 PUSH2 0x1AD8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B51 PUSH1 0x18 DUP4 PUSH2 0x1425 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B5C DUP3 PUSH2 0x1B1B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B80 DUP2 PUSH2 0x1B44 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BE3 PUSH1 0x29 DUP4 PUSH2 0x1425 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BEE DUP3 PUSH2 0x1B87 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C12 DUP2 PUSH2 0x1BD6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C2F DUP3 PUSH2 0x141A JUMP JUMPDEST PUSH2 0x1C39 DUP2 DUP6 PUSH2 0x1C19 JUMP JUMPDEST SWAP4 POP PUSH2 0x1C49 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1436 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C61 DUP3 DUP6 PUSH2 0x1C24 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C6D DUP3 DUP5 PUSH2 0x1C24 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CD5 PUSH1 0x25 DUP4 PUSH2 0x1425 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CE0 DUP3 PUSH2 0x1C79 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D04 DUP2 PUSH2 0x1CC8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D67 PUSH1 0x24 DUP4 PUSH2 0x1425 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D72 DUP3 PUSH2 0x1D0B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D96 DUP2 PUSH2 0x1D5A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1DD7 DUP3 PUSH2 0x14CC JUMP JUMPDEST SWAP2 POP PUSH2 0x1DE2 DUP4 PUSH2 0x14CC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1DFA JUMPI PUSH2 0x1DF9 PUSH2 0x1D9D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E0B DUP3 PUSH2 0x14CC JUMP JUMPDEST SWAP2 POP PUSH2 0x1E16 DUP4 PUSH2 0x14CC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1E2E JUMPI PUSH2 0x1E2D PUSH2 0x1D9D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E6A PUSH1 0x19 DUP4 PUSH2 0x1425 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E75 DUP3 PUSH2 0x1E34 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E99 DUP2 PUSH2 0x1E5D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EFC PUSH1 0x32 DUP4 PUSH2 0x1425 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F07 DUP3 PUSH2 0x1EA0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F2B DUP2 PUSH2 0x1EEF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F3D DUP3 PUSH2 0x14CC JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1F6F JUMPI PUSH2 0x1F6E PUSH2 0x1D9D JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1FB4 DUP3 PUSH2 0x14CC JUMP JUMPDEST SWAP2 POP PUSH2 0x1FBF DUP4 PUSH2 0x14CC JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1FCF JUMPI PUSH2 0x1FCE PUSH2 0x1F7A JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FE5 DUP3 PUSH2 0x14CC JUMP JUMPDEST SWAP2 POP PUSH2 0x1FF0 DUP4 PUSH2 0x14CC JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2000 JUMPI PUSH2 0x1FFF PUSH2 0x1F7A JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2061 DUP3 PUSH2 0x203A JUMP JUMPDEST PUSH2 0x206B DUP2 DUP6 PUSH2 0x2045 JUMP JUMPDEST SWAP4 POP PUSH2 0x207B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1436 JUMP JUMPDEST PUSH2 0x2084 DUP2 PUSH2 0x1460 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x20A4 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1561 JUMP JUMPDEST PUSH2 0x20B1 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1561 JUMP JUMPDEST PUSH2 0x20BE PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1677 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x20D0 DUP2 DUP5 PUSH2 0x2056 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x20EA DUP2 PUSH2 0x138B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2106 JUMPI PUSH2 0x2105 PUSH2 0x1355 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2114 DUP5 DUP3 DUP6 ADD PUSH2 0x20DB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 0x27 TIMESTAMP SIGNEXTEND MUL 0xB7 0xA5 NUMBER LOG0 0xB0 0x29 0x4A 0xCB BALANCE MULMOD CALLCODE 0x4B 0xDF CHAINID 0xBA SWAP7 CREATE 0xBA LOG4 0x2E MULMOD 0xD7 PUSH18 0x53711F2664736F6C63430008120033000000 ","sourceMap":"628:13718:1:-:0;;;1390:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1464:5;1456;:13;;;;;;:::i;:::-;;1489:7;1479;:17;;;;;;:::i;:::-;;1390:113;;628:13718;;7:75:17;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:853::-;2776:6;2784;2833:2;2821:9;2812:7;2808:23;2804:32;2801:119;;;2839:79;;:::i;:::-;2801:119;2980:1;2969:9;2965:17;2959:24;3010:18;3002:6;2999:30;2996:117;;;3032:79;;:::i;:::-;2996:117;3137:74;3203:7;3194:6;3183:9;3179:22;3137:74;:::i;:::-;3127:84;;2930:291;3281:2;3270:9;3266:18;3260:25;3312:18;3304:6;3301:30;3298:117;;;3334:79;;:::i;:::-;3298:117;3439:74;3505:7;3496:6;3485:9;3481:22;3439:74;:::i;:::-;3429:84;;3231:292;2677:853;;;;;:::o;3536:99::-;3588:6;3622:5;3616:12;3606:22;;3536:99;;;:::o;3641:180::-;3689:77;3686:1;3679:88;3786:4;3783:1;3776:15;3810:4;3807:1;3800:15;3827:320;3871:6;3908:1;3902:4;3898:12;3888:22;;3955:1;3949:4;3945:12;3976:18;3966:81;;4032:4;4024:6;4020:17;4010:27;;3966:81;4094:2;4086:6;4083:14;4063:18;4060:38;4057:84;;4113:18;;:::i;:::-;4057:84;3878:269;3827:320;;;:::o;4153:141::-;4202:4;4225:3;4217:11;;4248:3;4245:1;4238:14;4282:4;4279:1;4269:18;4261:26;;4153:141;;;:::o;4300:93::-;4337:6;4384:2;4379;4372:5;4368:14;4364:23;4354:33;;4300:93;;;:::o;4399:107::-;4443:8;4493:5;4487:4;4483:16;4462:37;;4399:107;;;;:::o;4512:393::-;4581:6;4631:1;4619:10;4615:18;4654:97;4684:66;4673:9;4654:97;:::i;:::-;4772:39;4802:8;4791:9;4772:39;:::i;:::-;4760:51;;4844:4;4840:9;4833:5;4829:21;4820:30;;4893:4;4883:8;4879:19;4872:5;4869:30;4859:40;;4588:317;;4512:393;;;;;:::o;4911:77::-;4948:7;4977:5;4966:16;;4911:77;;;:::o;4994:60::-;5022:3;5043:5;5036:12;;4994:60;;;:::o;5060:142::-;5110:9;5143:53;5161:34;5170:24;5188:5;5170:24;:::i;:::-;5161:34;:::i;:::-;5143:53;:::i;:::-;5130:66;;5060:142;;;:::o;5208:75::-;5251:3;5272:5;5265:12;;5208:75;;;:::o;5289:269::-;5399:39;5430:7;5399:39;:::i;:::-;5460:91;5509:41;5533:16;5509:41;:::i;:::-;5501:6;5494:4;5488:11;5460:91;:::i;:::-;5454:4;5447:105;5365:193;5289:269;;;:::o;5564:73::-;5609:3;5564:73;:::o;5643:189::-;5720:32;;:::i;:::-;5761:65;5819:6;5811;5805:4;5761:65;:::i;:::-;5696:136;5643:189;;:::o;5838:186::-;5898:120;5915:3;5908:5;5905:14;5898:120;;;5969:39;6006:1;5999:5;5969:39;:::i;:::-;5942:1;5935:5;5931:13;5922:22;;5898:120;;;5838:186;;:::o;6030:543::-;6131:2;6126:3;6123:11;6120:446;;;6165:38;6197:5;6165:38;:::i;:::-;6249:29;6267:10;6249:29;:::i;:::-;6239:8;6235:44;6432:2;6420:10;6417:18;6414:49;;;6453:8;6438:23;;6414:49;6476:80;6532:22;6550:3;6532:22;:::i;:::-;6522:8;6518:37;6505:11;6476:80;:::i;:::-;6135:431;;6120:446;6030:543;;;:::o;6579:117::-;6633:8;6683:5;6677:4;6673:16;6652:37;;6579:117;;;;:::o;6702:169::-;6746:6;6779:51;6827:1;6823:6;6815:5;6812:1;6808:13;6779:51;:::i;:::-;6775:56;6860:4;6854;6850:15;6840:25;;6753:118;6702:169;;;;:::o;6876:295::-;6952:4;7098:29;7123:3;7117:4;7098:29;:::i;:::-;7090:37;;7160:3;7157:1;7153:11;7147:4;7144:21;7136:29;;6876:295;;;;:::o;7176:1395::-;7293:37;7326:3;7293:37;:::i;:::-;7395:18;7387:6;7384:30;7381:56;;;7417:18;;:::i;:::-;7381:56;7461:38;7493:4;7487:11;7461:38;:::i;:::-;7546:67;7606:6;7598;7592:4;7546:67;:::i;:::-;7640:1;7664:4;7651:17;;7696:2;7688:6;7685:14;7713:1;7708:618;;;;8370:1;8387:6;8384:77;;;8436:9;8431:3;8427:19;8421:26;8412:35;;8384:77;8487:67;8547:6;8540:5;8487:67;:::i;:::-;8481:4;8474:81;8343:222;7678:887;;7708:618;7760:4;7756:9;7748:6;7744:22;7794:37;7826:4;7794:37;:::i;:::-;7853:1;7867:208;7881:7;7878:1;7875:14;7867:208;;;7960:9;7955:3;7951:19;7945:26;7937:6;7930:42;8011:1;8003:6;7999:14;7989:24;;8058:2;8047:9;8043:18;8030:31;;7904:4;7901:1;7897:12;7892:17;;7867:208;;;8103:6;8094:7;8091:19;8088:179;;;8161:9;8156:3;8152:19;8146:26;8204:48;8246:4;8238:6;8234:17;8223:9;8204:48;:::i;:::-;8196:6;8189:64;8111:156;8088:179;8313:1;8309;8301:6;8297:14;8293:22;8287:4;8280:36;7715:611;;;7678:887;;7268:1303;;;7176:1395;;:::o;628:13718:1:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_978":{"entryPoint":4508,"id":978,"parameterSlots":3,"returnSlots":0},"@_approve_848":{"entryPoint":2616,"id":848,"parameterSlots":2,"returnSlots":0},"@_baseURI_326":{"entryPoint":4020,"id":326,"parameterSlots":0,"returnSlots":1},"@_beforeTokenTransfer_967":{"entryPoint":4503,"id":967,"parameterSlots":3,"returnSlots":0},"@_checkOnERC721Received_956":{"entryPoint":4513,"id":956,"parameterSlots":4,"returnSlots":1},"@_exists_545":{"entryPoint":4395,"id":545,"parameterSlots":1,"returnSlots":1},"@_isApprovedOrOwner_579":{"entryPoint":2801,"id":579,"parameterSlots":2,"returnSlots":1},"@_msgSender_1941":{"entryPoint":2608,"id":1941,"parameterSlots":0,"returnSlots":1},"@_requireMinted_894":{"entryPoint":2533,"id":894,"parameterSlots":1,"returnSlots":0},"@_safeTransfer_527":{"entryPoint":3928,"id":527,"parameterSlots":4,"returnSlots":0},"@_setApprovalForAll_880":{"entryPoint":3564,"id":880,"parameterSlots":3,"returnSlots":0},"@_transfer_824":{"entryPoint":2950,"id":824,"parameterSlots":3,"returnSlots":0},"@approve_369":{"entryPoint":1142,"id":369,"parameterSlots":2,"returnSlots":0},"@balanceOf_230":{"entryPoint":1726,"id":230,"parameterSlots":1,"returnSlots":1},"@getApproved_387":{"entryPoint":1072,"id":387,"parameterSlots":1,"returnSlots":1},"@isApprovedForAll_422":{"entryPoint":2279,"id":422,"parameterSlots":2,"returnSlots":1},"@isContract_1652":{"entryPoint":4904,"id":1652,"parameterSlots":1,"returnSlots":1},"@name_268":{"entryPoint":926,"id":268,"parameterSlots":0,"returnSlots":1},"@ownerOf_258":{"entryPoint":1549,"id":258,"parameterSlots":1,"returnSlots":1},"@safeTransferFrom_468":{"entryPoint":1517,"id":468,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_498":{"entryPoint":2077,"id":498,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_404":{"entryPoint":2055,"id":404,"parameterSlots":2,"returnSlots":0},"@supportsInterface_206":{"entryPoint":700,"id":206,"parameterSlots":1,"returnSlots":1},"@supportsInterface_2274":{"entryPoint":2427,"id":2274,"parameterSlots":1,"returnSlots":1},"@symbol_278":{"entryPoint":1909,"id":278,"parameterSlots":0,"returnSlots":1},"@toString_2113":{"entryPoint":4043,"id":2113,"parameterSlots":1,"returnSlots":1},"@tokenURI_317":{"entryPoint":2175,"id":317,"parameterSlots":1,"returnSlots":1},"@transferFrom_449":{"entryPoint":1421,"id":449,"parameterSlots":3,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":6098,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":5538,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":5816,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":5026,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":8411,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":6164,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":5357,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":5706,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":6341,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":5623,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":6210,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":5837,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":5559,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":5047,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":8432,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":5378,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":5473,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":5104,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":8278,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":5233,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7204,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack":{"entryPoint":7919,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack":{"entryPoint":7368,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack":{"entryPoint":7514,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack":{"entryPoint":7773,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack":{"entryPoint":7126,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack":{"entryPoint":6726,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack":{"entryPoint":6980,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack":{"entryPoint":6580,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack":{"entryPoint":6872,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":5751,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":7253,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":5488,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":8335,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":5119,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5290,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7954,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7403,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7549,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7808,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7161,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6761,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7015,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6615,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6907,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":5766,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":6007,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":4939,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":6034,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":8250,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":5146,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":8261,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":5157,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7193,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":7680,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":8105,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":7628,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":5455,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":5092,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":4959,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":5423,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":5324,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":6083,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":5174,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":6452,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":5958,"id":null,"parameterSlots":2,"returnSlots":0},"increment_t_uint256":{"entryPoint":7986,"id":null,"parameterSlots":1,"returnSlots":1},"mod_t_uint256":{"entryPoint":8154,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":7581,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":8058,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":6405,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":8203,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":5911,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":5901,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":5906,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":4954,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":4949,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":5216,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e":{"entryPoint":7840,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48":{"entryPoint":7289,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4":{"entryPoint":7435,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05":{"entryPoint":7732,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159":{"entryPoint":7047,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304":{"entryPoint":6647,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f":{"entryPoint":6939,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942":{"entryPoint":6501,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b":{"entryPoint":6793,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":5515,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":5793,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":5003,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":5334,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:24533:17","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:17","statements":[{"nodeType":"YulAssignment","src":"57:19:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:17"},"nodeType":"YulFunctionCall","src":"67:9:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:17"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:17","type":""}],"src":"7:75:17"},{"body":{"nodeType":"YulBlock","src":"177:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:17"},"nodeType":"YulFunctionCall","src":"187:12:17"},"nodeType":"YulExpressionStatement","src":"187:12:17"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:17"},{"body":{"nodeType":"YulBlock","src":"300:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:17"},"nodeType":"YulFunctionCall","src":"310:12:17"},"nodeType":"YulExpressionStatement","src":"310:12:17"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:17"},{"body":{"nodeType":"YulBlock","src":"378:105:17","statements":[{"nodeType":"YulAssignment","src":"388:89:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:17","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:17"},"nodeType":"YulFunctionCall","src":"399:78:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:17"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:17","type":""}],"src":"334:149:17"},{"body":{"nodeType":"YulBlock","src":"531:78:17","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:17"},"nodeType":"YulFunctionCall","src":"589:12:17"},"nodeType":"YulExpressionStatement","src":"589:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:17"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:17"},"nodeType":"YulFunctionCall","src":"561:23:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:17"},"nodeType":"YulFunctionCall","src":"551:34:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:17"},"nodeType":"YulFunctionCall","src":"544:42:17"},"nodeType":"YulIf","src":"541:62:17"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:17","type":""}],"src":"489:120:17"},{"body":{"nodeType":"YulBlock","src":"666:86:17","statements":[{"nodeType":"YulAssignment","src":"676:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:17"},"nodeType":"YulFunctionCall","src":"685:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:17"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:17"},"nodeType":"YulFunctionCall","src":"714:32:17"},"nodeType":"YulExpressionStatement","src":"714:32:17"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:17","type":""}],"src":"615:137:17"},{"body":{"nodeType":"YulBlock","src":"823:262:17","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:17"},"nodeType":"YulFunctionCall","src":"871:79:17"},"nodeType":"YulExpressionStatement","src":"871:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:17"},"nodeType":"YulFunctionCall","src":"840:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:17"},"nodeType":"YulFunctionCall","src":"836:32:17"},"nodeType":"YulIf","src":"833:119:17"},{"nodeType":"YulBlock","src":"962:116:17","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:17","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:17"},"nodeType":"YulFunctionCall","src":"1036:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:17"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:17"},"nodeType":"YulFunctionCall","src":"1016:52:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:17"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:17","type":""}],"src":"758:327:17"},{"body":{"nodeType":"YulBlock","src":"1133:48:17","statements":[{"nodeType":"YulAssignment","src":"1143:32:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:17"},"nodeType":"YulFunctionCall","src":"1161:13:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:17"},"nodeType":"YulFunctionCall","src":"1154:21:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:17"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:17","type":""}],"src":"1091:90:17"},{"body":{"nodeType":"YulBlock","src":"1246:50:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:17"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:17"},"nodeType":"YulFunctionCall","src":"1268:21:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:17"},"nodeType":"YulFunctionCall","src":"1256:34:17"},"nodeType":"YulExpressionStatement","src":"1256:34:17"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:17","type":""}],"src":"1187:109:17"},{"body":{"nodeType":"YulBlock","src":"1394:118:17","statements":[{"nodeType":"YulAssignment","src":"1404:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:17"},"nodeType":"YulFunctionCall","src":"1412:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:17"},"nodeType":"YulFunctionCall","src":"1487:17:17"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:17"},"nodeType":"YulFunctionCall","src":"1440:65:17"},"nodeType":"YulExpressionStatement","src":"1440:65:17"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:17","type":""}],"src":"1302:210:17"},{"body":{"nodeType":"YulBlock","src":"1577:40:17","statements":[{"nodeType":"YulAssignment","src":"1588:22:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1604:5:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1598:5:17"},"nodeType":"YulFunctionCall","src":"1598:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1588:6:17"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1560:5:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1570:6:17","type":""}],"src":"1518:99:17"},{"body":{"nodeType":"YulBlock","src":"1719:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1736:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"1741:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1729:6:17"},"nodeType":"YulFunctionCall","src":"1729:19:17"},"nodeType":"YulExpressionStatement","src":"1729:19:17"},{"nodeType":"YulAssignment","src":"1757:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1776:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"1781:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:17"},"nodeType":"YulFunctionCall","src":"1772:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1757:11:17"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1691:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"1696:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1707:11:17","type":""}],"src":"1623:169:17"},{"body":{"nodeType":"YulBlock","src":"1860:184:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1870:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"1879:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1874:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"1939:63:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1964:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"1969:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1960:3:17"},"nodeType":"YulFunctionCall","src":"1960:11:17"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1983:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"1988:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1979:3:17"},"nodeType":"YulFunctionCall","src":"1979:11:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1973:5:17"},"nodeType":"YulFunctionCall","src":"1973:18:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1953:6:17"},"nodeType":"YulFunctionCall","src":"1953:39:17"},"nodeType":"YulExpressionStatement","src":"1953:39:17"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1900:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"1903:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1897:2:17"},"nodeType":"YulFunctionCall","src":"1897:13:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1911:19:17","statements":[{"nodeType":"YulAssignment","src":"1913:15:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1922:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"1925:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1918:3:17"},"nodeType":"YulFunctionCall","src":"1918:10:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1913:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"1893:3:17","statements":[]},"src":"1889:113:17"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2022:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"2027:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2018:3:17"},"nodeType":"YulFunctionCall","src":"2018:16:17"},{"kind":"number","nodeType":"YulLiteral","src":"2036:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2011:6:17"},"nodeType":"YulFunctionCall","src":"2011:27:17"},"nodeType":"YulExpressionStatement","src":"2011:27:17"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1842:3:17","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1847:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"1852:6:17","type":""}],"src":"1798:246:17"},{"body":{"nodeType":"YulBlock","src":"2098:54:17","statements":[{"nodeType":"YulAssignment","src":"2108:38:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2126:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"2133:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2122:3:17"},"nodeType":"YulFunctionCall","src":"2122:14:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2142:2:17","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2138:3:17"},"nodeType":"YulFunctionCall","src":"2138:7:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2118:3:17"},"nodeType":"YulFunctionCall","src":"2118:28:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2108:6:17"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2081:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2091:6:17","type":""}],"src":"2050:102:17"},{"body":{"nodeType":"YulBlock","src":"2250:285:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2260:53:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2307:5:17"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2274:32:17"},"nodeType":"YulFunctionCall","src":"2274:39:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2264:6:17","type":""}]},{"nodeType":"YulAssignment","src":"2322:78:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2388:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"2393:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2329:58:17"},"nodeType":"YulFunctionCall","src":"2329:71:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2322:3:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2448:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"2455:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2444:3:17"},"nodeType":"YulFunctionCall","src":"2444:16:17"},{"name":"pos","nodeType":"YulIdentifier","src":"2462:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"2467:6:17"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2409:34:17"},"nodeType":"YulFunctionCall","src":"2409:65:17"},"nodeType":"YulExpressionStatement","src":"2409:65:17"},{"nodeType":"YulAssignment","src":"2483:46:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2494:3:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2521:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2499:21:17"},"nodeType":"YulFunctionCall","src":"2499:29:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2490:3:17"},"nodeType":"YulFunctionCall","src":"2490:39:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2483:3:17"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2231:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2238:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2246:3:17","type":""}],"src":"2158:377:17"},{"body":{"nodeType":"YulBlock","src":"2659:195:17","statements":[{"nodeType":"YulAssignment","src":"2669:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2681:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2692:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2677:3:17"},"nodeType":"YulFunctionCall","src":"2677:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2669:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2716:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2727:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2712:3:17"},"nodeType":"YulFunctionCall","src":"2712:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2735:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"2741:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2731:3:17"},"nodeType":"YulFunctionCall","src":"2731:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2705:6:17"},"nodeType":"YulFunctionCall","src":"2705:47:17"},"nodeType":"YulExpressionStatement","src":"2705:47:17"},{"nodeType":"YulAssignment","src":"2761:86:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2833:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"2842:4:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2769:63:17"},"nodeType":"YulFunctionCall","src":"2769:78:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2761:4:17"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2631:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2643:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2654:4:17","type":""}],"src":"2541:313:17"},{"body":{"nodeType":"YulBlock","src":"2905:32:17","statements":[{"nodeType":"YulAssignment","src":"2915:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"2926:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2915:7:17"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2887:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2897:7:17","type":""}],"src":"2860:77:17"},{"body":{"nodeType":"YulBlock","src":"2986:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"3043:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3052:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3055:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3045:6:17"},"nodeType":"YulFunctionCall","src":"3045:12:17"},"nodeType":"YulExpressionStatement","src":"3045:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3009:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3034:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3016:17:17"},"nodeType":"YulFunctionCall","src":"3016:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3006:2:17"},"nodeType":"YulFunctionCall","src":"3006:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2999:6:17"},"nodeType":"YulFunctionCall","src":"2999:43:17"},"nodeType":"YulIf","src":"2996:63:17"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2979:5:17","type":""}],"src":"2943:122:17"},{"body":{"nodeType":"YulBlock","src":"3123:87:17","statements":[{"nodeType":"YulAssignment","src":"3133:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3155:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3142:12:17"},"nodeType":"YulFunctionCall","src":"3142:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3133:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3198:5:17"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3171:26:17"},"nodeType":"YulFunctionCall","src":"3171:33:17"},"nodeType":"YulExpressionStatement","src":"3171:33:17"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3101:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"3109:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3117:5:17","type":""}],"src":"3071:139:17"},{"body":{"nodeType":"YulBlock","src":"3282:263:17","statements":[{"body":{"nodeType":"YulBlock","src":"3328:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3330:77:17"},"nodeType":"YulFunctionCall","src":"3330:79:17"},"nodeType":"YulExpressionStatement","src":"3330:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3303:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"3312:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3299:3:17"},"nodeType":"YulFunctionCall","src":"3299:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"3324:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3295:3:17"},"nodeType":"YulFunctionCall","src":"3295:32:17"},"nodeType":"YulIf","src":"3292:119:17"},{"nodeType":"YulBlock","src":"3421:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3436:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"3450:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3440:6:17","type":""}]},{"nodeType":"YulAssignment","src":"3465:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3500:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"3511:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3496:3:17"},"nodeType":"YulFunctionCall","src":"3496:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3520:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3475:20:17"},"nodeType":"YulFunctionCall","src":"3475:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3465:6:17"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3252:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3263:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3275:6:17","type":""}],"src":"3216:329:17"},{"body":{"nodeType":"YulBlock","src":"3596:81:17","statements":[{"nodeType":"YulAssignment","src":"3606:65:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3621:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"3628:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3617:3:17"},"nodeType":"YulFunctionCall","src":"3617:54:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3606:7:17"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3578:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3588:7:17","type":""}],"src":"3551:126:17"},{"body":{"nodeType":"YulBlock","src":"3728:51:17","statements":[{"nodeType":"YulAssignment","src":"3738:35:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3767:5:17"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3749:17:17"},"nodeType":"YulFunctionCall","src":"3749:24:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3738:7:17"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3710:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3720:7:17","type":""}],"src":"3683:96:17"},{"body":{"nodeType":"YulBlock","src":"3850:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3867:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3890:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3872:17:17"},"nodeType":"YulFunctionCall","src":"3872:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3860:6:17"},"nodeType":"YulFunctionCall","src":"3860:37:17"},"nodeType":"YulExpressionStatement","src":"3860:37:17"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3838:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3845:3:17","type":""}],"src":"3785:118:17"},{"body":{"nodeType":"YulBlock","src":"4007:124:17","statements":[{"nodeType":"YulAssignment","src":"4017:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4029:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4040:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4025:3:17"},"nodeType":"YulFunctionCall","src":"4025:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4017:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4097:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4110:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4121:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4106:3:17"},"nodeType":"YulFunctionCall","src":"4106:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4053:43:17"},"nodeType":"YulFunctionCall","src":"4053:71:17"},"nodeType":"YulExpressionStatement","src":"4053:71:17"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3979:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3991:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4002:4:17","type":""}],"src":"3909:222:17"},{"body":{"nodeType":"YulBlock","src":"4180:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"4237:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4246:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4249:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4239:6:17"},"nodeType":"YulFunctionCall","src":"4239:12:17"},"nodeType":"YulExpressionStatement","src":"4239:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4203:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4228:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4210:17:17"},"nodeType":"YulFunctionCall","src":"4210:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4200:2:17"},"nodeType":"YulFunctionCall","src":"4200:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4193:6:17"},"nodeType":"YulFunctionCall","src":"4193:43:17"},"nodeType":"YulIf","src":"4190:63:17"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4173:5:17","type":""}],"src":"4137:122:17"},{"body":{"nodeType":"YulBlock","src":"4317:87:17","statements":[{"nodeType":"YulAssignment","src":"4327:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4349:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4336:12:17"},"nodeType":"YulFunctionCall","src":"4336:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4327:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4392:5:17"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"4365:26:17"},"nodeType":"YulFunctionCall","src":"4365:33:17"},"nodeType":"YulExpressionStatement","src":"4365:33:17"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4295:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"4303:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4311:5:17","type":""}],"src":"4265:139:17"},{"body":{"nodeType":"YulBlock","src":"4493:391:17","statements":[{"body":{"nodeType":"YulBlock","src":"4539:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4541:77:17"},"nodeType":"YulFunctionCall","src":"4541:79:17"},"nodeType":"YulExpressionStatement","src":"4541:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4514:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"4523:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4510:3:17"},"nodeType":"YulFunctionCall","src":"4510:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"4535:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4506:3:17"},"nodeType":"YulFunctionCall","src":"4506:32:17"},"nodeType":"YulIf","src":"4503:119:17"},{"nodeType":"YulBlock","src":"4632:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4647:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4661:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4651:6:17","type":""}]},{"nodeType":"YulAssignment","src":"4676:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4711:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"4722:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4707:3:17"},"nodeType":"YulFunctionCall","src":"4707:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4731:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4686:20:17"},"nodeType":"YulFunctionCall","src":"4686:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4676:6:17"}]}]},{"nodeType":"YulBlock","src":"4759:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4774:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4788:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4778:6:17","type":""}]},{"nodeType":"YulAssignment","src":"4804:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4839:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"4850:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4835:3:17"},"nodeType":"YulFunctionCall","src":"4835:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4859:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4814:20:17"},"nodeType":"YulFunctionCall","src":"4814:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4804:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4455:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4466:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4478:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4486:6:17","type":""}],"src":"4410:474:17"},{"body":{"nodeType":"YulBlock","src":"4990:519:17","statements":[{"body":{"nodeType":"YulBlock","src":"5036:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5038:77:17"},"nodeType":"YulFunctionCall","src":"5038:79:17"},"nodeType":"YulExpressionStatement","src":"5038:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5011:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"5020:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5007:3:17"},"nodeType":"YulFunctionCall","src":"5007:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"5032:2:17","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5003:3:17"},"nodeType":"YulFunctionCall","src":"5003:32:17"},"nodeType":"YulIf","src":"5000:119:17"},{"nodeType":"YulBlock","src":"5129:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5144:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"5158:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5148:6:17","type":""}]},{"nodeType":"YulAssignment","src":"5173:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5208:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"5219:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5204:3:17"},"nodeType":"YulFunctionCall","src":"5204:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5228:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5183:20:17"},"nodeType":"YulFunctionCall","src":"5183:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5173:6:17"}]}]},{"nodeType":"YulBlock","src":"5256:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5271:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"5285:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5275:6:17","type":""}]},{"nodeType":"YulAssignment","src":"5301:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5336:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"5347:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5332:3:17"},"nodeType":"YulFunctionCall","src":"5332:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5356:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5311:20:17"},"nodeType":"YulFunctionCall","src":"5311:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5301:6:17"}]}]},{"nodeType":"YulBlock","src":"5384:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5399:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"5413:2:17","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5403:6:17","type":""}]},{"nodeType":"YulAssignment","src":"5429:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5464:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"5475:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5460:3:17"},"nodeType":"YulFunctionCall","src":"5460:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5484:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5439:20:17"},"nodeType":"YulFunctionCall","src":"5439:53:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5429:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4944:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4955:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4967:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4975:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4983:6:17","type":""}],"src":"4890:619:17"},{"body":{"nodeType":"YulBlock","src":"5581:263:17","statements":[{"body":{"nodeType":"YulBlock","src":"5627:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5629:77:17"},"nodeType":"YulFunctionCall","src":"5629:79:17"},"nodeType":"YulExpressionStatement","src":"5629:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5602:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"5611:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5598:3:17"},"nodeType":"YulFunctionCall","src":"5598:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"5623:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5594:3:17"},"nodeType":"YulFunctionCall","src":"5594:32:17"},"nodeType":"YulIf","src":"5591:119:17"},{"nodeType":"YulBlock","src":"5720:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5735:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"5749:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5739:6:17","type":""}]},{"nodeType":"YulAssignment","src":"5764:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5799:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"5810:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5795:3:17"},"nodeType":"YulFunctionCall","src":"5795:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5819:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5774:20:17"},"nodeType":"YulFunctionCall","src":"5774:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5764:6:17"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5551:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5562:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5574:6:17","type":""}],"src":"5515:329:17"},{"body":{"nodeType":"YulBlock","src":"5915:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5932:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5955:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5937:17:17"},"nodeType":"YulFunctionCall","src":"5937:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5925:6:17"},"nodeType":"YulFunctionCall","src":"5925:37:17"},"nodeType":"YulExpressionStatement","src":"5925:37:17"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5903:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5910:3:17","type":""}],"src":"5850:118:17"},{"body":{"nodeType":"YulBlock","src":"6072:124:17","statements":[{"nodeType":"YulAssignment","src":"6082:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6094:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6105:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6090:3:17"},"nodeType":"YulFunctionCall","src":"6090:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6082:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6162:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6175:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6186:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6171:3:17"},"nodeType":"YulFunctionCall","src":"6171:17:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6118:43:17"},"nodeType":"YulFunctionCall","src":"6118:71:17"},"nodeType":"YulExpressionStatement","src":"6118:71:17"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6044:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6056:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6067:4:17","type":""}],"src":"5974:222:17"},{"body":{"nodeType":"YulBlock","src":"6242:76:17","statements":[{"body":{"nodeType":"YulBlock","src":"6296:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6305:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6308:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6298:6:17"},"nodeType":"YulFunctionCall","src":"6298:12:17"},"nodeType":"YulExpressionStatement","src":"6298:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6265:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6287:5:17"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"6272:14:17"},"nodeType":"YulFunctionCall","src":"6272:21:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6262:2:17"},"nodeType":"YulFunctionCall","src":"6262:32:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6255:6:17"},"nodeType":"YulFunctionCall","src":"6255:40:17"},"nodeType":"YulIf","src":"6252:60:17"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6235:5:17","type":""}],"src":"6202:116:17"},{"body":{"nodeType":"YulBlock","src":"6373:84:17","statements":[{"nodeType":"YulAssignment","src":"6383:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6405:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6392:12:17"},"nodeType":"YulFunctionCall","src":"6392:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6383:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6445:5:17"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"6421:23:17"},"nodeType":"YulFunctionCall","src":"6421:30:17"},"nodeType":"YulExpressionStatement","src":"6421:30:17"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6351:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"6359:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6367:5:17","type":""}],"src":"6324:133:17"},{"body":{"nodeType":"YulBlock","src":"6543:388:17","statements":[{"body":{"nodeType":"YulBlock","src":"6589:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6591:77:17"},"nodeType":"YulFunctionCall","src":"6591:79:17"},"nodeType":"YulExpressionStatement","src":"6591:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6564:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"6573:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6560:3:17"},"nodeType":"YulFunctionCall","src":"6560:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"6585:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6556:3:17"},"nodeType":"YulFunctionCall","src":"6556:32:17"},"nodeType":"YulIf","src":"6553:119:17"},{"nodeType":"YulBlock","src":"6682:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"6697:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"6711:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6701:6:17","type":""}]},{"nodeType":"YulAssignment","src":"6726:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6761:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"6772:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6757:3:17"},"nodeType":"YulFunctionCall","src":"6757:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6781:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6736:20:17"},"nodeType":"YulFunctionCall","src":"6736:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6726:6:17"}]}]},{"nodeType":"YulBlock","src":"6809:115:17","statements":[{"nodeType":"YulVariableDeclaration","src":"6824:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"6838:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6828:6:17","type":""}]},{"nodeType":"YulAssignment","src":"6854:60:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6886:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"6897:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6882:3:17"},"nodeType":"YulFunctionCall","src":"6882:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6906:7:17"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"6864:17:17"},"nodeType":"YulFunctionCall","src":"6864:50:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6854:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6505:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6516:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6528:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6536:6:17","type":""}],"src":"6463:468:17"},{"body":{"nodeType":"YulBlock","src":"7026:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7043:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7046:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7036:6:17"},"nodeType":"YulFunctionCall","src":"7036:12:17"},"nodeType":"YulExpressionStatement","src":"7036:12:17"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"6937:117:17"},{"body":{"nodeType":"YulBlock","src":"7149:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7166:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7169:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7159:6:17"},"nodeType":"YulFunctionCall","src":"7159:12:17"},"nodeType":"YulExpressionStatement","src":"7159:12:17"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"7060:117:17"},{"body":{"nodeType":"YulBlock","src":"7211:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7228:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7231:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7221:6:17"},"nodeType":"YulFunctionCall","src":"7221:88:17"},"nodeType":"YulExpressionStatement","src":"7221:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7325:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7328:4:17","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7318:6:17"},"nodeType":"YulFunctionCall","src":"7318:15:17"},"nodeType":"YulExpressionStatement","src":"7318:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7349:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7352:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7342:6:17"},"nodeType":"YulFunctionCall","src":"7342:15:17"},"nodeType":"YulExpressionStatement","src":"7342:15:17"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"7183:180:17"},{"body":{"nodeType":"YulBlock","src":"7412:238:17","statements":[{"nodeType":"YulVariableDeclaration","src":"7422:58:17","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7444:6:17"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"7474:4:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7452:21:17"},"nodeType":"YulFunctionCall","src":"7452:27:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7440:3:17"},"nodeType":"YulFunctionCall","src":"7440:40:17"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"7426:10:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"7591:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7593:16:17"},"nodeType":"YulFunctionCall","src":"7593:18:17"},"nodeType":"YulExpressionStatement","src":"7593:18:17"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7534:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"7546:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7531:2:17"},"nodeType":"YulFunctionCall","src":"7531:34:17"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7570:10:17"},{"name":"memPtr","nodeType":"YulIdentifier","src":"7582:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7567:2:17"},"nodeType":"YulFunctionCall","src":"7567:22:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7528:2:17"},"nodeType":"YulFunctionCall","src":"7528:62:17"},"nodeType":"YulIf","src":"7525:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7629:2:17","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7633:10:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7622:6:17"},"nodeType":"YulFunctionCall","src":"7622:22:17"},"nodeType":"YulExpressionStatement","src":"7622:22:17"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7398:6:17","type":""},{"name":"size","nodeType":"YulTypedName","src":"7406:4:17","type":""}],"src":"7369:281:17"},{"body":{"nodeType":"YulBlock","src":"7697:88:17","statements":[{"nodeType":"YulAssignment","src":"7707:30:17","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"7717:18:17"},"nodeType":"YulFunctionCall","src":"7717:20:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7707:6:17"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7766:6:17"},{"name":"size","nodeType":"YulIdentifier","src":"7774:4:17"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"7746:19:17"},"nodeType":"YulFunctionCall","src":"7746:33:17"},"nodeType":"YulExpressionStatement","src":"7746:33:17"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"7681:4:17","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"7690:6:17","type":""}],"src":"7656:129:17"},{"body":{"nodeType":"YulBlock","src":"7857:241:17","statements":[{"body":{"nodeType":"YulBlock","src":"7962:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7964:16:17"},"nodeType":"YulFunctionCall","src":"7964:18:17"},"nodeType":"YulExpressionStatement","src":"7964:18:17"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7934:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"7942:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7931:2:17"},"nodeType":"YulFunctionCall","src":"7931:30:17"},"nodeType":"YulIf","src":"7928:56:17"},{"nodeType":"YulAssignment","src":"7994:37:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8024:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8002:21:17"},"nodeType":"YulFunctionCall","src":"8002:29:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"7994:4:17"}]},{"nodeType":"YulAssignment","src":"8068:23:17","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"8080:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"8086:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8076:3:17"},"nodeType":"YulFunctionCall","src":"8076:15:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8068:4:17"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"7841:6:17","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"7852:4:17","type":""}],"src":"7791:307:17"},{"body":{"nodeType":"YulBlock","src":"8168:82:17","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8191:3:17"},{"name":"src","nodeType":"YulIdentifier","src":"8196:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"8201:6:17"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"8178:12:17"},"nodeType":"YulFunctionCall","src":"8178:30:17"},"nodeType":"YulExpressionStatement","src":"8178:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8228:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"8233:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8224:3:17"},"nodeType":"YulFunctionCall","src":"8224:16:17"},{"kind":"number","nodeType":"YulLiteral","src":"8242:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8217:6:17"},"nodeType":"YulFunctionCall","src":"8217:27:17"},"nodeType":"YulExpressionStatement","src":"8217:27:17"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8150:3:17","type":""},{"name":"dst","nodeType":"YulTypedName","src":"8155:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"8160:6:17","type":""}],"src":"8104:146:17"},{"body":{"nodeType":"YulBlock","src":"8339:340:17","statements":[{"nodeType":"YulAssignment","src":"8349:74:17","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8415:6:17"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8374:40:17"},"nodeType":"YulFunctionCall","src":"8374:48:17"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"8358:15:17"},"nodeType":"YulFunctionCall","src":"8358:65:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8349:5:17"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8439:5:17"},{"name":"length","nodeType":"YulIdentifier","src":"8446:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8432:6:17"},"nodeType":"YulFunctionCall","src":"8432:21:17"},"nodeType":"YulExpressionStatement","src":"8432:21:17"},{"nodeType":"YulVariableDeclaration","src":"8462:27:17","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8477:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"8484:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8473:3:17"},"nodeType":"YulFunctionCall","src":"8473:16:17"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"8466:3:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"8527:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"8529:77:17"},"nodeType":"YulFunctionCall","src":"8529:79:17"},"nodeType":"YulExpressionStatement","src":"8529:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8508:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"8513:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8504:3:17"},"nodeType":"YulFunctionCall","src":"8504:16:17"},{"name":"end","nodeType":"YulIdentifier","src":"8522:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8501:2:17"},"nodeType":"YulFunctionCall","src":"8501:25:17"},"nodeType":"YulIf","src":"8498:112:17"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8656:3:17"},{"name":"dst","nodeType":"YulIdentifier","src":"8661:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"8666:6:17"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"8619:36:17"},"nodeType":"YulFunctionCall","src":"8619:54:17"},"nodeType":"YulExpressionStatement","src":"8619:54:17"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8312:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"8317:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"8325:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8333:5:17","type":""}],"src":"8256:423:17"},{"body":{"nodeType":"YulBlock","src":"8759:277:17","statements":[{"body":{"nodeType":"YulBlock","src":"8808:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"8810:77:17"},"nodeType":"YulFunctionCall","src":"8810:79:17"},"nodeType":"YulExpressionStatement","src":"8810:79:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8787:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"8795:4:17","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8783:3:17"},"nodeType":"YulFunctionCall","src":"8783:17:17"},{"name":"end","nodeType":"YulIdentifier","src":"8802:3:17"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8779:3:17"},"nodeType":"YulFunctionCall","src":"8779:27:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8772:6:17"},"nodeType":"YulFunctionCall","src":"8772:35:17"},"nodeType":"YulIf","src":"8769:122:17"},{"nodeType":"YulVariableDeclaration","src":"8900:34:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8927:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8914:12:17"},"nodeType":"YulFunctionCall","src":"8914:20:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8904:6:17","type":""}]},{"nodeType":"YulAssignment","src":"8943:87:17","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9003:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"9011:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8999:3:17"},"nodeType":"YulFunctionCall","src":"8999:17:17"},{"name":"length","nodeType":"YulIdentifier","src":"9018:6:17"},{"name":"end","nodeType":"YulIdentifier","src":"9026:3:17"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8952:46:17"},"nodeType":"YulFunctionCall","src":"8952:78:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8943:5:17"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8737:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"8745:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8753:5:17","type":""}],"src":"8698:338:17"},{"body":{"nodeType":"YulBlock","src":"9168:817:17","statements":[{"body":{"nodeType":"YulBlock","src":"9215:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9217:77:17"},"nodeType":"YulFunctionCall","src":"9217:79:17"},"nodeType":"YulExpressionStatement","src":"9217:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9189:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"9198:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9185:3:17"},"nodeType":"YulFunctionCall","src":"9185:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"9210:3:17","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9181:3:17"},"nodeType":"YulFunctionCall","src":"9181:33:17"},"nodeType":"YulIf","src":"9178:120:17"},{"nodeType":"YulBlock","src":"9308:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"9323:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"9337:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9327:6:17","type":""}]},{"nodeType":"YulAssignment","src":"9352:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9387:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"9398:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9383:3:17"},"nodeType":"YulFunctionCall","src":"9383:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9407:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9362:20:17"},"nodeType":"YulFunctionCall","src":"9362:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9352:6:17"}]}]},{"nodeType":"YulBlock","src":"9435:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"9450:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"9464:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9454:6:17","type":""}]},{"nodeType":"YulAssignment","src":"9480:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9515:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"9526:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9511:3:17"},"nodeType":"YulFunctionCall","src":"9511:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9535:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9490:20:17"},"nodeType":"YulFunctionCall","src":"9490:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9480:6:17"}]}]},{"nodeType":"YulBlock","src":"9563:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"9578:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"9592:2:17","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9582:6:17","type":""}]},{"nodeType":"YulAssignment","src":"9608:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9643:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"9654:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9639:3:17"},"nodeType":"YulFunctionCall","src":"9639:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9663:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9618:20:17"},"nodeType":"YulFunctionCall","src":"9618:53:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"9608:6:17"}]}]},{"nodeType":"YulBlock","src":"9691:287:17","statements":[{"nodeType":"YulVariableDeclaration","src":"9706:46:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9737:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9748:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9733:3:17"},"nodeType":"YulFunctionCall","src":"9733:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9720:12:17"},"nodeType":"YulFunctionCall","src":"9720:32:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9710:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"9799:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"9801:77:17"},"nodeType":"YulFunctionCall","src":"9801:79:17"},"nodeType":"YulExpressionStatement","src":"9801:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9771:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"9779:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9768:2:17"},"nodeType":"YulFunctionCall","src":"9768:30:17"},"nodeType":"YulIf","src":"9765:117:17"},{"nodeType":"YulAssignment","src":"9896:72:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9940:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"9951:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9936:3:17"},"nodeType":"YulFunctionCall","src":"9936:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9960:7:17"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"9906:29:17"},"nodeType":"YulFunctionCall","src":"9906:62:17"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"9896:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9114:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9125:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9137:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9145:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9153:6:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9161:6:17","type":""}],"src":"9042:943:17"},{"body":{"nodeType":"YulBlock","src":"10074:391:17","statements":[{"body":{"nodeType":"YulBlock","src":"10120:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10122:77:17"},"nodeType":"YulFunctionCall","src":"10122:79:17"},"nodeType":"YulExpressionStatement","src":"10122:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10095:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"10104:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10091:3:17"},"nodeType":"YulFunctionCall","src":"10091:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"10116:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10087:3:17"},"nodeType":"YulFunctionCall","src":"10087:32:17"},"nodeType":"YulIf","src":"10084:119:17"},{"nodeType":"YulBlock","src":"10213:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"10228:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"10242:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10232:6:17","type":""}]},{"nodeType":"YulAssignment","src":"10257:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10292:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"10303:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10288:3:17"},"nodeType":"YulFunctionCall","src":"10288:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10312:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10267:20:17"},"nodeType":"YulFunctionCall","src":"10267:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10257:6:17"}]}]},{"nodeType":"YulBlock","src":"10340:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"10355:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"10369:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10359:6:17","type":""}]},{"nodeType":"YulAssignment","src":"10385:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10420:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"10431:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10416:3:17"},"nodeType":"YulFunctionCall","src":"10416:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10440:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10395:20:17"},"nodeType":"YulFunctionCall","src":"10395:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10385:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10036:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10047:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10059:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10067:6:17","type":""}],"src":"9991:474:17"},{"body":{"nodeType":"YulBlock","src":"10499:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10516:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10519:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10509:6:17"},"nodeType":"YulFunctionCall","src":"10509:88:17"},"nodeType":"YulExpressionStatement","src":"10509:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10613:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10616:4:17","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10606:6:17"},"nodeType":"YulFunctionCall","src":"10606:15:17"},"nodeType":"YulExpressionStatement","src":"10606:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10637:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10640:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10630:6:17"},"nodeType":"YulFunctionCall","src":"10630:15:17"},"nodeType":"YulExpressionStatement","src":"10630:15:17"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"10471:180:17"},{"body":{"nodeType":"YulBlock","src":"10708:269:17","statements":[{"nodeType":"YulAssignment","src":"10718:22:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10732:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"10738:1:17","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"10728:3:17"},"nodeType":"YulFunctionCall","src":"10728:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10718:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"10749:38:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10779:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"10785:1:17","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10775:3:17"},"nodeType":"YulFunctionCall","src":"10775:12:17"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"10753:18:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"10826:51:17","statements":[{"nodeType":"YulAssignment","src":"10840:27:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10854:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"10862:4:17","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10850:3:17"},"nodeType":"YulFunctionCall","src":"10850:17:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10840:6:17"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"10806:18:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10799:6:17"},"nodeType":"YulFunctionCall","src":"10799:26:17"},"nodeType":"YulIf","src":"10796:81:17"},{"body":{"nodeType":"YulBlock","src":"10929:42:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"10943:16:17"},"nodeType":"YulFunctionCall","src":"10943:18:17"},"nodeType":"YulExpressionStatement","src":"10943:18:17"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"10893:18:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10916:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"10924:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10913:2:17"},"nodeType":"YulFunctionCall","src":"10913:14:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10890:2:17"},"nodeType":"YulFunctionCall","src":"10890:38:17"},"nodeType":"YulIf","src":"10887:84:17"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"10692:4:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"10701:6:17","type":""}],"src":"10657:320:17"},{"body":{"nodeType":"YulBlock","src":"11089:114:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11111:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"11119:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11107:3:17"},"nodeType":"YulFunctionCall","src":"11107:14:17"},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e65","kind":"string","nodeType":"YulLiteral","src":"11123:34:17","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11100:6:17"},"nodeType":"YulFunctionCall","src":"11100:58:17"},"nodeType":"YulExpressionStatement","src":"11100:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11179:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"11187:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11175:3:17"},"nodeType":"YulFunctionCall","src":"11175:15:17"},{"hexValue":"72","kind":"string","nodeType":"YulLiteral","src":"11192:3:17","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11168:6:17"},"nodeType":"YulFunctionCall","src":"11168:28:17"},"nodeType":"YulExpressionStatement","src":"11168:28:17"}]},"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11081:6:17","type":""}],"src":"10983:220:17"},{"body":{"nodeType":"YulBlock","src":"11355:220:17","statements":[{"nodeType":"YulAssignment","src":"11365:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11431:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"11436:2:17","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11372:58:17"},"nodeType":"YulFunctionCall","src":"11372:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11365:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11537:3:17"}],"functionName":{"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulIdentifier","src":"11448:88:17"},"nodeType":"YulFunctionCall","src":"11448:93:17"},"nodeType":"YulExpressionStatement","src":"11448:93:17"},{"nodeType":"YulAssignment","src":"11550:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11561:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"11566:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11557:3:17"},"nodeType":"YulFunctionCall","src":"11557:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11550:3:17"}]}]},"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11343:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11351:3:17","type":""}],"src":"11209:366:17"},{"body":{"nodeType":"YulBlock","src":"11752:248:17","statements":[{"nodeType":"YulAssignment","src":"11762:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11774:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"11785:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11770:3:17"},"nodeType":"YulFunctionCall","src":"11770:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11762:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11809:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"11820:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11805:3:17"},"nodeType":"YulFunctionCall","src":"11805:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11828:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"11834:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11824:3:17"},"nodeType":"YulFunctionCall","src":"11824:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11798:6:17"},"nodeType":"YulFunctionCall","src":"11798:47:17"},"nodeType":"YulExpressionStatement","src":"11798:47:17"},{"nodeType":"YulAssignment","src":"11854:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11988:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11862:124:17"},"nodeType":"YulFunctionCall","src":"11862:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11854:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11732:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11747:4:17","type":""}],"src":"11581:419:17"},{"body":{"nodeType":"YulBlock","src":"12112:143:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12134:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"12142:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12130:3:17"},"nodeType":"YulFunctionCall","src":"12130:14:17"},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f","kind":"string","nodeType":"YulLiteral","src":"12146:34:17","type":"","value":"ERC721: approve caller is not to"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12123:6:17"},"nodeType":"YulFunctionCall","src":"12123:58:17"},"nodeType":"YulExpressionStatement","src":"12123:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12202:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"12210:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12198:3:17"},"nodeType":"YulFunctionCall","src":"12198:15:17"},{"hexValue":"6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c","kind":"string","nodeType":"YulLiteral","src":"12215:32:17","type":"","value":"ken owner nor approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12191:6:17"},"nodeType":"YulFunctionCall","src":"12191:57:17"},"nodeType":"YulExpressionStatement","src":"12191:57:17"}]},"name":"store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12104:6:17","type":""}],"src":"12006:249:17"},{"body":{"nodeType":"YulBlock","src":"12407:220:17","statements":[{"nodeType":"YulAssignment","src":"12417:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12483:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"12488:2:17","type":"","value":"62"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12424:58:17"},"nodeType":"YulFunctionCall","src":"12424:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12417:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12589:3:17"}],"functionName":{"name":"store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304","nodeType":"YulIdentifier","src":"12500:88:17"},"nodeType":"YulFunctionCall","src":"12500:93:17"},"nodeType":"YulExpressionStatement","src":"12500:93:17"},{"nodeType":"YulAssignment","src":"12602:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12613:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"12618:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12609:3:17"},"nodeType":"YulFunctionCall","src":"12609:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12602:3:17"}]}]},"name":"abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12395:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12403:3:17","type":""}],"src":"12261:366:17"},{"body":{"nodeType":"YulBlock","src":"12804:248:17","statements":[{"nodeType":"YulAssignment","src":"12814:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12826:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"12837:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12822:3:17"},"nodeType":"YulFunctionCall","src":"12822:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12814:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12861:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"12872:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12857:3:17"},"nodeType":"YulFunctionCall","src":"12857:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12880:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"12886:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12876:3:17"},"nodeType":"YulFunctionCall","src":"12876:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12850:6:17"},"nodeType":"YulFunctionCall","src":"12850:47:17"},"nodeType":"YulExpressionStatement","src":"12850:47:17"},{"nodeType":"YulAssignment","src":"12906:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13040:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12914:124:17"},"nodeType":"YulFunctionCall","src":"12914:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12906:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12784:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12799:4:17","type":""}],"src":"12633:419:17"},{"body":{"nodeType":"YulBlock","src":"13164:127:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13186:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"13194:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13182:3:17"},"nodeType":"YulFunctionCall","src":"13182:14:17"},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65","kind":"string","nodeType":"YulLiteral","src":"13198:34:17","type":"","value":"ERC721: caller is not token owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13175:6:17"},"nodeType":"YulFunctionCall","src":"13175:58:17"},"nodeType":"YulExpressionStatement","src":"13175:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13254:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"13262:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13250:3:17"},"nodeType":"YulFunctionCall","src":"13250:15:17"},{"hexValue":"72206e6f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"13267:16:17","type":"","value":"r nor approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13243:6:17"},"nodeType":"YulFunctionCall","src":"13243:41:17"},"nodeType":"YulExpressionStatement","src":"13243:41:17"}]},"name":"store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13156:6:17","type":""}],"src":"13058:233:17"},{"body":{"nodeType":"YulBlock","src":"13443:220:17","statements":[{"nodeType":"YulAssignment","src":"13453:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13519:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"13524:2:17","type":"","value":"46"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13460:58:17"},"nodeType":"YulFunctionCall","src":"13460:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13453:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13625:3:17"}],"functionName":{"name":"store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b","nodeType":"YulIdentifier","src":"13536:88:17"},"nodeType":"YulFunctionCall","src":"13536:93:17"},"nodeType":"YulExpressionStatement","src":"13536:93:17"},{"nodeType":"YulAssignment","src":"13638:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13649:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"13654:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13645:3:17"},"nodeType":"YulFunctionCall","src":"13645:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13638:3:17"}]}]},"name":"abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13431:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13439:3:17","type":""}],"src":"13297:366:17"},{"body":{"nodeType":"YulBlock","src":"13840:248:17","statements":[{"nodeType":"YulAssignment","src":"13850:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13862:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"13873:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13858:3:17"},"nodeType":"YulFunctionCall","src":"13858:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13850:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13897:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"13908:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13893:3:17"},"nodeType":"YulFunctionCall","src":"13893:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13916:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"13922:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13912:3:17"},"nodeType":"YulFunctionCall","src":"13912:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13886:6:17"},"nodeType":"YulFunctionCall","src":"13886:47:17"},"nodeType":"YulExpressionStatement","src":"13886:47:17"},{"nodeType":"YulAssignment","src":"13942:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14076:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13950:124:17"},"nodeType":"YulFunctionCall","src":"13950:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13942:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13820:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13835:4:17","type":""}],"src":"13669:419:17"},{"body":{"nodeType":"YulBlock","src":"14200:68:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14222:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"14230:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14218:3:17"},"nodeType":"YulFunctionCall","src":"14218:14:17"},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","kind":"string","nodeType":"YulLiteral","src":"14234:26:17","type":"","value":"ERC721: invalid token ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14211:6:17"},"nodeType":"YulFunctionCall","src":"14211:50:17"},"nodeType":"YulExpressionStatement","src":"14211:50:17"}]},"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14192:6:17","type":""}],"src":"14094:174:17"},{"body":{"nodeType":"YulBlock","src":"14420:220:17","statements":[{"nodeType":"YulAssignment","src":"14430:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14496:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"14501:2:17","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14437:58:17"},"nodeType":"YulFunctionCall","src":"14437:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14430:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14602:3:17"}],"functionName":{"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulIdentifier","src":"14513:88:17"},"nodeType":"YulFunctionCall","src":"14513:93:17"},"nodeType":"YulExpressionStatement","src":"14513:93:17"},{"nodeType":"YulAssignment","src":"14615:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14626:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"14631:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14622:3:17"},"nodeType":"YulFunctionCall","src":"14622:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14615:3:17"}]}]},"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14408:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14416:3:17","type":""}],"src":"14274:366:17"},{"body":{"nodeType":"YulBlock","src":"14817:248:17","statements":[{"nodeType":"YulAssignment","src":"14827:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14839:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"14850:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14835:3:17"},"nodeType":"YulFunctionCall","src":"14835:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14827:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14874:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"14885:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14870:3:17"},"nodeType":"YulFunctionCall","src":"14870:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14893:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"14899:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14889:3:17"},"nodeType":"YulFunctionCall","src":"14889:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14863:6:17"},"nodeType":"YulFunctionCall","src":"14863:47:17"},"nodeType":"YulExpressionStatement","src":"14863:47:17"},{"nodeType":"YulAssignment","src":"14919:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15053:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14927:124:17"},"nodeType":"YulFunctionCall","src":"14927:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14919:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14797:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14812:4:17","type":""}],"src":"14646:419:17"},{"body":{"nodeType":"YulBlock","src":"15177:122:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15199:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"15207:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15195:3:17"},"nodeType":"YulFunctionCall","src":"15195:14:17"},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f742061207661","kind":"string","nodeType":"YulLiteral","src":"15211:34:17","type":"","value":"ERC721: address zero is not a va"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15188:6:17"},"nodeType":"YulFunctionCall","src":"15188:58:17"},"nodeType":"YulExpressionStatement","src":"15188:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15267:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"15275:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15263:3:17"},"nodeType":"YulFunctionCall","src":"15263:15:17"},{"hexValue":"6c6964206f776e6572","kind":"string","nodeType":"YulLiteral","src":"15280:11:17","type":"","value":"lid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15256:6:17"},"nodeType":"YulFunctionCall","src":"15256:36:17"},"nodeType":"YulExpressionStatement","src":"15256:36:17"}]},"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15169:6:17","type":""}],"src":"15071:228:17"},{"body":{"nodeType":"YulBlock","src":"15451:220:17","statements":[{"nodeType":"YulAssignment","src":"15461:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15527:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"15532:2:17","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15468:58:17"},"nodeType":"YulFunctionCall","src":"15468:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15461:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15633:3:17"}],"functionName":{"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulIdentifier","src":"15544:88:17"},"nodeType":"YulFunctionCall","src":"15544:93:17"},"nodeType":"YulExpressionStatement","src":"15544:93:17"},{"nodeType":"YulAssignment","src":"15646:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15657:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"15662:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15653:3:17"},"nodeType":"YulFunctionCall","src":"15653:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15646:3:17"}]}]},"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15439:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15447:3:17","type":""}],"src":"15305:366:17"},{"body":{"nodeType":"YulBlock","src":"15848:248:17","statements":[{"nodeType":"YulAssignment","src":"15858:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15870:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"15881:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15866:3:17"},"nodeType":"YulFunctionCall","src":"15866:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15858:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15905:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"15916:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15901:3:17"},"nodeType":"YulFunctionCall","src":"15901:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15924:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"15930:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15920:3:17"},"nodeType":"YulFunctionCall","src":"15920:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15894:6:17"},"nodeType":"YulFunctionCall","src":"15894:47:17"},"nodeType":"YulExpressionStatement","src":"15894:47:17"},{"nodeType":"YulAssignment","src":"15950:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16084:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15958:124:17"},"nodeType":"YulFunctionCall","src":"15958:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15950:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15828:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15843:4:17","type":""}],"src":"15677:419:17"},{"body":{"nodeType":"YulBlock","src":"16216:34:17","statements":[{"nodeType":"YulAssignment","src":"16226:18:17","value":{"name":"pos","nodeType":"YulIdentifier","src":"16241:3:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"16226:11:17"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16188:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"16193:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"16204:11:17","type":""}],"src":"16102:148:17"},{"body":{"nodeType":"YulBlock","src":"16366:280:17","statements":[{"nodeType":"YulVariableDeclaration","src":"16376:53:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16423:5:17"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"16390:32:17"},"nodeType":"YulFunctionCall","src":"16390:39:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"16380:6:17","type":""}]},{"nodeType":"YulAssignment","src":"16438:96:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16522:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"16527:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"16445:76:17"},"nodeType":"YulFunctionCall","src":"16445:89:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16438:3:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16582:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"16589:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16578:3:17"},"nodeType":"YulFunctionCall","src":"16578:16:17"},{"name":"pos","nodeType":"YulIdentifier","src":"16596:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"16601:6:17"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"16543:34:17"},"nodeType":"YulFunctionCall","src":"16543:65:17"},"nodeType":"YulExpressionStatement","src":"16543:65:17"},{"nodeType":"YulAssignment","src":"16617:23:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16628:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"16633:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16624:3:17"},"nodeType":"YulFunctionCall","src":"16624:16:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16617:3:17"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16347:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16354:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16362:3:17","type":""}],"src":"16256:390:17"},{"body":{"nodeType":"YulBlock","src":"16836:251:17","statements":[{"nodeType":"YulAssignment","src":"16847:102:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16936:6:17"},{"name":"pos","nodeType":"YulIdentifier","src":"16945:3:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"16854:81:17"},"nodeType":"YulFunctionCall","src":"16854:95:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16847:3:17"}]},{"nodeType":"YulAssignment","src":"16959:102:17","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17048:6:17"},{"name":"pos","nodeType":"YulIdentifier","src":"17057:3:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"16966:81:17"},"nodeType":"YulFunctionCall","src":"16966:95:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16959:3:17"}]},{"nodeType":"YulAssignment","src":"17071:10:17","value":{"name":"pos","nodeType":"YulIdentifier","src":"17078:3:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17071:3:17"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16807:3:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16813:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16821:6:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16832:3:17","type":""}],"src":"16652:435:17"},{"body":{"nodeType":"YulBlock","src":"17199:118:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17221:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"17229:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17217:3:17"},"nodeType":"YulFunctionCall","src":"17217:14:17"},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f727265637420","kind":"string","nodeType":"YulLiteral","src":"17233:34:17","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17210:6:17"},"nodeType":"YulFunctionCall","src":"17210:58:17"},"nodeType":"YulExpressionStatement","src":"17210:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17289:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"17297:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17285:3:17"},"nodeType":"YulFunctionCall","src":"17285:15:17"},{"hexValue":"6f776e6572","kind":"string","nodeType":"YulLiteral","src":"17302:7:17","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17278:6:17"},"nodeType":"YulFunctionCall","src":"17278:32:17"},"nodeType":"YulExpressionStatement","src":"17278:32:17"}]},"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17191:6:17","type":""}],"src":"17093:224:17"},{"body":{"nodeType":"YulBlock","src":"17469:220:17","statements":[{"nodeType":"YulAssignment","src":"17479:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17545:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"17550:2:17","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17486:58:17"},"nodeType":"YulFunctionCall","src":"17486:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17479:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17651:3:17"}],"functionName":{"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulIdentifier","src":"17562:88:17"},"nodeType":"YulFunctionCall","src":"17562:93:17"},"nodeType":"YulExpressionStatement","src":"17562:93:17"},{"nodeType":"YulAssignment","src":"17664:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17675:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"17680:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17671:3:17"},"nodeType":"YulFunctionCall","src":"17671:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17664:3:17"}]}]},"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17457:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17465:3:17","type":""}],"src":"17323:366:17"},{"body":{"nodeType":"YulBlock","src":"17866:248:17","statements":[{"nodeType":"YulAssignment","src":"17876:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17888:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"17899:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17884:3:17"},"nodeType":"YulFunctionCall","src":"17884:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17876:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17923:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"17934:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17919:3:17"},"nodeType":"YulFunctionCall","src":"17919:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17942:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"17948:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17938:3:17"},"nodeType":"YulFunctionCall","src":"17938:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17912:6:17"},"nodeType":"YulFunctionCall","src":"17912:47:17"},"nodeType":"YulExpressionStatement","src":"17912:47:17"},{"nodeType":"YulAssignment","src":"17968:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18102:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17976:124:17"},"nodeType":"YulFunctionCall","src":"17976:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17968:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17846:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17861:4:17","type":""}],"src":"17695:419:17"},{"body":{"nodeType":"YulBlock","src":"18226:117:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18248:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"18256:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18244:3:17"},"nodeType":"YulFunctionCall","src":"18244:14:17"},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"18260:34:17","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18237:6:17"},"nodeType":"YulFunctionCall","src":"18237:58:17"},"nodeType":"YulExpressionStatement","src":"18237:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18316:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"18324:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18312:3:17"},"nodeType":"YulFunctionCall","src":"18312:15:17"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"18329:6:17","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18305:6:17"},"nodeType":"YulFunctionCall","src":"18305:31:17"},"nodeType":"YulExpressionStatement","src":"18305:31:17"}]},"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18218:6:17","type":""}],"src":"18120:223:17"},{"body":{"nodeType":"YulBlock","src":"18495:220:17","statements":[{"nodeType":"YulAssignment","src":"18505:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18571:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"18576:2:17","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18512:58:17"},"nodeType":"YulFunctionCall","src":"18512:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18505:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18677:3:17"}],"functionName":{"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulIdentifier","src":"18588:88:17"},"nodeType":"YulFunctionCall","src":"18588:93:17"},"nodeType":"YulExpressionStatement","src":"18588:93:17"},{"nodeType":"YulAssignment","src":"18690:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18701:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"18706:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18697:3:17"},"nodeType":"YulFunctionCall","src":"18697:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18690:3:17"}]}]},"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18483:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18491:3:17","type":""}],"src":"18349:366:17"},{"body":{"nodeType":"YulBlock","src":"18892:248:17","statements":[{"nodeType":"YulAssignment","src":"18902:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18914:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"18925:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18910:3:17"},"nodeType":"YulFunctionCall","src":"18910:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18902:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18949:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"18960:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18945:3:17"},"nodeType":"YulFunctionCall","src":"18945:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18968:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"18974:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18964:3:17"},"nodeType":"YulFunctionCall","src":"18964:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18938:6:17"},"nodeType":"YulFunctionCall","src":"18938:47:17"},"nodeType":"YulExpressionStatement","src":"18938:47:17"},{"nodeType":"YulAssignment","src":"18994:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19128:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19002:124:17"},"nodeType":"YulFunctionCall","src":"19002:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18994:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18872:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18887:4:17","type":""}],"src":"18721:419:17"},{"body":{"nodeType":"YulBlock","src":"19174:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19191:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19194:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19184:6:17"},"nodeType":"YulFunctionCall","src":"19184:88:17"},"nodeType":"YulExpressionStatement","src":"19184:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19288:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"19291:4:17","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19281:6:17"},"nodeType":"YulFunctionCall","src":"19281:15:17"},"nodeType":"YulExpressionStatement","src":"19281:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19312:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19315:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19305:6:17"},"nodeType":"YulFunctionCall","src":"19305:15:17"},"nodeType":"YulExpressionStatement","src":"19305:15:17"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"19146:180:17"},{"body":{"nodeType":"YulBlock","src":"19377:149:17","statements":[{"nodeType":"YulAssignment","src":"19387:25:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19410:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19392:17:17"},"nodeType":"YulFunctionCall","src":"19392:20:17"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"19387:1:17"}]},{"nodeType":"YulAssignment","src":"19421:25:17","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"19444:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19426:17:17"},"nodeType":"YulFunctionCall","src":"19426:20:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"19421:1:17"}]},{"nodeType":"YulAssignment","src":"19455:17:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19467:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"19470:1:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19463:3:17"},"nodeType":"YulFunctionCall","src":"19463:9:17"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"19455:4:17"}]},{"body":{"nodeType":"YulBlock","src":"19497:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"19499:16:17"},"nodeType":"YulFunctionCall","src":"19499:18:17"},"nodeType":"YulExpressionStatement","src":"19499:18:17"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"19488:4:17"},{"name":"x","nodeType":"YulIdentifier","src":"19494:1:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19485:2:17"},"nodeType":"YulFunctionCall","src":"19485:11:17"},"nodeType":"YulIf","src":"19482:37:17"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"19363:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"19366:1:17","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"19372:4:17","type":""}],"src":"19332:194:17"},{"body":{"nodeType":"YulBlock","src":"19576:147:17","statements":[{"nodeType":"YulAssignment","src":"19586:25:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19609:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19591:17:17"},"nodeType":"YulFunctionCall","src":"19591:20:17"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"19586:1:17"}]},{"nodeType":"YulAssignment","src":"19620:25:17","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"19643:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19625:17:17"},"nodeType":"YulFunctionCall","src":"19625:20:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"19620:1:17"}]},{"nodeType":"YulAssignment","src":"19654:16:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19665:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"19668:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19661:3:17"},"nodeType":"YulFunctionCall","src":"19661:9:17"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"19654:3:17"}]},{"body":{"nodeType":"YulBlock","src":"19694:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"19696:16:17"},"nodeType":"YulFunctionCall","src":"19696:18:17"},"nodeType":"YulExpressionStatement","src":"19696:18:17"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19686:1:17"},{"name":"sum","nodeType":"YulIdentifier","src":"19689:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19683:2:17"},"nodeType":"YulFunctionCall","src":"19683:10:17"},"nodeType":"YulIf","src":"19680:36:17"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"19563:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"19566:1:17","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"19572:3:17","type":""}],"src":"19532:191:17"},{"body":{"nodeType":"YulBlock","src":"19835:69:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19857:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"19865:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19853:3:17"},"nodeType":"YulFunctionCall","src":"19853:14:17"},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"19869:27:17","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19846:6:17"},"nodeType":"YulFunctionCall","src":"19846:51:17"},"nodeType":"YulExpressionStatement","src":"19846:51:17"}]},"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19827:6:17","type":""}],"src":"19729:175:17"},{"body":{"nodeType":"YulBlock","src":"20056:220:17","statements":[{"nodeType":"YulAssignment","src":"20066:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20132:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"20137:2:17","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20073:58:17"},"nodeType":"YulFunctionCall","src":"20073:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20066:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20238:3:17"}],"functionName":{"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulIdentifier","src":"20149:88:17"},"nodeType":"YulFunctionCall","src":"20149:93:17"},"nodeType":"YulExpressionStatement","src":"20149:93:17"},{"nodeType":"YulAssignment","src":"20251:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20262:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"20267:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20258:3:17"},"nodeType":"YulFunctionCall","src":"20258:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20251:3:17"}]}]},"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20044:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20052:3:17","type":""}],"src":"19910:366:17"},{"body":{"nodeType":"YulBlock","src":"20453:248:17","statements":[{"nodeType":"YulAssignment","src":"20463:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20475:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"20486:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20471:3:17"},"nodeType":"YulFunctionCall","src":"20471:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20463:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20510:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"20521:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20506:3:17"},"nodeType":"YulFunctionCall","src":"20506:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20529:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"20535:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20525:3:17"},"nodeType":"YulFunctionCall","src":"20525:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20499:6:17"},"nodeType":"YulFunctionCall","src":"20499:47:17"},"nodeType":"YulExpressionStatement","src":"20499:47:17"},{"nodeType":"YulAssignment","src":"20555:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20689:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20563:124:17"},"nodeType":"YulFunctionCall","src":"20563:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20555:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20433:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20448:4:17","type":""}],"src":"20282:419:17"},{"body":{"nodeType":"YulBlock","src":"20813:131:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20835:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"20843:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20831:3:17"},"nodeType":"YulFunctionCall","src":"20831:14:17"},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e204552433732315265","kind":"string","nodeType":"YulLiteral","src":"20847:34:17","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20824:6:17"},"nodeType":"YulFunctionCall","src":"20824:58:17"},"nodeType":"YulExpressionStatement","src":"20824:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20903:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"20911:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20899:3:17"},"nodeType":"YulFunctionCall","src":"20899:15:17"},{"hexValue":"63656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"20916:20:17","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20892:6:17"},"nodeType":"YulFunctionCall","src":"20892:45:17"},"nodeType":"YulExpressionStatement","src":"20892:45:17"}]},"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20805:6:17","type":""}],"src":"20707:237:17"},{"body":{"nodeType":"YulBlock","src":"21096:220:17","statements":[{"nodeType":"YulAssignment","src":"21106:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21172:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"21177:2:17","type":"","value":"50"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21113:58:17"},"nodeType":"YulFunctionCall","src":"21113:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21106:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21278:3:17"}],"functionName":{"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulIdentifier","src":"21189:88:17"},"nodeType":"YulFunctionCall","src":"21189:93:17"},"nodeType":"YulExpressionStatement","src":"21189:93:17"},{"nodeType":"YulAssignment","src":"21291:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21302:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"21307:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21298:3:17"},"nodeType":"YulFunctionCall","src":"21298:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21291:3:17"}]}]},"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21084:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21092:3:17","type":""}],"src":"20950:366:17"},{"body":{"nodeType":"YulBlock","src":"21493:248:17","statements":[{"nodeType":"YulAssignment","src":"21503:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21515:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"21526:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21511:3:17"},"nodeType":"YulFunctionCall","src":"21511:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21503:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21550:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"21561:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21546:3:17"},"nodeType":"YulFunctionCall","src":"21546:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21569:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"21575:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21565:3:17"},"nodeType":"YulFunctionCall","src":"21565:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21539:6:17"},"nodeType":"YulFunctionCall","src":"21539:47:17"},"nodeType":"YulExpressionStatement","src":"21539:47:17"},{"nodeType":"YulAssignment","src":"21595:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21729:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21603:124:17"},"nodeType":"YulFunctionCall","src":"21603:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21595:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21473:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21488:4:17","type":""}],"src":"21322:419:17"},{"body":{"nodeType":"YulBlock","src":"21790:190:17","statements":[{"nodeType":"YulAssignment","src":"21800:33:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21827:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21809:17:17"},"nodeType":"YulFunctionCall","src":"21809:24:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"21800:5:17"}]},{"body":{"nodeType":"YulBlock","src":"21923:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"21925:16:17"},"nodeType":"YulFunctionCall","src":"21925:18:17"},"nodeType":"YulExpressionStatement","src":"21925:18:17"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21848:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"21855:66:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"21845:2:17"},"nodeType":"YulFunctionCall","src":"21845:77:17"},"nodeType":"YulIf","src":"21842:103:17"},{"nodeType":"YulAssignment","src":"21954:20:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21965:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"21972:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21961:3:17"},"nodeType":"YulFunctionCall","src":"21961:13:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"21954:3:17"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21776:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"21786:3:17","type":""}],"src":"21747:233:17"},{"body":{"nodeType":"YulBlock","src":"22014:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22031:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22034:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22024:6:17"},"nodeType":"YulFunctionCall","src":"22024:88:17"},"nodeType":"YulExpressionStatement","src":"22024:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22128:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"22131:4:17","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22121:6:17"},"nodeType":"YulFunctionCall","src":"22121:15:17"},"nodeType":"YulExpressionStatement","src":"22121:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22152:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22155:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22145:6:17"},"nodeType":"YulFunctionCall","src":"22145:15:17"},"nodeType":"YulExpressionStatement","src":"22145:15:17"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"21986:180:17"},{"body":{"nodeType":"YulBlock","src":"22214:143:17","statements":[{"nodeType":"YulAssignment","src":"22224:25:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22247:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"22229:17:17"},"nodeType":"YulFunctionCall","src":"22229:20:17"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"22224:1:17"}]},{"nodeType":"YulAssignment","src":"22258:25:17","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"22281:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"22263:17:17"},"nodeType":"YulFunctionCall","src":"22263:20:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"22258:1:17"}]},{"body":{"nodeType":"YulBlock","src":"22305:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"22307:16:17"},"nodeType":"YulFunctionCall","src":"22307:18:17"},"nodeType":"YulExpressionStatement","src":"22307:18:17"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"22302:1:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22295:6:17"},"nodeType":"YulFunctionCall","src":"22295:9:17"},"nodeType":"YulIf","src":"22292:35:17"},{"nodeType":"YulAssignment","src":"22337:14:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22346:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"22349:1:17"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"22342:3:17"},"nodeType":"YulFunctionCall","src":"22342:9:17"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"22337:1:17"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"22203:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"22206:1:17","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"22212:1:17","type":""}],"src":"22172:185:17"},{"body":{"nodeType":"YulBlock","src":"22397:142:17","statements":[{"nodeType":"YulAssignment","src":"22407:25:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22430:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"22412:17:17"},"nodeType":"YulFunctionCall","src":"22412:20:17"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"22407:1:17"}]},{"nodeType":"YulAssignment","src":"22441:25:17","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"22464:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"22446:17:17"},"nodeType":"YulFunctionCall","src":"22446:20:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"22441:1:17"}]},{"body":{"nodeType":"YulBlock","src":"22488:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"22490:16:17"},"nodeType":"YulFunctionCall","src":"22490:18:17"},"nodeType":"YulExpressionStatement","src":"22490:18:17"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"22485:1:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22478:6:17"},"nodeType":"YulFunctionCall","src":"22478:9:17"},"nodeType":"YulIf","src":"22475:35:17"},{"nodeType":"YulAssignment","src":"22519:14:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22528:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"22531:1:17"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"22524:3:17"},"nodeType":"YulFunctionCall","src":"22524:9:17"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"22519:1:17"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"22386:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"22389:1:17","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"22395:1:17","type":""}],"src":"22363:176:17"},{"body":{"nodeType":"YulBlock","src":"22573:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22590:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22593:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22583:6:17"},"nodeType":"YulFunctionCall","src":"22583:88:17"},"nodeType":"YulExpressionStatement","src":"22583:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22687:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"22690:4:17","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22680:6:17"},"nodeType":"YulFunctionCall","src":"22680:15:17"},"nodeType":"YulExpressionStatement","src":"22680:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22711:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22714:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22704:6:17"},"nodeType":"YulFunctionCall","src":"22704:15:17"},"nodeType":"YulExpressionStatement","src":"22704:15:17"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"22545:180:17"},{"body":{"nodeType":"YulBlock","src":"22789:40:17","statements":[{"nodeType":"YulAssignment","src":"22800:22:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22816:5:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22810:5:17"},"nodeType":"YulFunctionCall","src":"22810:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"22800:6:17"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22772:5:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"22782:6:17","type":""}],"src":"22731:98:17"},{"body":{"nodeType":"YulBlock","src":"22930:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22947:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"22952:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22940:6:17"},"nodeType":"YulFunctionCall","src":"22940:19:17"},"nodeType":"YulExpressionStatement","src":"22940:19:17"},{"nodeType":"YulAssignment","src":"22968:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22987:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"22992:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22983:3:17"},"nodeType":"YulFunctionCall","src":"22983:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"22968:11:17"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22902:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"22907:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"22918:11:17","type":""}],"src":"22835:168:17"},{"body":{"nodeType":"YulBlock","src":"23099:283:17","statements":[{"nodeType":"YulVariableDeclaration","src":"23109:52:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23155:5:17"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"23123:31:17"},"nodeType":"YulFunctionCall","src":"23123:38:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"23113:6:17","type":""}]},{"nodeType":"YulAssignment","src":"23170:77:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23235:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"23240:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23177:57:17"},"nodeType":"YulFunctionCall","src":"23177:70:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23170:3:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23295:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"23302:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23291:3:17"},"nodeType":"YulFunctionCall","src":"23291:16:17"},{"name":"pos","nodeType":"YulIdentifier","src":"23309:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"23314:6:17"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"23256:34:17"},"nodeType":"YulFunctionCall","src":"23256:65:17"},"nodeType":"YulExpressionStatement","src":"23256:65:17"},{"nodeType":"YulAssignment","src":"23330:46:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23341:3:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"23368:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"23346:21:17"},"nodeType":"YulFunctionCall","src":"23346:29:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23337:3:17"},"nodeType":"YulFunctionCall","src":"23337:39:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23330:3:17"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23080:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"23087:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23095:3:17","type":""}],"src":"23009:373:17"},{"body":{"nodeType":"YulBlock","src":"23588:440:17","statements":[{"nodeType":"YulAssignment","src":"23598:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23610:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"23621:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23606:3:17"},"nodeType":"YulFunctionCall","src":"23606:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23598:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23679:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23692:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"23703:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23688:3:17"},"nodeType":"YulFunctionCall","src":"23688:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"23635:43:17"},"nodeType":"YulFunctionCall","src":"23635:71:17"},"nodeType":"YulExpressionStatement","src":"23635:71:17"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"23760:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23773:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"23784:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23769:3:17"},"nodeType":"YulFunctionCall","src":"23769:18:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"23716:43:17"},"nodeType":"YulFunctionCall","src":"23716:72:17"},"nodeType":"YulExpressionStatement","src":"23716:72:17"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"23842:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23855:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"23866:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23851:3:17"},"nodeType":"YulFunctionCall","src":"23851:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"23798:43:17"},"nodeType":"YulFunctionCall","src":"23798:72:17"},"nodeType":"YulExpressionStatement","src":"23798:72:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23891:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"23902:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23887:3:17"},"nodeType":"YulFunctionCall","src":"23887:18:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23911:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"23917:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23907:3:17"},"nodeType":"YulFunctionCall","src":"23907:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23880:6:17"},"nodeType":"YulFunctionCall","src":"23880:48:17"},"nodeType":"YulExpressionStatement","src":"23880:48:17"},{"nodeType":"YulAssignment","src":"23937:84:17","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"24007:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"24016:4:17"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23945:61:17"},"nodeType":"YulFunctionCall","src":"23945:76:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23937:4:17"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23536:9:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"23548:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"23556:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23564:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23572:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23583:4:17","type":""}],"src":"23388:640:17"},{"body":{"nodeType":"YulBlock","src":"24096:79:17","statements":[{"nodeType":"YulAssignment","src":"24106:22:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"24121:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"24115:5:17"},"nodeType":"YulFunctionCall","src":"24115:13:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"24106:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24163:5:17"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"24137:25:17"},"nodeType":"YulFunctionCall","src":"24137:32:17"},"nodeType":"YulExpressionStatement","src":"24137:32:17"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"24074:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"24082:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"24090:5:17","type":""}],"src":"24034:141:17"},{"body":{"nodeType":"YulBlock","src":"24257:273:17","statements":[{"body":{"nodeType":"YulBlock","src":"24303:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"24305:77:17"},"nodeType":"YulFunctionCall","src":"24305:79:17"},"nodeType":"YulExpressionStatement","src":"24305:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"24278:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"24287:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24274:3:17"},"nodeType":"YulFunctionCall","src":"24274:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"24299:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"24270:3:17"},"nodeType":"YulFunctionCall","src":"24270:32:17"},"nodeType":"YulIf","src":"24267:119:17"},{"nodeType":"YulBlock","src":"24396:127:17","statements":[{"nodeType":"YulVariableDeclaration","src":"24411:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"24425:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"24415:6:17","type":""}]},{"nodeType":"YulAssignment","src":"24440:73:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24485:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"24496:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24481:3:17"},"nodeType":"YulFunctionCall","src":"24481:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"24505:7:17"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"24450:30:17"},"nodeType":"YulFunctionCall","src":"24450:63:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"24440:6:17"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24227:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"24238:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"24250:6:17","type":""}],"src":"24181:349:17"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not to\")\n\n        mstore(add(memPtr, 32), \"ken owner nor approved for all\")\n\n    }\n\n    function abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 62)\n        store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: caller is not token owne\")\n\n        mstore(add(memPtr, 32), \"r nor approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: invalid token ID\")\n\n    }\n\n    function abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: address zero is not a va\")\n\n        mstore(add(memPtr, 32), \"lid owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer from incorrect \")\n\n        mstore(add(memPtr, 32), \"owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":17,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb46514610224578063b88d4fde14610240578063c87b56dd1461025c578063e985e9c51461028c576100cf565b80636352211e146101a657806370a08231146101d657806395d89b4114610206576100cf565b806301ffc9a7146100d457806306fdde0314610104578063081812fc14610122578063095ea7b31461015257806323b872dd1461016e57806342842e0e1461018a575b600080fd5b6100ee60048036038101906100e991906113b7565b6102bc565b6040516100fb91906113ff565b60405180910390f35b61010c61039e565b60405161011991906114aa565b60405180910390f35b61013c60048036038101906101379190611502565b610430565b6040516101499190611570565b60405180910390f35b61016c600480360381019061016791906115b7565b610476565b005b610188600480360381019061018391906115f7565b61058d565b005b6101a4600480360381019061019f91906115f7565b6105ed565b005b6101c060048036038101906101bb9190611502565b61060d565b6040516101cd9190611570565b60405180910390f35b6101f060048036038101906101eb919061164a565b6106be565b6040516101fd9190611686565b60405180910390f35b61020e610775565b60405161021b91906114aa565b60405180910390f35b61023e600480360381019061023991906116cd565b610807565b005b61025a60048036038101906102559190611842565b61081d565b005b61027660048036038101906102719190611502565b61087f565b60405161028391906114aa565b60405180910390f35b6102a660048036038101906102a191906118c5565b6108e7565b6040516102b391906113ff565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061039757506103968261097b565b5b9050919050565b6060600080546103ad90611934565b80601f01602080910402602001604051908101604052809291908181526020018280546103d990611934565b80156104265780601f106103fb57610100808354040283529160200191610426565b820191906000526020600020905b81548152906001019060200180831161040957829003601f168201915b5050505050905090565b600061043b826109e5565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104818261060d565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036104f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e8906119d7565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610510610a30565b73ffffffffffffffffffffffffffffffffffffffff16148061053f575061053e81610539610a30565b6108e7565b5b61057e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057590611a69565b60405180910390fd5b6105888383610a38565b505050565b61059e610598610a30565b82610af1565b6105dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d490611afb565b60405180910390fd5b6105e8838383610b86565b505050565b6106088383836040518060200160405280600081525061081d565b505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ac90611b67565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361072e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072590611bf9565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606001805461078490611934565b80601f01602080910402602001604051908101604052809291908181526020018280546107b090611934565b80156107fd5780601f106107d2576101008083540402835291602001916107fd565b820191906000526020600020905b8154815290600101906020018083116107e057829003601f168201915b5050505050905090565b610819610812610a30565b8383610dec565b5050565b61082e610828610a30565b83610af1565b61086d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086490611afb565b60405180910390fd5b61087984848484610f58565b50505050565b606061088a826109e5565b6000610894610fb4565b905060008151116108b457604051806020016040528060008152506108df565b806108be84610fcb565b6040516020016108cf929190611c55565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6109ee8161112b565b610a2d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2490611b67565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610aab8361060d565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610afd8361060d565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610b3f5750610b3e81856108e7565b5b80610b7d57508373ffffffffffffffffffffffffffffffffffffffff16610b6584610430565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610ba68261060d565b73ffffffffffffffffffffffffffffffffffffffff1614610bfc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf390611ceb565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c6b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6290611d7d565b60405180910390fd5b610c76838383611197565b610c81600082610a38565b6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610cd19190611dcc565b925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d289190611e00565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610de783838361119c565b505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e5a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e5190611e80565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610f4b91906113ff565b60405180910390a3505050565b610f63848484610b86565b610f6f848484846111a1565b610fae576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fa590611f12565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b606060008203611012576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611126565b600082905060005b6000821461104457808061102d90611f32565b915050600a8261103d9190611fa9565b915061101a565b60008167ffffffffffffffff8111156110605761105f611717565b5b6040519080825280601f01601f1916602001820160405280156110925781602001600182028036833780820191505090505b5090505b6000851461111f576001826110ab9190611dcc565b9150600a856110ba9190611fda565b60306110c69190611e00565b60f81b8183815181106110dc576110db61200b565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a856111189190611fa9565b9450611096565b8093505050505b919050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b505050565b505050565b60006111c28473ffffffffffffffffffffffffffffffffffffffff16611328565b1561131b578373ffffffffffffffffffffffffffffffffffffffff1663150b7a026111eb610a30565b8786866040518563ffffffff1660e01b815260040161120d949392919061208f565b6020604051808303816000875af192505050801561124957506040513d601f19601f8201168201806040525081019061124691906120f0565b60015b6112cb573d8060008114611279576040519150601f19603f3d011682016040523d82523d6000602084013e61127e565b606091505b5060008151036112c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112ba90611f12565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611320565b600190505b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6113948161135f565b811461139f57600080fd5b50565b6000813590506113b18161138b565b92915050565b6000602082840312156113cd576113cc611355565b5b60006113db848285016113a2565b91505092915050565b60008115159050919050565b6113f9816113e4565b82525050565b600060208201905061141460008301846113f0565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611454578082015181840152602081019050611439565b60008484015250505050565b6000601f19601f8301169050919050565b600061147c8261141a565b6114868185611425565b9350611496818560208601611436565b61149f81611460565b840191505092915050565b600060208201905081810360008301526114c48184611471565b905092915050565b6000819050919050565b6114df816114cc565b81146114ea57600080fd5b50565b6000813590506114fc816114d6565b92915050565b60006020828403121561151857611517611355565b5b6000611526848285016114ed565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061155a8261152f565b9050919050565b61156a8161154f565b82525050565b60006020820190506115856000830184611561565b92915050565b6115948161154f565b811461159f57600080fd5b50565b6000813590506115b18161158b565b92915050565b600080604083850312156115ce576115cd611355565b5b60006115dc858286016115a2565b92505060206115ed858286016114ed565b9150509250929050565b6000806000606084860312156116105761160f611355565b5b600061161e868287016115a2565b935050602061162f868287016115a2565b9250506040611640868287016114ed565b9150509250925092565b6000602082840312156116605761165f611355565b5b600061166e848285016115a2565b91505092915050565b611680816114cc565b82525050565b600060208201905061169b6000830184611677565b92915050565b6116aa816113e4565b81146116b557600080fd5b50565b6000813590506116c7816116a1565b92915050565b600080604083850312156116e4576116e3611355565b5b60006116f2858286016115a2565b9250506020611703858286016116b8565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61174f82611460565b810181811067ffffffffffffffff8211171561176e5761176d611717565b5b80604052505050565b600061178161134b565b905061178d8282611746565b919050565b600067ffffffffffffffff8211156117ad576117ac611717565b5b6117b682611460565b9050602081019050919050565b82818337600083830152505050565b60006117e56117e084611792565b611777565b90508281526020810184848401111561180157611800611712565b5b61180c8482856117c3565b509392505050565b600082601f8301126118295761182861170d565b5b81356118398482602086016117d2565b91505092915050565b6000806000806080858703121561185c5761185b611355565b5b600061186a878288016115a2565b945050602061187b878288016115a2565b935050604061188c878288016114ed565b925050606085013567ffffffffffffffff8111156118ad576118ac61135a565b5b6118b987828801611814565b91505092959194509250565b600080604083850312156118dc576118db611355565b5b60006118ea858286016115a2565b92505060206118fb858286016115a2565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061194c57607f821691505b60208210810361195f5761195e611905565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b60006119c1602183611425565b91506119cc82611965565b604082019050919050565b600060208201905081810360008301526119f0816119b4565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c0000602082015250565b6000611a53603e83611425565b9150611a5e826119f7565b604082019050919050565b60006020820190508181036000830152611a8281611a46565b9050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206e6f7220617070726f766564000000000000000000000000000000000000602082015250565b6000611ae5602e83611425565b9150611af082611a89565b604082019050919050565b60006020820190508181036000830152611b1481611ad8565b9050919050565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b6000611b51601883611425565b9150611b5c82611b1b565b602082019050919050565b60006020820190508181036000830152611b8081611b44565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b6000611be3602983611425565b9150611bee82611b87565b604082019050919050565b60006020820190508181036000830152611c1281611bd6565b9050919050565b600081905092915050565b6000611c2f8261141a565b611c398185611c19565b9350611c49818560208601611436565b80840191505092915050565b6000611c618285611c24565b9150611c6d8284611c24565b91508190509392505050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b6000611cd5602583611425565b9150611ce082611c79565b604082019050919050565b60006020820190508181036000830152611d0481611cc8565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611d67602483611425565b9150611d7282611d0b565b604082019050919050565b60006020820190508181036000830152611d9681611d5a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611dd7826114cc565b9150611de2836114cc565b9250828203905081811115611dfa57611df9611d9d565b5b92915050565b6000611e0b826114cc565b9150611e16836114cc565b9250828201905080821115611e2e57611e2d611d9d565b5b92915050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b6000611e6a601983611425565b9150611e7582611e34565b602082019050919050565b60006020820190508181036000830152611e9981611e5d565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b6000611efc603283611425565b9150611f0782611ea0565b604082019050919050565b60006020820190508181036000830152611f2b81611eef565b9050919050565b6000611f3d826114cc565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611f6f57611f6e611d9d565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611fb4826114cc565b9150611fbf836114cc565b925082611fcf57611fce611f7a565b5b828204905092915050565b6000611fe5826114cc565b9150611ff0836114cc565b92508261200057611fff611f7a565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081519050919050565b600082825260208201905092915050565b60006120618261203a565b61206b8185612045565b935061207b818560208601611436565b61208481611460565b840191505092915050565b60006080820190506120a46000830187611561565b6120b16020830186611561565b6120be6040830185611677565b81810360608301526120d08184612056565b905095945050505050565b6000815190506120ea8161138b565b92915050565b60006020828403121561210657612105611355565b5b6000612114848285016120db565b9150509291505056fea26469706673582212209a27420b02b7a543a0b0294acb3109f24bdf46ba96f0baa42e09d77153711f2664736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x28C JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x206 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x18A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x13B7 JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x13FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x14AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x1502 JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x1570 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x15B7 JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x15F7 JUMP JUMPDEST PUSH2 0x58D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x15F7 JUMP JUMPDEST PUSH2 0x5ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x1502 JUMP JUMPDEST PUSH2 0x60D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x1570 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x164A JUMP JUMPDEST PUSH2 0x6BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x1686 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH2 0x775 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x14AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x16CD JUMP JUMPDEST PUSH2 0x807 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x1842 JUMP JUMPDEST PUSH2 0x81D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x1502 JUMP JUMPDEST PUSH2 0x87F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x14AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x18C5 JUMP JUMPDEST PUSH2 0x8E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x13FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x387 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x397 JUMPI POP PUSH2 0x396 DUP3 PUSH2 0x97B JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x3AD SWAP1 PUSH2 0x1934 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D9 SWAP1 PUSH2 0x1934 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x426 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x426 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x409 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43B DUP3 PUSH2 0x9E5 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x481 DUP3 PUSH2 0x60D JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E8 SWAP1 PUSH2 0x19D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x510 PUSH2 0xA30 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x53F JUMPI POP PUSH2 0x53E DUP2 PUSH2 0x539 PUSH2 0xA30 JUMP JUMPDEST PUSH2 0x8E7 JUMP JUMPDEST JUMPDEST PUSH2 0x57E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x575 SWAP1 PUSH2 0x1A69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x588 DUP4 DUP4 PUSH2 0xA38 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x59E PUSH2 0x598 PUSH2 0xA30 JUMP JUMPDEST DUP3 PUSH2 0xAF1 JUMP JUMPDEST PUSH2 0x5DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D4 SWAP1 PUSH2 0x1AFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E8 DUP4 DUP4 DUP4 PUSH2 0xB86 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x608 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x81D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AC SWAP1 PUSH2 0x1B67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x72E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x725 SWAP1 PUSH2 0x1BF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x784 SWAP1 PUSH2 0x1934 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7B0 SWAP1 PUSH2 0x1934 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7FD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7D2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7FD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7E0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x819 PUSH2 0x812 PUSH2 0xA30 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xDEC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x82E PUSH2 0x828 PUSH2 0xA30 JUMP JUMPDEST DUP4 PUSH2 0xAF1 JUMP JUMPDEST PUSH2 0x86D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x864 SWAP1 PUSH2 0x1AFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x879 DUP5 DUP5 DUP5 DUP5 PUSH2 0xF58 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x88A DUP3 PUSH2 0x9E5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x894 PUSH2 0xFB4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x8B4 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8DF JUMP JUMPDEST DUP1 PUSH2 0x8BE DUP5 PUSH2 0xFCB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8CF SWAP3 SWAP2 SWAP1 PUSH2 0x1C55 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9EE DUP2 PUSH2 0x112B JUMP JUMPDEST PUSH2 0xA2D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA24 SWAP1 PUSH2 0x1B67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAAB DUP4 PUSH2 0x60D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAFD DUP4 PUSH2 0x60D JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xB3F JUMPI POP PUSH2 0xB3E DUP2 DUP6 PUSH2 0x8E7 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xB7D JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB65 DUP5 PUSH2 0x430 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBA6 DUP3 PUSH2 0x60D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBFC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF3 SWAP1 PUSH2 0x1CEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC6B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC62 SWAP1 PUSH2 0x1D7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC76 DUP4 DUP4 DUP4 PUSH2 0x1197 JUMP JUMPDEST PUSH2 0xC81 PUSH1 0x0 DUP3 PUSH2 0xA38 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xCD1 SWAP2 SWAP1 PUSH2 0x1DCC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD28 SWAP2 SWAP1 PUSH2 0x1E00 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xDE7 DUP4 DUP4 DUP4 PUSH2 0x119C JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE5A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE51 SWAP1 PUSH2 0x1E80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xF4B SWAP2 SWAP1 PUSH2 0x13FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xF63 DUP5 DUP5 DUP5 PUSH2 0xB86 JUMP JUMPDEST PUSH2 0xF6F DUP5 DUP5 DUP5 DUP5 PUSH2 0x11A1 JUMP JUMPDEST PUSH2 0xFAE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFA5 SWAP1 PUSH2 0x1F12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 SUB PUSH2 0x1012 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x1126 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x1044 JUMPI DUP1 DUP1 PUSH2 0x102D SWAP1 PUSH2 0x1F32 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x103D SWAP2 SWAP1 PUSH2 0x1FA9 JUMP JUMPDEST SWAP2 POP PUSH2 0x101A JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1060 JUMPI PUSH2 0x105F PUSH2 0x1717 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1092 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0x111F JUMPI PUSH1 0x1 DUP3 PUSH2 0x10AB SWAP2 SWAP1 PUSH2 0x1DCC JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x10BA SWAP2 SWAP1 PUSH2 0x1FDA JUMP JUMPDEST PUSH1 0x30 PUSH2 0x10C6 SWAP2 SWAP1 PUSH2 0x1E00 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x10DC JUMPI PUSH2 0x10DB PUSH2 0x200B JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x1118 SWAP2 SWAP1 PUSH2 0x1FA9 JUMP JUMPDEST SWAP5 POP PUSH2 0x1096 JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C2 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1328 JUMP JUMPDEST ISZERO PUSH2 0x131B JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x11EB PUSH2 0xA30 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x120D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x208F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1249 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1246 SWAP2 SWAP1 PUSH2 0x20F0 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x12CB JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1279 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x127E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x12C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12BA SWAP1 PUSH2 0x1F12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x1320 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1394 DUP2 PUSH2 0x135F JUMP JUMPDEST DUP2 EQ PUSH2 0x139F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13B1 DUP2 PUSH2 0x138B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13CD JUMPI PUSH2 0x13CC PUSH2 0x1355 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13DB DUP5 DUP3 DUP6 ADD PUSH2 0x13A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13F9 DUP2 PUSH2 0x13E4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1414 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1454 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1439 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x147C DUP3 PUSH2 0x141A JUMP JUMPDEST PUSH2 0x1486 DUP2 DUP6 PUSH2 0x1425 JUMP JUMPDEST SWAP4 POP PUSH2 0x1496 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1436 JUMP JUMPDEST PUSH2 0x149F DUP2 PUSH2 0x1460 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14C4 DUP2 DUP5 PUSH2 0x1471 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14DF DUP2 PUSH2 0x14CC JUMP JUMPDEST DUP2 EQ PUSH2 0x14EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14FC DUP2 PUSH2 0x14D6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1518 JUMPI PUSH2 0x1517 PUSH2 0x1355 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1526 DUP5 DUP3 DUP6 ADD PUSH2 0x14ED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x155A DUP3 PUSH2 0x152F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x156A DUP2 PUSH2 0x154F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1585 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1561 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1594 DUP2 PUSH2 0x154F JUMP JUMPDEST DUP2 EQ PUSH2 0x159F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15B1 DUP2 PUSH2 0x158B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15CE JUMPI PUSH2 0x15CD PUSH2 0x1355 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15DC DUP6 DUP3 DUP7 ADD PUSH2 0x15A2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15ED DUP6 DUP3 DUP7 ADD PUSH2 0x14ED JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1610 JUMPI PUSH2 0x160F PUSH2 0x1355 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x161E DUP7 DUP3 DUP8 ADD PUSH2 0x15A2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x162F DUP7 DUP3 DUP8 ADD PUSH2 0x15A2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1640 DUP7 DUP3 DUP8 ADD PUSH2 0x14ED JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1660 JUMPI PUSH2 0x165F PUSH2 0x1355 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x166E DUP5 DUP3 DUP6 ADD PUSH2 0x15A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1680 DUP2 PUSH2 0x14CC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x169B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1677 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16AA DUP2 PUSH2 0x13E4 JUMP JUMPDEST DUP2 EQ PUSH2 0x16B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16C7 DUP2 PUSH2 0x16A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16E4 JUMPI PUSH2 0x16E3 PUSH2 0x1355 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16F2 DUP6 DUP3 DUP7 ADD PUSH2 0x15A2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1703 DUP6 DUP3 DUP7 ADD PUSH2 0x16B8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x174F DUP3 PUSH2 0x1460 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x176E JUMPI PUSH2 0x176D PUSH2 0x1717 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1781 PUSH2 0x134B JUMP JUMPDEST SWAP1 POP PUSH2 0x178D DUP3 DUP3 PUSH2 0x1746 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x17AD JUMPI PUSH2 0x17AC PUSH2 0x1717 JUMP JUMPDEST JUMPDEST PUSH2 0x17B6 DUP3 PUSH2 0x1460 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17E5 PUSH2 0x17E0 DUP5 PUSH2 0x1792 JUMP JUMPDEST PUSH2 0x1777 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1801 JUMPI PUSH2 0x1800 PUSH2 0x1712 JUMP JUMPDEST JUMPDEST PUSH2 0x180C DUP5 DUP3 DUP6 PUSH2 0x17C3 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1829 JUMPI PUSH2 0x1828 PUSH2 0x170D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1839 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x17D2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x185C JUMPI PUSH2 0x185B PUSH2 0x1355 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x186A DUP8 DUP3 DUP9 ADD PUSH2 0x15A2 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x187B DUP8 DUP3 DUP9 ADD PUSH2 0x15A2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x188C DUP8 DUP3 DUP9 ADD PUSH2 0x14ED JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18AD JUMPI PUSH2 0x18AC PUSH2 0x135A JUMP JUMPDEST JUMPDEST PUSH2 0x18B9 DUP8 DUP3 DUP9 ADD PUSH2 0x1814 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18DC JUMPI PUSH2 0x18DB PUSH2 0x1355 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18EA DUP6 DUP3 DUP7 ADD PUSH2 0x15A2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18FB DUP6 DUP3 DUP7 ADD PUSH2 0x15A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x194C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x195F JUMPI PUSH2 0x195E PUSH2 0x1905 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19C1 PUSH1 0x21 DUP4 PUSH2 0x1425 JUMP JUMPDEST SWAP2 POP PUSH2 0x19CC DUP3 PUSH2 0x1965 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19F0 DUP2 PUSH2 0x19B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206E6F7220617070726F76656420666F7220616C6C0000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A53 PUSH1 0x3E DUP4 PUSH2 0x1425 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A5E DUP3 PUSH2 0x19F7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A82 DUP2 PUSH2 0x1A46 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206E6F7220617070726F766564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AE5 PUSH1 0x2E DUP4 PUSH2 0x1425 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AF0 DUP3 PUSH2 0x1A89 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B14 DUP2 PUSH2 0x1AD8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B51 PUSH1 0x18 DUP4 PUSH2 0x1425 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B5C DUP3 PUSH2 0x1B1B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B80 DUP2 PUSH2 0x1B44 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BE3 PUSH1 0x29 DUP4 PUSH2 0x1425 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BEE DUP3 PUSH2 0x1B87 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C12 DUP2 PUSH2 0x1BD6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C2F DUP3 PUSH2 0x141A JUMP JUMPDEST PUSH2 0x1C39 DUP2 DUP6 PUSH2 0x1C19 JUMP JUMPDEST SWAP4 POP PUSH2 0x1C49 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1436 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C61 DUP3 DUP6 PUSH2 0x1C24 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C6D DUP3 DUP5 PUSH2 0x1C24 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CD5 PUSH1 0x25 DUP4 PUSH2 0x1425 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CE0 DUP3 PUSH2 0x1C79 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D04 DUP2 PUSH2 0x1CC8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D67 PUSH1 0x24 DUP4 PUSH2 0x1425 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D72 DUP3 PUSH2 0x1D0B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D96 DUP2 PUSH2 0x1D5A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1DD7 DUP3 PUSH2 0x14CC JUMP JUMPDEST SWAP2 POP PUSH2 0x1DE2 DUP4 PUSH2 0x14CC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1DFA JUMPI PUSH2 0x1DF9 PUSH2 0x1D9D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E0B DUP3 PUSH2 0x14CC JUMP JUMPDEST SWAP2 POP PUSH2 0x1E16 DUP4 PUSH2 0x14CC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1E2E JUMPI PUSH2 0x1E2D PUSH2 0x1D9D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E6A PUSH1 0x19 DUP4 PUSH2 0x1425 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E75 DUP3 PUSH2 0x1E34 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E99 DUP2 PUSH2 0x1E5D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EFC PUSH1 0x32 DUP4 PUSH2 0x1425 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F07 DUP3 PUSH2 0x1EA0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F2B DUP2 PUSH2 0x1EEF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F3D DUP3 PUSH2 0x14CC JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1F6F JUMPI PUSH2 0x1F6E PUSH2 0x1D9D JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1FB4 DUP3 PUSH2 0x14CC JUMP JUMPDEST SWAP2 POP PUSH2 0x1FBF DUP4 PUSH2 0x14CC JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1FCF JUMPI PUSH2 0x1FCE PUSH2 0x1F7A JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FE5 DUP3 PUSH2 0x14CC JUMP JUMPDEST SWAP2 POP PUSH2 0x1FF0 DUP4 PUSH2 0x14CC JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2000 JUMPI PUSH2 0x1FFF PUSH2 0x1F7A JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2061 DUP3 PUSH2 0x203A JUMP JUMPDEST PUSH2 0x206B DUP2 DUP6 PUSH2 0x2045 JUMP JUMPDEST SWAP4 POP PUSH2 0x207B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1436 JUMP JUMPDEST PUSH2 0x2084 DUP2 PUSH2 0x1460 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x20A4 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1561 JUMP JUMPDEST PUSH2 0x20B1 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1561 JUMP JUMPDEST PUSH2 0x20BE PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1677 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x20D0 DUP2 DUP5 PUSH2 0x2056 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x20EA DUP2 PUSH2 0x138B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2106 JUMPI PUSH2 0x2105 PUSH2 0x1355 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2114 DUP5 DUP3 DUP6 ADD PUSH2 0x20DB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 0x27 TIMESTAMP SIGNEXTEND MUL 0xB7 0xA5 NUMBER LOG0 0xB0 0x29 0x4A 0xCB BALANCE MULMOD CALLCODE 0x4B 0xDF CHAINID 0xBA SWAP7 CREATE 0xBA LOG4 0x2E MULMOD 0xD7 PUSH18 0x53711F2664736F6C63430008120033000000 ","sourceMap":"628:13718:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2470:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3935:167;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3467:407;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4612:327;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5005:179;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2190:218;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1929:204;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2632:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4169:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5250:315;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2800:276;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4388:162;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1570:300;1672:4;1722:25;1707:40;;;:11;:40;;;;:104;;;;1778:33;1763:48;;;:11;:48;;;;1707:104;:156;;;;1827:36;1851:11;1827:23;:36::i;:::-;1707:156;1688:175;;1570:300;;;:::o;2470:98::-;2524:13;2556:5;2549:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2470:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;4071:15;:24;4087:7;4071:24;;;;;;;;;;;;;;;;;;;;;4064:31;;3935:167;;;:::o;3467:407::-;3547:13;3563:23;3578:7;3563:14;:23::i;:::-;3547:39;;3610:5;3604:11;;:2;:11;;;3596:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3701:5;3685:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3710:37;3727:5;3734:12;:10;:12::i;:::-;3710:16;:37::i;:::-;3685:62;3664:171;;;;;;;;;;;;:::i;:::-;;;;;;;;;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3537:337;3467:407;;:::o;4612:327::-;4801:41;4820:12;:10;:12::i;:::-;4834:7;4801:18;:41::i;:::-;4793:100;;;;;;;;;;;;:::i;:::-;;;;;;;;;4904:28;4914:4;4920:2;4924:7;4904:9;:28::i;:::-;4612:327;;;:::o;5005:179::-;5138:39;5155:4;5161:2;5165:7;5138:39;;;;;;;;;;;;:16;:39::i;:::-;5005:179;;;:::o;2190:218::-;2262:7;2281:13;2297:7;:16;2305:7;2297:16;;;;;;;;;;;;;;;;;;;;;2281:32;;2348:1;2331:19;;:5;:19;;;2323:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2396:5;2389:12;;;2190:218;;;:::o;1929:204::-;2001:7;2045:1;2028:19;;:5;:19;;;2020:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2110:9;:16;2120:5;2110:16;;;;;;;;;;;;;;;;2103:23;;1929:204;;;:::o;2632:102::-;2688:13;2720:7;2713:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2632:102;:::o;4169:153::-;4263:52;4282:12;:10;:12::i;:::-;4296:8;4306;4263:18;:52::i;:::-;4169:153;;:::o;5250:315::-;5418:41;5437:12;:10;:12::i;:::-;5451:7;5418:18;:41::i;:::-;5410:100;;;;;;;;;;;;:::i;:::-;;;;;;;;;5520:38;5534:4;5540:2;5544:7;5553:4;5520:13;:38::i;:::-;5250:315;;;;:::o;2800:276::-;2873:13;2898:23;2913:7;2898:14;:23::i;:::-;2932:21;2956:10;:8;:10::i;:::-;2932:34;;3007:1;2989:7;2983:21;:25;:86;;;;;;;;;;;;;;;;;3035:7;3044:18;:7;:16;:18::i;:::-;3018:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2983:86;2976:93;;;2800:276;;;:::o;4388:162::-;4485:4;4508:18;:25;4527:5;4508:25;;;;;;;;;;;;;;;:35;4534:8;4508:35;;;;;;;;;;;;;;;;;;;;;;;;;4501:42;;4388:162;;;;:::o;829:155:12:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;11657:133:1:-;11738:16;11746:7;11738;:16::i;:::-;11730:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;11657:133;:::o;640:96:9:-;693:7;719:10;712:17;;640:96;:::o;10959:171:1:-;11060:2;11033:15;:24;11049:7;11033:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;11115:7;11111:2;11077:46;;11086:23;11101:7;11086:14;:23::i;:::-;11077:46;;;;;;;;;;;;10959:171;;:::o;7317:261::-;7410:4;7426:13;7442:23;7457:7;7442:14;:23::i;:::-;7426:39;;7494:5;7483:16;;:7;:16;;;:52;;;;7503:32;7520:5;7527:7;7503:16;:32::i;:::-;7483:52;:87;;;;7563:7;7539:31;;:20;7551:7;7539:11;:20::i;:::-;:31;;;7483:87;7475:96;;;7317:261;;;;:::o;10242:605::-;10396:4;10369:31;;:23;10384:7;10369:14;:23::i;:::-;:31;;;10361:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;10474:1;10460:16;;:2;:16;;;10452:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;10528:39;10549:4;10555:2;10559:7;10528:20;:39::i;:::-;10629:29;10646:1;10650:7;10629:8;:29::i;:::-;10688:1;10669:9;:15;10679:4;10669:15;;;;;;;;;;;;;;;;:20;;;;;;;:::i;:::-;;;;;;;;10716:1;10699:9;:13;10709:2;10699:13;;;;;;;;;;;;;;;;:18;;;;;;;:::i;:::-;;;;;;;;10746:2;10727:7;:16;10735:7;10727:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;10783:7;10779:2;10764:27;;10773:4;10764:27;;;;;;;;;;;;10802:38;10822:4;10828:2;10832:7;10802:19;:38::i;:::-;10242:605;;;:::o;11266:307::-;11416:8;11407:17;;:5;:17;;;11399:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;11502:8;11464:18;:25;11483:5;11464:25;;;;;;;;;;;;;;;:35;11490:8;11464:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;11547:8;11525:41;;11540:5;11525:41;;;11557:8;11525:41;;;;;;:::i;:::-;;;;;;;;11266:307;;;:::o;6426:305::-;6576:28;6586:4;6592:2;6596:7;6576:9;:28::i;:::-;6622:47;6645:4;6651:2;6655:7;6664:4;6622:22;:47::i;:::-;6614:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;6426:305;;;;:::o;3318:92::-;3369:13;3394:9;;;;;;;;;;;;;;3318:92;:::o;392:703:11:-;448:13;674:1;665:5;:10;661:51;;691:10;;;;;;;;;;;;;;;;;;;;;661:51;721:12;736:5;721:20;;751:14;775:75;790:1;782:4;:9;775:75;;807:8;;;;;:::i;:::-;;;;837:2;829:10;;;;;:::i;:::-;;;775:75;;;859:19;891:6;881:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;859:39;;908:150;924:1;915:5;:10;908:150;;951:1;941:11;;;;;:::i;:::-;;;1017:2;1009:5;:10;;;;:::i;:::-;996:2;:24;;;;:::i;:::-;983:39;;966:6;973;966:14;;;;;;;;:::i;:::-;;;;;:56;;;;;;;;;;;1045:2;1036:11;;;;;:::i;:::-;;;908:150;;;1081:6;1067:21;;;;;392:703;;;;:::o;7034:125:1:-;7099:4;7150:1;7122:30;;:7;:16;7130:7;7122:16;;;;;;;;;;;;;;;;;;;;;:30;;;;7115:37;;7034:125;;;:::o;13729:122::-;;;;:::o;14223:121::-;;;;:::o;12342:831::-;12491:4;12511:15;:2;:13;;;:15::i;:::-;12507:660;;;12562:2;12546:36;;;12583:12;:10;:12::i;:::-;12597:4;12603:7;12612:4;12546:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;12542:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12801:1;12784:6;:13;:18;12780:321;;12826:60;;;;;;;;;;:::i;:::-;;;;;;;;12780:321;13053:6;13047:13;13038:6;13034:2;13030:15;13023:38;12542:573;12677:41;;;12667:51;;;:6;:51;;;;12660:58;;;;;12507:660;13152:4;13145:11;;12342:831;;;;;;;:::o;1175:320:8:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;7:75:17:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:619::-;4967:6;4975;4983;5032:2;5020:9;5011:7;5007:23;5003:32;5000:119;;;5038:79;;:::i;:::-;5000:119;5158:1;5183:53;5228:7;5219:6;5208:9;5204:22;5183:53;:::i;:::-;5173:63;;5129:117;5285:2;5311:53;5356:7;5347:6;5336:9;5332:22;5311:53;:::i;:::-;5301:63;;5256:118;5413:2;5439:53;5484:7;5475:6;5464:9;5460:22;5439:53;:::i;:::-;5429:63;;5384:118;4890:619;;;;;:::o;5515:329::-;5574:6;5623:2;5611:9;5602:7;5598:23;5594:32;5591:119;;;5629:79;;:::i;:::-;5591:119;5749:1;5774:53;5819:7;5810:6;5799:9;5795:22;5774:53;:::i;:::-;5764:63;;5720:117;5515:329;;;;:::o;5850:118::-;5937:24;5955:5;5937:24;:::i;:::-;5932:3;5925:37;5850:118;;:::o;5974:222::-;6067:4;6105:2;6094:9;6090:18;6082:26;;6118:71;6186:1;6175:9;6171:17;6162:6;6118:71;:::i;:::-;5974:222;;;;:::o;6202:116::-;6272:21;6287:5;6272:21;:::i;:::-;6265:5;6262:32;6252:60;;6308:1;6305;6298:12;6252:60;6202:116;:::o;6324:133::-;6367:5;6405:6;6392:20;6383:29;;6421:30;6445:5;6421:30;:::i;:::-;6324:133;;;;:::o;6463:468::-;6528:6;6536;6585:2;6573:9;6564:7;6560:23;6556:32;6553:119;;;6591:79;;:::i;:::-;6553:119;6711:1;6736:53;6781:7;6772:6;6761:9;6757:22;6736:53;:::i;:::-;6726:63;;6682:117;6838:2;6864:50;6906:7;6897:6;6886:9;6882:22;6864:50;:::i;:::-;6854:60;;6809:115;6463:468;;;;;:::o;6937:117::-;7046:1;7043;7036:12;7060:117;7169:1;7166;7159:12;7183:180;7231:77;7228:1;7221:88;7328:4;7325:1;7318:15;7352:4;7349:1;7342:15;7369:281;7452:27;7474:4;7452:27;:::i;:::-;7444:6;7440:40;7582:6;7570:10;7567:22;7546:18;7534:10;7531:34;7528:62;7525:88;;;7593:18;;:::i;:::-;7525:88;7633:10;7629:2;7622:22;7412:238;7369:281;;:::o;7656:129::-;7690:6;7717:20;;:::i;:::-;7707:30;;7746:33;7774:4;7766:6;7746:33;:::i;:::-;7656:129;;;:::o;7791:307::-;7852:4;7942:18;7934:6;7931:30;7928:56;;;7964:18;;:::i;:::-;7928:56;8002:29;8024:6;8002:29;:::i;:::-;7994:37;;8086:4;8080;8076:15;8068:23;;7791:307;;;:::o;8104:146::-;8201:6;8196:3;8191;8178:30;8242:1;8233:6;8228:3;8224:16;8217:27;8104:146;;;:::o;8256:423::-;8333:5;8358:65;8374:48;8415:6;8374:48;:::i;:::-;8358:65;:::i;:::-;8349:74;;8446:6;8439:5;8432:21;8484:4;8477:5;8473:16;8522:3;8513:6;8508:3;8504:16;8501:25;8498:112;;;8529:79;;:::i;:::-;8498:112;8619:54;8666:6;8661:3;8656;8619:54;:::i;:::-;8339:340;8256:423;;;;;:::o;8698:338::-;8753:5;8802:3;8795:4;8787:6;8783:17;8779:27;8769:122;;8810:79;;:::i;:::-;8769:122;8927:6;8914:20;8952:78;9026:3;9018:6;9011:4;9003:6;8999:17;8952:78;:::i;:::-;8943:87;;8759:277;8698:338;;;;:::o;9042:943::-;9137:6;9145;9153;9161;9210:3;9198:9;9189:7;9185:23;9181:33;9178:120;;;9217:79;;:::i;:::-;9178:120;9337:1;9362:53;9407:7;9398:6;9387:9;9383:22;9362:53;:::i;:::-;9352:63;;9308:117;9464:2;9490:53;9535:7;9526:6;9515:9;9511:22;9490:53;:::i;:::-;9480:63;;9435:118;9592:2;9618:53;9663:7;9654:6;9643:9;9639:22;9618:53;:::i;:::-;9608:63;;9563:118;9748:2;9737:9;9733:18;9720:32;9779:18;9771:6;9768:30;9765:117;;;9801:79;;:::i;:::-;9765:117;9906:62;9960:7;9951:6;9940:9;9936:22;9906:62;:::i;:::-;9896:72;;9691:287;9042:943;;;;;;;:::o;9991:474::-;10059:6;10067;10116:2;10104:9;10095:7;10091:23;10087:32;10084:119;;;10122:79;;:::i;:::-;10084:119;10242:1;10267:53;10312:7;10303:6;10292:9;10288:22;10267:53;:::i;:::-;10257:63;;10213:117;10369:2;10395:53;10440:7;10431:6;10420:9;10416:22;10395:53;:::i;:::-;10385:63;;10340:118;9991:474;;;;;:::o;10471:180::-;10519:77;10516:1;10509:88;10616:4;10613:1;10606:15;10640:4;10637:1;10630:15;10657:320;10701:6;10738:1;10732:4;10728:12;10718:22;;10785:1;10779:4;10775:12;10806:18;10796:81;;10862:4;10854:6;10850:17;10840:27;;10796:81;10924:2;10916:6;10913:14;10893:18;10890:38;10887:84;;10943:18;;:::i;:::-;10887:84;10708:269;10657:320;;;:::o;10983:220::-;11123:34;11119:1;11111:6;11107:14;11100:58;11192:3;11187:2;11179:6;11175:15;11168:28;10983:220;:::o;11209:366::-;11351:3;11372:67;11436:2;11431:3;11372:67;:::i;:::-;11365:74;;11448:93;11537:3;11448:93;:::i;:::-;11566:2;11561:3;11557:12;11550:19;;11209:366;;;:::o;11581:419::-;11747:4;11785:2;11774:9;11770:18;11762:26;;11834:9;11828:4;11824:20;11820:1;11809:9;11805:17;11798:47;11862:131;11988:4;11862:131;:::i;:::-;11854:139;;11581:419;;;:::o;12006:249::-;12146:34;12142:1;12134:6;12130:14;12123:58;12215:32;12210:2;12202:6;12198:15;12191:57;12006:249;:::o;12261:366::-;12403:3;12424:67;12488:2;12483:3;12424:67;:::i;:::-;12417:74;;12500:93;12589:3;12500:93;:::i;:::-;12618:2;12613:3;12609:12;12602:19;;12261:366;;;:::o;12633:419::-;12799:4;12837:2;12826:9;12822:18;12814:26;;12886:9;12880:4;12876:20;12872:1;12861:9;12857:17;12850:47;12914:131;13040:4;12914:131;:::i;:::-;12906:139;;12633:419;;;:::o;13058:233::-;13198:34;13194:1;13186:6;13182:14;13175:58;13267:16;13262:2;13254:6;13250:15;13243:41;13058:233;:::o;13297:366::-;13439:3;13460:67;13524:2;13519:3;13460:67;:::i;:::-;13453:74;;13536:93;13625:3;13536:93;:::i;:::-;13654:2;13649:3;13645:12;13638:19;;13297:366;;;:::o;13669:419::-;13835:4;13873:2;13862:9;13858:18;13850:26;;13922:9;13916:4;13912:20;13908:1;13897:9;13893:17;13886:47;13950:131;14076:4;13950:131;:::i;:::-;13942:139;;13669:419;;;:::o;14094:174::-;14234:26;14230:1;14222:6;14218:14;14211:50;14094:174;:::o;14274:366::-;14416:3;14437:67;14501:2;14496:3;14437:67;:::i;:::-;14430:74;;14513:93;14602:3;14513:93;:::i;:::-;14631:2;14626:3;14622:12;14615:19;;14274:366;;;:::o;14646:419::-;14812:4;14850:2;14839:9;14835:18;14827:26;;14899:9;14893:4;14889:20;14885:1;14874:9;14870:17;14863:47;14927:131;15053:4;14927:131;:::i;:::-;14919:139;;14646:419;;;:::o;15071:228::-;15211:34;15207:1;15199:6;15195:14;15188:58;15280:11;15275:2;15267:6;15263:15;15256:36;15071:228;:::o;15305:366::-;15447:3;15468:67;15532:2;15527:3;15468:67;:::i;:::-;15461:74;;15544:93;15633:3;15544:93;:::i;:::-;15662:2;15657:3;15653:12;15646:19;;15305:366;;;:::o;15677:419::-;15843:4;15881:2;15870:9;15866:18;15858:26;;15930:9;15924:4;15920:20;15916:1;15905:9;15901:17;15894:47;15958:131;16084:4;15958:131;:::i;:::-;15950:139;;15677:419;;;:::o;16102:148::-;16204:11;16241:3;16226:18;;16102:148;;;;:::o;16256:390::-;16362:3;16390:39;16423:5;16390:39;:::i;:::-;16445:89;16527:6;16522:3;16445:89;:::i;:::-;16438:96;;16543:65;16601:6;16596:3;16589:4;16582:5;16578:16;16543:65;:::i;:::-;16633:6;16628:3;16624:16;16617:23;;16366:280;16256:390;;;;:::o;16652:435::-;16832:3;16854:95;16945:3;16936:6;16854:95;:::i;:::-;16847:102;;16966:95;17057:3;17048:6;16966:95;:::i;:::-;16959:102;;17078:3;17071:10;;16652:435;;;;;:::o;17093:224::-;17233:34;17229:1;17221:6;17217:14;17210:58;17302:7;17297:2;17289:6;17285:15;17278:32;17093:224;:::o;17323:366::-;17465:3;17486:67;17550:2;17545:3;17486:67;:::i;:::-;17479:74;;17562:93;17651:3;17562:93;:::i;:::-;17680:2;17675:3;17671:12;17664:19;;17323:366;;;:::o;17695:419::-;17861:4;17899:2;17888:9;17884:18;17876:26;;17948:9;17942:4;17938:20;17934:1;17923:9;17919:17;17912:47;17976:131;18102:4;17976:131;:::i;:::-;17968:139;;17695:419;;;:::o;18120:223::-;18260:34;18256:1;18248:6;18244:14;18237:58;18329:6;18324:2;18316:6;18312:15;18305:31;18120:223;:::o;18349:366::-;18491:3;18512:67;18576:2;18571:3;18512:67;:::i;:::-;18505:74;;18588:93;18677:3;18588:93;:::i;:::-;18706:2;18701:3;18697:12;18690:19;;18349:366;;;:::o;18721:419::-;18887:4;18925:2;18914:9;18910:18;18902:26;;18974:9;18968:4;18964:20;18960:1;18949:9;18945:17;18938:47;19002:131;19128:4;19002:131;:::i;:::-;18994:139;;18721:419;;;:::o;19146:180::-;19194:77;19191:1;19184:88;19291:4;19288:1;19281:15;19315:4;19312:1;19305:15;19332:194;19372:4;19392:20;19410:1;19392:20;:::i;:::-;19387:25;;19426:20;19444:1;19426:20;:::i;:::-;19421:25;;19470:1;19467;19463:9;19455:17;;19494:1;19488:4;19485:11;19482:37;;;19499:18;;:::i;:::-;19482:37;19332:194;;;;:::o;19532:191::-;19572:3;19591:20;19609:1;19591:20;:::i;:::-;19586:25;;19625:20;19643:1;19625:20;:::i;:::-;19620:25;;19668:1;19665;19661:9;19654:16;;19689:3;19686:1;19683:10;19680:36;;;19696:18;;:::i;:::-;19680:36;19532:191;;;;:::o;19729:175::-;19869:27;19865:1;19857:6;19853:14;19846:51;19729:175;:::o;19910:366::-;20052:3;20073:67;20137:2;20132:3;20073:67;:::i;:::-;20066:74;;20149:93;20238:3;20149:93;:::i;:::-;20267:2;20262:3;20258:12;20251:19;;19910:366;;;:::o;20282:419::-;20448:4;20486:2;20475:9;20471:18;20463:26;;20535:9;20529:4;20525:20;20521:1;20510:9;20506:17;20499:47;20563:131;20689:4;20563:131;:::i;:::-;20555:139;;20282:419;;;:::o;20707:237::-;20847:34;20843:1;20835:6;20831:14;20824:58;20916:20;20911:2;20903:6;20899:15;20892:45;20707:237;:::o;20950:366::-;21092:3;21113:67;21177:2;21172:3;21113:67;:::i;:::-;21106:74;;21189:93;21278:3;21189:93;:::i;:::-;21307:2;21302:3;21298:12;21291:19;;20950:366;;;:::o;21322:419::-;21488:4;21526:2;21515:9;21511:18;21503:26;;21575:9;21569:4;21565:20;21561:1;21550:9;21546:17;21539:47;21603:131;21729:4;21603:131;:::i;:::-;21595:139;;21322:419;;;:::o;21747:233::-;21786:3;21809:24;21827:5;21809:24;:::i;:::-;21800:33;;21855:66;21848:5;21845:77;21842:103;;21925:18;;:::i;:::-;21842:103;21972:1;21965:5;21961:13;21954:20;;21747:233;;;:::o;21986:180::-;22034:77;22031:1;22024:88;22131:4;22128:1;22121:15;22155:4;22152:1;22145:15;22172:185;22212:1;22229:20;22247:1;22229:20;:::i;:::-;22224:25;;22263:20;22281:1;22263:20;:::i;:::-;22258:25;;22302:1;22292:35;;22307:18;;:::i;:::-;22292:35;22349:1;22346;22342:9;22337:14;;22172:185;;;;:::o;22363:176::-;22395:1;22412:20;22430:1;22412:20;:::i;:::-;22407:25;;22446:20;22464:1;22446:20;:::i;:::-;22441:25;;22485:1;22475:35;;22490:18;;:::i;:::-;22475:35;22531:1;22528;22524:9;22519:14;;22363:176;;;;:::o;22545:180::-;22593:77;22590:1;22583:88;22690:4;22687:1;22680:15;22714:4;22711:1;22704:15;22731:98;22782:6;22816:5;22810:12;22800:22;;22731:98;;;:::o;22835:168::-;22918:11;22952:6;22947:3;22940:19;22992:4;22987:3;22983:14;22968:29;;22835:168;;;;:::o;23009:373::-;23095:3;23123:38;23155:5;23123:38;:::i;:::-;23177:70;23240:6;23235:3;23177:70;:::i;:::-;23170:77;;23256:65;23314:6;23309:3;23302:4;23295:5;23291:16;23256:65;:::i;:::-;23346:29;23368:6;23346:29;:::i;:::-;23341:3;23337:39;23330:46;;23099:283;23009:373;;;;:::o;23388:640::-;23583:4;23621:3;23610:9;23606:19;23598:27;;23635:71;23703:1;23692:9;23688:17;23679:6;23635:71;:::i;:::-;23716:72;23784:2;23773:9;23769:18;23760:6;23716:72;:::i;:::-;23798;23866:2;23855:9;23851:18;23842:6;23798:72;:::i;:::-;23917:9;23911:4;23907:20;23902:2;23891:9;23887:18;23880:48;23945:76;24016:4;24007:6;23945:76;:::i;:::-;23937:84;;23388:640;;;;;;;:::o;24034:141::-;24090:5;24121:6;24115:13;24106:22;;24137:32;24163:5;24137:32;:::i;:::-;24034:141;;;;:::o;24181:349::-;24250:6;24299:2;24287:9;24278:7;24274:23;24270:32;24267:119;;;24305:79;;:::i;:::-;24267:119;24425:1;24450:63;24505:7;24496:6;24485:9;24481:22;24450:63;:::i;:::-;24440:73;;24396:127;24181:349;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1706200","executionCost":"infinite","totalCost":"infinite"},"external":{"approve(address,uint256)":"infinite","balanceOf(address)":"2921","getApproved(uint256)":"5234","isApprovedForAll(address,address)":"infinite","name()":"infinite","ownerOf(uint256)":"2979","safeTransferFrom(address,address,uint256)":"infinite","safeTransferFrom(address,address,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"infinite","supportsInterface(bytes4)":"774","symbol()":"infinite","tokenURI(uint256)":"3416","transferFrom(address,address,uint256)":"infinite"},"internal":{"_afterTokenTransfer(address,address,uint256)":"15","_approve(address,uint256)":"infinite","_baseURI()":"infinite","_beforeTokenTransfer(address,address,uint256)":"15","_burn(uint256)":"infinite","_checkOnERC721Received(address,address,uint256,bytes memory)":"infinite","_exists(uint256)":"2269","_isApprovedOrOwner(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_requireMinted(uint256)":"infinite","_safeMint(address,uint256)":"infinite","_safeMint(address,uint256,bytes memory)":"infinite","_safeTransfer(address,address,uint256,bytes memory)":"infinite","_setApprovalForAll(address,address,bool)":"infinite","_transfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: address zero is not a valid owner\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _owners[tokenId];\\n        require(owner != address(0), \\\"ERC721: invalid token ID\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not token owner nor approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        _requireMinted(tokenId);\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner nor approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner nor approved\\\");\\n        _safeTransfer(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _owners[tokenId] != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId);\\n\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId);\\n\\n        // Clear approvals\\n        _approve(address(0), tokenId);\\n\\n        _balances[owner] -= 1;\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId);\\n\\n        // Clear approvals from the previous owner\\n        _approve(address(0), tokenId);\\n\\n        _balances[from] -= 1;\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(\\n        address owner,\\n        address operator,\\n        bool approved\\n    ) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` has not been minted yet.\\n     */\\n    function _requireMinted(uint256 tokenId) internal view virtual {\\n        require(_exists(tokenId), \\\"ERC721: invalid token ID\\\");\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x0b606994df12f0ce35f6d2f6dcdde7e55e6899cdef7e00f180980caa81e3844e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":138,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":140,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":144,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":148,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":152,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":158,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Required interface of an ERC721 compliant contract.","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.","kind":"dev","methods":{"onERC721Received(address,address,uint256,bytes)":{"details":"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."}},"title":"ERC721 token receiver interface","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol":{"ERC721Enumerable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"This implements an optional extension of {ERC721} defined in the EIP that adds enumerability of all the token ids in the contract as well as all token ids owned by each account.","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenByIndex(uint256)":{"details":"See {IERC721Enumerable-tokenByIndex}."},"tokenOfOwnerByIndex(address,uint256)":{"details":"See {IERC721Enumerable-tokenOfOwnerByIndex}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"totalSupply()":{"details":"See {IERC721Enumerable-totalSupply}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenByIndex(uint256)":"4f6ccce7","tokenOfOwnerByIndex(address,uint256)":"2f745c59","tokenURI(uint256)":"c87b56dd","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This implements an optional extension of {ERC721} defined in the EIP that adds enumerability of all the token ids in the contract as well as all token ids owned by each account.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":\"ERC721Enumerable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: address zero is not a valid owner\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _owners[tokenId];\\n        require(owner != address(0), \\\"ERC721: invalid token ID\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not token owner nor approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        _requireMinted(tokenId);\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner nor approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner nor approved\\\");\\n        _safeTransfer(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _owners[tokenId] != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId);\\n\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId);\\n\\n        // Clear approvals\\n        _approve(address(0), tokenId);\\n\\n        _balances[owner] -= 1;\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId);\\n\\n        // Clear approvals from the previous owner\\n        _approve(address(0), tokenId);\\n\\n        _balances[from] -= 1;\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(\\n        address owner,\\n        address operator,\\n        bool approved\\n    ) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` has not been minted yet.\\n     */\\n    function _requireMinted(uint256 tokenId) internal view virtual {\\n        require(_exists(tokenId), \\\"ERC721: invalid token ID\\\");\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x0b606994df12f0ce35f6d2f6dcdde7e55e6899cdef7e00f180980caa81e3844e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/ERC721Enumerable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC721.sol\\\";\\nimport \\\"./IERC721Enumerable.sol\\\";\\n\\n/**\\n * @dev This implements an optional extension of {ERC721} defined in the EIP that adds\\n * enumerability of all the token ids in the contract as well as all token ids owned by each\\n * account.\\n */\\nabstract contract ERC721Enumerable is ERC721, IERC721Enumerable {\\n    // Mapping from owner to list of owned token IDs\\n    mapping(address => mapping(uint256 => uint256)) private _ownedTokens;\\n\\n    // Mapping from token ID to index of the owner tokens list\\n    mapping(uint256 => uint256) private _ownedTokensIndex;\\n\\n    // Array with all token ids, used for enumeration\\n    uint256[] private _allTokens;\\n\\n    // Mapping from token id to position in the allTokens array\\n    mapping(uint256 => uint256) private _allTokensIndex;\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {\\n        return interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.\\n     */\\n    function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual override returns (uint256) {\\n        require(index < ERC721.balanceOf(owner), \\\"ERC721Enumerable: owner index out of bounds\\\");\\n        return _ownedTokens[owner][index];\\n    }\\n\\n    /**\\n     * @dev See {IERC721Enumerable-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _allTokens.length;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Enumerable-tokenByIndex}.\\n     */\\n    function tokenByIndex(uint256 index) public view virtual override returns (uint256) {\\n        require(index < ERC721Enumerable.totalSupply(), \\\"ERC721Enumerable: global index out of bounds\\\");\\n        return _allTokens[index];\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual override {\\n        super._beforeTokenTransfer(from, to, tokenId);\\n\\n        if (from == address(0)) {\\n            _addTokenToAllTokensEnumeration(tokenId);\\n        } else if (from != to) {\\n            _removeTokenFromOwnerEnumeration(from, tokenId);\\n        }\\n        if (to == address(0)) {\\n            _removeTokenFromAllTokensEnumeration(tokenId);\\n        } else if (to != from) {\\n            _addTokenToOwnerEnumeration(to, tokenId);\\n        }\\n    }\\n\\n    /**\\n     * @dev Private function to add a token to this extension's ownership-tracking data structures.\\n     * @param to address representing the new owner of the given token ID\\n     * @param tokenId uint256 ID of the token to be added to the tokens list of the given address\\n     */\\n    function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {\\n        uint256 length = ERC721.balanceOf(to);\\n        _ownedTokens[to][length] = tokenId;\\n        _ownedTokensIndex[tokenId] = length;\\n    }\\n\\n    /**\\n     * @dev Private function to add a token to this extension's token tracking data structures.\\n     * @param tokenId uint256 ID of the token to be added to the tokens list\\n     */\\n    function _addTokenToAllTokensEnumeration(uint256 tokenId) private {\\n        _allTokensIndex[tokenId] = _allTokens.length;\\n        _allTokens.push(tokenId);\\n    }\\n\\n    /**\\n     * @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\\n     * while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\\n     * gas optimizations e.g. when performing a transfer operation (avoiding double writes).\\n     * This has O(1) time complexity, but alters the order of the _ownedTokens array.\\n     * @param from address representing the previous owner of the given token ID\\n     * @param tokenId uint256 ID of the token to be removed from the tokens list of the given address\\n     */\\n    function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {\\n        // To prevent a gap in from's tokens array, we store the last token in the index of the token to delete, and\\n        // then delete the last slot (swap and pop).\\n\\n        uint256 lastTokenIndex = ERC721.balanceOf(from) - 1;\\n        uint256 tokenIndex = _ownedTokensIndex[tokenId];\\n\\n        // When the token to delete is the last token, the swap operation is unnecessary\\n        if (tokenIndex != lastTokenIndex) {\\n            uint256 lastTokenId = _ownedTokens[from][lastTokenIndex];\\n\\n            _ownedTokens[from][tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\\n            _ownedTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\\n        }\\n\\n        // This also deletes the contents at the last position of the array\\n        delete _ownedTokensIndex[tokenId];\\n        delete _ownedTokens[from][lastTokenIndex];\\n    }\\n\\n    /**\\n     * @dev Private function to remove a token from this extension's token tracking data structures.\\n     * This has O(1) time complexity, but alters the order of the _allTokens array.\\n     * @param tokenId uint256 ID of the token to be removed from the tokens list\\n     */\\n    function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {\\n        // To prevent a gap in the tokens array, we store the last token in the index of the token to delete, and\\n        // then delete the last slot (swap and pop).\\n\\n        uint256 lastTokenIndex = _allTokens.length - 1;\\n        uint256 tokenIndex = _allTokensIndex[tokenId];\\n\\n        // When the token to delete is the last token, the swap operation is unnecessary. However, since this occurs so\\n        // rarely (when the last minted token is burnt) that we still do the swap here to avoid the gas cost of adding\\n        // an 'if' statement (like in _removeTokenFromOwnerEnumeration)\\n        uint256 lastTokenId = _allTokens[lastTokenIndex];\\n\\n        _allTokens[tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\\n        _allTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\\n\\n        // This also deletes the contents at the last position of the array\\n        delete _allTokensIndex[tokenId];\\n        _allTokens.pop();\\n    }\\n}\\n\",\"keccak256\":\"0x0a79511df8151b10b0a0004d6a76ad956582d32824af4c0f4886bdbdfe5746e5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC721/extensions/IERC721Enumerable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Enumerable is IERC721 {\\n    /**\\n     * @dev Returns the total amount of tokens stored by the contract.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\\n     */\\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\\n     * Use along with {totalSupply} to enumerate all tokens.\\n     */\\n    function tokenByIndex(uint256 index) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":138,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":140,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":144,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":148,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":152,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":158,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":1128,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable","label":"_ownedTokens","offset":0,"slot":"6","type":"t_mapping(t_address,t_mapping(t_uint256,t_uint256))"},{"astId":1132,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable","label":"_ownedTokensIndex","offset":0,"slot":"7","type":"t_mapping(t_uint256,t_uint256)"},{"astId":1135,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable","label":"_allTokens","offset":0,"slot":"8","type":"t_array(t_uint256)dyn_storage"},{"astId":1139,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable","label":"_allTokensIndex","offset":0,"slot":"9","type":"t_mapping(t_uint256,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)dyn_storage":{"base":"t_uint256","encoding":"dynamic_array","label":"uint256[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_mapping(t_uint256,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(uint256 => uint256))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ERC721URIStorage":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"ERC721 token with storage based token URI management.","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with storage based token URI management.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: address zero is not a valid owner\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _owners[tokenId];\\n        require(owner != address(0), \\\"ERC721: invalid token ID\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not token owner nor approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        _requireMinted(tokenId);\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner nor approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner nor approved\\\");\\n        _safeTransfer(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _owners[tokenId] != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId);\\n\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId);\\n\\n        // Clear approvals\\n        _approve(address(0), tokenId);\\n\\n        _balances[owner] -= 1;\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId);\\n\\n        // Clear approvals from the previous owner\\n        _approve(address(0), tokenId);\\n\\n        _balances[from] -= 1;\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(\\n        address owner,\\n        address operator,\\n        bool approved\\n    ) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` has not been minted yet.\\n     */\\n    function _requireMinted(uint256 tokenId) internal view virtual {\\n        require(_exists(tokenId), \\\"ERC721: invalid token ID\\\");\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x0b606994df12f0ce35f6d2f6dcdde7e55e6899cdef7e00f180980caa81e3844e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/extensions/ERC721URIStorage.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC721.sol\\\";\\n\\n/**\\n * @dev ERC721 token with storage based token URI management.\\n */\\nabstract contract ERC721URIStorage is ERC721 {\\n    using Strings for uint256;\\n\\n    // Optional mapping for token URIs\\n    mapping(uint256 => string) private _tokenURIs;\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory _tokenURI = _tokenURIs[tokenId];\\n        string memory base = _baseURI();\\n\\n        // If there is no base URI, return the token URI.\\n        if (bytes(base).length == 0) {\\n            return _tokenURI;\\n        }\\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\\n        if (bytes(_tokenURI).length > 0) {\\n            return string(abi.encodePacked(base, _tokenURI));\\n        }\\n\\n        return super.tokenURI(tokenId);\\n    }\\n\\n    /**\\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\\n        require(_exists(tokenId), \\\"ERC721URIStorage: URI set of nonexistent token\\\");\\n        _tokenURIs[tokenId] = _tokenURI;\\n    }\\n\\n    /**\\n     * @dev See {ERC721-_burn}. This override additionally checks to see if a\\n     * token-specific URI was set for the token, and if so, it deletes the token URI from\\n     * the storage mapping.\\n     */\\n    function _burn(uint256 tokenId) internal virtual override {\\n        super._burn(tokenId);\\n\\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\\n            delete _tokenURIs[tokenId];\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x5c3501c1b70fcfc64417e9da5cc6a3597191baa354781e508e1e14cc0e50a038\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":138,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":140,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":144,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":148,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":152,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":158,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":1464,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_tokenURIs","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_string_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint256,t_string_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => string)","numberOfBytes":"32","value":"t_string_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol":{"IERC721Enumerable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"See https://eips.ethereum.org/EIPS/eip-721","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"tokenByIndex(uint256)":{"details":"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."},"tokenOfOwnerByIndex(address,uint256)":{"details":"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."},"totalSupply()":{"details":"Returns the total amount of tokens stored by the contract."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"title":"ERC-721 Non-Fungible Token Standard, optional enumeration extension","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","tokenByIndex(uint256)":"4f6ccce7","tokenOfOwnerByIndex(address,uint256)":"2f745c59","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional enumeration extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":\"IERC721Enumerable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC721/extensions/IERC721Enumerable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Enumerable is IERC721 {\\n    /**\\n     * @dev Returns the total amount of tokens stored by the contract.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\\n     */\\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\\n     * Use along with {totalSupply} to enumerate all tokens.\\n     */\\n    function tokenByIndex(uint256 index) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"See https://eips.ethereum.org/EIPS/eip-721","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"name()":{"details":"Returns the token collection name."},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"symbol()":{"details":"Returns the token collection symbol."},"tokenURI(uint256)":{"details":"Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"title":"ERC-721 Non-Fungible Token Standard, optional metadata extension","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207ec44c2ee6537290f1a922f4f63311a843834a5e67171c584b13ffbc6e21a01564736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH31 0xC44C2EE6537290F1A922F4F63311A843834A5E67171C584B13FFBC6E21A015 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"194:8111:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207ec44c2ee6537290f1a922f4f63311a843834a5e67171c584b13ffbc6e21a01564736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH31 0xC44C2EE6537290F1A922F4F63311A843834A5E67171C584B13FFBC6E21A015 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"194:8111:8:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Counters.sol":{"Counters":{"abi":[],"devdoc":{"author":"Matt Condon (@shrugs)","details":"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`","kind":"dev","methods":{},"title":"Counters","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220973b99fdc6a3b9678585367627319389be73fa7c80d3fdfb197bc43a40d44c6664736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 EXTCODESIZE SWAP10 REVERT 0xC6 LOG3 0xB9 PUSH8 0x8585367627319389 0xBE PUSH20 0xFA7C80D3FDFB197BC43A40D44C6664736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"424:971:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220973b99fdc6a3b9678585367627319389be73fa7c80d3fdfb197bc43a40d44c6664736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 EXTCODESIZE SWAP10 REVERT 0xC6 LOG3 0xB9 PUSH8 0x8585367627319389 0xBE PUSH20 0xFA7C80D3FDFB197BC43A40D44C6664736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"424:971:10:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"current(struct Counters.Counter storage pointer)":"infinite","decrement(struct Counters.Counter storage pointer)":"infinite","increment(struct Counters.Counter storage pointer)":"infinite","reset(struct Counters.Counter storage pointer)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title Counters\\n * @author Matt Condon (@shrugs)\\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\\n *\\n * Include with `using Counters for Counters.Counter;`\\n */\\nlibrary Counters {\\n    struct Counter {\\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\\n        uint256 _value; // default: 0\\n    }\\n\\n    function current(Counter storage counter) internal view returns (uint256) {\\n        return counter._value;\\n    }\\n\\n    function increment(Counter storage counter) internal {\\n        unchecked {\\n            counter._value += 1;\\n        }\\n    }\\n\\n    function decrement(Counter storage counter) internal {\\n        uint256 value = counter._value;\\n        require(value > 0, \\\"Counter: decrement overflow\\\");\\n        unchecked {\\n            counter._value = value - 1;\\n        }\\n    }\\n\\n    function reset(Counter storage counter) internal {\\n        counter._value = 0;\\n    }\\n}\\n\",\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"devdoc":{"details":"String operations.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206eb9642af81c43c425661135fe5ce2d7f1259676c56e56ba19097edeb89f641564736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0xB9642AF81C43C425661135FE5CE2D7 CALL 0x25 SWAP7 PUSH23 0xC56E56BA19097EDEB89F641564736F6C63430008120033 ","sourceMap":"161:2235:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206eb9642af81c43c425661135fe5ce2d7f1259676c56e56ba19097edeb89f641564736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0xB9642AF81C43C425661135FE5CE2D7 CALL 0x25 SWAP7 PUSH23 0xC56E56BA19097EDEB89F641564736F6C63430008120033 ","sourceMap":"161:2235:11:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"toHexString(address)":"infinite","toHexString(uint256)":"infinite","toHexString(uint256,uint256)":"infinite","toString(uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/AccessKey.sol":{"AccessKey":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getAccessURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"string","name":"accessURI","type":"string"}],"name":"mintAccessKey","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenByIndex(uint256)":{"details":"See {IERC721Enumerable-tokenByIndex}."},"tokenOfOwnerByIndex(address,uint256)":{"details":"See {IERC721Enumerable-tokenOfOwnerByIndex}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"totalSupply()":{"details":"See {IERC721Enumerable-totalSupply}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_175":{"entryPoint":null,"id":175,"parameterSlots":2,"returnSlots":0},"@_2304":{"entryPoint":null,"id":2304,"parameterSlots":0,"returnSlots":0},"array_dataslot_t_string_storage":{"entryPoint":328,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":170,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":649,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_uint256":{"entryPoint":464,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":610,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":484,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":804,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":349,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":275,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":774,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":474,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":742,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":228,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":181,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":524,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":365,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":729,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":582,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":378,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":534,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":577,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5231:17","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:17","statements":[{"nodeType":"YulAssignment","src":"77:22:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:17"},"nodeType":"YulFunctionCall","src":"87:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:17"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:17","type":""}],"src":"7:99:17"},{"body":{"nodeType":"YulBlock","src":"140:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"157:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"160:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"150:6:17"},"nodeType":"YulFunctionCall","src":"150:88:17"},"nodeType":"YulExpressionStatement","src":"150:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"254:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"257:4:17","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"247:6:17"},"nodeType":"YulFunctionCall","src":"247:15:17"},"nodeType":"YulExpressionStatement","src":"247:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"278:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"281:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"271:6:17"},"nodeType":"YulFunctionCall","src":"271:15:17"},"nodeType":"YulExpressionStatement","src":"271:15:17"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"112:180:17"},{"body":{"nodeType":"YulBlock","src":"326:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"343:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"346:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"336:6:17"},"nodeType":"YulFunctionCall","src":"336:88:17"},"nodeType":"YulExpressionStatement","src":"336:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"443:4:17","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"433:6:17"},"nodeType":"YulFunctionCall","src":"433:15:17"},"nodeType":"YulExpressionStatement","src":"433:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"464:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"467:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"457:6:17"},"nodeType":"YulFunctionCall","src":"457:15:17"},"nodeType":"YulExpressionStatement","src":"457:15:17"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"298:180:17"},{"body":{"nodeType":"YulBlock","src":"535:269:17","statements":[{"nodeType":"YulAssignment","src":"545:22:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"559:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"565:1:17","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"555:3:17"},"nodeType":"YulFunctionCall","src":"555:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"545:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"576:38:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"606:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"612:1:17","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"602:3:17"},"nodeType":"YulFunctionCall","src":"602:12:17"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"580:18:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"653:51:17","statements":[{"nodeType":"YulAssignment","src":"667:27:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"681:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"689:4:17","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"677:3:17"},"nodeType":"YulFunctionCall","src":"677:17:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"667:6:17"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"633:18:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"626:6:17"},"nodeType":"YulFunctionCall","src":"626:26:17"},"nodeType":"YulIf","src":"623:81:17"},{"body":{"nodeType":"YulBlock","src":"756:42:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"770:16:17"},"nodeType":"YulFunctionCall","src":"770:18:17"},"nodeType":"YulExpressionStatement","src":"770:18:17"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"720:18:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"743:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"751:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"740:2:17"},"nodeType":"YulFunctionCall","src":"740:14:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"717:2:17"},"nodeType":"YulFunctionCall","src":"717:38:17"},"nodeType":"YulIf","src":"714:84:17"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"519:4:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"528:6:17","type":""}],"src":"484:320:17"},{"body":{"nodeType":"YulBlock","src":"864:87:17","statements":[{"nodeType":"YulAssignment","src":"874:11:17","value":{"name":"ptr","nodeType":"YulIdentifier","src":"882:3:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"874:4:17"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"902:1:17","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"905:3:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"895:6:17"},"nodeType":"YulFunctionCall","src":"895:14:17"},"nodeType":"YulExpressionStatement","src":"895:14:17"},{"nodeType":"YulAssignment","src":"918:26:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"936:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"939:4:17","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"926:9:17"},"nodeType":"YulFunctionCall","src":"926:18:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"918:4:17"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"851:3:17","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"859:4:17","type":""}],"src":"810:141:17"},{"body":{"nodeType":"YulBlock","src":"1001:49:17","statements":[{"nodeType":"YulAssignment","src":"1011:33:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1029:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"1036:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1025:3:17"},"nodeType":"YulFunctionCall","src":"1025:14:17"},{"kind":"number","nodeType":"YulLiteral","src":"1041:2:17","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1021:3:17"},"nodeType":"YulFunctionCall","src":"1021:23:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1011:6:17"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"984:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"994:6:17","type":""}],"src":"957:93:17"},{"body":{"nodeType":"YulBlock","src":"1109:54:17","statements":[{"nodeType":"YulAssignment","src":"1119:37:17","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"1144:4:17"},{"name":"value","nodeType":"YulIdentifier","src":"1150:5:17"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1140:3:17"},"nodeType":"YulFunctionCall","src":"1140:16:17"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"1119:8:17"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"1084:4:17","type":""},{"name":"value","nodeType":"YulTypedName","src":"1090:5:17","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"1100:8:17","type":""}],"src":"1056:107:17"},{"body":{"nodeType":"YulBlock","src":"1245:317:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1255:35:17","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"1276:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"1288:1:17","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1272:3:17"},"nodeType":"YulFunctionCall","src":"1272:18:17"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"1259:9:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1299:109:17","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"1330:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1341:66:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"1311:18:17"},"nodeType":"YulFunctionCall","src":"1311:97:17"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"1303:4:17","type":""}]},{"nodeType":"YulAssignment","src":"1417:51:17","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"1448:9:17"},{"name":"toInsert","nodeType":"YulIdentifier","src":"1459:8:17"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"1429:18:17"},"nodeType":"YulFunctionCall","src":"1429:39:17"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"1417:8:17"}]},{"nodeType":"YulAssignment","src":"1477:30:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1490:5:17"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"1501:4:17"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1497:3:17"},"nodeType":"YulFunctionCall","src":"1497:9:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1486:3:17"},"nodeType":"YulFunctionCall","src":"1486:21:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1477:5:17"}]},{"nodeType":"YulAssignment","src":"1516:40:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1529:5:17"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"1540:8:17"},{"name":"mask","nodeType":"YulIdentifier","src":"1550:4:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1536:3:17"},"nodeType":"YulFunctionCall","src":"1536:19:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1526:2:17"},"nodeType":"YulFunctionCall","src":"1526:30:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1516:6:17"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1206:5:17","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"1213:10:17","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"1225:8:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1238:6:17","type":""}],"src":"1169:393:17"},{"body":{"nodeType":"YulBlock","src":"1613:32:17","statements":[{"nodeType":"YulAssignment","src":"1623:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"1634:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1623:7:17"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1595:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1605:7:17","type":""}],"src":"1568:77:17"},{"body":{"nodeType":"YulBlock","src":"1683:28:17","statements":[{"nodeType":"YulAssignment","src":"1693:12:17","value":{"name":"value","nodeType":"YulIdentifier","src":"1700:5:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"1693:3:17"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1669:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1679:3:17","type":""}],"src":"1651:60:17"},{"body":{"nodeType":"YulBlock","src":"1777:82:17","statements":[{"nodeType":"YulAssignment","src":"1787:66:17","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1845:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1827:17:17"},"nodeType":"YulFunctionCall","src":"1827:24:17"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"1818:8:17"},"nodeType":"YulFunctionCall","src":"1818:34:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1800:17:17"},"nodeType":"YulFunctionCall","src":"1800:53:17"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"1787:9:17"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1757:5:17","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"1767:9:17","type":""}],"src":"1717:142:17"},{"body":{"nodeType":"YulBlock","src":"1912:28:17","statements":[{"nodeType":"YulAssignment","src":"1922:12:17","value":{"name":"value","nodeType":"YulIdentifier","src":"1929:5:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"1922:3:17"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1898:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1908:3:17","type":""}],"src":"1865:75:17"},{"body":{"nodeType":"YulBlock","src":"2022:193:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2032:63:17","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"2087:7:17"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"2056:30:17"},"nodeType":"YulFunctionCall","src":"2056:39:17"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"2036:16:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2111:4:17"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2151:4:17"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"2145:5:17"},"nodeType":"YulFunctionCall","src":"2145:11:17"},{"name":"offset","nodeType":"YulIdentifier","src":"2158:6:17"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"2190:16:17"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"2166:23:17"},"nodeType":"YulFunctionCall","src":"2166:41:17"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"2117:27:17"},"nodeType":"YulFunctionCall","src":"2117:91:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2104:6:17"},"nodeType":"YulFunctionCall","src":"2104:105:17"},"nodeType":"YulExpressionStatement","src":"2104:105:17"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"1999:4:17","type":""},{"name":"offset","nodeType":"YulTypedName","src":"2005:6:17","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"2013:7:17","type":""}],"src":"1946:269:17"},{"body":{"nodeType":"YulBlock","src":"2270:24:17","statements":[{"nodeType":"YulAssignment","src":"2280:8:17","value":{"kind":"number","nodeType":"YulLiteral","src":"2287:1:17","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"2280:3:17"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"2266:3:17","type":""}],"src":"2221:73:17"},{"body":{"nodeType":"YulBlock","src":"2353:136:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2363:46:17","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"2377:30:17"},"nodeType":"YulFunctionCall","src":"2377:32:17"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"2367:6:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2462:4:17"},{"name":"offset","nodeType":"YulIdentifier","src":"2468:6:17"},{"name":"zero_0","nodeType":"YulIdentifier","src":"2476:6:17"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"2418:43:17"},"nodeType":"YulFunctionCall","src":"2418:65:17"},"nodeType":"YulExpressionStatement","src":"2418:65:17"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2339:4:17","type":""},{"name":"offset","nodeType":"YulTypedName","src":"2345:6:17","type":""}],"src":"2300:189:17"},{"body":{"nodeType":"YulBlock","src":"2545:136:17","statements":[{"body":{"nodeType":"YulBlock","src":"2612:63:17","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2656:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"2663:1:17","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"2626:29:17"},"nodeType":"YulFunctionCall","src":"2626:39:17"},"nodeType":"YulExpressionStatement","src":"2626:39:17"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2565:5:17"},{"name":"end","nodeType":"YulIdentifier","src":"2572:3:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2562:2:17"},"nodeType":"YulFunctionCall","src":"2562:14:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2577:26:17","statements":[{"nodeType":"YulAssignment","src":"2579:22:17","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2592:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"2599:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2588:3:17"},"nodeType":"YulFunctionCall","src":"2588:13:17"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2579:5:17"}]}]},"pre":{"nodeType":"YulBlock","src":"2559:2:17","statements":[]},"src":"2555:120:17"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"2533:5:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"2540:3:17","type":""}],"src":"2495:186:17"},{"body":{"nodeType":"YulBlock","src":"2766:464:17","statements":[{"body":{"nodeType":"YulBlock","src":"2792:431:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2806:54:17","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2854:5:17"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"2822:31:17"},"nodeType":"YulFunctionCall","src":"2822:38:17"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"2810:8:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2873:63:17","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"2896:8:17"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2924:10:17"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"2906:17:17"},"nodeType":"YulFunctionCall","src":"2906:29:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2892:3:17"},"nodeType":"YulFunctionCall","src":"2892:44:17"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2877:11:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"3093:27:17","statements":[{"nodeType":"YulAssignment","src":"3095:23:17","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"3110:8:17"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3095:11:17"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"3077:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"3089:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3074:2:17"},"nodeType":"YulFunctionCall","src":"3074:18:17"},"nodeType":"YulIf","src":"3071:49:17"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3162:11:17"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"3179:8:17"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"3207:3:17"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"3189:17:17"},"nodeType":"YulFunctionCall","src":"3189:22:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3175:3:17"},"nodeType":"YulFunctionCall","src":"3175:37:17"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"3133:28:17"},"nodeType":"YulFunctionCall","src":"3133:80:17"},"nodeType":"YulExpressionStatement","src":"3133:80:17"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2783:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"2788:2:17","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2780:2:17"},"nodeType":"YulFunctionCall","src":"2780:11:17"},"nodeType":"YulIf","src":"2777:446:17"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"2742:5:17","type":""},{"name":"len","nodeType":"YulTypedName","src":"2749:3:17","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"2754:10:17","type":""}],"src":"2687:543:17"},{"body":{"nodeType":"YulBlock","src":"3299:54:17","statements":[{"nodeType":"YulAssignment","src":"3309:37:17","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"3334:4:17"},{"name":"value","nodeType":"YulIdentifier","src":"3340:5:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3330:3:17"},"nodeType":"YulFunctionCall","src":"3330:16:17"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"3309:8:17"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"3274:4:17","type":""},{"name":"value","nodeType":"YulTypedName","src":"3280:5:17","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"3290:8:17","type":""}],"src":"3236:117:17"},{"body":{"nodeType":"YulBlock","src":"3410:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3420:68:17","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3469:1:17","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"3472:5:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3465:3:17"},"nodeType":"YulFunctionCall","src":"3465:13:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3484:1:17","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3480:3:17"},"nodeType":"YulFunctionCall","src":"3480:6:17"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"3436:28:17"},"nodeType":"YulFunctionCall","src":"3436:51:17"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3432:3:17"},"nodeType":"YulFunctionCall","src":"3432:56:17"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"3424:4:17","type":""}]},{"nodeType":"YulAssignment","src":"3497:25:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3511:4:17"},{"name":"mask","nodeType":"YulIdentifier","src":"3517:4:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3507:3:17"},"nodeType":"YulFunctionCall","src":"3507:15:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3497:6:17"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3387:4:17","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"3393:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3403:6:17","type":""}],"src":"3359:169:17"},{"body":{"nodeType":"YulBlock","src":"3614:214:17","statements":[{"nodeType":"YulAssignment","src":"3747:37:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3774:4:17"},{"name":"len","nodeType":"YulIdentifier","src":"3780:3:17"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"3755:18:17"},"nodeType":"YulFunctionCall","src":"3755:29:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"3747:4:17"}]},{"nodeType":"YulAssignment","src":"3793:29:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3804:4:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3814:1:17","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"3817:3:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3810:3:17"},"nodeType":"YulFunctionCall","src":"3810:11:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3801:2:17"},"nodeType":"YulFunctionCall","src":"3801:21:17"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"3793:4:17"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3595:4:17","type":""},{"name":"len","nodeType":"YulTypedName","src":"3601:3:17","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"3609:4:17","type":""}],"src":"3533:295:17"},{"body":{"nodeType":"YulBlock","src":"3925:1303:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3936:51:17","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3983:3:17"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3950:32:17"},"nodeType":"YulFunctionCall","src":"3950:37:17"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"3940:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"4072:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4074:16:17"},"nodeType":"YulFunctionCall","src":"4074:18:17"},"nodeType":"YulExpressionStatement","src":"4074:18:17"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4044:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"4052:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4041:2:17"},"nodeType":"YulFunctionCall","src":"4041:30:17"},"nodeType":"YulIf","src":"4038:56:17"},{"nodeType":"YulVariableDeclaration","src":"4104:52:17","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4150:4:17"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"4144:5:17"},"nodeType":"YulFunctionCall","src":"4144:11:17"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"4118:25:17"},"nodeType":"YulFunctionCall","src":"4118:38:17"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"4108:6:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4249:4:17"},{"name":"oldLen","nodeType":"YulIdentifier","src":"4255:6:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"4263:6:17"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"4203:45:17"},"nodeType":"YulFunctionCall","src":"4203:67:17"},"nodeType":"YulExpressionStatement","src":"4203:67:17"},{"nodeType":"YulVariableDeclaration","src":"4280:18:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4297:1:17","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"4284:9:17","type":""}]},{"nodeType":"YulAssignment","src":"4308:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:4:17","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4308:9:17"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"4372:611:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4386:37:17","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4405:6:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4417:4:17","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4413:3:17"},"nodeType":"YulFunctionCall","src":"4413:9:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4401:3:17"},"nodeType":"YulFunctionCall","src":"4401:22:17"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"4390:7:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4437:51:17","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4483:4:17"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"4451:31:17"},"nodeType":"YulFunctionCall","src":"4451:37:17"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"4441:6:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4501:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4510:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4505:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"4569:163:17","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4594:6:17"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4612:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4617:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4608:3:17"},"nodeType":"YulFunctionCall","src":"4608:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4602:5:17"},"nodeType":"YulFunctionCall","src":"4602:26:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4587:6:17"},"nodeType":"YulFunctionCall","src":"4587:42:17"},"nodeType":"YulExpressionStatement","src":"4587:42:17"},{"nodeType":"YulAssignment","src":"4646:24:17","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4660:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"4668:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4656:3:17"},"nodeType":"YulFunctionCall","src":"4656:14:17"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4646:6:17"}]},{"nodeType":"YulAssignment","src":"4687:31:17","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4704:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4715:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4700:3:17"},"nodeType":"YulFunctionCall","src":"4700:18:17"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4687:9:17"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4535:1:17"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"4538:7:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4532:2:17"},"nodeType":"YulFunctionCall","src":"4532:14:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4547:21:17","statements":[{"nodeType":"YulAssignment","src":"4549:17:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4558:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"4561:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4554:3:17"},"nodeType":"YulFunctionCall","src":"4554:12:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4549:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"4528:3:17","statements":[]},"src":"4524:208:17"},{"body":{"nodeType":"YulBlock","src":"4768:156:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4786:43:17","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4813:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4818:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4809:3:17"},"nodeType":"YulFunctionCall","src":"4809:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4803:5:17"},"nodeType":"YulFunctionCall","src":"4803:26:17"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"4790:9:17","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4853:6:17"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"4880:9:17"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4895:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"4903:4:17","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4891:3:17"},"nodeType":"YulFunctionCall","src":"4891:17:17"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"4861:18:17"},"nodeType":"YulFunctionCall","src":"4861:48:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4846:6:17"},"nodeType":"YulFunctionCall","src":"4846:64:17"},"nodeType":"YulExpressionStatement","src":"4846:64:17"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"4751:7:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"4760:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4748:2:17"},"nodeType":"YulFunctionCall","src":"4748:19:17"},"nodeType":"YulIf","src":"4745:179:17"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4944:4:17"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4958:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"4966:1:17","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4954:3:17"},"nodeType":"YulFunctionCall","src":"4954:14:17"},{"kind":"number","nodeType":"YulLiteral","src":"4970:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4950:3:17"},"nodeType":"YulFunctionCall","src":"4950:22:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4937:6:17"},"nodeType":"YulFunctionCall","src":"4937:36:17"},"nodeType":"YulExpressionStatement","src":"4937:36:17"}]},"nodeType":"YulCase","src":"4365:618:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4370:1:17","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"5000:222:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5014:14:17","value":{"kind":"number","nodeType":"YulLiteral","src":"5027:1:17","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5018:5:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"5051:67:17","statements":[{"nodeType":"YulAssignment","src":"5069:35:17","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5088:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"5093:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5084:3:17"},"nodeType":"YulFunctionCall","src":"5084:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5078:5:17"},"nodeType":"YulFunctionCall","src":"5078:26:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5069:5:17"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"5044:6:17"},"nodeType":"YulIf","src":"5041:77:17"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5138:4:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5197:5:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"5204:6:17"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"5144:52:17"},"nodeType":"YulFunctionCall","src":"5144:67:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5131:6:17"},"nodeType":"YulFunctionCall","src":"5131:81:17"},"nodeType":"YulExpressionStatement","src":"5131:81:17"}]},"nodeType":"YulCase","src":"4992:230:17","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4345:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"4353:2:17","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4342:2:17"},"nodeType":"YulFunctionCall","src":"4342:14:17"},"nodeType":"YulSwitch","src":"4335:887:17"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3914:4:17","type":""},{"name":"src","nodeType":"YulTypedName","src":"3920:3:17","type":""}],"src":"3833:1395:17"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":17,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4163636573734B65790000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x414B590000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x0 SWAP1 DUP2 PUSH3 0x8F SWAP2 SWAP1 PUSH3 0x324 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0xA1 SWAP2 SWAP1 PUSH3 0x324 JUMP JUMPDEST POP POP POP PUSH3 0x40B JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x12C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x142 JUMPI PUSH3 0x141 PUSH3 0xE4 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x1AC PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x16D JUMP JUMPDEST PUSH3 0x1B8 DUP7 DUP4 PUSH3 0x16D JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x205 PUSH3 0x1FF PUSH3 0x1F9 DUP5 PUSH3 0x1D0 JUMP JUMPDEST PUSH3 0x1DA JUMP JUMPDEST PUSH3 0x1D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x221 DUP4 PUSH3 0x1E4 JUMP JUMPDEST PUSH3 0x239 PUSH3 0x230 DUP3 PUSH3 0x20C JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x17A JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x250 PUSH3 0x241 JUMP JUMPDEST PUSH3 0x25D DUP2 DUP5 DUP5 PUSH3 0x216 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x285 JUMPI PUSH3 0x279 PUSH1 0x0 DUP3 PUSH3 0x246 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x263 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x2D4 JUMPI PUSH3 0x29E DUP2 PUSH3 0x148 JUMP JUMPDEST PUSH3 0x2A9 DUP5 PUSH3 0x15D JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x2B9 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x2D1 PUSH3 0x2C8 DUP6 PUSH3 0x15D JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x262 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2F9 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x2D9 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x314 DUP4 DUP4 PUSH3 0x2E6 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x32F DUP3 PUSH3 0xAA JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x34B JUMPI PUSH3 0x34A PUSH3 0xB5 JUMP JUMPDEST JUMPDEST PUSH3 0x357 DUP3 SLOAD PUSH3 0x113 JUMP JUMPDEST PUSH3 0x364 DUP3 DUP3 DUP6 PUSH3 0x289 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x39C JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x387 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x393 DUP6 DUP3 PUSH3 0x306 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x403 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x3AC DUP7 PUSH3 0x148 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x3D6 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x3AF JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x3F6 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x3F2 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x2E6 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x3134 DUP1 PUSH3 0x41B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5CDDA2FA GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0xA2C512CB EQ PUSH2 0x321 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x39D JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x5CDDA2FA EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2E7 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x23B JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x199 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x135 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x1D73 JUMP JUMPDEST PUSH2 0x3CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x142 SWAP2 SWAP1 PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x153 PUSH2 0x447 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x1E66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x183 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x1EBE JUMP JUMPDEST PUSH2 0x4D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x1F2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x1F73 JUMP JUMPDEST PUSH2 0x51F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BD PUSH2 0x636 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x1FC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0x1FDD JUMP JUMPDEST PUSH2 0x643 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x1F73 JUMP JUMPDEST PUSH2 0x6A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x1FC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x239 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x1FDD JUMP JUMPDEST PUSH2 0x748 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x255 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x1EBE JUMP JUMPDEST PUSH2 0x768 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x1FC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x285 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x2165 JUMP JUMPDEST PUSH2 0x7D9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29C SWAP2 SWAP1 PUSH2 0x1EBE JUMP JUMPDEST PUSH2 0x809 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AE SWAP2 SWAP1 PUSH2 0x1F2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x21D4 JUMP JUMPDEST PUSH2 0x8BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DE SWAP2 SWAP1 PUSH2 0x1FC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EF PUSH2 0x971 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FC SWAP2 SWAP1 PUSH2 0x1E66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31A SWAP2 SWAP1 PUSH2 0x222D JUMP JUMPDEST PUSH2 0xA03 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x336 SWAP2 SWAP1 PUSH2 0x1EBE JUMP JUMPDEST PUSH2 0xA19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x348 SWAP2 SWAP1 PUSH2 0x1E66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x366 SWAP2 SWAP1 PUSH2 0x230E JUMP JUMPDEST PUSH2 0xB06 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x387 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x382 SWAP2 SWAP1 PUSH2 0x1EBE JUMP JUMPDEST PUSH2 0xB68 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x394 SWAP2 SWAP1 PUSH2 0x1E66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B2 SWAP2 SWAP1 PUSH2 0x2391 JUMP JUMPDEST PUSH2 0xBD0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C4 SWAP2 SWAP1 PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x780E9D6300000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x440 JUMPI POP PUSH2 0x43F DUP3 PUSH2 0xC64 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x456 SWAP1 PUSH2 0x2400 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x482 SWAP1 PUSH2 0x2400 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4CF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4A4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4CF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4B2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E4 DUP3 PUSH2 0xD46 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52A DUP3 PUSH2 0x809 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x59A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x591 SWAP1 PUSH2 0x24A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5B9 PUSH2 0xD91 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x5E8 JUMPI POP PUSH2 0x5E7 DUP2 PUSH2 0x5E2 PUSH2 0xD91 JUMP JUMPDEST PUSH2 0xBD0 JUMP JUMPDEST JUMPDEST PUSH2 0x627 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x61E SWAP1 PUSH2 0x2535 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x631 DUP4 DUP4 PUSH2 0xD99 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x654 PUSH2 0x64E PUSH2 0xD91 JUMP JUMPDEST DUP3 PUSH2 0xE52 JUMP JUMPDEST PUSH2 0x693 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x68A SWAP1 PUSH2 0x25C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x69E DUP4 DUP4 DUP4 PUSH2 0xEE7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6AE DUP4 PUSH2 0x8BA JUMP JUMPDEST DUP3 LT PUSH2 0x6EF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E6 SWAP1 PUSH2 0x2659 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x763 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xB06 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x772 PUSH2 0x636 JUMP JUMPDEST DUP3 LT PUSH2 0x7B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AA SWAP1 PUSH2 0x26EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x7C7 JUMPI PUSH2 0x7C6 PUSH2 0x270B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7E3 DUP4 DUP4 PUSH2 0x114D JUMP JUMPDEST DUP1 PUSH1 0xA PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x803 SWAP2 SWAP1 PUSH2 0x28E6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A8 SWAP1 PUSH2 0x2A04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x92A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x921 SWAP1 PUSH2 0x2A96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x980 SWAP1 PUSH2 0x2400 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9AC SWAP1 PUSH2 0x2400 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9F9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9CE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9F9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9DC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA15 PUSH2 0xA0E PUSH2 0xD91 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x1326 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA24 DUP3 PUSH2 0x1492 JUMP JUMPDEST PUSH2 0xA63 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA5A SWAP1 PUSH2 0x2B02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0xA81 SWAP1 PUSH2 0x2400 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAAD SWAP1 PUSH2 0x2400 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAFA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xACF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAFA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xADD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB17 PUSH2 0xB11 PUSH2 0xD91 JUMP JUMPDEST DUP4 PUSH2 0xE52 JUMP JUMPDEST PUSH2 0xB56 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB4D SWAP1 PUSH2 0x25C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB62 DUP5 DUP5 DUP5 DUP5 PUSH2 0x14FE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xB73 DUP3 PUSH2 0xD46 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB7D PUSH2 0x155A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xB9D JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xBC8 JUMP JUMPDEST DUP1 PUSH2 0xBA7 DUP5 PUSH2 0x1571 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xBB8 SWAP3 SWAP2 SWAP1 PUSH2 0x2B5E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xD2F JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0xD3F JUMPI POP PUSH2 0xD3E DUP3 PUSH2 0x16D1 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD4F DUP2 PUSH2 0x1492 JUMP JUMPDEST PUSH2 0xD8E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD85 SWAP1 PUSH2 0x2A04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE0C DUP4 PUSH2 0x809 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE5E DUP4 PUSH2 0x809 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xEA0 JUMPI POP PUSH2 0xE9F DUP2 DUP6 PUSH2 0xBD0 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xEDE JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEC6 DUP5 PUSH2 0x4D9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF07 DUP3 PUSH2 0x809 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF5D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF54 SWAP1 PUSH2 0x2BF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFCC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC3 SWAP1 PUSH2 0x2C86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFD7 DUP4 DUP4 DUP4 PUSH2 0x173B JUMP JUMPDEST PUSH2 0xFE2 PUSH1 0x0 DUP3 PUSH2 0xD99 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1032 SWAP2 SWAP1 PUSH2 0x2CD5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1089 SWAP2 SWAP1 PUSH2 0x2D09 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1148 DUP4 DUP4 DUP4 PUSH2 0x184D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11B3 SWAP1 PUSH2 0x2D89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11C5 DUP2 PUSH2 0x1492 JUMP JUMPDEST ISZERO PUSH2 0x1205 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11FC SWAP1 PUSH2 0x2DF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1211 PUSH1 0x0 DUP4 DUP4 PUSH2 0x173B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1261 SWAP2 SWAP1 PUSH2 0x2D09 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1322 PUSH1 0x0 DUP4 DUP4 PUSH2 0x184D JUMP JUMPDEST POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1394 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x138B SWAP1 PUSH2 0x2E61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1485 SWAP2 SWAP1 PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1509 DUP5 DUP5 DUP5 PUSH2 0xEE7 JUMP JUMPDEST PUSH2 0x1515 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1852 JUMP JUMPDEST PUSH2 0x1554 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x154B SWAP1 PUSH2 0x2EF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 SUB PUSH2 0x15B8 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x16CC JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x15EA JUMPI DUP1 DUP1 PUSH2 0x15D3 SWAP1 PUSH2 0x2F13 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x15E3 SWAP2 SWAP1 PUSH2 0x2F8A JUMP JUMPDEST SWAP2 POP PUSH2 0x15C0 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1606 JUMPI PUSH2 0x1605 PUSH2 0x203A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1638 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0x16C5 JUMPI PUSH1 0x1 DUP3 PUSH2 0x1651 SWAP2 SWAP1 PUSH2 0x2CD5 JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x1660 SWAP2 SWAP1 PUSH2 0x2FBB JUMP JUMPDEST PUSH1 0x30 PUSH2 0x166C SWAP2 SWAP1 PUSH2 0x2D09 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1682 JUMPI PUSH2 0x1681 PUSH2 0x270B JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x16BE SWAP2 SWAP1 PUSH2 0x2F8A JUMP JUMPDEST SWAP5 POP PUSH2 0x163C JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1746 DUP4 DUP4 DUP4 PUSH2 0x19D9 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1788 JUMPI PUSH2 0x1783 DUP2 PUSH2 0x19DE JUMP JUMPDEST PUSH2 0x17C7 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x17C6 JUMPI PUSH2 0x17C5 DUP4 DUP3 PUSH2 0x1A27 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1809 JUMPI PUSH2 0x1804 DUP2 PUSH2 0x1B94 JUMP JUMPDEST PUSH2 0x1848 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1847 JUMPI PUSH2 0x1846 DUP3 DUP3 PUSH2 0x1C65 JUMP JUMPDEST JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1873 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1CE4 JUMP JUMPDEST ISZERO PUSH2 0x19CC JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x189C PUSH2 0xD91 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18BE SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3041 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x18FA JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18F7 SWAP2 SWAP1 PUSH2 0x30A2 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x197C JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x192A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x192F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1974 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x196B SWAP1 PUSH2 0x2EF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x19D1 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD SWAP1 POP PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x8 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x1A34 DUP5 PUSH2 0x8BA JUMP JUMPDEST PUSH2 0x1A3E SWAP2 SWAP1 PUSH2 0x2CD5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 EQ PUSH2 0x1B23 JUMPI PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP1 PUSH1 0x6 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x8 DUP1 SLOAD SWAP1 POP PUSH2 0x1BA8 SWAP2 SWAP1 PUSH2 0x2CD5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1BD8 JUMPI PUSH2 0x1BD7 PUSH2 0x270B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1BFA JUMPI PUSH2 0x1BF9 PUSH2 0x270B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x9 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x8 DUP1 SLOAD DUP1 PUSH2 0x1C49 JUMPI PUSH2 0x1C48 PUSH2 0x30CF JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C70 DUP4 PUSH2 0x8BA JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D50 DUP2 PUSH2 0x1D1B JUMP JUMPDEST DUP2 EQ PUSH2 0x1D5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D6D DUP2 PUSH2 0x1D47 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D89 JUMPI PUSH2 0x1D88 PUSH2 0x1D11 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D97 DUP5 DUP3 DUP6 ADD PUSH2 0x1D5E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DB5 DUP2 PUSH2 0x1DA0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DD0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1DAC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1E10 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1DF5 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E38 DUP3 PUSH2 0x1DD6 JUMP JUMPDEST PUSH2 0x1E42 DUP2 DUP6 PUSH2 0x1DE1 JUMP JUMPDEST SWAP4 POP PUSH2 0x1E52 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1DF2 JUMP JUMPDEST PUSH2 0x1E5B DUP2 PUSH2 0x1E1C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E80 DUP2 DUP5 PUSH2 0x1E2D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E9B DUP2 PUSH2 0x1E88 JUMP JUMPDEST DUP2 EQ PUSH2 0x1EA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EB8 DUP2 PUSH2 0x1E92 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ED4 JUMPI PUSH2 0x1ED3 PUSH2 0x1D11 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EE2 DUP5 DUP3 DUP6 ADD PUSH2 0x1EA9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F16 DUP3 PUSH2 0x1EEB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F26 DUP2 PUSH2 0x1F0B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F41 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F1D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F50 DUP2 PUSH2 0x1F0B JUMP JUMPDEST DUP2 EQ PUSH2 0x1F5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F6D DUP2 PUSH2 0x1F47 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F8A JUMPI PUSH2 0x1F89 PUSH2 0x1D11 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F98 DUP6 DUP3 DUP7 ADD PUSH2 0x1F5E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1FA9 DUP6 DUP3 DUP7 ADD PUSH2 0x1EA9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FBC DUP2 PUSH2 0x1E88 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FD7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1FB3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1FF6 JUMPI PUSH2 0x1FF5 PUSH2 0x1D11 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2004 DUP7 DUP3 DUP8 ADD PUSH2 0x1F5E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2015 DUP7 DUP3 DUP8 ADD PUSH2 0x1F5E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2026 DUP7 DUP3 DUP8 ADD PUSH2 0x1EA9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2072 DUP3 PUSH2 0x1E1C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2091 JUMPI PUSH2 0x2090 PUSH2 0x203A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20A4 PUSH2 0x1D07 JUMP JUMPDEST SWAP1 POP PUSH2 0x20B0 DUP3 DUP3 PUSH2 0x2069 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x20D0 JUMPI PUSH2 0x20CF PUSH2 0x203A JUMP JUMPDEST JUMPDEST PUSH2 0x20D9 DUP3 PUSH2 0x1E1C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2108 PUSH2 0x2103 DUP5 PUSH2 0x20B5 JUMP JUMPDEST PUSH2 0x209A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2124 JUMPI PUSH2 0x2123 PUSH2 0x2035 JUMP JUMPDEST JUMPDEST PUSH2 0x212F DUP5 DUP3 DUP6 PUSH2 0x20E6 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x214C JUMPI PUSH2 0x214B PUSH2 0x2030 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x215C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x20F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x217E JUMPI PUSH2 0x217D PUSH2 0x1D11 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x218C DUP7 DUP3 DUP8 ADD PUSH2 0x1F5E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x219D DUP7 DUP3 DUP8 ADD PUSH2 0x1EA9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x21BE JUMPI PUSH2 0x21BD PUSH2 0x1D16 JUMP JUMPDEST JUMPDEST PUSH2 0x21CA DUP7 DUP3 DUP8 ADD PUSH2 0x2137 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21EA JUMPI PUSH2 0x21E9 PUSH2 0x1D11 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21F8 DUP5 DUP3 DUP6 ADD PUSH2 0x1F5E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x220A DUP2 PUSH2 0x1DA0 JUMP JUMPDEST DUP2 EQ PUSH2 0x2215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2227 DUP2 PUSH2 0x2201 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2244 JUMPI PUSH2 0x2243 PUSH2 0x1D11 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2252 DUP6 DUP3 DUP7 ADD PUSH2 0x1F5E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2263 DUP6 DUP3 DUP7 ADD PUSH2 0x2218 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2288 JUMPI PUSH2 0x2287 PUSH2 0x203A JUMP JUMPDEST JUMPDEST PUSH2 0x2291 DUP3 PUSH2 0x1E1C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22B1 PUSH2 0x22AC DUP5 PUSH2 0x226D JUMP JUMPDEST PUSH2 0x209A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x22CD JUMPI PUSH2 0x22CC PUSH2 0x2035 JUMP JUMPDEST JUMPDEST PUSH2 0x22D8 DUP5 DUP3 DUP6 PUSH2 0x20E6 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x22F5 JUMPI PUSH2 0x22F4 PUSH2 0x2030 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2305 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x229E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2328 JUMPI PUSH2 0x2327 PUSH2 0x1D11 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2336 DUP8 DUP3 DUP9 ADD PUSH2 0x1F5E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2347 DUP8 DUP3 DUP9 ADD PUSH2 0x1F5E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2358 DUP8 DUP3 DUP9 ADD PUSH2 0x1EA9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2379 JUMPI PUSH2 0x2378 PUSH2 0x1D16 JUMP JUMPDEST JUMPDEST PUSH2 0x2385 DUP8 DUP3 DUP9 ADD PUSH2 0x22E0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x23A8 JUMPI PUSH2 0x23A7 PUSH2 0x1D11 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23B6 DUP6 DUP3 DUP7 ADD PUSH2 0x1F5E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x23C7 DUP6 DUP3 DUP7 ADD PUSH2 0x1F5E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2418 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x242B JUMPI PUSH2 0x242A PUSH2 0x23D1 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x248D PUSH1 0x21 DUP4 PUSH2 0x1DE1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2498 DUP3 PUSH2 0x2431 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x24BC DUP2 PUSH2 0x2480 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206E6F7220617070726F76656420666F7220616C6C0000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x251F PUSH1 0x3E DUP4 PUSH2 0x1DE1 JUMP JUMPDEST SWAP2 POP PUSH2 0x252A DUP3 PUSH2 0x24C3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x254E DUP2 PUSH2 0x2512 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206E6F7220617070726F766564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25B1 PUSH1 0x2E DUP4 PUSH2 0x1DE1 JUMP JUMPDEST SWAP2 POP PUSH2 0x25BC DUP3 PUSH2 0x2555 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x25E0 DUP2 PUSH2 0x25A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243373231456E756D657261626C653A206F776E657220696E646578206F75 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x74206F6620626F756E6473000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2643 PUSH1 0x2B DUP4 PUSH2 0x1DE1 JUMP JUMPDEST SWAP2 POP PUSH2 0x264E DUP3 PUSH2 0x25E7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2672 DUP2 PUSH2 0x2636 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7574206F6620626F756E64730000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26D5 PUSH1 0x2C DUP4 PUSH2 0x1DE1 JUMP JUMPDEST SWAP2 POP PUSH2 0x26E0 DUP3 PUSH2 0x2679 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2704 DUP2 PUSH2 0x26C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x279C PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x275F JUMP JUMPDEST PUSH2 0x27A6 DUP7 DUP4 PUSH2 0x275F JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27E3 PUSH2 0x27DE PUSH2 0x27D9 DUP5 PUSH2 0x1E88 JUMP JUMPDEST PUSH2 0x27BE JUMP JUMPDEST PUSH2 0x1E88 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27FD DUP4 PUSH2 0x27C8 JUMP JUMPDEST PUSH2 0x2811 PUSH2 0x2809 DUP3 PUSH2 0x27EA JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x276C JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x2826 PUSH2 0x2819 JUMP JUMPDEST PUSH2 0x2831 DUP2 DUP5 DUP5 PUSH2 0x27F4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2855 JUMPI PUSH2 0x284A PUSH1 0x0 DUP3 PUSH2 0x281E JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2837 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x289A JUMPI PUSH2 0x286B DUP2 PUSH2 0x273A JUMP JUMPDEST PUSH2 0x2874 DUP5 PUSH2 0x274F JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2883 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2897 PUSH2 0x288F DUP6 PUSH2 0x274F JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2836 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28BD PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x289F JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28D6 DUP4 DUP4 PUSH2 0x28AC JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x28EF DUP3 PUSH2 0x1DD6 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2908 JUMPI PUSH2 0x2907 PUSH2 0x203A JUMP JUMPDEST JUMPDEST PUSH2 0x2912 DUP3 SLOAD PUSH2 0x2400 JUMP JUMPDEST PUSH2 0x291D DUP3 DUP3 DUP6 PUSH2 0x2859 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2950 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x293E JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2948 DUP6 DUP3 PUSH2 0x28CA JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x29B0 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x295E DUP7 PUSH2 0x273A JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2986 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2961 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x29A3 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x299F PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x28AC JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29EE PUSH1 0x18 DUP4 PUSH2 0x1DE1 JUMP JUMPDEST SWAP2 POP PUSH2 0x29F9 DUP3 PUSH2 0x29B8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A1D DUP2 PUSH2 0x29E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A80 PUSH1 0x29 DUP4 PUSH2 0x1DE1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A8B DUP3 PUSH2 0x2A24 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2AAF DUP2 PUSH2 0x2A73 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E20646F6573206E6F74206578697374000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AEC PUSH1 0x14 DUP4 PUSH2 0x1DE1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2AF7 DUP3 PUSH2 0x2AB6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B1B DUP2 PUSH2 0x2ADF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B38 DUP3 PUSH2 0x1DD6 JUMP JUMPDEST PUSH2 0x2B42 DUP2 DUP6 PUSH2 0x2B22 JUMP JUMPDEST SWAP4 POP PUSH2 0x2B52 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1DF2 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B6A DUP3 DUP6 PUSH2 0x2B2D JUMP JUMPDEST SWAP2 POP PUSH2 0x2B76 DUP3 DUP5 PUSH2 0x2B2D JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BDE PUSH1 0x25 DUP4 PUSH2 0x1DE1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BE9 DUP3 PUSH2 0x2B82 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C0D DUP2 PUSH2 0x2BD1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C70 PUSH1 0x24 DUP4 PUSH2 0x1DE1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C7B DUP3 PUSH2 0x2C14 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C9F DUP2 PUSH2 0x2C63 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2CE0 DUP3 PUSH2 0x1E88 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CEB DUP4 PUSH2 0x1E88 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2D03 JUMPI PUSH2 0x2D02 PUSH2 0x2CA6 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D14 DUP3 PUSH2 0x1E88 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D1F DUP4 PUSH2 0x1E88 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2D37 JUMPI PUSH2 0x2D36 PUSH2 0x2CA6 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D73 PUSH1 0x20 DUP4 PUSH2 0x1DE1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D7E DUP3 PUSH2 0x2D3D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2DA2 DUP2 PUSH2 0x2D66 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DDF PUSH1 0x1C DUP4 PUSH2 0x1DE1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DEA DUP3 PUSH2 0x2DA9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E0E DUP2 PUSH2 0x2DD2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E4B PUSH1 0x19 DUP4 PUSH2 0x1DE1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E56 DUP3 PUSH2 0x2E15 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E7A DUP2 PUSH2 0x2E3E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EDD PUSH1 0x32 DUP4 PUSH2 0x1DE1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EE8 DUP3 PUSH2 0x2E81 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F0C DUP2 PUSH2 0x2ED0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F1E DUP3 PUSH2 0x1E88 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2F50 JUMPI PUSH2 0x2F4F PUSH2 0x2CA6 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2F95 DUP3 PUSH2 0x1E88 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FA0 DUP4 PUSH2 0x1E88 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2FB0 JUMPI PUSH2 0x2FAF PUSH2 0x2F5B JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FC6 DUP3 PUSH2 0x1E88 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FD1 DUP4 PUSH2 0x1E88 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2FE1 JUMPI PUSH2 0x2FE0 PUSH2 0x2F5B JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3013 DUP3 PUSH2 0x2FEC JUMP JUMPDEST PUSH2 0x301D DUP2 DUP6 PUSH2 0x2FF7 JUMP JUMPDEST SWAP4 POP PUSH2 0x302D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1DF2 JUMP JUMPDEST PUSH2 0x3036 DUP2 PUSH2 0x1E1C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3056 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1F1D JUMP JUMPDEST PUSH2 0x3063 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1F1D JUMP JUMPDEST PUSH2 0x3070 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1FB3 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x3082 DUP2 DUP5 PUSH2 0x3008 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x309C DUP2 PUSH2 0x1D47 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x30B8 JUMPI PUSH2 0x30B7 PUSH2 0x1D11 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x30C6 DUP5 DUP3 DUP6 ADD PUSH2 0x308D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP CALLVALUE 0xC2 0xDD 0xB5 CREATE2 DUP13 0x4D PC 0x5F 0xFC RETURN MLOAD 0xD9 0xC0 DUP14 0xD0 0xE5 0xDF BYTE 0xE4 0xAB 0x27 0xC9 LOG2 DUP9 DUP9 SWAP14 DUP10 0x28 0xC1 0xB9 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"138:494:14:-:0;;;236:43;;;;;;;;;;1390:113:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1464:5;1456;:13;;;;;;:::i;:::-;;1489:7;1479;:17;;;;;;:::i;:::-;;1390:113;;138:494:14;;7:99:17;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;138:494:14:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_addTokenToAllTokensEnumeration_1339":{"entryPoint":6622,"id":1339,"parameterSlots":1,"returnSlots":0},"@_addTokenToOwnerEnumeration_1319":{"entryPoint":7269,"id":1319,"parameterSlots":2,"returnSlots":0},"@_afterTokenTransfer_978":{"entryPoint":6221,"id":978,"parameterSlots":3,"returnSlots":0},"@_approve_848":{"entryPoint":3481,"id":848,"parameterSlots":2,"returnSlots":0},"@_baseURI_326":{"entryPoint":5466,"id":326,"parameterSlots":0,"returnSlots":1},"@_beforeTokenTransfer_1289":{"entryPoint":5947,"id":1289,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_967":{"entryPoint":6617,"id":967,"parameterSlots":3,"returnSlots":0},"@_checkOnERC721Received_956":{"entryPoint":6226,"id":956,"parameterSlots":4,"returnSlots":1},"@_exists_545":{"entryPoint":5266,"id":545,"parameterSlots":1,"returnSlots":1},"@_isApprovedOrOwner_579":{"entryPoint":3666,"id":579,"parameterSlots":2,"returnSlots":1},"@_mint_689":{"entryPoint":4429,"id":689,"parameterSlots":2,"returnSlots":0},"@_msgSender_1941":{"entryPoint":3473,"id":1941,"parameterSlots":0,"returnSlots":1},"@_removeTokenFromAllTokensEnumeration_1450":{"entryPoint":7060,"id":1450,"parameterSlots":1,"returnSlots":0},"@_removeTokenFromOwnerEnumeration_1402":{"entryPoint":6695,"id":1402,"parameterSlots":2,"returnSlots":0},"@_requireMinted_894":{"entryPoint":3398,"id":894,"parameterSlots":1,"returnSlots":0},"@_safeTransfer_527":{"entryPoint":5374,"id":527,"parameterSlots":4,"returnSlots":0},"@_setApprovalForAll_880":{"entryPoint":4902,"id":880,"parameterSlots":3,"returnSlots":0},"@_transfer_824":{"entryPoint":3815,"id":824,"parameterSlots":3,"returnSlots":0},"@approve_369":{"entryPoint":1311,"id":369,"parameterSlots":2,"returnSlots":0},"@balanceOf_230":{"entryPoint":2234,"id":230,"parameterSlots":1,"returnSlots":1},"@getAccessURI_2344":{"entryPoint":2585,"id":2344,"parameterSlots":1,"returnSlots":1},"@getApproved_387":{"entryPoint":1241,"id":387,"parameterSlots":1,"returnSlots":1},"@isApprovedForAll_422":{"entryPoint":3024,"id":422,"parameterSlots":2,"returnSlots":1},"@isContract_1652":{"entryPoint":7396,"id":1652,"parameterSlots":1,"returnSlots":1},"@mintAccessKey_2325":{"entryPoint":2009,"id":2325,"parameterSlots":3,"returnSlots":0},"@name_268":{"entryPoint":1095,"id":268,"parameterSlots":0,"returnSlots":1},"@ownerOf_258":{"entryPoint":2057,"id":258,"parameterSlots":1,"returnSlots":1},"@safeTransferFrom_468":{"entryPoint":1864,"id":468,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_498":{"entryPoint":2822,"id":498,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_404":{"entryPoint":2563,"id":404,"parameterSlots":2,"returnSlots":0},"@supportsInterface_1163":{"entryPoint":973,"id":1163,"parameterSlots":1,"returnSlots":1},"@supportsInterface_206":{"entryPoint":3172,"id":206,"parameterSlots":1,"returnSlots":1},"@supportsInterface_2274":{"entryPoint":5841,"id":2274,"parameterSlots":1,"returnSlots":1},"@symbol_278":{"entryPoint":2417,"id":278,"parameterSlots":0,"returnSlots":1},"@toString_2113":{"entryPoint":5489,"id":2113,"parameterSlots":1,"returnSlots":1},"@tokenByIndex_1225":{"entryPoint":1896,"id":1225,"parameterSlots":1,"returnSlots":1},"@tokenOfOwnerByIndex_1191":{"entryPoint":1699,"id":1191,"parameterSlots":2,"returnSlots":1},"@tokenURI_317":{"entryPoint":2920,"id":317,"parameterSlots":1,"returnSlots":1},"@totalSupply_1202":{"entryPoint":1590,"id":1202,"parameterSlots":0,"returnSlots":1},"@transferFrom_449":{"entryPoint":1603,"id":449,"parameterSlots":3,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":8862,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":8437,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":8030,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":8728,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":7518,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":12429,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":8928,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":8503,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":7849,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":8660,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":9105,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":8157,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":8974,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":8749,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":8051,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_string_memory_ptr":{"entryPoint":8549,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bytes4":{"entryPoint":7539,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":12450,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":7870,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":7965,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":7596,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":12296,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":7725,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":11053,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c_to_t_string_memory_ptr_fromStack":{"entryPoint":9782,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack":{"entryPoint":11984,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack":{"entryPoint":11217,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack":{"entryPoint":11730,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack":{"entryPoint":11363,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack":{"entryPoint":11838,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726_to_t_string_memory_ptr_fromStack":{"entryPoint":10975,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack":{"entryPoint":10867,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack":{"entryPoint":9490,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack":{"entryPoint":11622,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack":{"entryPoint":10721,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack":{"entryPoint":9344,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc_to_t_string_memory_ptr_fromStack":{"entryPoint":9928,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack":{"entryPoint":9636,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":8115,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":11102,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":7980,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":12353,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":7611,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7782,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9817,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12019,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11252,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11765,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11398,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11873,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11010,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10902,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9525,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11657,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10756,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9379,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9963,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9671,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":8130,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":8346,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":7431,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":8813,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":8373,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":10042,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":12268,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":7638,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":12279,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":7649,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":11042,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":11529,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":12170,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":11477,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":10329,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":7947,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":7584,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":7451,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":7915,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":7816,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":10294,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":10184,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":10470,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":8422,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":7666,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":10063,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":9216,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":10442,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":8297,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":10174,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":12051,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":10412,"id":null,"parameterSlots":2,"returnSlots":1},"mod_t_uint256":{"entryPoint":12219,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":11430,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":12123,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":9169,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":12495,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":9995,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":8250,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":10218,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":8240,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":8245,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":7446,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":7441,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":7708,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":10079,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":10399,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":10270,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c":{"entryPoint":9703,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e":{"entryPoint":11905,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48":{"entryPoint":11138,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57":{"entryPoint":11689,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4":{"entryPoint":11284,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05":{"entryPoint":11797,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726":{"entryPoint":10934,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159":{"entryPoint":10788,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304":{"entryPoint":9411,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6":{"entryPoint":11581,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f":{"entryPoint":10680,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942":{"entryPoint":9265,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc":{"entryPoint":9849,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b":{"entryPoint":9557,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":10092,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":10228,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":8007,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":8705,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":7495,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":7826,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":10265,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:35976:17","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:17","statements":[{"nodeType":"YulAssignment","src":"57:19:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:17"},"nodeType":"YulFunctionCall","src":"67:9:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:17"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:17","type":""}],"src":"7:75:17"},{"body":{"nodeType":"YulBlock","src":"177:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:17"},"nodeType":"YulFunctionCall","src":"187:12:17"},"nodeType":"YulExpressionStatement","src":"187:12:17"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:17"},{"body":{"nodeType":"YulBlock","src":"300:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:17"},"nodeType":"YulFunctionCall","src":"310:12:17"},"nodeType":"YulExpressionStatement","src":"310:12:17"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:17"},{"body":{"nodeType":"YulBlock","src":"378:105:17","statements":[{"nodeType":"YulAssignment","src":"388:89:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:17","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:17"},"nodeType":"YulFunctionCall","src":"399:78:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:17"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:17","type":""}],"src":"334:149:17"},{"body":{"nodeType":"YulBlock","src":"531:78:17","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:17"},"nodeType":"YulFunctionCall","src":"589:12:17"},"nodeType":"YulExpressionStatement","src":"589:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:17"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:17"},"nodeType":"YulFunctionCall","src":"561:23:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:17"},"nodeType":"YulFunctionCall","src":"551:34:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:17"},"nodeType":"YulFunctionCall","src":"544:42:17"},"nodeType":"YulIf","src":"541:62:17"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:17","type":""}],"src":"489:120:17"},{"body":{"nodeType":"YulBlock","src":"666:86:17","statements":[{"nodeType":"YulAssignment","src":"676:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:17"},"nodeType":"YulFunctionCall","src":"685:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:17"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:17"},"nodeType":"YulFunctionCall","src":"714:32:17"},"nodeType":"YulExpressionStatement","src":"714:32:17"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:17","type":""}],"src":"615:137:17"},{"body":{"nodeType":"YulBlock","src":"823:262:17","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:17"},"nodeType":"YulFunctionCall","src":"871:79:17"},"nodeType":"YulExpressionStatement","src":"871:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:17"},"nodeType":"YulFunctionCall","src":"840:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:17"},"nodeType":"YulFunctionCall","src":"836:32:17"},"nodeType":"YulIf","src":"833:119:17"},{"nodeType":"YulBlock","src":"962:116:17","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:17","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:17"},"nodeType":"YulFunctionCall","src":"1036:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:17"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:17"},"nodeType":"YulFunctionCall","src":"1016:52:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:17"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:17","type":""}],"src":"758:327:17"},{"body":{"nodeType":"YulBlock","src":"1133:48:17","statements":[{"nodeType":"YulAssignment","src":"1143:32:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:17"},"nodeType":"YulFunctionCall","src":"1161:13:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:17"},"nodeType":"YulFunctionCall","src":"1154:21:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:17"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:17","type":""}],"src":"1091:90:17"},{"body":{"nodeType":"YulBlock","src":"1246:50:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:17"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:17"},"nodeType":"YulFunctionCall","src":"1268:21:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:17"},"nodeType":"YulFunctionCall","src":"1256:34:17"},"nodeType":"YulExpressionStatement","src":"1256:34:17"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:17","type":""}],"src":"1187:109:17"},{"body":{"nodeType":"YulBlock","src":"1394:118:17","statements":[{"nodeType":"YulAssignment","src":"1404:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:17"},"nodeType":"YulFunctionCall","src":"1412:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:17"},"nodeType":"YulFunctionCall","src":"1487:17:17"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:17"},"nodeType":"YulFunctionCall","src":"1440:65:17"},"nodeType":"YulExpressionStatement","src":"1440:65:17"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:17","type":""}],"src":"1302:210:17"},{"body":{"nodeType":"YulBlock","src":"1577:40:17","statements":[{"nodeType":"YulAssignment","src":"1588:22:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1604:5:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1598:5:17"},"nodeType":"YulFunctionCall","src":"1598:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1588:6:17"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1560:5:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1570:6:17","type":""}],"src":"1518:99:17"},{"body":{"nodeType":"YulBlock","src":"1719:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1736:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"1741:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1729:6:17"},"nodeType":"YulFunctionCall","src":"1729:19:17"},"nodeType":"YulExpressionStatement","src":"1729:19:17"},{"nodeType":"YulAssignment","src":"1757:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1776:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"1781:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:17"},"nodeType":"YulFunctionCall","src":"1772:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1757:11:17"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1691:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"1696:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1707:11:17","type":""}],"src":"1623:169:17"},{"body":{"nodeType":"YulBlock","src":"1860:184:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1870:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"1879:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1874:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"1939:63:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1964:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"1969:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1960:3:17"},"nodeType":"YulFunctionCall","src":"1960:11:17"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1983:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"1988:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1979:3:17"},"nodeType":"YulFunctionCall","src":"1979:11:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1973:5:17"},"nodeType":"YulFunctionCall","src":"1973:18:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1953:6:17"},"nodeType":"YulFunctionCall","src":"1953:39:17"},"nodeType":"YulExpressionStatement","src":"1953:39:17"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1900:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"1903:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1897:2:17"},"nodeType":"YulFunctionCall","src":"1897:13:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1911:19:17","statements":[{"nodeType":"YulAssignment","src":"1913:15:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1922:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"1925:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1918:3:17"},"nodeType":"YulFunctionCall","src":"1918:10:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1913:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"1893:3:17","statements":[]},"src":"1889:113:17"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2022:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"2027:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2018:3:17"},"nodeType":"YulFunctionCall","src":"2018:16:17"},{"kind":"number","nodeType":"YulLiteral","src":"2036:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2011:6:17"},"nodeType":"YulFunctionCall","src":"2011:27:17"},"nodeType":"YulExpressionStatement","src":"2011:27:17"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1842:3:17","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1847:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"1852:6:17","type":""}],"src":"1798:246:17"},{"body":{"nodeType":"YulBlock","src":"2098:54:17","statements":[{"nodeType":"YulAssignment","src":"2108:38:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2126:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"2133:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2122:3:17"},"nodeType":"YulFunctionCall","src":"2122:14:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2142:2:17","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2138:3:17"},"nodeType":"YulFunctionCall","src":"2138:7:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2118:3:17"},"nodeType":"YulFunctionCall","src":"2118:28:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2108:6:17"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2081:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2091:6:17","type":""}],"src":"2050:102:17"},{"body":{"nodeType":"YulBlock","src":"2250:285:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2260:53:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2307:5:17"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2274:32:17"},"nodeType":"YulFunctionCall","src":"2274:39:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2264:6:17","type":""}]},{"nodeType":"YulAssignment","src":"2322:78:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2388:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"2393:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2329:58:17"},"nodeType":"YulFunctionCall","src":"2329:71:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2322:3:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2448:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"2455:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2444:3:17"},"nodeType":"YulFunctionCall","src":"2444:16:17"},{"name":"pos","nodeType":"YulIdentifier","src":"2462:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"2467:6:17"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2409:34:17"},"nodeType":"YulFunctionCall","src":"2409:65:17"},"nodeType":"YulExpressionStatement","src":"2409:65:17"},{"nodeType":"YulAssignment","src":"2483:46:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2494:3:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2521:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2499:21:17"},"nodeType":"YulFunctionCall","src":"2499:29:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2490:3:17"},"nodeType":"YulFunctionCall","src":"2490:39:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2483:3:17"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2231:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2238:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2246:3:17","type":""}],"src":"2158:377:17"},{"body":{"nodeType":"YulBlock","src":"2659:195:17","statements":[{"nodeType":"YulAssignment","src":"2669:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2681:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2692:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2677:3:17"},"nodeType":"YulFunctionCall","src":"2677:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2669:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2716:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2727:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2712:3:17"},"nodeType":"YulFunctionCall","src":"2712:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2735:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"2741:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2731:3:17"},"nodeType":"YulFunctionCall","src":"2731:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2705:6:17"},"nodeType":"YulFunctionCall","src":"2705:47:17"},"nodeType":"YulExpressionStatement","src":"2705:47:17"},{"nodeType":"YulAssignment","src":"2761:86:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2833:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"2842:4:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2769:63:17"},"nodeType":"YulFunctionCall","src":"2769:78:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2761:4:17"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2631:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2643:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2654:4:17","type":""}],"src":"2541:313:17"},{"body":{"nodeType":"YulBlock","src":"2905:32:17","statements":[{"nodeType":"YulAssignment","src":"2915:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"2926:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2915:7:17"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2887:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2897:7:17","type":""}],"src":"2860:77:17"},{"body":{"nodeType":"YulBlock","src":"2986:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"3043:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3052:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3055:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3045:6:17"},"nodeType":"YulFunctionCall","src":"3045:12:17"},"nodeType":"YulExpressionStatement","src":"3045:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3009:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3034:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3016:17:17"},"nodeType":"YulFunctionCall","src":"3016:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3006:2:17"},"nodeType":"YulFunctionCall","src":"3006:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2999:6:17"},"nodeType":"YulFunctionCall","src":"2999:43:17"},"nodeType":"YulIf","src":"2996:63:17"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2979:5:17","type":""}],"src":"2943:122:17"},{"body":{"nodeType":"YulBlock","src":"3123:87:17","statements":[{"nodeType":"YulAssignment","src":"3133:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3155:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3142:12:17"},"nodeType":"YulFunctionCall","src":"3142:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3133:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3198:5:17"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3171:26:17"},"nodeType":"YulFunctionCall","src":"3171:33:17"},"nodeType":"YulExpressionStatement","src":"3171:33:17"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3101:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"3109:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3117:5:17","type":""}],"src":"3071:139:17"},{"body":{"nodeType":"YulBlock","src":"3282:263:17","statements":[{"body":{"nodeType":"YulBlock","src":"3328:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3330:77:17"},"nodeType":"YulFunctionCall","src":"3330:79:17"},"nodeType":"YulExpressionStatement","src":"3330:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3303:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"3312:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3299:3:17"},"nodeType":"YulFunctionCall","src":"3299:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"3324:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3295:3:17"},"nodeType":"YulFunctionCall","src":"3295:32:17"},"nodeType":"YulIf","src":"3292:119:17"},{"nodeType":"YulBlock","src":"3421:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3436:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"3450:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3440:6:17","type":""}]},{"nodeType":"YulAssignment","src":"3465:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3500:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"3511:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3496:3:17"},"nodeType":"YulFunctionCall","src":"3496:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3520:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3475:20:17"},"nodeType":"YulFunctionCall","src":"3475:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3465:6:17"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3252:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3263:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3275:6:17","type":""}],"src":"3216:329:17"},{"body":{"nodeType":"YulBlock","src":"3596:81:17","statements":[{"nodeType":"YulAssignment","src":"3606:65:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3621:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"3628:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3617:3:17"},"nodeType":"YulFunctionCall","src":"3617:54:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3606:7:17"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3578:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3588:7:17","type":""}],"src":"3551:126:17"},{"body":{"nodeType":"YulBlock","src":"3728:51:17","statements":[{"nodeType":"YulAssignment","src":"3738:35:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3767:5:17"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3749:17:17"},"nodeType":"YulFunctionCall","src":"3749:24:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3738:7:17"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3710:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3720:7:17","type":""}],"src":"3683:96:17"},{"body":{"nodeType":"YulBlock","src":"3850:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3867:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3890:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3872:17:17"},"nodeType":"YulFunctionCall","src":"3872:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3860:6:17"},"nodeType":"YulFunctionCall","src":"3860:37:17"},"nodeType":"YulExpressionStatement","src":"3860:37:17"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3838:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3845:3:17","type":""}],"src":"3785:118:17"},{"body":{"nodeType":"YulBlock","src":"4007:124:17","statements":[{"nodeType":"YulAssignment","src":"4017:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4029:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4040:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4025:3:17"},"nodeType":"YulFunctionCall","src":"4025:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4017:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4097:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4110:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4121:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4106:3:17"},"nodeType":"YulFunctionCall","src":"4106:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4053:43:17"},"nodeType":"YulFunctionCall","src":"4053:71:17"},"nodeType":"YulExpressionStatement","src":"4053:71:17"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3979:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3991:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4002:4:17","type":""}],"src":"3909:222:17"},{"body":{"nodeType":"YulBlock","src":"4180:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"4237:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4246:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4249:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4239:6:17"},"nodeType":"YulFunctionCall","src":"4239:12:17"},"nodeType":"YulExpressionStatement","src":"4239:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4203:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4228:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4210:17:17"},"nodeType":"YulFunctionCall","src":"4210:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4200:2:17"},"nodeType":"YulFunctionCall","src":"4200:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4193:6:17"},"nodeType":"YulFunctionCall","src":"4193:43:17"},"nodeType":"YulIf","src":"4190:63:17"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4173:5:17","type":""}],"src":"4137:122:17"},{"body":{"nodeType":"YulBlock","src":"4317:87:17","statements":[{"nodeType":"YulAssignment","src":"4327:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4349:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4336:12:17"},"nodeType":"YulFunctionCall","src":"4336:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4327:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4392:5:17"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"4365:26:17"},"nodeType":"YulFunctionCall","src":"4365:33:17"},"nodeType":"YulExpressionStatement","src":"4365:33:17"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4295:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"4303:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4311:5:17","type":""}],"src":"4265:139:17"},{"body":{"nodeType":"YulBlock","src":"4493:391:17","statements":[{"body":{"nodeType":"YulBlock","src":"4539:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4541:77:17"},"nodeType":"YulFunctionCall","src":"4541:79:17"},"nodeType":"YulExpressionStatement","src":"4541:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4514:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"4523:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4510:3:17"},"nodeType":"YulFunctionCall","src":"4510:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"4535:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4506:3:17"},"nodeType":"YulFunctionCall","src":"4506:32:17"},"nodeType":"YulIf","src":"4503:119:17"},{"nodeType":"YulBlock","src":"4632:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4647:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4661:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4651:6:17","type":""}]},{"nodeType":"YulAssignment","src":"4676:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4711:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"4722:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4707:3:17"},"nodeType":"YulFunctionCall","src":"4707:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4731:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4686:20:17"},"nodeType":"YulFunctionCall","src":"4686:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4676:6:17"}]}]},{"nodeType":"YulBlock","src":"4759:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4774:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4788:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4778:6:17","type":""}]},{"nodeType":"YulAssignment","src":"4804:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4839:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"4850:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4835:3:17"},"nodeType":"YulFunctionCall","src":"4835:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4859:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4814:20:17"},"nodeType":"YulFunctionCall","src":"4814:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4804:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4455:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4466:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4478:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4486:6:17","type":""}],"src":"4410:474:17"},{"body":{"nodeType":"YulBlock","src":"4955:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4972:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4995:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4977:17:17"},"nodeType":"YulFunctionCall","src":"4977:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4965:6:17"},"nodeType":"YulFunctionCall","src":"4965:37:17"},"nodeType":"YulExpressionStatement","src":"4965:37:17"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4943:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4950:3:17","type":""}],"src":"4890:118:17"},{"body":{"nodeType":"YulBlock","src":"5112:124:17","statements":[{"nodeType":"YulAssignment","src":"5122:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5134:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5145:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5130:3:17"},"nodeType":"YulFunctionCall","src":"5130:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5122:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5202:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5215:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5226:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5211:3:17"},"nodeType":"YulFunctionCall","src":"5211:17:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5158:43:17"},"nodeType":"YulFunctionCall","src":"5158:71:17"},"nodeType":"YulExpressionStatement","src":"5158:71:17"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5084:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5096:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5107:4:17","type":""}],"src":"5014:222:17"},{"body":{"nodeType":"YulBlock","src":"5342:519:17","statements":[{"body":{"nodeType":"YulBlock","src":"5388:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5390:77:17"},"nodeType":"YulFunctionCall","src":"5390:79:17"},"nodeType":"YulExpressionStatement","src":"5390:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5363:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"5372:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5359:3:17"},"nodeType":"YulFunctionCall","src":"5359:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"5384:2:17","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5355:3:17"},"nodeType":"YulFunctionCall","src":"5355:32:17"},"nodeType":"YulIf","src":"5352:119:17"},{"nodeType":"YulBlock","src":"5481:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5496:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"5510:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5500:6:17","type":""}]},{"nodeType":"YulAssignment","src":"5525:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5560:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"5571:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5556:3:17"},"nodeType":"YulFunctionCall","src":"5556:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5580:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5535:20:17"},"nodeType":"YulFunctionCall","src":"5535:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5525:6:17"}]}]},{"nodeType":"YulBlock","src":"5608:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5623:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"5637:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5627:6:17","type":""}]},{"nodeType":"YulAssignment","src":"5653:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5688:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"5699:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5684:3:17"},"nodeType":"YulFunctionCall","src":"5684:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5708:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5663:20:17"},"nodeType":"YulFunctionCall","src":"5663:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5653:6:17"}]}]},{"nodeType":"YulBlock","src":"5736:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5751:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"5765:2:17","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5755:6:17","type":""}]},{"nodeType":"YulAssignment","src":"5781:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5816:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"5827:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5812:3:17"},"nodeType":"YulFunctionCall","src":"5812:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5836:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5791:20:17"},"nodeType":"YulFunctionCall","src":"5791:53:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5781:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5296:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5307:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5319:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5327:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5335:6:17","type":""}],"src":"5242:619:17"},{"body":{"nodeType":"YulBlock","src":"5956:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5973:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5976:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5966:6:17"},"nodeType":"YulFunctionCall","src":"5966:12:17"},"nodeType":"YulExpressionStatement","src":"5966:12:17"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"5867:117:17"},{"body":{"nodeType":"YulBlock","src":"6079:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6096:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6099:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6089:6:17"},"nodeType":"YulFunctionCall","src":"6089:12:17"},"nodeType":"YulExpressionStatement","src":"6089:12:17"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"5990:117:17"},{"body":{"nodeType":"YulBlock","src":"6141:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6158:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6161:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6151:6:17"},"nodeType":"YulFunctionCall","src":"6151:88:17"},"nodeType":"YulExpressionStatement","src":"6151:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6255:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6258:4:17","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6248:6:17"},"nodeType":"YulFunctionCall","src":"6248:15:17"},"nodeType":"YulExpressionStatement","src":"6248:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6279:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6282:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6272:6:17"},"nodeType":"YulFunctionCall","src":"6272:15:17"},"nodeType":"YulExpressionStatement","src":"6272:15:17"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"6113:180:17"},{"body":{"nodeType":"YulBlock","src":"6342:238:17","statements":[{"nodeType":"YulVariableDeclaration","src":"6352:58:17","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6374:6:17"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"6404:4:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"6382:21:17"},"nodeType":"YulFunctionCall","src":"6382:27:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6370:3:17"},"nodeType":"YulFunctionCall","src":"6370:40:17"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"6356:10:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"6521:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6523:16:17"},"nodeType":"YulFunctionCall","src":"6523:18:17"},"nodeType":"YulExpressionStatement","src":"6523:18:17"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6464:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"6476:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6461:2:17"},"nodeType":"YulFunctionCall","src":"6461:34:17"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6500:10:17"},{"name":"memPtr","nodeType":"YulIdentifier","src":"6512:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6497:2:17"},"nodeType":"YulFunctionCall","src":"6497:22:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6458:2:17"},"nodeType":"YulFunctionCall","src":"6458:62:17"},"nodeType":"YulIf","src":"6455:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6559:2:17","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6563:10:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6552:6:17"},"nodeType":"YulFunctionCall","src":"6552:22:17"},"nodeType":"YulExpressionStatement","src":"6552:22:17"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6328:6:17","type":""},{"name":"size","nodeType":"YulTypedName","src":"6336:4:17","type":""}],"src":"6299:281:17"},{"body":{"nodeType":"YulBlock","src":"6627:88:17","statements":[{"nodeType":"YulAssignment","src":"6637:30:17","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"6647:18:17"},"nodeType":"YulFunctionCall","src":"6647:20:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6637:6:17"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6696:6:17"},{"name":"size","nodeType":"YulIdentifier","src":"6704:4:17"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"6676:19:17"},"nodeType":"YulFunctionCall","src":"6676:33:17"},"nodeType":"YulExpressionStatement","src":"6676:33:17"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"6611:4:17","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"6620:6:17","type":""}],"src":"6586:129:17"},{"body":{"nodeType":"YulBlock","src":"6788:241:17","statements":[{"body":{"nodeType":"YulBlock","src":"6893:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6895:16:17"},"nodeType":"YulFunctionCall","src":"6895:18:17"},"nodeType":"YulExpressionStatement","src":"6895:18:17"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6865:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"6873:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6862:2:17"},"nodeType":"YulFunctionCall","src":"6862:30:17"},"nodeType":"YulIf","src":"6859:56:17"},{"nodeType":"YulAssignment","src":"6925:37:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6955:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"6933:21:17"},"nodeType":"YulFunctionCall","src":"6933:29:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"6925:4:17"}]},{"nodeType":"YulAssignment","src":"6999:23:17","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"7011:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"7017:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7007:3:17"},"nodeType":"YulFunctionCall","src":"7007:15:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"6999:4:17"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"6772:6:17","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"6783:4:17","type":""}],"src":"6721:308:17"},{"body":{"nodeType":"YulBlock","src":"7099:82:17","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7122:3:17"},{"name":"src","nodeType":"YulIdentifier","src":"7127:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"7132:6:17"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"7109:12:17"},"nodeType":"YulFunctionCall","src":"7109:30:17"},"nodeType":"YulExpressionStatement","src":"7109:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7159:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"7164:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7155:3:17"},"nodeType":"YulFunctionCall","src":"7155:16:17"},{"kind":"number","nodeType":"YulLiteral","src":"7173:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7148:6:17"},"nodeType":"YulFunctionCall","src":"7148:27:17"},"nodeType":"YulExpressionStatement","src":"7148:27:17"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"7081:3:17","type":""},{"name":"dst","nodeType":"YulTypedName","src":"7086:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"7091:6:17","type":""}],"src":"7035:146:17"},{"body":{"nodeType":"YulBlock","src":"7271:341:17","statements":[{"nodeType":"YulAssignment","src":"7281:75:17","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7348:6:17"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7306:41:17"},"nodeType":"YulFunctionCall","src":"7306:49:17"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"7290:15:17"},"nodeType":"YulFunctionCall","src":"7290:66:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"7281:5:17"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"7372:5:17"},{"name":"length","nodeType":"YulIdentifier","src":"7379:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7365:6:17"},"nodeType":"YulFunctionCall","src":"7365:21:17"},"nodeType":"YulExpressionStatement","src":"7365:21:17"},{"nodeType":"YulVariableDeclaration","src":"7395:27:17","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"7410:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"7417:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7406:3:17"},"nodeType":"YulFunctionCall","src":"7406:16:17"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"7399:3:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"7460:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"7462:77:17"},"nodeType":"YulFunctionCall","src":"7462:79:17"},"nodeType":"YulExpressionStatement","src":"7462:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7441:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"7446:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7437:3:17"},"nodeType":"YulFunctionCall","src":"7437:16:17"},{"name":"end","nodeType":"YulIdentifier","src":"7455:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7434:2:17"},"nodeType":"YulFunctionCall","src":"7434:25:17"},"nodeType":"YulIf","src":"7431:112:17"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7589:3:17"},{"name":"dst","nodeType":"YulIdentifier","src":"7594:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"7599:6:17"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"7552:36:17"},"nodeType":"YulFunctionCall","src":"7552:54:17"},"nodeType":"YulExpressionStatement","src":"7552:54:17"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"7244:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"7249:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"7257:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"7265:5:17","type":""}],"src":"7187:425:17"},{"body":{"nodeType":"YulBlock","src":"7694:278:17","statements":[{"body":{"nodeType":"YulBlock","src":"7743:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"7745:77:17"},"nodeType":"YulFunctionCall","src":"7745:79:17"},"nodeType":"YulExpressionStatement","src":"7745:79:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7722:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"7730:4:17","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7718:3:17"},"nodeType":"YulFunctionCall","src":"7718:17:17"},{"name":"end","nodeType":"YulIdentifier","src":"7737:3:17"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7714:3:17"},"nodeType":"YulFunctionCall","src":"7714:27:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7707:6:17"},"nodeType":"YulFunctionCall","src":"7707:35:17"},"nodeType":"YulIf","src":"7704:122:17"},{"nodeType":"YulVariableDeclaration","src":"7835:34:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7862:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7849:12:17"},"nodeType":"YulFunctionCall","src":"7849:20:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7839:6:17","type":""}]},{"nodeType":"YulAssignment","src":"7878:88:17","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7939:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"7947:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7935:3:17"},"nodeType":"YulFunctionCall","src":"7935:17:17"},{"name":"length","nodeType":"YulIdentifier","src":"7954:6:17"},{"name":"end","nodeType":"YulIdentifier","src":"7962:3:17"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7887:47:17"},"nodeType":"YulFunctionCall","src":"7887:79:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"7878:5:17"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7672:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"7680:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"7688:5:17","type":""}],"src":"7632:340:17"},{"body":{"nodeType":"YulBlock","src":"8088:689:17","statements":[{"body":{"nodeType":"YulBlock","src":"8134:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8136:77:17"},"nodeType":"YulFunctionCall","src":"8136:79:17"},"nodeType":"YulExpressionStatement","src":"8136:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8109:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"8118:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8105:3:17"},"nodeType":"YulFunctionCall","src":"8105:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"8130:2:17","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8101:3:17"},"nodeType":"YulFunctionCall","src":"8101:32:17"},"nodeType":"YulIf","src":"8098:119:17"},{"nodeType":"YulBlock","src":"8227:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"8242:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"8256:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8246:6:17","type":""}]},{"nodeType":"YulAssignment","src":"8271:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8306:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"8317:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8302:3:17"},"nodeType":"YulFunctionCall","src":"8302:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8326:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8281:20:17"},"nodeType":"YulFunctionCall","src":"8281:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8271:6:17"}]}]},{"nodeType":"YulBlock","src":"8354:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"8369:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"8383:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8373:6:17","type":""}]},{"nodeType":"YulAssignment","src":"8399:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8434:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"8445:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8430:3:17"},"nodeType":"YulFunctionCall","src":"8430:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8454:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"8409:20:17"},"nodeType":"YulFunctionCall","src":"8409:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8399:6:17"}]}]},{"nodeType":"YulBlock","src":"8482:288:17","statements":[{"nodeType":"YulVariableDeclaration","src":"8497:46:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8528:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"8539:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8524:3:17"},"nodeType":"YulFunctionCall","src":"8524:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8511:12:17"},"nodeType":"YulFunctionCall","src":"8511:32:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8501:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"8590:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"8592:77:17"},"nodeType":"YulFunctionCall","src":"8592:79:17"},"nodeType":"YulExpressionStatement","src":"8592:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8562:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"8570:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8559:2:17"},"nodeType":"YulFunctionCall","src":"8559:30:17"},"nodeType":"YulIf","src":"8556:117:17"},{"nodeType":"YulAssignment","src":"8687:73:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8732:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"8743:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8728:3:17"},"nodeType":"YulFunctionCall","src":"8728:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8752:7:17"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"8697:30:17"},"nodeType":"YulFunctionCall","src":"8697:63:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"8687:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8042:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8053:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8065:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8073:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8081:6:17","type":""}],"src":"7978:799:17"},{"body":{"nodeType":"YulBlock","src":"8849:263:17","statements":[{"body":{"nodeType":"YulBlock","src":"8895:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8897:77:17"},"nodeType":"YulFunctionCall","src":"8897:79:17"},"nodeType":"YulExpressionStatement","src":"8897:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8870:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"8879:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8866:3:17"},"nodeType":"YulFunctionCall","src":"8866:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"8891:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8862:3:17"},"nodeType":"YulFunctionCall","src":"8862:32:17"},"nodeType":"YulIf","src":"8859:119:17"},{"nodeType":"YulBlock","src":"8988:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"9003:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"9017:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9007:6:17","type":""}]},{"nodeType":"YulAssignment","src":"9032:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9067:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"9078:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9063:3:17"},"nodeType":"YulFunctionCall","src":"9063:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9087:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9042:20:17"},"nodeType":"YulFunctionCall","src":"9042:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9032:6:17"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8819:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8830:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8842:6:17","type":""}],"src":"8783:329:17"},{"body":{"nodeType":"YulBlock","src":"9158:76:17","statements":[{"body":{"nodeType":"YulBlock","src":"9212:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9221:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9224:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9214:6:17"},"nodeType":"YulFunctionCall","src":"9214:12:17"},"nodeType":"YulExpressionStatement","src":"9214:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9181:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9203:5:17"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"9188:14:17"},"nodeType":"YulFunctionCall","src":"9188:21:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9178:2:17"},"nodeType":"YulFunctionCall","src":"9178:32:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9171:6:17"},"nodeType":"YulFunctionCall","src":"9171:40:17"},"nodeType":"YulIf","src":"9168:60:17"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9151:5:17","type":""}],"src":"9118:116:17"},{"body":{"nodeType":"YulBlock","src":"9289:84:17","statements":[{"nodeType":"YulAssignment","src":"9299:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9321:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9308:12:17"},"nodeType":"YulFunctionCall","src":"9308:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9299:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9361:5:17"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"9337:23:17"},"nodeType":"YulFunctionCall","src":"9337:30:17"},"nodeType":"YulExpressionStatement","src":"9337:30:17"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9267:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"9275:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"9283:5:17","type":""}],"src":"9240:133:17"},{"body":{"nodeType":"YulBlock","src":"9459:388:17","statements":[{"body":{"nodeType":"YulBlock","src":"9505:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9507:77:17"},"nodeType":"YulFunctionCall","src":"9507:79:17"},"nodeType":"YulExpressionStatement","src":"9507:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9480:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"9489:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9476:3:17"},"nodeType":"YulFunctionCall","src":"9476:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"9501:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9472:3:17"},"nodeType":"YulFunctionCall","src":"9472:32:17"},"nodeType":"YulIf","src":"9469:119:17"},{"nodeType":"YulBlock","src":"9598:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"9613:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"9627:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9617:6:17","type":""}]},{"nodeType":"YulAssignment","src":"9642:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9677:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"9688:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9673:3:17"},"nodeType":"YulFunctionCall","src":"9673:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9697:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9652:20:17"},"nodeType":"YulFunctionCall","src":"9652:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9642:6:17"}]}]},{"nodeType":"YulBlock","src":"9725:115:17","statements":[{"nodeType":"YulVariableDeclaration","src":"9740:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"9754:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9744:6:17","type":""}]},{"nodeType":"YulAssignment","src":"9770:60:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9802:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"9813:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9798:3:17"},"nodeType":"YulFunctionCall","src":"9798:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9822:7:17"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"9780:17:17"},"nodeType":"YulFunctionCall","src":"9780:50:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9770:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9421:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9432:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9444:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9452:6:17","type":""}],"src":"9379:468:17"},{"body":{"nodeType":"YulBlock","src":"9919:241:17","statements":[{"body":{"nodeType":"YulBlock","src":"10024:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"10026:16:17"},"nodeType":"YulFunctionCall","src":"10026:18:17"},"nodeType":"YulExpressionStatement","src":"10026:18:17"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9996:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"10004:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9993:2:17"},"nodeType":"YulFunctionCall","src":"9993:30:17"},"nodeType":"YulIf","src":"9990:56:17"},{"nodeType":"YulAssignment","src":"10056:37:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10086:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"10064:21:17"},"nodeType":"YulFunctionCall","src":"10064:29:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"10056:4:17"}]},{"nodeType":"YulAssignment","src":"10130:23:17","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"10142:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"10148:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10138:3:17"},"nodeType":"YulFunctionCall","src":"10138:15:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"10130:4:17"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"9903:6:17","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"9914:4:17","type":""}],"src":"9853:307:17"},{"body":{"nodeType":"YulBlock","src":"10249:340:17","statements":[{"nodeType":"YulAssignment","src":"10259:74:17","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10325:6:17"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"10284:40:17"},"nodeType":"YulFunctionCall","src":"10284:48:17"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"10268:15:17"},"nodeType":"YulFunctionCall","src":"10268:65:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"10259:5:17"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"10349:5:17"},{"name":"length","nodeType":"YulIdentifier","src":"10356:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10342:6:17"},"nodeType":"YulFunctionCall","src":"10342:21:17"},"nodeType":"YulExpressionStatement","src":"10342:21:17"},{"nodeType":"YulVariableDeclaration","src":"10372:27:17","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"10387:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"10394:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10383:3:17"},"nodeType":"YulFunctionCall","src":"10383:16:17"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"10376:3:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"10437:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"10439:77:17"},"nodeType":"YulFunctionCall","src":"10439:79:17"},"nodeType":"YulExpressionStatement","src":"10439:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10418:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"10423:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10414:3:17"},"nodeType":"YulFunctionCall","src":"10414:16:17"},{"name":"end","nodeType":"YulIdentifier","src":"10432:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10411:2:17"},"nodeType":"YulFunctionCall","src":"10411:25:17"},"nodeType":"YulIf","src":"10408:112:17"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10566:3:17"},{"name":"dst","nodeType":"YulIdentifier","src":"10571:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"10576:6:17"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"10529:36:17"},"nodeType":"YulFunctionCall","src":"10529:54:17"},"nodeType":"YulExpressionStatement","src":"10529:54:17"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"10222:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"10227:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"10235:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"10243:5:17","type":""}],"src":"10166:423:17"},{"body":{"nodeType":"YulBlock","src":"10669:277:17","statements":[{"body":{"nodeType":"YulBlock","src":"10718:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"10720:77:17"},"nodeType":"YulFunctionCall","src":"10720:79:17"},"nodeType":"YulExpressionStatement","src":"10720:79:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10697:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"10705:4:17","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10693:3:17"},"nodeType":"YulFunctionCall","src":"10693:17:17"},{"name":"end","nodeType":"YulIdentifier","src":"10712:3:17"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10689:3:17"},"nodeType":"YulFunctionCall","src":"10689:27:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10682:6:17"},"nodeType":"YulFunctionCall","src":"10682:35:17"},"nodeType":"YulIf","src":"10679:122:17"},{"nodeType":"YulVariableDeclaration","src":"10810:34:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10837:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10824:12:17"},"nodeType":"YulFunctionCall","src":"10824:20:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"10814:6:17","type":""}]},{"nodeType":"YulAssignment","src":"10853:87:17","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10913:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"10921:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10909:3:17"},"nodeType":"YulFunctionCall","src":"10909:17:17"},{"name":"length","nodeType":"YulIdentifier","src":"10928:6:17"},{"name":"end","nodeType":"YulIdentifier","src":"10936:3:17"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"10862:46:17"},"nodeType":"YulFunctionCall","src":"10862:78:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"10853:5:17"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"10647:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"10655:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"10663:5:17","type":""}],"src":"10608:338:17"},{"body":{"nodeType":"YulBlock","src":"11078:817:17","statements":[{"body":{"nodeType":"YulBlock","src":"11125:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11127:77:17"},"nodeType":"YulFunctionCall","src":"11127:79:17"},"nodeType":"YulExpressionStatement","src":"11127:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11099:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"11108:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11095:3:17"},"nodeType":"YulFunctionCall","src":"11095:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"11120:3:17","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11091:3:17"},"nodeType":"YulFunctionCall","src":"11091:33:17"},"nodeType":"YulIf","src":"11088:120:17"},{"nodeType":"YulBlock","src":"11218:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"11233:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"11247:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11237:6:17","type":""}]},{"nodeType":"YulAssignment","src":"11262:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11297:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"11308:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11293:3:17"},"nodeType":"YulFunctionCall","src":"11293:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11317:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11272:20:17"},"nodeType":"YulFunctionCall","src":"11272:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11262:6:17"}]}]},{"nodeType":"YulBlock","src":"11345:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"11360:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"11374:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11364:6:17","type":""}]},{"nodeType":"YulAssignment","src":"11390:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11425:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"11436:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11421:3:17"},"nodeType":"YulFunctionCall","src":"11421:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11445:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11400:20:17"},"nodeType":"YulFunctionCall","src":"11400:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11390:6:17"}]}]},{"nodeType":"YulBlock","src":"11473:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"11488:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"11502:2:17","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11492:6:17","type":""}]},{"nodeType":"YulAssignment","src":"11518:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11553:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"11564:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11549:3:17"},"nodeType":"YulFunctionCall","src":"11549:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11573:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"11528:20:17"},"nodeType":"YulFunctionCall","src":"11528:53:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"11518:6:17"}]}]},{"nodeType":"YulBlock","src":"11601:287:17","statements":[{"nodeType":"YulVariableDeclaration","src":"11616:46:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11647:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"11658:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11643:3:17"},"nodeType":"YulFunctionCall","src":"11643:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11630:12:17"},"nodeType":"YulFunctionCall","src":"11630:32:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11620:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"11709:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"11711:77:17"},"nodeType":"YulFunctionCall","src":"11711:79:17"},"nodeType":"YulExpressionStatement","src":"11711:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11681:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"11689:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11678:2:17"},"nodeType":"YulFunctionCall","src":"11678:30:17"},"nodeType":"YulIf","src":"11675:117:17"},{"nodeType":"YulAssignment","src":"11806:72:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11850:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"11861:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11846:3:17"},"nodeType":"YulFunctionCall","src":"11846:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11870:7:17"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"11816:29:17"},"nodeType":"YulFunctionCall","src":"11816:62:17"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"11806:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11024:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11035:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11047:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11055:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11063:6:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11071:6:17","type":""}],"src":"10952:943:17"},{"body":{"nodeType":"YulBlock","src":"11984:391:17","statements":[{"body":{"nodeType":"YulBlock","src":"12030:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12032:77:17"},"nodeType":"YulFunctionCall","src":"12032:79:17"},"nodeType":"YulExpressionStatement","src":"12032:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12005:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"12014:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12001:3:17"},"nodeType":"YulFunctionCall","src":"12001:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"12026:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11997:3:17"},"nodeType":"YulFunctionCall","src":"11997:32:17"},"nodeType":"YulIf","src":"11994:119:17"},{"nodeType":"YulBlock","src":"12123:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"12138:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"12152:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12142:6:17","type":""}]},{"nodeType":"YulAssignment","src":"12167:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12202:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"12213:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12198:3:17"},"nodeType":"YulFunctionCall","src":"12198:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12222:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"12177:20:17"},"nodeType":"YulFunctionCall","src":"12177:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12167:6:17"}]}]},{"nodeType":"YulBlock","src":"12250:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"12265:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"12279:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12269:6:17","type":""}]},{"nodeType":"YulAssignment","src":"12295:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12330:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"12341:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12326:3:17"},"nodeType":"YulFunctionCall","src":"12326:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12350:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"12305:20:17"},"nodeType":"YulFunctionCall","src":"12305:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12295:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11946:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11957:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11969:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11977:6:17","type":""}],"src":"11901:474:17"},{"body":{"nodeType":"YulBlock","src":"12409:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12426:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12429:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12419:6:17"},"nodeType":"YulFunctionCall","src":"12419:88:17"},"nodeType":"YulExpressionStatement","src":"12419:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12523:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12526:4:17","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12516:6:17"},"nodeType":"YulFunctionCall","src":"12516:15:17"},"nodeType":"YulExpressionStatement","src":"12516:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12547:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12550:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12540:6:17"},"nodeType":"YulFunctionCall","src":"12540:15:17"},"nodeType":"YulExpressionStatement","src":"12540:15:17"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"12381:180:17"},{"body":{"nodeType":"YulBlock","src":"12618:269:17","statements":[{"nodeType":"YulAssignment","src":"12628:22:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"12642:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"12648:1:17","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"12638:3:17"},"nodeType":"YulFunctionCall","src":"12638:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"12628:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"12659:38:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"12689:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"12695:1:17","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12685:3:17"},"nodeType":"YulFunctionCall","src":"12685:12:17"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"12663:18:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"12736:51:17","statements":[{"nodeType":"YulAssignment","src":"12750:27:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12764:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"12772:4:17","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12760:3:17"},"nodeType":"YulFunctionCall","src":"12760:17:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"12750:6:17"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"12716:18:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12709:6:17"},"nodeType":"YulFunctionCall","src":"12709:26:17"},"nodeType":"YulIf","src":"12706:81:17"},{"body":{"nodeType":"YulBlock","src":"12839:42:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"12853:16:17"},"nodeType":"YulFunctionCall","src":"12853:18:17"},"nodeType":"YulExpressionStatement","src":"12853:18:17"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"12803:18:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12826:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"12834:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12823:2:17"},"nodeType":"YulFunctionCall","src":"12823:14:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"12800:2:17"},"nodeType":"YulFunctionCall","src":"12800:38:17"},"nodeType":"YulIf","src":"12797:84:17"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"12602:4:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"12611:6:17","type":""}],"src":"12567:320:17"},{"body":{"nodeType":"YulBlock","src":"12999:114:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13021:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"13029:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13017:3:17"},"nodeType":"YulFunctionCall","src":"13017:14:17"},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e65","kind":"string","nodeType":"YulLiteral","src":"13033:34:17","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13010:6:17"},"nodeType":"YulFunctionCall","src":"13010:58:17"},"nodeType":"YulExpressionStatement","src":"13010:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13089:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"13097:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13085:3:17"},"nodeType":"YulFunctionCall","src":"13085:15:17"},{"hexValue":"72","kind":"string","nodeType":"YulLiteral","src":"13102:3:17","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13078:6:17"},"nodeType":"YulFunctionCall","src":"13078:28:17"},"nodeType":"YulExpressionStatement","src":"13078:28:17"}]},"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12991:6:17","type":""}],"src":"12893:220:17"},{"body":{"nodeType":"YulBlock","src":"13265:220:17","statements":[{"nodeType":"YulAssignment","src":"13275:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13341:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"13346:2:17","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13282:58:17"},"nodeType":"YulFunctionCall","src":"13282:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13275:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13447:3:17"}],"functionName":{"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulIdentifier","src":"13358:88:17"},"nodeType":"YulFunctionCall","src":"13358:93:17"},"nodeType":"YulExpressionStatement","src":"13358:93:17"},{"nodeType":"YulAssignment","src":"13460:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13471:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"13476:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13467:3:17"},"nodeType":"YulFunctionCall","src":"13467:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13460:3:17"}]}]},"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13253:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13261:3:17","type":""}],"src":"13119:366:17"},{"body":{"nodeType":"YulBlock","src":"13662:248:17","statements":[{"nodeType":"YulAssignment","src":"13672:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13684:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"13695:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13680:3:17"},"nodeType":"YulFunctionCall","src":"13680:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13672:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13719:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"13730:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13715:3:17"},"nodeType":"YulFunctionCall","src":"13715:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13738:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"13744:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13734:3:17"},"nodeType":"YulFunctionCall","src":"13734:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13708:6:17"},"nodeType":"YulFunctionCall","src":"13708:47:17"},"nodeType":"YulExpressionStatement","src":"13708:47:17"},{"nodeType":"YulAssignment","src":"13764:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13898:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13772:124:17"},"nodeType":"YulFunctionCall","src":"13772:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13764:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13642:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13657:4:17","type":""}],"src":"13491:419:17"},{"body":{"nodeType":"YulBlock","src":"14022:143:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14044:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"14052:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14040:3:17"},"nodeType":"YulFunctionCall","src":"14040:14:17"},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f","kind":"string","nodeType":"YulLiteral","src":"14056:34:17","type":"","value":"ERC721: approve caller is not to"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14033:6:17"},"nodeType":"YulFunctionCall","src":"14033:58:17"},"nodeType":"YulExpressionStatement","src":"14033:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14112:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"14120:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14108:3:17"},"nodeType":"YulFunctionCall","src":"14108:15:17"},{"hexValue":"6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c","kind":"string","nodeType":"YulLiteral","src":"14125:32:17","type":"","value":"ken owner nor approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14101:6:17"},"nodeType":"YulFunctionCall","src":"14101:57:17"},"nodeType":"YulExpressionStatement","src":"14101:57:17"}]},"name":"store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14014:6:17","type":""}],"src":"13916:249:17"},{"body":{"nodeType":"YulBlock","src":"14317:220:17","statements":[{"nodeType":"YulAssignment","src":"14327:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14393:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"14398:2:17","type":"","value":"62"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14334:58:17"},"nodeType":"YulFunctionCall","src":"14334:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14327:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14499:3:17"}],"functionName":{"name":"store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304","nodeType":"YulIdentifier","src":"14410:88:17"},"nodeType":"YulFunctionCall","src":"14410:93:17"},"nodeType":"YulExpressionStatement","src":"14410:93:17"},{"nodeType":"YulAssignment","src":"14512:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14523:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"14528:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14519:3:17"},"nodeType":"YulFunctionCall","src":"14519:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14512:3:17"}]}]},"name":"abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14305:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14313:3:17","type":""}],"src":"14171:366:17"},{"body":{"nodeType":"YulBlock","src":"14714:248:17","statements":[{"nodeType":"YulAssignment","src":"14724:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14736:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"14747:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14732:3:17"},"nodeType":"YulFunctionCall","src":"14732:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14724:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14771:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"14782:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14767:3:17"},"nodeType":"YulFunctionCall","src":"14767:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14790:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"14796:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14786:3:17"},"nodeType":"YulFunctionCall","src":"14786:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14760:6:17"},"nodeType":"YulFunctionCall","src":"14760:47:17"},"nodeType":"YulExpressionStatement","src":"14760:47:17"},{"nodeType":"YulAssignment","src":"14816:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14950:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14824:124:17"},"nodeType":"YulFunctionCall","src":"14824:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14816:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14694:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14709:4:17","type":""}],"src":"14543:419:17"},{"body":{"nodeType":"YulBlock","src":"15074:127:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15096:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"15104:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15092:3:17"},"nodeType":"YulFunctionCall","src":"15092:14:17"},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65","kind":"string","nodeType":"YulLiteral","src":"15108:34:17","type":"","value":"ERC721: caller is not token owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15085:6:17"},"nodeType":"YulFunctionCall","src":"15085:58:17"},"nodeType":"YulExpressionStatement","src":"15085:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15164:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"15172:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15160:3:17"},"nodeType":"YulFunctionCall","src":"15160:15:17"},{"hexValue":"72206e6f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"15177:16:17","type":"","value":"r nor approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15153:6:17"},"nodeType":"YulFunctionCall","src":"15153:41:17"},"nodeType":"YulExpressionStatement","src":"15153:41:17"}]},"name":"store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15066:6:17","type":""}],"src":"14968:233:17"},{"body":{"nodeType":"YulBlock","src":"15353:220:17","statements":[{"nodeType":"YulAssignment","src":"15363:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15429:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"15434:2:17","type":"","value":"46"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15370:58:17"},"nodeType":"YulFunctionCall","src":"15370:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15363:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15535:3:17"}],"functionName":{"name":"store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b","nodeType":"YulIdentifier","src":"15446:88:17"},"nodeType":"YulFunctionCall","src":"15446:93:17"},"nodeType":"YulExpressionStatement","src":"15446:93:17"},{"nodeType":"YulAssignment","src":"15548:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15559:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"15564:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15555:3:17"},"nodeType":"YulFunctionCall","src":"15555:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15548:3:17"}]}]},"name":"abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15341:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15349:3:17","type":""}],"src":"15207:366:17"},{"body":{"nodeType":"YulBlock","src":"15750:248:17","statements":[{"nodeType":"YulAssignment","src":"15760:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15772:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"15783:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15768:3:17"},"nodeType":"YulFunctionCall","src":"15768:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15760:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15807:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"15818:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15803:3:17"},"nodeType":"YulFunctionCall","src":"15803:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15826:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"15832:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15822:3:17"},"nodeType":"YulFunctionCall","src":"15822:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15796:6:17"},"nodeType":"YulFunctionCall","src":"15796:47:17"},"nodeType":"YulExpressionStatement","src":"15796:47:17"},{"nodeType":"YulAssignment","src":"15852:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15986:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15860:124:17"},"nodeType":"YulFunctionCall","src":"15860:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15852:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15730:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15745:4:17","type":""}],"src":"15579:419:17"},{"body":{"nodeType":"YulBlock","src":"16110:124:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16132:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"16140:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16128:3:17"},"nodeType":"YulFunctionCall","src":"16128:14:17"},{"hexValue":"455243373231456e756d657261626c653a206f776e657220696e646578206f75","kind":"string","nodeType":"YulLiteral","src":"16144:34:17","type":"","value":"ERC721Enumerable: owner index ou"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16121:6:17"},"nodeType":"YulFunctionCall","src":"16121:58:17"},"nodeType":"YulExpressionStatement","src":"16121:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16200:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"16208:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16196:3:17"},"nodeType":"YulFunctionCall","src":"16196:15:17"},{"hexValue":"74206f6620626f756e6473","kind":"string","nodeType":"YulLiteral","src":"16213:13:17","type":"","value":"t of bounds"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16189:6:17"},"nodeType":"YulFunctionCall","src":"16189:38:17"},"nodeType":"YulExpressionStatement","src":"16189:38:17"}]},"name":"store_literal_in_memory_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16102:6:17","type":""}],"src":"16004:230:17"},{"body":{"nodeType":"YulBlock","src":"16386:220:17","statements":[{"nodeType":"YulAssignment","src":"16396:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16462:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"16467:2:17","type":"","value":"43"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16403:58:17"},"nodeType":"YulFunctionCall","src":"16403:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16396:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16568:3:17"}],"functionName":{"name":"store_literal_in_memory_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c","nodeType":"YulIdentifier","src":"16479:88:17"},"nodeType":"YulFunctionCall","src":"16479:93:17"},"nodeType":"YulExpressionStatement","src":"16479:93:17"},{"nodeType":"YulAssignment","src":"16581:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16592:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"16597:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16588:3:17"},"nodeType":"YulFunctionCall","src":"16588:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16581:3:17"}]}]},"name":"abi_encode_t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16374:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16382:3:17","type":""}],"src":"16240:366:17"},{"body":{"nodeType":"YulBlock","src":"16783:248:17","statements":[{"nodeType":"YulAssignment","src":"16793:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16805:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"16816:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16801:3:17"},"nodeType":"YulFunctionCall","src":"16801:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16793:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16840:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"16851:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16836:3:17"},"nodeType":"YulFunctionCall","src":"16836:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16859:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"16865:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16855:3:17"},"nodeType":"YulFunctionCall","src":"16855:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16829:6:17"},"nodeType":"YulFunctionCall","src":"16829:47:17"},"nodeType":"YulExpressionStatement","src":"16829:47:17"},{"nodeType":"YulAssignment","src":"16885:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17019:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16893:124:17"},"nodeType":"YulFunctionCall","src":"16893:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16885:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16763:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16778:4:17","type":""}],"src":"16612:419:17"},{"body":{"nodeType":"YulBlock","src":"17143:125:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17165:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"17173:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17161:3:17"},"nodeType":"YulFunctionCall","src":"17161:14:17"},{"hexValue":"455243373231456e756d657261626c653a20676c6f62616c20696e646578206f","kind":"string","nodeType":"YulLiteral","src":"17177:34:17","type":"","value":"ERC721Enumerable: global index o"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17154:6:17"},"nodeType":"YulFunctionCall","src":"17154:58:17"},"nodeType":"YulExpressionStatement","src":"17154:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17233:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"17241:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17229:3:17"},"nodeType":"YulFunctionCall","src":"17229:15:17"},{"hexValue":"7574206f6620626f756e6473","kind":"string","nodeType":"YulLiteral","src":"17246:14:17","type":"","value":"ut of bounds"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17222:6:17"},"nodeType":"YulFunctionCall","src":"17222:39:17"},"nodeType":"YulExpressionStatement","src":"17222:39:17"}]},"name":"store_literal_in_memory_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17135:6:17","type":""}],"src":"17037:231:17"},{"body":{"nodeType":"YulBlock","src":"17420:220:17","statements":[{"nodeType":"YulAssignment","src":"17430:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17496:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"17501:2:17","type":"","value":"44"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17437:58:17"},"nodeType":"YulFunctionCall","src":"17437:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17430:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17602:3:17"}],"functionName":{"name":"store_literal_in_memory_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc","nodeType":"YulIdentifier","src":"17513:88:17"},"nodeType":"YulFunctionCall","src":"17513:93:17"},"nodeType":"YulExpressionStatement","src":"17513:93:17"},{"nodeType":"YulAssignment","src":"17615:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17626:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"17631:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17622:3:17"},"nodeType":"YulFunctionCall","src":"17622:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17615:3:17"}]}]},"name":"abi_encode_t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17408:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17416:3:17","type":""}],"src":"17274:366:17"},{"body":{"nodeType":"YulBlock","src":"17817:248:17","statements":[{"nodeType":"YulAssignment","src":"17827:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17839:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"17850:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17835:3:17"},"nodeType":"YulFunctionCall","src":"17835:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17827:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17874:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"17885:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17870:3:17"},"nodeType":"YulFunctionCall","src":"17870:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17893:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"17899:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17889:3:17"},"nodeType":"YulFunctionCall","src":"17889:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17863:6:17"},"nodeType":"YulFunctionCall","src":"17863:47:17"},"nodeType":"YulExpressionStatement","src":"17863:47:17"},{"nodeType":"YulAssignment","src":"17919:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18053:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17927:124:17"},"nodeType":"YulFunctionCall","src":"17927:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17919:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17797:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17812:4:17","type":""}],"src":"17646:419:17"},{"body":{"nodeType":"YulBlock","src":"18099:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18116:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18119:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18109:6:17"},"nodeType":"YulFunctionCall","src":"18109:88:17"},"nodeType":"YulExpressionStatement","src":"18109:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18213:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"18216:4:17","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18206:6:17"},"nodeType":"YulFunctionCall","src":"18206:15:17"},"nodeType":"YulExpressionStatement","src":"18206:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18237:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18240:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18230:6:17"},"nodeType":"YulFunctionCall","src":"18230:15:17"},"nodeType":"YulExpressionStatement","src":"18230:15:17"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"18071:180:17"},{"body":{"nodeType":"YulBlock","src":"18311:87:17","statements":[{"nodeType":"YulAssignment","src":"18321:11:17","value":{"name":"ptr","nodeType":"YulIdentifier","src":"18329:3:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"18321:4:17"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18349:1:17","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"18352:3:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18342:6:17"},"nodeType":"YulFunctionCall","src":"18342:14:17"},"nodeType":"YulExpressionStatement","src":"18342:14:17"},{"nodeType":"YulAssignment","src":"18365:26:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18383:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18386:4:17","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"18373:9:17"},"nodeType":"YulFunctionCall","src":"18373:18:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"18365:4:17"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"18298:3:17","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"18306:4:17","type":""}],"src":"18257:141:17"},{"body":{"nodeType":"YulBlock","src":"18448:49:17","statements":[{"nodeType":"YulAssignment","src":"18458:33:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18476:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"18483:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18472:3:17"},"nodeType":"YulFunctionCall","src":"18472:14:17"},{"kind":"number","nodeType":"YulLiteral","src":"18488:2:17","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"18468:3:17"},"nodeType":"YulFunctionCall","src":"18468:23:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"18458:6:17"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18431:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"18441:6:17","type":""}],"src":"18404:93:17"},{"body":{"nodeType":"YulBlock","src":"18556:54:17","statements":[{"nodeType":"YulAssignment","src":"18566:37:17","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"18591:4:17"},{"name":"value","nodeType":"YulIdentifier","src":"18597:5:17"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18587:3:17"},"nodeType":"YulFunctionCall","src":"18587:16:17"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"18566:8:17"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"18531:4:17","type":""},{"name":"value","nodeType":"YulTypedName","src":"18537:5:17","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"18547:8:17","type":""}],"src":"18503:107:17"},{"body":{"nodeType":"YulBlock","src":"18692:317:17","statements":[{"nodeType":"YulVariableDeclaration","src":"18702:35:17","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"18723:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"18735:1:17","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"18719:3:17"},"nodeType":"YulFunctionCall","src":"18719:18:17"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"18706:9:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18746:109:17","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"18777:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"18788:66:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"18758:18:17"},"nodeType":"YulFunctionCall","src":"18758:97:17"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"18750:4:17","type":""}]},{"nodeType":"YulAssignment","src":"18864:51:17","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"18895:9:17"},{"name":"toInsert","nodeType":"YulIdentifier","src":"18906:8:17"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"18876:18:17"},"nodeType":"YulFunctionCall","src":"18876:39:17"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"18864:8:17"}]},{"nodeType":"YulAssignment","src":"18924:30:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18937:5:17"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"18948:4:17"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"18944:3:17"},"nodeType":"YulFunctionCall","src":"18944:9:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18933:3:17"},"nodeType":"YulFunctionCall","src":"18933:21:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"18924:5:17"}]},{"nodeType":"YulAssignment","src":"18963:40:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18976:5:17"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"18987:8:17"},{"name":"mask","nodeType":"YulIdentifier","src":"18997:4:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18983:3:17"},"nodeType":"YulFunctionCall","src":"18983:19:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"18973:2:17"},"nodeType":"YulFunctionCall","src":"18973:30:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"18963:6:17"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18653:5:17","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"18660:10:17","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"18672:8:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"18685:6:17","type":""}],"src":"18616:393:17"},{"body":{"nodeType":"YulBlock","src":"19047:28:17","statements":[{"nodeType":"YulAssignment","src":"19057:12:17","value":{"name":"value","nodeType":"YulIdentifier","src":"19064:5:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"19057:3:17"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19033:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"19043:3:17","type":""}],"src":"19015:60:17"},{"body":{"nodeType":"YulBlock","src":"19141:82:17","statements":[{"nodeType":"YulAssignment","src":"19151:66:17","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19209:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19191:17:17"},"nodeType":"YulFunctionCall","src":"19191:24:17"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"19182:8:17"},"nodeType":"YulFunctionCall","src":"19182:34:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19164:17:17"},"nodeType":"YulFunctionCall","src":"19164:53:17"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"19151:9:17"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19121:5:17","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"19131:9:17","type":""}],"src":"19081:142:17"},{"body":{"nodeType":"YulBlock","src":"19276:28:17","statements":[{"nodeType":"YulAssignment","src":"19286:12:17","value":{"name":"value","nodeType":"YulIdentifier","src":"19293:5:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"19286:3:17"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19262:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"19272:3:17","type":""}],"src":"19229:75:17"},{"body":{"nodeType":"YulBlock","src":"19386:193:17","statements":[{"nodeType":"YulVariableDeclaration","src":"19396:63:17","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"19451:7:17"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"19420:30:17"},"nodeType":"YulFunctionCall","src":"19420:39:17"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"19400:16:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"19475:4:17"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"19515:4:17"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"19509:5:17"},"nodeType":"YulFunctionCall","src":"19509:11:17"},{"name":"offset","nodeType":"YulIdentifier","src":"19522:6:17"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"19554:16:17"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"19530:23:17"},"nodeType":"YulFunctionCall","src":"19530:41:17"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"19481:27:17"},"nodeType":"YulFunctionCall","src":"19481:91:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"19468:6:17"},"nodeType":"YulFunctionCall","src":"19468:105:17"},"nodeType":"YulExpressionStatement","src":"19468:105:17"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"19363:4:17","type":""},{"name":"offset","nodeType":"YulTypedName","src":"19369:6:17","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"19377:7:17","type":""}],"src":"19310:269:17"},{"body":{"nodeType":"YulBlock","src":"19634:24:17","statements":[{"nodeType":"YulAssignment","src":"19644:8:17","value":{"kind":"number","nodeType":"YulLiteral","src":"19651:1:17","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"19644:3:17"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"19630:3:17","type":""}],"src":"19585:73:17"},{"body":{"nodeType":"YulBlock","src":"19717:136:17","statements":[{"nodeType":"YulVariableDeclaration","src":"19727:46:17","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"19741:30:17"},"nodeType":"YulFunctionCall","src":"19741:32:17"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"19731:6:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"19826:4:17"},{"name":"offset","nodeType":"YulIdentifier","src":"19832:6:17"},{"name":"zero_0","nodeType":"YulIdentifier","src":"19840:6:17"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"19782:43:17"},"nodeType":"YulFunctionCall","src":"19782:65:17"},"nodeType":"YulExpressionStatement","src":"19782:65:17"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"19703:4:17","type":""},{"name":"offset","nodeType":"YulTypedName","src":"19709:6:17","type":""}],"src":"19664:189:17"},{"body":{"nodeType":"YulBlock","src":"19909:136:17","statements":[{"body":{"nodeType":"YulBlock","src":"19976:63:17","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"20020:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"20027:1:17","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"19990:29:17"},"nodeType":"YulFunctionCall","src":"19990:39:17"},"nodeType":"YulExpressionStatement","src":"19990:39:17"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"19929:5:17"},{"name":"end","nodeType":"YulIdentifier","src":"19936:3:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19926:2:17"},"nodeType":"YulFunctionCall","src":"19926:14:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"19941:26:17","statements":[{"nodeType":"YulAssignment","src":"19943:22:17","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"19956:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"19963:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19952:3:17"},"nodeType":"YulFunctionCall","src":"19952:13:17"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"19943:5:17"}]}]},"pre":{"nodeType":"YulBlock","src":"19923:2:17","statements":[]},"src":"19919:120:17"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"19897:5:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"19904:3:17","type":""}],"src":"19859:186:17"},{"body":{"nodeType":"YulBlock","src":"20130:464:17","statements":[{"body":{"nodeType":"YulBlock","src":"20156:431:17","statements":[{"nodeType":"YulVariableDeclaration","src":"20170:54:17","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"20218:5:17"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"20186:31:17"},"nodeType":"YulFunctionCall","src":"20186:38:17"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"20174:8:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"20237:63:17","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"20260:8:17"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"20288:10:17"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"20270:17:17"},"nodeType":"YulFunctionCall","src":"20270:29:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20256:3:17"},"nodeType":"YulFunctionCall","src":"20256:44:17"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"20241:11:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"20457:27:17","statements":[{"nodeType":"YulAssignment","src":"20459:23:17","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"20474:8:17"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"20459:11:17"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"20441:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"20453:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"20438:2:17"},"nodeType":"YulFunctionCall","src":"20438:18:17"},"nodeType":"YulIf","src":"20435:49:17"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"20526:11:17"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"20543:8:17"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"20571:3:17"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"20553:17:17"},"nodeType":"YulFunctionCall","src":"20553:22:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20539:3:17"},"nodeType":"YulFunctionCall","src":"20539:37:17"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"20497:28:17"},"nodeType":"YulFunctionCall","src":"20497:80:17"},"nodeType":"YulExpressionStatement","src":"20497:80:17"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"20147:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"20152:2:17","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20144:2:17"},"nodeType":"YulFunctionCall","src":"20144:11:17"},"nodeType":"YulIf","src":"20141:446:17"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"20106:5:17","type":""},{"name":"len","nodeType":"YulTypedName","src":"20113:3:17","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"20118:10:17","type":""}],"src":"20051:543:17"},{"body":{"nodeType":"YulBlock","src":"20663:54:17","statements":[{"nodeType":"YulAssignment","src":"20673:37:17","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"20698:4:17"},{"name":"value","nodeType":"YulIdentifier","src":"20704:5:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"20694:3:17"},"nodeType":"YulFunctionCall","src":"20694:16:17"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"20673:8:17"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"20638:4:17","type":""},{"name":"value","nodeType":"YulTypedName","src":"20644:5:17","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"20654:8:17","type":""}],"src":"20600:117:17"},{"body":{"nodeType":"YulBlock","src":"20774:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"20784:68:17","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20833:1:17","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"20836:5:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"20829:3:17"},"nodeType":"YulFunctionCall","src":"20829:13:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20848:1:17","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"20844:3:17"},"nodeType":"YulFunctionCall","src":"20844:6:17"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"20800:28:17"},"nodeType":"YulFunctionCall","src":"20800:51:17"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"20796:3:17"},"nodeType":"YulFunctionCall","src":"20796:56:17"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"20788:4:17","type":""}]},{"nodeType":"YulAssignment","src":"20861:25:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"20875:4:17"},{"name":"mask","nodeType":"YulIdentifier","src":"20881:4:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20871:3:17"},"nodeType":"YulFunctionCall","src":"20871:15:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"20861:6:17"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"20751:4:17","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"20757:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"20767:6:17","type":""}],"src":"20723:169:17"},{"body":{"nodeType":"YulBlock","src":"20978:214:17","statements":[{"nodeType":"YulAssignment","src":"21111:37:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"21138:4:17"},{"name":"len","nodeType":"YulIdentifier","src":"21144:3:17"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"21119:18:17"},"nodeType":"YulFunctionCall","src":"21119:29:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"21111:4:17"}]},{"nodeType":"YulAssignment","src":"21157:29:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"21168:4:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21178:1:17","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"21181:3:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"21174:3:17"},"nodeType":"YulFunctionCall","src":"21174:11:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"21165:2:17"},"nodeType":"YulFunctionCall","src":"21165:21:17"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"21157:4:17"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"20959:4:17","type":""},{"name":"len","nodeType":"YulTypedName","src":"20965:3:17","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"20973:4:17","type":""}],"src":"20897:295:17"},{"body":{"nodeType":"YulBlock","src":"21289:1303:17","statements":[{"nodeType":"YulVariableDeclaration","src":"21300:51:17","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"21347:3:17"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"21314:32:17"},"nodeType":"YulFunctionCall","src":"21314:37:17"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"21304:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"21436:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"21438:16:17"},"nodeType":"YulFunctionCall","src":"21438:18:17"},"nodeType":"YulExpressionStatement","src":"21438:18:17"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"21408:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"21416:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21405:2:17"},"nodeType":"YulFunctionCall","src":"21405:30:17"},"nodeType":"YulIf","src":"21402:56:17"},{"nodeType":"YulVariableDeclaration","src":"21468:52:17","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"21514:4:17"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"21508:5:17"},"nodeType":"YulFunctionCall","src":"21508:11:17"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"21482:25:17"},"nodeType":"YulFunctionCall","src":"21482:38:17"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"21472:6:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"21613:4:17"},{"name":"oldLen","nodeType":"YulIdentifier","src":"21619:6:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"21627:6:17"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"21567:45:17"},"nodeType":"YulFunctionCall","src":"21567:67:17"},"nodeType":"YulExpressionStatement","src":"21567:67:17"},{"nodeType":"YulVariableDeclaration","src":"21644:18:17","value":{"kind":"number","nodeType":"YulLiteral","src":"21661:1:17","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"21648:9:17","type":""}]},{"nodeType":"YulAssignment","src":"21672:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"21685:4:17","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"21672:9:17"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"21736:611:17","statements":[{"nodeType":"YulVariableDeclaration","src":"21750:37:17","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"21769:6:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21781:4:17","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"21777:3:17"},"nodeType":"YulFunctionCall","src":"21777:9:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21765:3:17"},"nodeType":"YulFunctionCall","src":"21765:22:17"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"21754:7:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"21801:51:17","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"21847:4:17"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"21815:31:17"},"nodeType":"YulFunctionCall","src":"21815:37:17"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"21805:6:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"21865:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"21874:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"21869:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"21933:163:17","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"21958:6:17"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"21976:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"21981:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21972:3:17"},"nodeType":"YulFunctionCall","src":"21972:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21966:5:17"},"nodeType":"YulFunctionCall","src":"21966:26:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"21951:6:17"},"nodeType":"YulFunctionCall","src":"21951:42:17"},"nodeType":"YulExpressionStatement","src":"21951:42:17"},{"nodeType":"YulAssignment","src":"22010:24:17","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"22024:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"22032:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22020:3:17"},"nodeType":"YulFunctionCall","src":"22020:14:17"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"22010:6:17"}]},{"nodeType":"YulAssignment","src":"22051:31:17","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"22068:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"22079:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22064:3:17"},"nodeType":"YulFunctionCall","src":"22064:18:17"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"22051:9:17"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"21899:1:17"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"21902:7:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"21896:2:17"},"nodeType":"YulFunctionCall","src":"21896:14:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"21911:21:17","statements":[{"nodeType":"YulAssignment","src":"21913:17:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"21922:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"21925:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21918:3:17"},"nodeType":"YulFunctionCall","src":"21918:12:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"21913:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"21892:3:17","statements":[]},"src":"21888:208:17"},{"body":{"nodeType":"YulBlock","src":"22132:156:17","statements":[{"nodeType":"YulVariableDeclaration","src":"22150:43:17","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"22177:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"22182:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22173:3:17"},"nodeType":"YulFunctionCall","src":"22173:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22167:5:17"},"nodeType":"YulFunctionCall","src":"22167:26:17"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"22154:9:17","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"22217:6:17"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"22244:9:17"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"22259:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"22267:4:17","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22255:3:17"},"nodeType":"YulFunctionCall","src":"22255:17:17"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"22225:18:17"},"nodeType":"YulFunctionCall","src":"22225:48:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"22210:6:17"},"nodeType":"YulFunctionCall","src":"22210:64:17"},"nodeType":"YulExpressionStatement","src":"22210:64:17"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"22115:7:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"22124:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"22112:2:17"},"nodeType":"YulFunctionCall","src":"22112:19:17"},"nodeType":"YulIf","src":"22109:179:17"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"22308:4:17"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"22322:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"22330:1:17","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"22318:3:17"},"nodeType":"YulFunctionCall","src":"22318:14:17"},{"kind":"number","nodeType":"YulLiteral","src":"22334:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22314:3:17"},"nodeType":"YulFunctionCall","src":"22314:22:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"22301:6:17"},"nodeType":"YulFunctionCall","src":"22301:36:17"},"nodeType":"YulExpressionStatement","src":"22301:36:17"}]},"nodeType":"YulCase","src":"21729:618:17","value":{"kind":"number","nodeType":"YulLiteral","src":"21734:1:17","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"22364:222:17","statements":[{"nodeType":"YulVariableDeclaration","src":"22378:14:17","value":{"kind":"number","nodeType":"YulLiteral","src":"22391:1:17","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"22382:5:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"22415:67:17","statements":[{"nodeType":"YulAssignment","src":"22433:35:17","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"22452:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"22457:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22448:3:17"},"nodeType":"YulFunctionCall","src":"22448:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22442:5:17"},"nodeType":"YulFunctionCall","src":"22442:26:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"22433:5:17"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"22408:6:17"},"nodeType":"YulIf","src":"22405:77:17"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"22502:4:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22561:5:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"22568:6:17"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"22508:52:17"},"nodeType":"YulFunctionCall","src":"22508:67:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"22495:6:17"},"nodeType":"YulFunctionCall","src":"22495:81:17"},"nodeType":"YulExpressionStatement","src":"22495:81:17"}]},"nodeType":"YulCase","src":"22356:230:17","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"21709:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"21717:2:17","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21706:2:17"},"nodeType":"YulFunctionCall","src":"21706:14:17"},"nodeType":"YulSwitch","src":"21699:887:17"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"21278:4:17","type":""},{"name":"src","nodeType":"YulTypedName","src":"21284:3:17","type":""}],"src":"21197:1395:17"},{"body":{"nodeType":"YulBlock","src":"22704:68:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22726:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"22734:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22722:3:17"},"nodeType":"YulFunctionCall","src":"22722:14:17"},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","kind":"string","nodeType":"YulLiteral","src":"22738:26:17","type":"","value":"ERC721: invalid token ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22715:6:17"},"nodeType":"YulFunctionCall","src":"22715:50:17"},"nodeType":"YulExpressionStatement","src":"22715:50:17"}]},"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22696:6:17","type":""}],"src":"22598:174:17"},{"body":{"nodeType":"YulBlock","src":"22924:220:17","statements":[{"nodeType":"YulAssignment","src":"22934:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23000:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"23005:2:17","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22941:58:17"},"nodeType":"YulFunctionCall","src":"22941:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22934:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23106:3:17"}],"functionName":{"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulIdentifier","src":"23017:88:17"},"nodeType":"YulFunctionCall","src":"23017:93:17"},"nodeType":"YulExpressionStatement","src":"23017:93:17"},{"nodeType":"YulAssignment","src":"23119:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23130:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"23135:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23126:3:17"},"nodeType":"YulFunctionCall","src":"23126:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23119:3:17"}]}]},"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22912:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22920:3:17","type":""}],"src":"22778:366:17"},{"body":{"nodeType":"YulBlock","src":"23321:248:17","statements":[{"nodeType":"YulAssignment","src":"23331:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23343:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"23354:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23339:3:17"},"nodeType":"YulFunctionCall","src":"23339:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23331:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23378:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"23389:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23374:3:17"},"nodeType":"YulFunctionCall","src":"23374:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23397:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"23403:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23393:3:17"},"nodeType":"YulFunctionCall","src":"23393:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23367:6:17"},"nodeType":"YulFunctionCall","src":"23367:47:17"},"nodeType":"YulExpressionStatement","src":"23367:47:17"},{"nodeType":"YulAssignment","src":"23423:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23557:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23431:124:17"},"nodeType":"YulFunctionCall","src":"23431:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23423:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23301:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23316:4:17","type":""}],"src":"23150:419:17"},{"body":{"nodeType":"YulBlock","src":"23681:122:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23703:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"23711:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23699:3:17"},"nodeType":"YulFunctionCall","src":"23699:14:17"},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f742061207661","kind":"string","nodeType":"YulLiteral","src":"23715:34:17","type":"","value":"ERC721: address zero is not a va"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23692:6:17"},"nodeType":"YulFunctionCall","src":"23692:58:17"},"nodeType":"YulExpressionStatement","src":"23692:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23771:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"23779:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23767:3:17"},"nodeType":"YulFunctionCall","src":"23767:15:17"},{"hexValue":"6c6964206f776e6572","kind":"string","nodeType":"YulLiteral","src":"23784:11:17","type":"","value":"lid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23760:6:17"},"nodeType":"YulFunctionCall","src":"23760:36:17"},"nodeType":"YulExpressionStatement","src":"23760:36:17"}]},"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23673:6:17","type":""}],"src":"23575:228:17"},{"body":{"nodeType":"YulBlock","src":"23955:220:17","statements":[{"nodeType":"YulAssignment","src":"23965:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24031:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"24036:2:17","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23972:58:17"},"nodeType":"YulFunctionCall","src":"23972:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23965:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24137:3:17"}],"functionName":{"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulIdentifier","src":"24048:88:17"},"nodeType":"YulFunctionCall","src":"24048:93:17"},"nodeType":"YulExpressionStatement","src":"24048:93:17"},{"nodeType":"YulAssignment","src":"24150:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24161:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"24166:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24157:3:17"},"nodeType":"YulFunctionCall","src":"24157:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24150:3:17"}]}]},"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23943:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23951:3:17","type":""}],"src":"23809:366:17"},{"body":{"nodeType":"YulBlock","src":"24352:248:17","statements":[{"nodeType":"YulAssignment","src":"24362:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24374:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"24385:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24370:3:17"},"nodeType":"YulFunctionCall","src":"24370:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24362:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24409:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"24420:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24405:3:17"},"nodeType":"YulFunctionCall","src":"24405:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24428:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"24434:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24424:3:17"},"nodeType":"YulFunctionCall","src":"24424:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24398:6:17"},"nodeType":"YulFunctionCall","src":"24398:47:17"},"nodeType":"YulExpressionStatement","src":"24398:47:17"},{"nodeType":"YulAssignment","src":"24454:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24588:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24462:124:17"},"nodeType":"YulFunctionCall","src":"24462:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24454:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24332:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24347:4:17","type":""}],"src":"24181:419:17"},{"body":{"nodeType":"YulBlock","src":"24712:64:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24734:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"24742:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24730:3:17"},"nodeType":"YulFunctionCall","src":"24730:14:17"},{"hexValue":"546f6b656e20646f6573206e6f74206578697374","kind":"string","nodeType":"YulLiteral","src":"24746:22:17","type":"","value":"Token does not exist"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24723:6:17"},"nodeType":"YulFunctionCall","src":"24723:46:17"},"nodeType":"YulExpressionStatement","src":"24723:46:17"}]},"name":"store_literal_in_memory_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24704:6:17","type":""}],"src":"24606:170:17"},{"body":{"nodeType":"YulBlock","src":"24928:220:17","statements":[{"nodeType":"YulAssignment","src":"24938:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25004:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"25009:2:17","type":"","value":"20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24945:58:17"},"nodeType":"YulFunctionCall","src":"24945:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24938:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25110:3:17"}],"functionName":{"name":"store_literal_in_memory_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","nodeType":"YulIdentifier","src":"25021:88:17"},"nodeType":"YulFunctionCall","src":"25021:93:17"},"nodeType":"YulExpressionStatement","src":"25021:93:17"},{"nodeType":"YulAssignment","src":"25123:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25134:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"25139:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25130:3:17"},"nodeType":"YulFunctionCall","src":"25130:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25123:3:17"}]}]},"name":"abi_encode_t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24916:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24924:3:17","type":""}],"src":"24782:366:17"},{"body":{"nodeType":"YulBlock","src":"25325:248:17","statements":[{"nodeType":"YulAssignment","src":"25335:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25347:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"25358:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25343:3:17"},"nodeType":"YulFunctionCall","src":"25343:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25335:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25382:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"25393:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25378:3:17"},"nodeType":"YulFunctionCall","src":"25378:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25401:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"25407:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25397:3:17"},"nodeType":"YulFunctionCall","src":"25397:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25371:6:17"},"nodeType":"YulFunctionCall","src":"25371:47:17"},"nodeType":"YulExpressionStatement","src":"25371:47:17"},{"nodeType":"YulAssignment","src":"25427:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25561:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25435:124:17"},"nodeType":"YulFunctionCall","src":"25435:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25427:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25305:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25320:4:17","type":""}],"src":"25154:419:17"},{"body":{"nodeType":"YulBlock","src":"25693:34:17","statements":[{"nodeType":"YulAssignment","src":"25703:18:17","value":{"name":"pos","nodeType":"YulIdentifier","src":"25718:3:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"25703:11:17"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25665:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"25670:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"25681:11:17","type":""}],"src":"25579:148:17"},{"body":{"nodeType":"YulBlock","src":"25843:280:17","statements":[{"nodeType":"YulVariableDeclaration","src":"25853:53:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25900:5:17"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"25867:32:17"},"nodeType":"YulFunctionCall","src":"25867:39:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"25857:6:17","type":""}]},{"nodeType":"YulAssignment","src":"25915:96:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25999:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"26004:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"25922:76:17"},"nodeType":"YulFunctionCall","src":"25922:89:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25915:3:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26059:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"26066:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26055:3:17"},"nodeType":"YulFunctionCall","src":"26055:16:17"},{"name":"pos","nodeType":"YulIdentifier","src":"26073:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"26078:6:17"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"26020:34:17"},"nodeType":"YulFunctionCall","src":"26020:65:17"},"nodeType":"YulExpressionStatement","src":"26020:65:17"},{"nodeType":"YulAssignment","src":"26094:23:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26105:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"26110:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26101:3:17"},"nodeType":"YulFunctionCall","src":"26101:16:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26094:3:17"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25824:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"25831:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25839:3:17","type":""}],"src":"25733:390:17"},{"body":{"nodeType":"YulBlock","src":"26313:251:17","statements":[{"nodeType":"YulAssignment","src":"26324:102:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"26413:6:17"},{"name":"pos","nodeType":"YulIdentifier","src":"26422:3:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"26331:81:17"},"nodeType":"YulFunctionCall","src":"26331:95:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26324:3:17"}]},{"nodeType":"YulAssignment","src":"26436:102:17","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"26525:6:17"},{"name":"pos","nodeType":"YulIdentifier","src":"26534:3:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"26443:81:17"},"nodeType":"YulFunctionCall","src":"26443:95:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26436:3:17"}]},{"nodeType":"YulAssignment","src":"26548:10:17","value":{"name":"pos","nodeType":"YulIdentifier","src":"26555:3:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26548:3:17"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26284:3:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"26290:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"26298:6:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26309:3:17","type":""}],"src":"26129:435:17"},{"body":{"nodeType":"YulBlock","src":"26676:118:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26698:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"26706:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26694:3:17"},"nodeType":"YulFunctionCall","src":"26694:14:17"},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f727265637420","kind":"string","nodeType":"YulLiteral","src":"26710:34:17","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26687:6:17"},"nodeType":"YulFunctionCall","src":"26687:58:17"},"nodeType":"YulExpressionStatement","src":"26687:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26766:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"26774:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26762:3:17"},"nodeType":"YulFunctionCall","src":"26762:15:17"},{"hexValue":"6f776e6572","kind":"string","nodeType":"YulLiteral","src":"26779:7:17","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26755:6:17"},"nodeType":"YulFunctionCall","src":"26755:32:17"},"nodeType":"YulExpressionStatement","src":"26755:32:17"}]},"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"26668:6:17","type":""}],"src":"26570:224:17"},{"body":{"nodeType":"YulBlock","src":"26946:220:17","statements":[{"nodeType":"YulAssignment","src":"26956:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27022:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"27027:2:17","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26963:58:17"},"nodeType":"YulFunctionCall","src":"26963:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26956:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27128:3:17"}],"functionName":{"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulIdentifier","src":"27039:88:17"},"nodeType":"YulFunctionCall","src":"27039:93:17"},"nodeType":"YulExpressionStatement","src":"27039:93:17"},{"nodeType":"YulAssignment","src":"27141:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27152:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"27157:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27148:3:17"},"nodeType":"YulFunctionCall","src":"27148:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"27141:3:17"}]}]},"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26934:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26942:3:17","type":""}],"src":"26800:366:17"},{"body":{"nodeType":"YulBlock","src":"27343:248:17","statements":[{"nodeType":"YulAssignment","src":"27353:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27365:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"27376:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27361:3:17"},"nodeType":"YulFunctionCall","src":"27361:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27353:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27400:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"27411:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27396:3:17"},"nodeType":"YulFunctionCall","src":"27396:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27419:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"27425:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27415:3:17"},"nodeType":"YulFunctionCall","src":"27415:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27389:6:17"},"nodeType":"YulFunctionCall","src":"27389:47:17"},"nodeType":"YulExpressionStatement","src":"27389:47:17"},{"nodeType":"YulAssignment","src":"27445:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27579:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27453:124:17"},"nodeType":"YulFunctionCall","src":"27453:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27445:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27323:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27338:4:17","type":""}],"src":"27172:419:17"},{"body":{"nodeType":"YulBlock","src":"27703:117:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27725:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"27733:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27721:3:17"},"nodeType":"YulFunctionCall","src":"27721:14:17"},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"27737:34:17","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27714:6:17"},"nodeType":"YulFunctionCall","src":"27714:58:17"},"nodeType":"YulExpressionStatement","src":"27714:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27793:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"27801:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27789:3:17"},"nodeType":"YulFunctionCall","src":"27789:15:17"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"27806:6:17","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27782:6:17"},"nodeType":"YulFunctionCall","src":"27782:31:17"},"nodeType":"YulExpressionStatement","src":"27782:31:17"}]},"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"27695:6:17","type":""}],"src":"27597:223:17"},{"body":{"nodeType":"YulBlock","src":"27972:220:17","statements":[{"nodeType":"YulAssignment","src":"27982:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28048:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"28053:2:17","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27989:58:17"},"nodeType":"YulFunctionCall","src":"27989:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27982:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28154:3:17"}],"functionName":{"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulIdentifier","src":"28065:88:17"},"nodeType":"YulFunctionCall","src":"28065:93:17"},"nodeType":"YulExpressionStatement","src":"28065:93:17"},{"nodeType":"YulAssignment","src":"28167:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28178:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"28183:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28174:3:17"},"nodeType":"YulFunctionCall","src":"28174:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"28167:3:17"}]}]},"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"27960:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"27968:3:17","type":""}],"src":"27826:366:17"},{"body":{"nodeType":"YulBlock","src":"28369:248:17","statements":[{"nodeType":"YulAssignment","src":"28379:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28391:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"28402:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28387:3:17"},"nodeType":"YulFunctionCall","src":"28387:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28379:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28426:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"28437:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28422:3:17"},"nodeType":"YulFunctionCall","src":"28422:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28445:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"28451:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28441:3:17"},"nodeType":"YulFunctionCall","src":"28441:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28415:6:17"},"nodeType":"YulFunctionCall","src":"28415:47:17"},"nodeType":"YulExpressionStatement","src":"28415:47:17"},{"nodeType":"YulAssignment","src":"28471:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28605:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28479:124:17"},"nodeType":"YulFunctionCall","src":"28479:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28471:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28349:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28364:4:17","type":""}],"src":"28198:419:17"},{"body":{"nodeType":"YulBlock","src":"28651:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28668:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"28671:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28661:6:17"},"nodeType":"YulFunctionCall","src":"28661:88:17"},"nodeType":"YulExpressionStatement","src":"28661:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28765:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"28768:4:17","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28758:6:17"},"nodeType":"YulFunctionCall","src":"28758:15:17"},"nodeType":"YulExpressionStatement","src":"28758:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28789:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"28792:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"28782:6:17"},"nodeType":"YulFunctionCall","src":"28782:15:17"},"nodeType":"YulExpressionStatement","src":"28782:15:17"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"28623:180:17"},{"body":{"nodeType":"YulBlock","src":"28854:149:17","statements":[{"nodeType":"YulAssignment","src":"28864:25:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"28887:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"28869:17:17"},"nodeType":"YulFunctionCall","src":"28869:20:17"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"28864:1:17"}]},{"nodeType":"YulAssignment","src":"28898:25:17","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"28921:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"28903:17:17"},"nodeType":"YulFunctionCall","src":"28903:20:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"28898:1:17"}]},{"nodeType":"YulAssignment","src":"28932:17:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"28944:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"28947:1:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28940:3:17"},"nodeType":"YulFunctionCall","src":"28940:9:17"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"28932:4:17"}]},{"body":{"nodeType":"YulBlock","src":"28974:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"28976:16:17"},"nodeType":"YulFunctionCall","src":"28976:18:17"},"nodeType":"YulExpressionStatement","src":"28976:18:17"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"28965:4:17"},{"name":"x","nodeType":"YulIdentifier","src":"28971:1:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"28962:2:17"},"nodeType":"YulFunctionCall","src":"28962:11:17"},"nodeType":"YulIf","src":"28959:37:17"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"28840:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"28843:1:17","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"28849:4:17","type":""}],"src":"28809:194:17"},{"body":{"nodeType":"YulBlock","src":"29053:147:17","statements":[{"nodeType":"YulAssignment","src":"29063:25:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"29086:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"29068:17:17"},"nodeType":"YulFunctionCall","src":"29068:20:17"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"29063:1:17"}]},{"nodeType":"YulAssignment","src":"29097:25:17","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"29120:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"29102:17:17"},"nodeType":"YulFunctionCall","src":"29102:20:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"29097:1:17"}]},{"nodeType":"YulAssignment","src":"29131:16:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"29142:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"29145:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29138:3:17"},"nodeType":"YulFunctionCall","src":"29138:9:17"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"29131:3:17"}]},{"body":{"nodeType":"YulBlock","src":"29171:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"29173:16:17"},"nodeType":"YulFunctionCall","src":"29173:18:17"},"nodeType":"YulExpressionStatement","src":"29173:18:17"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"29163:1:17"},{"name":"sum","nodeType":"YulIdentifier","src":"29166:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"29160:2:17"},"nodeType":"YulFunctionCall","src":"29160:10:17"},"nodeType":"YulIf","src":"29157:36:17"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"29040:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"29043:1:17","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"29049:3:17","type":""}],"src":"29009:191:17"},{"body":{"nodeType":"YulBlock","src":"29312:76:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29334:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"29342:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29330:3:17"},"nodeType":"YulFunctionCall","src":"29330:14:17"},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"29346:34:17","type":"","value":"ERC721: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29323:6:17"},"nodeType":"YulFunctionCall","src":"29323:58:17"},"nodeType":"YulExpressionStatement","src":"29323:58:17"}]},"name":"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"29304:6:17","type":""}],"src":"29206:182:17"},{"body":{"nodeType":"YulBlock","src":"29540:220:17","statements":[{"nodeType":"YulAssignment","src":"29550:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29616:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"29621:2:17","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29557:58:17"},"nodeType":"YulFunctionCall","src":"29557:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29550:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29722:3:17"}],"functionName":{"name":"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","nodeType":"YulIdentifier","src":"29633:88:17"},"nodeType":"YulFunctionCall","src":"29633:93:17"},"nodeType":"YulExpressionStatement","src":"29633:93:17"},{"nodeType":"YulAssignment","src":"29735:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29746:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"29751:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29742:3:17"},"nodeType":"YulFunctionCall","src":"29742:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"29735:3:17"}]}]},"name":"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29528:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"29536:3:17","type":""}],"src":"29394:366:17"},{"body":{"nodeType":"YulBlock","src":"29937:248:17","statements":[{"nodeType":"YulAssignment","src":"29947:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29959:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"29970:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29955:3:17"},"nodeType":"YulFunctionCall","src":"29955:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29947:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29994:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"30005:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29990:3:17"},"nodeType":"YulFunctionCall","src":"29990:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30013:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"30019:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30009:3:17"},"nodeType":"YulFunctionCall","src":"30009:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29983:6:17"},"nodeType":"YulFunctionCall","src":"29983:47:17"},"nodeType":"YulExpressionStatement","src":"29983:47:17"},{"nodeType":"YulAssignment","src":"30039:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30173:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30047:124:17"},"nodeType":"YulFunctionCall","src":"30047:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30039:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29917:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29932:4:17","type":""}],"src":"29766:419:17"},{"body":{"nodeType":"YulBlock","src":"30297:72:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"30319:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"30327:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30315:3:17"},"nodeType":"YulFunctionCall","src":"30315:14:17"},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","kind":"string","nodeType":"YulLiteral","src":"30331:30:17","type":"","value":"ERC721: token already minted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30308:6:17"},"nodeType":"YulFunctionCall","src":"30308:54:17"},"nodeType":"YulExpressionStatement","src":"30308:54:17"}]},"name":"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"30289:6:17","type":""}],"src":"30191:178:17"},{"body":{"nodeType":"YulBlock","src":"30521:220:17","statements":[{"nodeType":"YulAssignment","src":"30531:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30597:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"30602:2:17","type":"","value":"28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30538:58:17"},"nodeType":"YulFunctionCall","src":"30538:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30531:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30703:3:17"}],"functionName":{"name":"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","nodeType":"YulIdentifier","src":"30614:88:17"},"nodeType":"YulFunctionCall","src":"30614:93:17"},"nodeType":"YulExpressionStatement","src":"30614:93:17"},{"nodeType":"YulAssignment","src":"30716:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30727:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"30732:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30723:3:17"},"nodeType":"YulFunctionCall","src":"30723:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"30716:3:17"}]}]},"name":"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30509:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"30517:3:17","type":""}],"src":"30375:366:17"},{"body":{"nodeType":"YulBlock","src":"30918:248:17","statements":[{"nodeType":"YulAssignment","src":"30928:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30940:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"30951:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30936:3:17"},"nodeType":"YulFunctionCall","src":"30936:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30928:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30975:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"30986:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30971:3:17"},"nodeType":"YulFunctionCall","src":"30971:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30994:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"31000:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30990:3:17"},"nodeType":"YulFunctionCall","src":"30990:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30964:6:17"},"nodeType":"YulFunctionCall","src":"30964:47:17"},"nodeType":"YulExpressionStatement","src":"30964:47:17"},{"nodeType":"YulAssignment","src":"31020:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31154:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31028:124:17"},"nodeType":"YulFunctionCall","src":"31028:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31020:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30898:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30913:4:17","type":""}],"src":"30747:419:17"},{"body":{"nodeType":"YulBlock","src":"31278:69:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"31300:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"31308:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31296:3:17"},"nodeType":"YulFunctionCall","src":"31296:14:17"},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"31312:27:17","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31289:6:17"},"nodeType":"YulFunctionCall","src":"31289:51:17"},"nodeType":"YulExpressionStatement","src":"31289:51:17"}]},"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"31270:6:17","type":""}],"src":"31172:175:17"},{"body":{"nodeType":"YulBlock","src":"31499:220:17","statements":[{"nodeType":"YulAssignment","src":"31509:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31575:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"31580:2:17","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31516:58:17"},"nodeType":"YulFunctionCall","src":"31516:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"31509:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31681:3:17"}],"functionName":{"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulIdentifier","src":"31592:88:17"},"nodeType":"YulFunctionCall","src":"31592:93:17"},"nodeType":"YulExpressionStatement","src":"31592:93:17"},{"nodeType":"YulAssignment","src":"31694:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31705:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"31710:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31701:3:17"},"nodeType":"YulFunctionCall","src":"31701:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"31694:3:17"}]}]},"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"31487:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"31495:3:17","type":""}],"src":"31353:366:17"},{"body":{"nodeType":"YulBlock","src":"31896:248:17","statements":[{"nodeType":"YulAssignment","src":"31906:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31918:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"31929:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31914:3:17"},"nodeType":"YulFunctionCall","src":"31914:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31906:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31953:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"31964:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31949:3:17"},"nodeType":"YulFunctionCall","src":"31949:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31972:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"31978:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31968:3:17"},"nodeType":"YulFunctionCall","src":"31968:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31942:6:17"},"nodeType":"YulFunctionCall","src":"31942:47:17"},"nodeType":"YulExpressionStatement","src":"31942:47:17"},{"nodeType":"YulAssignment","src":"31998:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32132:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32006:124:17"},"nodeType":"YulFunctionCall","src":"32006:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31998:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31876:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31891:4:17","type":""}],"src":"31725:419:17"},{"body":{"nodeType":"YulBlock","src":"32256:131:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"32278:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"32286:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32274:3:17"},"nodeType":"YulFunctionCall","src":"32274:14:17"},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e204552433732315265","kind":"string","nodeType":"YulLiteral","src":"32290:34:17","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32267:6:17"},"nodeType":"YulFunctionCall","src":"32267:58:17"},"nodeType":"YulExpressionStatement","src":"32267:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"32346:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"32354:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32342:3:17"},"nodeType":"YulFunctionCall","src":"32342:15:17"},{"hexValue":"63656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"32359:20:17","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32335:6:17"},"nodeType":"YulFunctionCall","src":"32335:45:17"},"nodeType":"YulExpressionStatement","src":"32335:45:17"}]},"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"32248:6:17","type":""}],"src":"32150:237:17"},{"body":{"nodeType":"YulBlock","src":"32539:220:17","statements":[{"nodeType":"YulAssignment","src":"32549:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32615:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"32620:2:17","type":"","value":"50"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32556:58:17"},"nodeType":"YulFunctionCall","src":"32556:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"32549:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32721:3:17"}],"functionName":{"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulIdentifier","src":"32632:88:17"},"nodeType":"YulFunctionCall","src":"32632:93:17"},"nodeType":"YulExpressionStatement","src":"32632:93:17"},{"nodeType":"YulAssignment","src":"32734:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32745:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"32750:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32741:3:17"},"nodeType":"YulFunctionCall","src":"32741:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"32734:3:17"}]}]},"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"32527:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"32535:3:17","type":""}],"src":"32393:366:17"},{"body":{"nodeType":"YulBlock","src":"32936:248:17","statements":[{"nodeType":"YulAssignment","src":"32946:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32958:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"32969:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32954:3:17"},"nodeType":"YulFunctionCall","src":"32954:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32946:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32993:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"33004:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32989:3:17"},"nodeType":"YulFunctionCall","src":"32989:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33012:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"33018:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33008:3:17"},"nodeType":"YulFunctionCall","src":"33008:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32982:6:17"},"nodeType":"YulFunctionCall","src":"32982:47:17"},"nodeType":"YulExpressionStatement","src":"32982:47:17"},{"nodeType":"YulAssignment","src":"33038:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33172:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33046:124:17"},"nodeType":"YulFunctionCall","src":"33046:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33038:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32916:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32931:4:17","type":""}],"src":"32765:419:17"},{"body":{"nodeType":"YulBlock","src":"33233:190:17","statements":[{"nodeType":"YulAssignment","src":"33243:33:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33270:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"33252:17:17"},"nodeType":"YulFunctionCall","src":"33252:24:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"33243:5:17"}]},{"body":{"nodeType":"YulBlock","src":"33366:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"33368:16:17"},"nodeType":"YulFunctionCall","src":"33368:18:17"},"nodeType":"YulExpressionStatement","src":"33368:18:17"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33291:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"33298:66:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"33288:2:17"},"nodeType":"YulFunctionCall","src":"33288:77:17"},"nodeType":"YulIf","src":"33285:103:17"},{"nodeType":"YulAssignment","src":"33397:20:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33408:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"33415:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33404:3:17"},"nodeType":"YulFunctionCall","src":"33404:13:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"33397:3:17"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33219:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"33229:3:17","type":""}],"src":"33190:233:17"},{"body":{"nodeType":"YulBlock","src":"33457:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33474:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"33477:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33467:6:17"},"nodeType":"YulFunctionCall","src":"33467:88:17"},"nodeType":"YulExpressionStatement","src":"33467:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33571:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"33574:4:17","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33564:6:17"},"nodeType":"YulFunctionCall","src":"33564:15:17"},"nodeType":"YulExpressionStatement","src":"33564:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33595:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"33598:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"33588:6:17"},"nodeType":"YulFunctionCall","src":"33588:15:17"},"nodeType":"YulExpressionStatement","src":"33588:15:17"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"33429:180:17"},{"body":{"nodeType":"YulBlock","src":"33657:143:17","statements":[{"nodeType":"YulAssignment","src":"33667:25:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"33690:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"33672:17:17"},"nodeType":"YulFunctionCall","src":"33672:20:17"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"33667:1:17"}]},{"nodeType":"YulAssignment","src":"33701:25:17","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"33724:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"33706:17:17"},"nodeType":"YulFunctionCall","src":"33706:20:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"33701:1:17"}]},{"body":{"nodeType":"YulBlock","src":"33748:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"33750:16:17"},"nodeType":"YulFunctionCall","src":"33750:18:17"},"nodeType":"YulExpressionStatement","src":"33750:18:17"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"33745:1:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"33738:6:17"},"nodeType":"YulFunctionCall","src":"33738:9:17"},"nodeType":"YulIf","src":"33735:35:17"},{"nodeType":"YulAssignment","src":"33780:14:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"33789:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"33792:1:17"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"33785:3:17"},"nodeType":"YulFunctionCall","src":"33785:9:17"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"33780:1:17"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"33646:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"33649:1:17","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"33655:1:17","type":""}],"src":"33615:185:17"},{"body":{"nodeType":"YulBlock","src":"33840:142:17","statements":[{"nodeType":"YulAssignment","src":"33850:25:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"33873:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"33855:17:17"},"nodeType":"YulFunctionCall","src":"33855:20:17"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"33850:1:17"}]},{"nodeType":"YulAssignment","src":"33884:25:17","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"33907:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"33889:17:17"},"nodeType":"YulFunctionCall","src":"33889:20:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"33884:1:17"}]},{"body":{"nodeType":"YulBlock","src":"33931:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"33933:16:17"},"nodeType":"YulFunctionCall","src":"33933:18:17"},"nodeType":"YulExpressionStatement","src":"33933:18:17"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"33928:1:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"33921:6:17"},"nodeType":"YulFunctionCall","src":"33921:9:17"},"nodeType":"YulIf","src":"33918:35:17"},{"nodeType":"YulAssignment","src":"33962:14:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"33971:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"33974:1:17"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"33967:3:17"},"nodeType":"YulFunctionCall","src":"33967:9:17"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"33962:1:17"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"33829:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"33832:1:17","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"33838:1:17","type":""}],"src":"33806:176:17"},{"body":{"nodeType":"YulBlock","src":"34046:40:17","statements":[{"nodeType":"YulAssignment","src":"34057:22:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34073:5:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"34067:5:17"},"nodeType":"YulFunctionCall","src":"34067:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"34057:6:17"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34029:5:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"34039:6:17","type":""}],"src":"33988:98:17"},{"body":{"nodeType":"YulBlock","src":"34187:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34204:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"34209:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34197:6:17"},"nodeType":"YulFunctionCall","src":"34197:19:17"},"nodeType":"YulExpressionStatement","src":"34197:19:17"},{"nodeType":"YulAssignment","src":"34225:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34244:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"34249:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34240:3:17"},"nodeType":"YulFunctionCall","src":"34240:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"34225:11:17"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"34159:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"34164:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"34175:11:17","type":""}],"src":"34092:168:17"},{"body":{"nodeType":"YulBlock","src":"34356:283:17","statements":[{"nodeType":"YulVariableDeclaration","src":"34366:52:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34412:5:17"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"34380:31:17"},"nodeType":"YulFunctionCall","src":"34380:38:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"34370:6:17","type":""}]},{"nodeType":"YulAssignment","src":"34427:77:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34492:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"34497:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34434:57:17"},"nodeType":"YulFunctionCall","src":"34434:70:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"34427:3:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34552:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"34559:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34548:3:17"},"nodeType":"YulFunctionCall","src":"34548:16:17"},{"name":"pos","nodeType":"YulIdentifier","src":"34566:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"34571:6:17"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"34513:34:17"},"nodeType":"YulFunctionCall","src":"34513:65:17"},"nodeType":"YulExpressionStatement","src":"34513:65:17"},{"nodeType":"YulAssignment","src":"34587:46:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34598:3:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"34625:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"34603:21:17"},"nodeType":"YulFunctionCall","src":"34603:29:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34594:3:17"},"nodeType":"YulFunctionCall","src":"34594:39:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"34587:3:17"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34337:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"34344:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"34352:3:17","type":""}],"src":"34266:373:17"},{"body":{"nodeType":"YulBlock","src":"34845:440:17","statements":[{"nodeType":"YulAssignment","src":"34855:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34867:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"34878:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34863:3:17"},"nodeType":"YulFunctionCall","src":"34863:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34855:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"34936:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34949:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"34960:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34945:3:17"},"nodeType":"YulFunctionCall","src":"34945:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"34892:43:17"},"nodeType":"YulFunctionCall","src":"34892:71:17"},"nodeType":"YulExpressionStatement","src":"34892:71:17"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"35017:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35030:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"35041:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35026:3:17"},"nodeType":"YulFunctionCall","src":"35026:18:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"34973:43:17"},"nodeType":"YulFunctionCall","src":"34973:72:17"},"nodeType":"YulExpressionStatement","src":"34973:72:17"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"35099:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35112:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"35123:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35108:3:17"},"nodeType":"YulFunctionCall","src":"35108:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"35055:43:17"},"nodeType":"YulFunctionCall","src":"35055:72:17"},"nodeType":"YulExpressionStatement","src":"35055:72:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35148:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"35159:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35144:3:17"},"nodeType":"YulFunctionCall","src":"35144:18:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35168:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"35174:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35164:3:17"},"nodeType":"YulFunctionCall","src":"35164:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35137:6:17"},"nodeType":"YulFunctionCall","src":"35137:48:17"},"nodeType":"YulExpressionStatement","src":"35137:48:17"},{"nodeType":"YulAssignment","src":"35194:84:17","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"35264:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"35273:4:17"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35202:61:17"},"nodeType":"YulFunctionCall","src":"35202:76:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35194:4:17"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34793:9:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"34805:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"34813:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"34821:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"34829:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"34840:4:17","type":""}],"src":"34645:640:17"},{"body":{"nodeType":"YulBlock","src":"35353:79:17","statements":[{"nodeType":"YulAssignment","src":"35363:22:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"35378:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"35372:5:17"},"nodeType":"YulFunctionCall","src":"35372:13:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"35363:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35420:5:17"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"35394:25:17"},"nodeType":"YulFunctionCall","src":"35394:32:17"},"nodeType":"YulExpressionStatement","src":"35394:32:17"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"35331:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"35339:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"35347:5:17","type":""}],"src":"35291:141:17"},{"body":{"nodeType":"YulBlock","src":"35514:273:17","statements":[{"body":{"nodeType":"YulBlock","src":"35560:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"35562:77:17"},"nodeType":"YulFunctionCall","src":"35562:79:17"},"nodeType":"YulExpressionStatement","src":"35562:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"35535:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"35544:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35531:3:17"},"nodeType":"YulFunctionCall","src":"35531:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"35556:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"35527:3:17"},"nodeType":"YulFunctionCall","src":"35527:32:17"},"nodeType":"YulIf","src":"35524:119:17"},{"nodeType":"YulBlock","src":"35653:127:17","statements":[{"nodeType":"YulVariableDeclaration","src":"35668:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"35682:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"35672:6:17","type":""}]},{"nodeType":"YulAssignment","src":"35697:73:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35742:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"35753:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35738:3:17"},"nodeType":"YulFunctionCall","src":"35738:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"35762:7:17"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"35707:30:17"},"nodeType":"YulFunctionCall","src":"35707:63:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"35697:6:17"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35484:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"35495:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"35507:6:17","type":""}],"src":"35438:349:17"},{"body":{"nodeType":"YulBlock","src":"35821:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"35838:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"35841:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35831:6:17"},"nodeType":"YulFunctionCall","src":"35831:88:17"},"nodeType":"YulExpressionStatement","src":"35831:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"35935:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"35938:4:17","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35928:6:17"},"nodeType":"YulFunctionCall","src":"35928:15:17"},"nodeType":"YulExpressionStatement","src":"35928:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"35959:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"35962:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"35952:6:17"},"nodeType":"YulFunctionCall","src":"35952:15:17"},"nodeType":"YulExpressionStatement","src":"35952:15:17"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"35793:180:17"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not to\")\n\n        mstore(add(memPtr, 32), \"ken owner nor approved for all\")\n\n    }\n\n    function abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 62)\n        store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: caller is not token owne\")\n\n        mstore(add(memPtr, 32), \"r nor approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721Enumerable: owner index ou\")\n\n        mstore(add(memPtr, 32), \"t of bounds\")\n\n    }\n\n    function abi_encode_t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721Enumerable: global index o\")\n\n        mstore(add(memPtr, 32), \"ut of bounds\")\n\n    }\n\n    function abi_encode_t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: invalid token ID\")\n\n    }\n\n    function abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: address zero is not a va\")\n\n        mstore(add(memPtr, 32), \"lid owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token does not exist\")\n\n    }\n\n    function abi_encode_t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer from incorrect \")\n\n        mstore(add(memPtr, 32), \"owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: token already minted\")\n\n    }\n\n    function abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n}\n","id":17,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101165760003560e01c80635cdda2fa116100a2578063a22cb46511610071578063a22cb46514610305578063a2c512cb14610321578063b88d4fde14610351578063c87b56dd1461036d578063e985e9c51461039d57610116565b80635cdda2fa1461026b5780636352211e1461028757806370a08231146102b757806395d89b41146102e757610116565b806318160ddd116100e957806318160ddd146101b557806323b872dd146101d35780632f745c59146101ef57806342842e0e1461021f5780634f6ccce71461023b57610116565b806301ffc9a71461011b57806306fdde031461014b578063081812fc14610169578063095ea7b314610199575b600080fd5b61013560048036038101906101309190611d73565b6103cd565b6040516101429190611dbb565b60405180910390f35b610153610447565b6040516101609190611e66565b60405180910390f35b610183600480360381019061017e9190611ebe565b6104d9565b6040516101909190611f2c565b60405180910390f35b6101b360048036038101906101ae9190611f73565b61051f565b005b6101bd610636565b6040516101ca9190611fc2565b60405180910390f35b6101ed60048036038101906101e89190611fdd565b610643565b005b61020960048036038101906102049190611f73565b6106a3565b6040516102169190611fc2565b60405180910390f35b61023960048036038101906102349190611fdd565b610748565b005b61025560048036038101906102509190611ebe565b610768565b6040516102629190611fc2565b60405180910390f35b61028560048036038101906102809190612165565b6107d9565b005b6102a1600480360381019061029c9190611ebe565b610809565b6040516102ae9190611f2c565b60405180910390f35b6102d160048036038101906102cc91906121d4565b6108ba565b6040516102de9190611fc2565b60405180910390f35b6102ef610971565b6040516102fc9190611e66565b60405180910390f35b61031f600480360381019061031a919061222d565b610a03565b005b61033b60048036038101906103369190611ebe565b610a19565b6040516103489190611e66565b60405180910390f35b61036b6004803603810190610366919061230e565b610b06565b005b61038760048036038101906103829190611ebe565b610b68565b6040516103949190611e66565b60405180910390f35b6103b760048036038101906103b29190612391565b610bd0565b6040516103c49190611dbb565b60405180910390f35b60007f780e9d63000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610440575061043f82610c64565b5b9050919050565b60606000805461045690612400565b80601f016020809104026020016040519081016040528092919081815260200182805461048290612400565b80156104cf5780601f106104a4576101008083540402835291602001916104cf565b820191906000526020600020905b8154815290600101906020018083116104b257829003601f168201915b5050505050905090565b60006104e482610d46565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061052a82610809565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361059a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610591906124a3565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166105b9610d91565b73ffffffffffffffffffffffffffffffffffffffff1614806105e857506105e7816105e2610d91565b610bd0565b5b610627576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061e90612535565b60405180910390fd5b6106318383610d99565b505050565b6000600880549050905090565b61065461064e610d91565b82610e52565b610693576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068a906125c7565b60405180910390fd5b61069e838383610ee7565b505050565b60006106ae836108ba565b82106106ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e690612659565b60405180910390fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054905092915050565b61076383838360405180602001604052806000815250610b06565b505050565b6000610772610636565b82106107b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107aa906126eb565b60405180910390fd5b600882815481106107c7576107c661270b565b5b90600052602060002001549050919050565b6107e3838361114d565b80600a6000848152602001908152602001600020908161080391906128e6565b50505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a890612a04565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361092a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092190612a96565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606001805461098090612400565b80601f01602080910402602001604051908101604052809291908181526020018280546109ac90612400565b80156109f95780601f106109ce576101008083540402835291602001916109f9565b820191906000526020600020905b8154815290600101906020018083116109dc57829003601f168201915b5050505050905090565b610a15610a0e610d91565b8383611326565b5050565b6060610a2482611492565b610a63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5a90612b02565b60405180910390fd5b600a60008381526020019081526020016000208054610a8190612400565b80601f0160208091040260200160405190810160405280929190818152602001828054610aad90612400565b8015610afa5780601f10610acf57610100808354040283529160200191610afa565b820191906000526020600020905b815481529060010190602001808311610add57829003601f168201915b50505050509050919050565b610b17610b11610d91565b83610e52565b610b56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4d906125c7565b60405180910390fd5b610b62848484846114fe565b50505050565b6060610b7382610d46565b6000610b7d61155a565b90506000815111610b9d5760405180602001604052806000815250610bc8565b80610ba784611571565b604051602001610bb8929190612b5e565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610d2f57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610d3f5750610d3e826116d1565b5b9050919050565b610d4f81611492565b610d8e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8590612a04565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610e0c83610809565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610e5e83610809565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610ea05750610e9f8185610bd0565b5b80610ede57508373ffffffffffffffffffffffffffffffffffffffff16610ec6846104d9565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610f0782610809565b73ffffffffffffffffffffffffffffffffffffffff1614610f5d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f5490612bf4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610fcc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fc390612c86565b60405180910390fd5b610fd783838361173b565b610fe2600082610d99565b6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546110329190612cd5565b925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546110899190612d09565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a461114883838361184d565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036111bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111b390612d89565b60405180910390fd5b6111c581611492565b15611205576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111fc90612df5565b60405180910390fd5b6112116000838361173b565b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546112619190612d09565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46113226000838361184d565b5050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611394576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161138b90612e61565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516114859190611dbb565b60405180910390a3505050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b611509848484610ee7565b61151584848484611852565b611554576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161154b90612ef3565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b6060600082036115b8576040518060400160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525090506116cc565b600082905060005b600082146115ea5780806115d390612f13565b915050600a826115e39190612f8a565b91506115c0565b60008167ffffffffffffffff8111156116065761160561203a565b5b6040519080825280601f01601f1916602001820160405280156116385781602001600182028036833780820191505090505b5090505b600085146116c5576001826116519190612cd5565b9150600a856116609190612fbb565b603061166c9190612d09565b60f81b8183815181106116825761168161270b565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a856116be9190612f8a565b945061163c565b8093505050505b919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6117468383836119d9565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361178857611783816119de565b6117c7565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146117c6576117c58382611a27565b5b5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036118095761180481611b94565b611848565b8273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614611847576118468282611c65565b5b5b505050565b505050565b60006118738473ffffffffffffffffffffffffffffffffffffffff16611ce4565b156119cc578373ffffffffffffffffffffffffffffffffffffffff1663150b7a0261189c610d91565b8786866040518563ffffffff1660e01b81526004016118be9493929190613041565b6020604051808303816000875af19250505080156118fa57506040513d601f19601f820116820180604052508101906118f791906130a2565b60015b61197c573d806000811461192a576040519150601f19603f3d011682016040523d82523d6000602084013e61192f565b606091505b506000815103611974576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161196b90612ef3565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150506119d1565b600190505b949350505050565b505050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505060019003906000526020600020016000909190919091505550565b60006001611a34846108ba565b611a3e9190612cd5565b9050600060076000848152602001908152602001600020549050818114611b23576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002054905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002081905550816007600083815260200190815260200160002081905550505b6007600084815260200190815260200160002060009055600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206000905550505050565b60006001600880549050611ba89190612cd5565b9050600060096000848152602001908152602001600020549050600060088381548110611bd857611bd761270b565b5b906000526020600020015490508060088381548110611bfa57611bf961270b565b5b906000526020600020018190555081600960008381526020019081526020016000208190555060096000858152602001908152602001600020600090556008805480611c4957611c486130cf565b5b6001900381819060005260206000200160009055905550505050565b6000611c70836108ba565b905081600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002081905550806007600084815260200190815260200160002081905550505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611d5081611d1b565b8114611d5b57600080fd5b50565b600081359050611d6d81611d47565b92915050565b600060208284031215611d8957611d88611d11565b5b6000611d9784828501611d5e565b91505092915050565b60008115159050919050565b611db581611da0565b82525050565b6000602082019050611dd06000830184611dac565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611e10578082015181840152602081019050611df5565b60008484015250505050565b6000601f19601f8301169050919050565b6000611e3882611dd6565b611e428185611de1565b9350611e52818560208601611df2565b611e5b81611e1c565b840191505092915050565b60006020820190508181036000830152611e808184611e2d565b905092915050565b6000819050919050565b611e9b81611e88565b8114611ea657600080fd5b50565b600081359050611eb881611e92565b92915050565b600060208284031215611ed457611ed3611d11565b5b6000611ee284828501611ea9565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611f1682611eeb565b9050919050565b611f2681611f0b565b82525050565b6000602082019050611f416000830184611f1d565b92915050565b611f5081611f0b565b8114611f5b57600080fd5b50565b600081359050611f6d81611f47565b92915050565b60008060408385031215611f8a57611f89611d11565b5b6000611f9885828601611f5e565b9250506020611fa985828601611ea9565b9150509250929050565b611fbc81611e88565b82525050565b6000602082019050611fd76000830184611fb3565b92915050565b600080600060608486031215611ff657611ff5611d11565b5b600061200486828701611f5e565b935050602061201586828701611f5e565b925050604061202686828701611ea9565b9150509250925092565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61207282611e1c565b810181811067ffffffffffffffff821117156120915761209061203a565b5b80604052505050565b60006120a4611d07565b90506120b08282612069565b919050565b600067ffffffffffffffff8211156120d0576120cf61203a565b5b6120d982611e1c565b9050602081019050919050565b82818337600083830152505050565b6000612108612103846120b5565b61209a565b90508281526020810184848401111561212457612123612035565b5b61212f8482856120e6565b509392505050565b600082601f83011261214c5761214b612030565b5b813561215c8482602086016120f5565b91505092915050565b60008060006060848603121561217e5761217d611d11565b5b600061218c86828701611f5e565b935050602061219d86828701611ea9565b925050604084013567ffffffffffffffff8111156121be576121bd611d16565b5b6121ca86828701612137565b9150509250925092565b6000602082840312156121ea576121e9611d11565b5b60006121f884828501611f5e565b91505092915050565b61220a81611da0565b811461221557600080fd5b50565b60008135905061222781612201565b92915050565b6000806040838503121561224457612243611d11565b5b600061225285828601611f5e565b925050602061226385828601612218565b9150509250929050565b600067ffffffffffffffff8211156122885761228761203a565b5b61229182611e1c565b9050602081019050919050565b60006122b16122ac8461226d565b61209a565b9050828152602081018484840111156122cd576122cc612035565b5b6122d88482856120e6565b509392505050565b600082601f8301126122f5576122f4612030565b5b813561230584826020860161229e565b91505092915050565b6000806000806080858703121561232857612327611d11565b5b600061233687828801611f5e565b945050602061234787828801611f5e565b935050604061235887828801611ea9565b925050606085013567ffffffffffffffff81111561237957612378611d16565b5b612385878288016122e0565b91505092959194509250565b600080604083850312156123a8576123a7611d11565b5b60006123b685828601611f5e565b92505060206123c785828601611f5e565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061241857607f821691505b60208210810361242b5761242a6123d1565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b600061248d602183611de1565b915061249882612431565b604082019050919050565b600060208201905081810360008301526124bc81612480565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c0000602082015250565b600061251f603e83611de1565b915061252a826124c3565b604082019050919050565b6000602082019050818103600083015261254e81612512565b9050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206e6f7220617070726f766564000000000000000000000000000000000000602082015250565b60006125b1602e83611de1565b91506125bc82612555565b604082019050919050565b600060208201905081810360008301526125e0816125a4565b9050919050565b7f455243373231456e756d657261626c653a206f776e657220696e646578206f7560008201527f74206f6620626f756e6473000000000000000000000000000000000000000000602082015250565b6000612643602b83611de1565b915061264e826125e7565b604082019050919050565b6000602082019050818103600083015261267281612636565b9050919050565b7f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60008201527f7574206f6620626f756e64730000000000000000000000000000000000000000602082015250565b60006126d5602c83611de1565b91506126e082612679565b604082019050919050565b60006020820190508181036000830152612704816126c8565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261279c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261275f565b6127a6868361275f565b95508019841693508086168417925050509392505050565b6000819050919050565b60006127e36127de6127d984611e88565b6127be565b611e88565b9050919050565b6000819050919050565b6127fd836127c8565b612811612809826127ea565b84845461276c565b825550505050565b600090565b612826612819565b6128318184846127f4565b505050565b5b818110156128555761284a60008261281e565b600181019050612837565b5050565b601f82111561289a5761286b8161273a565b6128748461274f565b81016020851015612883578190505b61289761288f8561274f565b830182612836565b50505b505050565b600082821c905092915050565b60006128bd6000198460080261289f565b1980831691505092915050565b60006128d683836128ac565b9150826002028217905092915050565b6128ef82611dd6565b67ffffffffffffffff8111156129085761290761203a565b5b6129128254612400565b61291d828285612859565b600060209050601f831160018114612950576000841561293e578287015190505b61294885826128ca565b8655506129b0565b601f19841661295e8661273a565b60005b8281101561298657848901518255600182019150602085019450602081019050612961565b868310156129a3578489015161299f601f8916826128ac565b8355505b6001600288020188555050505b505050505050565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b60006129ee601883611de1565b91506129f9826129b8565b602082019050919050565b60006020820190508181036000830152612a1d816129e1565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b6000612a80602983611de1565b9150612a8b82612a24565b604082019050919050565b60006020820190508181036000830152612aaf81612a73565b9050919050565b7f546f6b656e20646f6573206e6f74206578697374000000000000000000000000600082015250565b6000612aec601483611de1565b9150612af782612ab6565b602082019050919050565b60006020820190508181036000830152612b1b81612adf565b9050919050565b600081905092915050565b6000612b3882611dd6565b612b428185612b22565b9350612b52818560208601611df2565b80840191505092915050565b6000612b6a8285612b2d565b9150612b768284612b2d565b91508190509392505050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b6000612bde602583611de1565b9150612be982612b82565b604082019050919050565b60006020820190508181036000830152612c0d81612bd1565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000612c70602483611de1565b9150612c7b82612c14565b604082019050919050565b60006020820190508181036000830152612c9f81612c63565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612ce082611e88565b9150612ceb83611e88565b9250828203905081811115612d0357612d02612ca6565b5b92915050565b6000612d1482611e88565b9150612d1f83611e88565b9250828201905080821115612d3757612d36612ca6565b5b92915050565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b6000612d73602083611de1565b9150612d7e82612d3d565b602082019050919050565b60006020820190508181036000830152612da281612d66565b9050919050565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b6000612ddf601c83611de1565b9150612dea82612da9565b602082019050919050565b60006020820190508181036000830152612e0e81612dd2565b9050919050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b6000612e4b601983611de1565b9150612e5682612e15565b602082019050919050565b60006020820190508181036000830152612e7a81612e3e565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b6000612edd603283611de1565b9150612ee882612e81565b604082019050919050565b60006020820190508181036000830152612f0c81612ed0565b9050919050565b6000612f1e82611e88565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612f5057612f4f612ca6565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612f9582611e88565b9150612fa083611e88565b925082612fb057612faf612f5b565b5b828204905092915050565b6000612fc682611e88565b9150612fd183611e88565b925082612fe157612fe0612f5b565b5b828206905092915050565b600081519050919050565b600082825260208201905092915050565b600061301382612fec565b61301d8185612ff7565b935061302d818560208601611df2565b61303681611e1c565b840191505092915050565b60006080820190506130566000830187611f1d565b6130636020830186611f1d565b6130706040830185611fb3565b81810360608301526130828184613008565b905095945050505050565b60008151905061309c81611d47565b92915050565b6000602082840312156130b8576130b7611d11565b5b60006130c68482850161308d565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea26469706673582212200034c2ddb5f58c4d585ffcf351d9c08dd0e5df1ae4ab27c9a288889d8928c1b964736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5CDDA2FA GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0xA2C512CB EQ PUSH2 0x321 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x39D JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x5CDDA2FA EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2E7 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x23B JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x199 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x135 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x1D73 JUMP JUMPDEST PUSH2 0x3CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x142 SWAP2 SWAP1 PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x153 PUSH2 0x447 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x1E66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x183 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x1EBE JUMP JUMPDEST PUSH2 0x4D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x1F2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x1F73 JUMP JUMPDEST PUSH2 0x51F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BD PUSH2 0x636 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x1FC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0x1FDD JUMP JUMPDEST PUSH2 0x643 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x1F73 JUMP JUMPDEST PUSH2 0x6A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x1FC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x239 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x1FDD JUMP JUMPDEST PUSH2 0x748 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x255 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x1EBE JUMP JUMPDEST PUSH2 0x768 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x1FC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x285 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x2165 JUMP JUMPDEST PUSH2 0x7D9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29C SWAP2 SWAP1 PUSH2 0x1EBE JUMP JUMPDEST PUSH2 0x809 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AE SWAP2 SWAP1 PUSH2 0x1F2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x21D4 JUMP JUMPDEST PUSH2 0x8BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DE SWAP2 SWAP1 PUSH2 0x1FC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EF PUSH2 0x971 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FC SWAP2 SWAP1 PUSH2 0x1E66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31A SWAP2 SWAP1 PUSH2 0x222D JUMP JUMPDEST PUSH2 0xA03 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x336 SWAP2 SWAP1 PUSH2 0x1EBE JUMP JUMPDEST PUSH2 0xA19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x348 SWAP2 SWAP1 PUSH2 0x1E66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x366 SWAP2 SWAP1 PUSH2 0x230E JUMP JUMPDEST PUSH2 0xB06 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x387 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x382 SWAP2 SWAP1 PUSH2 0x1EBE JUMP JUMPDEST PUSH2 0xB68 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x394 SWAP2 SWAP1 PUSH2 0x1E66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B2 SWAP2 SWAP1 PUSH2 0x2391 JUMP JUMPDEST PUSH2 0xBD0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C4 SWAP2 SWAP1 PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x780E9D6300000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x440 JUMPI POP PUSH2 0x43F DUP3 PUSH2 0xC64 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x456 SWAP1 PUSH2 0x2400 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x482 SWAP1 PUSH2 0x2400 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4CF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4A4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4CF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4B2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E4 DUP3 PUSH2 0xD46 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52A DUP3 PUSH2 0x809 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x59A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x591 SWAP1 PUSH2 0x24A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5B9 PUSH2 0xD91 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x5E8 JUMPI POP PUSH2 0x5E7 DUP2 PUSH2 0x5E2 PUSH2 0xD91 JUMP JUMPDEST PUSH2 0xBD0 JUMP JUMPDEST JUMPDEST PUSH2 0x627 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x61E SWAP1 PUSH2 0x2535 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x631 DUP4 DUP4 PUSH2 0xD99 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x654 PUSH2 0x64E PUSH2 0xD91 JUMP JUMPDEST DUP3 PUSH2 0xE52 JUMP JUMPDEST PUSH2 0x693 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x68A SWAP1 PUSH2 0x25C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x69E DUP4 DUP4 DUP4 PUSH2 0xEE7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6AE DUP4 PUSH2 0x8BA JUMP JUMPDEST DUP3 LT PUSH2 0x6EF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E6 SWAP1 PUSH2 0x2659 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x763 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xB06 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x772 PUSH2 0x636 JUMP JUMPDEST DUP3 LT PUSH2 0x7B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AA SWAP1 PUSH2 0x26EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x7C7 JUMPI PUSH2 0x7C6 PUSH2 0x270B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7E3 DUP4 DUP4 PUSH2 0x114D JUMP JUMPDEST DUP1 PUSH1 0xA PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x803 SWAP2 SWAP1 PUSH2 0x28E6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A8 SWAP1 PUSH2 0x2A04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x92A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x921 SWAP1 PUSH2 0x2A96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x980 SWAP1 PUSH2 0x2400 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9AC SWAP1 PUSH2 0x2400 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9F9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9CE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9F9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9DC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA15 PUSH2 0xA0E PUSH2 0xD91 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x1326 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA24 DUP3 PUSH2 0x1492 JUMP JUMPDEST PUSH2 0xA63 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA5A SWAP1 PUSH2 0x2B02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0xA81 SWAP1 PUSH2 0x2400 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAAD SWAP1 PUSH2 0x2400 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAFA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xACF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAFA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xADD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB17 PUSH2 0xB11 PUSH2 0xD91 JUMP JUMPDEST DUP4 PUSH2 0xE52 JUMP JUMPDEST PUSH2 0xB56 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB4D SWAP1 PUSH2 0x25C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB62 DUP5 DUP5 DUP5 DUP5 PUSH2 0x14FE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xB73 DUP3 PUSH2 0xD46 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB7D PUSH2 0x155A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xB9D JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xBC8 JUMP JUMPDEST DUP1 PUSH2 0xBA7 DUP5 PUSH2 0x1571 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xBB8 SWAP3 SWAP2 SWAP1 PUSH2 0x2B5E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xD2F JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0xD3F JUMPI POP PUSH2 0xD3E DUP3 PUSH2 0x16D1 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD4F DUP2 PUSH2 0x1492 JUMP JUMPDEST PUSH2 0xD8E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD85 SWAP1 PUSH2 0x2A04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE0C DUP4 PUSH2 0x809 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE5E DUP4 PUSH2 0x809 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xEA0 JUMPI POP PUSH2 0xE9F DUP2 DUP6 PUSH2 0xBD0 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xEDE JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEC6 DUP5 PUSH2 0x4D9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF07 DUP3 PUSH2 0x809 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF5D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF54 SWAP1 PUSH2 0x2BF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFCC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC3 SWAP1 PUSH2 0x2C86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFD7 DUP4 DUP4 DUP4 PUSH2 0x173B JUMP JUMPDEST PUSH2 0xFE2 PUSH1 0x0 DUP3 PUSH2 0xD99 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1032 SWAP2 SWAP1 PUSH2 0x2CD5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1089 SWAP2 SWAP1 PUSH2 0x2D09 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1148 DUP4 DUP4 DUP4 PUSH2 0x184D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11B3 SWAP1 PUSH2 0x2D89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11C5 DUP2 PUSH2 0x1492 JUMP JUMPDEST ISZERO PUSH2 0x1205 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11FC SWAP1 PUSH2 0x2DF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1211 PUSH1 0x0 DUP4 DUP4 PUSH2 0x173B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1261 SWAP2 SWAP1 PUSH2 0x2D09 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1322 PUSH1 0x0 DUP4 DUP4 PUSH2 0x184D JUMP JUMPDEST POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1394 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x138B SWAP1 PUSH2 0x2E61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1485 SWAP2 SWAP1 PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1509 DUP5 DUP5 DUP5 PUSH2 0xEE7 JUMP JUMPDEST PUSH2 0x1515 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1852 JUMP JUMPDEST PUSH2 0x1554 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x154B SWAP1 PUSH2 0x2EF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 SUB PUSH2 0x15B8 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x16CC JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x15EA JUMPI DUP1 DUP1 PUSH2 0x15D3 SWAP1 PUSH2 0x2F13 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x15E3 SWAP2 SWAP1 PUSH2 0x2F8A JUMP JUMPDEST SWAP2 POP PUSH2 0x15C0 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1606 JUMPI PUSH2 0x1605 PUSH2 0x203A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1638 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0x16C5 JUMPI PUSH1 0x1 DUP3 PUSH2 0x1651 SWAP2 SWAP1 PUSH2 0x2CD5 JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x1660 SWAP2 SWAP1 PUSH2 0x2FBB JUMP JUMPDEST PUSH1 0x30 PUSH2 0x166C SWAP2 SWAP1 PUSH2 0x2D09 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1682 JUMPI PUSH2 0x1681 PUSH2 0x270B JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x16BE SWAP2 SWAP1 PUSH2 0x2F8A JUMP JUMPDEST SWAP5 POP PUSH2 0x163C JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1746 DUP4 DUP4 DUP4 PUSH2 0x19D9 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1788 JUMPI PUSH2 0x1783 DUP2 PUSH2 0x19DE JUMP JUMPDEST PUSH2 0x17C7 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x17C6 JUMPI PUSH2 0x17C5 DUP4 DUP3 PUSH2 0x1A27 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1809 JUMPI PUSH2 0x1804 DUP2 PUSH2 0x1B94 JUMP JUMPDEST PUSH2 0x1848 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1847 JUMPI PUSH2 0x1846 DUP3 DUP3 PUSH2 0x1C65 JUMP JUMPDEST JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1873 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1CE4 JUMP JUMPDEST ISZERO PUSH2 0x19CC JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x189C PUSH2 0xD91 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18BE SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3041 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x18FA JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18F7 SWAP2 SWAP1 PUSH2 0x30A2 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x197C JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x192A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x192F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1974 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x196B SWAP1 PUSH2 0x2EF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x19D1 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD SWAP1 POP PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x8 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x1A34 DUP5 PUSH2 0x8BA JUMP JUMPDEST PUSH2 0x1A3E SWAP2 SWAP1 PUSH2 0x2CD5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 EQ PUSH2 0x1B23 JUMPI PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP1 PUSH1 0x6 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x8 DUP1 SLOAD SWAP1 POP PUSH2 0x1BA8 SWAP2 SWAP1 PUSH2 0x2CD5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1BD8 JUMPI PUSH2 0x1BD7 PUSH2 0x270B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1BFA JUMPI PUSH2 0x1BF9 PUSH2 0x270B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x9 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x8 DUP1 SLOAD DUP1 PUSH2 0x1C49 JUMPI PUSH2 0x1C48 PUSH2 0x30CF JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C70 DUP4 PUSH2 0x8BA JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D50 DUP2 PUSH2 0x1D1B JUMP JUMPDEST DUP2 EQ PUSH2 0x1D5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D6D DUP2 PUSH2 0x1D47 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D89 JUMPI PUSH2 0x1D88 PUSH2 0x1D11 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D97 DUP5 DUP3 DUP6 ADD PUSH2 0x1D5E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DB5 DUP2 PUSH2 0x1DA0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DD0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1DAC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1E10 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1DF5 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E38 DUP3 PUSH2 0x1DD6 JUMP JUMPDEST PUSH2 0x1E42 DUP2 DUP6 PUSH2 0x1DE1 JUMP JUMPDEST SWAP4 POP PUSH2 0x1E52 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1DF2 JUMP JUMPDEST PUSH2 0x1E5B DUP2 PUSH2 0x1E1C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E80 DUP2 DUP5 PUSH2 0x1E2D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E9B DUP2 PUSH2 0x1E88 JUMP JUMPDEST DUP2 EQ PUSH2 0x1EA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EB8 DUP2 PUSH2 0x1E92 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ED4 JUMPI PUSH2 0x1ED3 PUSH2 0x1D11 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EE2 DUP5 DUP3 DUP6 ADD PUSH2 0x1EA9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F16 DUP3 PUSH2 0x1EEB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F26 DUP2 PUSH2 0x1F0B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F41 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F1D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F50 DUP2 PUSH2 0x1F0B JUMP JUMPDEST DUP2 EQ PUSH2 0x1F5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F6D DUP2 PUSH2 0x1F47 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F8A JUMPI PUSH2 0x1F89 PUSH2 0x1D11 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F98 DUP6 DUP3 DUP7 ADD PUSH2 0x1F5E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1FA9 DUP6 DUP3 DUP7 ADD PUSH2 0x1EA9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FBC DUP2 PUSH2 0x1E88 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FD7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1FB3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1FF6 JUMPI PUSH2 0x1FF5 PUSH2 0x1D11 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2004 DUP7 DUP3 DUP8 ADD PUSH2 0x1F5E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2015 DUP7 DUP3 DUP8 ADD PUSH2 0x1F5E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2026 DUP7 DUP3 DUP8 ADD PUSH2 0x1EA9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2072 DUP3 PUSH2 0x1E1C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2091 JUMPI PUSH2 0x2090 PUSH2 0x203A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20A4 PUSH2 0x1D07 JUMP JUMPDEST SWAP1 POP PUSH2 0x20B0 DUP3 DUP3 PUSH2 0x2069 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x20D0 JUMPI PUSH2 0x20CF PUSH2 0x203A JUMP JUMPDEST JUMPDEST PUSH2 0x20D9 DUP3 PUSH2 0x1E1C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2108 PUSH2 0x2103 DUP5 PUSH2 0x20B5 JUMP JUMPDEST PUSH2 0x209A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2124 JUMPI PUSH2 0x2123 PUSH2 0x2035 JUMP JUMPDEST JUMPDEST PUSH2 0x212F DUP5 DUP3 DUP6 PUSH2 0x20E6 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x214C JUMPI PUSH2 0x214B PUSH2 0x2030 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x215C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x20F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x217E JUMPI PUSH2 0x217D PUSH2 0x1D11 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x218C DUP7 DUP3 DUP8 ADD PUSH2 0x1F5E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x219D DUP7 DUP3 DUP8 ADD PUSH2 0x1EA9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x21BE JUMPI PUSH2 0x21BD PUSH2 0x1D16 JUMP JUMPDEST JUMPDEST PUSH2 0x21CA DUP7 DUP3 DUP8 ADD PUSH2 0x2137 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21EA JUMPI PUSH2 0x21E9 PUSH2 0x1D11 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21F8 DUP5 DUP3 DUP6 ADD PUSH2 0x1F5E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x220A DUP2 PUSH2 0x1DA0 JUMP JUMPDEST DUP2 EQ PUSH2 0x2215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2227 DUP2 PUSH2 0x2201 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2244 JUMPI PUSH2 0x2243 PUSH2 0x1D11 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2252 DUP6 DUP3 DUP7 ADD PUSH2 0x1F5E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2263 DUP6 DUP3 DUP7 ADD PUSH2 0x2218 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2288 JUMPI PUSH2 0x2287 PUSH2 0x203A JUMP JUMPDEST JUMPDEST PUSH2 0x2291 DUP3 PUSH2 0x1E1C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22B1 PUSH2 0x22AC DUP5 PUSH2 0x226D JUMP JUMPDEST PUSH2 0x209A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x22CD JUMPI PUSH2 0x22CC PUSH2 0x2035 JUMP JUMPDEST JUMPDEST PUSH2 0x22D8 DUP5 DUP3 DUP6 PUSH2 0x20E6 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x22F5 JUMPI PUSH2 0x22F4 PUSH2 0x2030 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2305 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x229E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2328 JUMPI PUSH2 0x2327 PUSH2 0x1D11 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2336 DUP8 DUP3 DUP9 ADD PUSH2 0x1F5E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2347 DUP8 DUP3 DUP9 ADD PUSH2 0x1F5E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2358 DUP8 DUP3 DUP9 ADD PUSH2 0x1EA9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2379 JUMPI PUSH2 0x2378 PUSH2 0x1D16 JUMP JUMPDEST JUMPDEST PUSH2 0x2385 DUP8 DUP3 DUP9 ADD PUSH2 0x22E0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x23A8 JUMPI PUSH2 0x23A7 PUSH2 0x1D11 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23B6 DUP6 DUP3 DUP7 ADD PUSH2 0x1F5E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x23C7 DUP6 DUP3 DUP7 ADD PUSH2 0x1F5E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2418 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x242B JUMPI PUSH2 0x242A PUSH2 0x23D1 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x248D PUSH1 0x21 DUP4 PUSH2 0x1DE1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2498 DUP3 PUSH2 0x2431 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x24BC DUP2 PUSH2 0x2480 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206E6F7220617070726F76656420666F7220616C6C0000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x251F PUSH1 0x3E DUP4 PUSH2 0x1DE1 JUMP JUMPDEST SWAP2 POP PUSH2 0x252A DUP3 PUSH2 0x24C3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x254E DUP2 PUSH2 0x2512 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206E6F7220617070726F766564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25B1 PUSH1 0x2E DUP4 PUSH2 0x1DE1 JUMP JUMPDEST SWAP2 POP PUSH2 0x25BC DUP3 PUSH2 0x2555 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x25E0 DUP2 PUSH2 0x25A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243373231456E756D657261626C653A206F776E657220696E646578206F75 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x74206F6620626F756E6473000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2643 PUSH1 0x2B DUP4 PUSH2 0x1DE1 JUMP JUMPDEST SWAP2 POP PUSH2 0x264E DUP3 PUSH2 0x25E7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2672 DUP2 PUSH2 0x2636 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7574206F6620626F756E64730000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26D5 PUSH1 0x2C DUP4 PUSH2 0x1DE1 JUMP JUMPDEST SWAP2 POP PUSH2 0x26E0 DUP3 PUSH2 0x2679 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2704 DUP2 PUSH2 0x26C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x279C PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x275F JUMP JUMPDEST PUSH2 0x27A6 DUP7 DUP4 PUSH2 0x275F JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27E3 PUSH2 0x27DE PUSH2 0x27D9 DUP5 PUSH2 0x1E88 JUMP JUMPDEST PUSH2 0x27BE JUMP JUMPDEST PUSH2 0x1E88 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27FD DUP4 PUSH2 0x27C8 JUMP JUMPDEST PUSH2 0x2811 PUSH2 0x2809 DUP3 PUSH2 0x27EA JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x276C JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x2826 PUSH2 0x2819 JUMP JUMPDEST PUSH2 0x2831 DUP2 DUP5 DUP5 PUSH2 0x27F4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2855 JUMPI PUSH2 0x284A PUSH1 0x0 DUP3 PUSH2 0x281E JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2837 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x289A JUMPI PUSH2 0x286B DUP2 PUSH2 0x273A JUMP JUMPDEST PUSH2 0x2874 DUP5 PUSH2 0x274F JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2883 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2897 PUSH2 0x288F DUP6 PUSH2 0x274F JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2836 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28BD PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x289F JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28D6 DUP4 DUP4 PUSH2 0x28AC JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x28EF DUP3 PUSH2 0x1DD6 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2908 JUMPI PUSH2 0x2907 PUSH2 0x203A JUMP JUMPDEST JUMPDEST PUSH2 0x2912 DUP3 SLOAD PUSH2 0x2400 JUMP JUMPDEST PUSH2 0x291D DUP3 DUP3 DUP6 PUSH2 0x2859 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2950 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x293E JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2948 DUP6 DUP3 PUSH2 0x28CA JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x29B0 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x295E DUP7 PUSH2 0x273A JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2986 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2961 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x29A3 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x299F PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x28AC JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29EE PUSH1 0x18 DUP4 PUSH2 0x1DE1 JUMP JUMPDEST SWAP2 POP PUSH2 0x29F9 DUP3 PUSH2 0x29B8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A1D DUP2 PUSH2 0x29E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A80 PUSH1 0x29 DUP4 PUSH2 0x1DE1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A8B DUP3 PUSH2 0x2A24 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2AAF DUP2 PUSH2 0x2A73 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E20646F6573206E6F74206578697374000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AEC PUSH1 0x14 DUP4 PUSH2 0x1DE1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2AF7 DUP3 PUSH2 0x2AB6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B1B DUP2 PUSH2 0x2ADF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B38 DUP3 PUSH2 0x1DD6 JUMP JUMPDEST PUSH2 0x2B42 DUP2 DUP6 PUSH2 0x2B22 JUMP JUMPDEST SWAP4 POP PUSH2 0x2B52 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1DF2 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B6A DUP3 DUP6 PUSH2 0x2B2D JUMP JUMPDEST SWAP2 POP PUSH2 0x2B76 DUP3 DUP5 PUSH2 0x2B2D JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BDE PUSH1 0x25 DUP4 PUSH2 0x1DE1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BE9 DUP3 PUSH2 0x2B82 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C0D DUP2 PUSH2 0x2BD1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C70 PUSH1 0x24 DUP4 PUSH2 0x1DE1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C7B DUP3 PUSH2 0x2C14 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C9F DUP2 PUSH2 0x2C63 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2CE0 DUP3 PUSH2 0x1E88 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CEB DUP4 PUSH2 0x1E88 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2D03 JUMPI PUSH2 0x2D02 PUSH2 0x2CA6 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D14 DUP3 PUSH2 0x1E88 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D1F DUP4 PUSH2 0x1E88 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2D37 JUMPI PUSH2 0x2D36 PUSH2 0x2CA6 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D73 PUSH1 0x20 DUP4 PUSH2 0x1DE1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D7E DUP3 PUSH2 0x2D3D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2DA2 DUP2 PUSH2 0x2D66 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DDF PUSH1 0x1C DUP4 PUSH2 0x1DE1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DEA DUP3 PUSH2 0x2DA9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E0E DUP2 PUSH2 0x2DD2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E4B PUSH1 0x19 DUP4 PUSH2 0x1DE1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E56 DUP3 PUSH2 0x2E15 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E7A DUP2 PUSH2 0x2E3E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EDD PUSH1 0x32 DUP4 PUSH2 0x1DE1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EE8 DUP3 PUSH2 0x2E81 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F0C DUP2 PUSH2 0x2ED0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F1E DUP3 PUSH2 0x1E88 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2F50 JUMPI PUSH2 0x2F4F PUSH2 0x2CA6 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2F95 DUP3 PUSH2 0x1E88 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FA0 DUP4 PUSH2 0x1E88 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2FB0 JUMPI PUSH2 0x2FAF PUSH2 0x2F5B JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FC6 DUP3 PUSH2 0x1E88 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FD1 DUP4 PUSH2 0x1E88 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2FE1 JUMPI PUSH2 0x2FE0 PUSH2 0x2F5B JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3013 DUP3 PUSH2 0x2FEC JUMP JUMPDEST PUSH2 0x301D DUP2 DUP6 PUSH2 0x2FF7 JUMP JUMPDEST SWAP4 POP PUSH2 0x302D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1DF2 JUMP JUMPDEST PUSH2 0x3036 DUP2 PUSH2 0x1E1C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3056 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1F1D JUMP JUMPDEST PUSH2 0x3063 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1F1D JUMP JUMPDEST PUSH2 0x3070 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1FB3 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x3082 DUP2 DUP5 PUSH2 0x3008 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x309C DUP2 PUSH2 0x1D47 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x30B8 JUMPI PUSH2 0x30B7 PUSH2 0x1D11 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x30C6 DUP5 DUP3 DUP6 ADD PUSH2 0x308D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP CALLVALUE 0xC2 0xDD 0xB5 CREATE2 DUP13 0x4D PC 0x5F 0xFC RETURN MLOAD 0xD9 0xC0 DUP14 0xD0 0xE5 0xDF BYTE 0xE4 0xAB 0x27 0xC9 LOG2 DUP9 DUP9 SWAP14 DUP10 0x28 0xC1 0xB9 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"138:494:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;990:222:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2470:98:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3935:167;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3467:407;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1615:111:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4612:327:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1291:253:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5005:179:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1798:230:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;285:161:14;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2190:218:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1929:204;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2632:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4169:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;452:178:14;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5250:315:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2800:276;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4388:162;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;990:222:4;1092:4;1130:35;1115:50;;;:11;:50;;;;:90;;;;1169:36;1193:11;1169:23;:36::i;:::-;1115:90;1108:97;;990:222;;;:::o;2470:98:1:-;2524:13;2556:5;2549:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2470:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;4071:15;:24;4087:7;4071:24;;;;;;;;;;;;;;;;;;;;;4064:31;;3935:167;;;:::o;3467:407::-;3547:13;3563:23;3578:7;3563:14;:23::i;:::-;3547:39;;3610:5;3604:11;;:2;:11;;;3596:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3701:5;3685:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3710:37;3727:5;3734:12;:10;:12::i;:::-;3710:16;:37::i;:::-;3685:62;3664:171;;;;;;;;;;;;:::i;:::-;;;;;;;;;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3537:337;3467:407;;:::o;1615:111:4:-;1676:7;1702:10;:17;;;;1695:24;;1615:111;:::o;4612:327:1:-;4801:41;4820:12;:10;:12::i;:::-;4834:7;4801:18;:41::i;:::-;4793:100;;;;;;;;;;;;:::i;:::-;;;;;;;;;4904:28;4914:4;4920:2;4924:7;4904:9;:28::i;:::-;4612:327;;;:::o;1291:253:4:-;1388:7;1423:23;1440:5;1423:16;:23::i;:::-;1415:5;:31;1407:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;1511:12;:19;1524:5;1511:19;;;;;;;;;;;;;;;:26;1531:5;1511:26;;;;;;;;;;;;1504:33;;1291:253;;;;:::o;5005:179:1:-;5138:39;5155:4;5161:2;5165:7;5138:39;;;;;;;;;;;;:16;:39::i;:::-;5005:179;;;:::o;1798:230:4:-;1873:7;1908:30;:28;:30::i;:::-;1900:5;:38;1892:95;;;;;;;;;;;;:::i;:::-;;;;;;;;;2004:10;2015:5;2004:17;;;;;;;;:::i;:::-;;;;;;;;;;1997:24;;1798:230;;;:::o;285:161:14:-;379:18;385:2;389:7;379:5;:18::i;:::-;430:9;407:11;:20;419:7;407:20;;;;;;;;;;;:32;;;;;;:::i;:::-;;285:161;;;:::o;2190:218:1:-;2262:7;2281:13;2297:7;:16;2305:7;2297:16;;;;;;;;;;;;;;;;;;;;;2281:32;;2348:1;2331:19;;:5;:19;;;2323:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2396:5;2389:12;;;2190:218;;;:::o;1929:204::-;2001:7;2045:1;2028:19;;:5;:19;;;2020:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2110:9;:16;2120:5;2110:16;;;;;;;;;;;;;;;;2103:23;;1929:204;;;:::o;2632:102::-;2688:13;2720:7;2713:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2632:102;:::o;4169:153::-;4263:52;4282:12;:10;:12::i;:::-;4296:8;4306;4263:18;:52::i;:::-;4169:153;;:::o;452:178:14:-;512:13;545:16;553:7;545;:16::i;:::-;537:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;603:11;:20;615:7;603:20;;;;;;;;;;;596:27;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;452:178;;;:::o;5250:315:1:-;5418:41;5437:12;:10;:12::i;:::-;5451:7;5418:18;:41::i;:::-;5410:100;;;;;;;;;;;;:::i;:::-;;;;;;;;;5520:38;5534:4;5540:2;5544:7;5553:4;5520:13;:38::i;:::-;5250:315;;;;:::o;2800:276::-;2873:13;2898:23;2913:7;2898:14;:23::i;:::-;2932:21;2956:10;:8;:10::i;:::-;2932:34;;3007:1;2989:7;2983:21;:25;:86;;;;;;;;;;;;;;;;;3035:7;3044:18;:7;:16;:18::i;:::-;3018:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2983:86;2976:93;;;2800:276;;;:::o;4388:162::-;4485:4;4508:18;:25;4527:5;4508:25;;;;;;;;;;;;;;;:35;4534:8;4508:35;;;;;;;;;;;;;;;;;;;;;;;;;4501:42;;4388:162;;;;:::o;1570:300::-;1672:4;1722:25;1707:40;;;:11;:40;;;;:104;;;;1778:33;1763:48;;;:11;:48;;;;1707:104;:156;;;;1827:36;1851:11;1827:23;:36::i;:::-;1707:156;1688:175;;1570:300;;;:::o;11657:133::-;11738:16;11746:7;11738;:16::i;:::-;11730:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;11657:133;:::o;640:96:9:-;693:7;719:10;712:17;;640:96;:::o;10959:171:1:-;11060:2;11033:15;:24;11049:7;11033:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;11115:7;11111:2;11077:46;;11086:23;11101:7;11086:14;:23::i;:::-;11077:46;;;;;;;;;;;;10959:171;;:::o;7317:261::-;7410:4;7426:13;7442:23;7457:7;7442:14;:23::i;:::-;7426:39;;7494:5;7483:16;;:7;:16;;;:52;;;;7503:32;7520:5;7527:7;7503:16;:32::i;:::-;7483:52;:87;;;;7563:7;7539:31;;:20;7551:7;7539:11;:20::i;:::-;:31;;;7483:87;7475:96;;;7317:261;;;;:::o;10242:605::-;10396:4;10369:31;;:23;10384:7;10369:14;:23::i;:::-;:31;;;10361:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;10474:1;10460:16;;:2;:16;;;10452:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;10528:39;10549:4;10555:2;10559:7;10528:20;:39::i;:::-;10629:29;10646:1;10650:7;10629:8;:29::i;:::-;10688:1;10669:9;:15;10679:4;10669:15;;;;;;;;;;;;;;;;:20;;;;;;;:::i;:::-;;;;;;;;10716:1;10699:9;:13;10709:2;10699:13;;;;;;;;;;;;;;;;:18;;;;;;;:::i;:::-;;;;;;;;10746:2;10727:7;:16;10735:7;10727:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;10783:7;10779:2;10764:27;;10773:4;10764:27;;;;;;;;;;;;10802:38;10822:4;10828:2;10832:7;10802:19;:38::i;:::-;10242:605;;;:::o;8868:427::-;8961:1;8947:16;;:2;:16;;;8939:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;9019:16;9027:7;9019;:16::i;:::-;9018:17;9010:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;9079:45;9108:1;9112:2;9116:7;9079:20;:45::i;:::-;9152:1;9135:9;:13;9145:2;9135:13;;;;;;;;;;;;;;;;:18;;;;;;;:::i;:::-;;;;;;;;9182:2;9163:7;:16;9171:7;9163:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9225:7;9221:2;9200:33;;9217:1;9200:33;;;;;;;;;;;;9244:44;9272:1;9276:2;9280:7;9244:19;:44::i;:::-;8868:427;;:::o;11266:307::-;11416:8;11407:17;;:5;:17;;;11399:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;11502:8;11464:18;:25;11483:5;11464:25;;;;;;;;;;;;;;;:35;11490:8;11464:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;11547:8;11525:41;;11540:5;11525:41;;;11557:8;11525:41;;;;;;:::i;:::-;;;;;;;;11266:307;;;:::o;7034:125::-;7099:4;7150:1;7122:30;;:7;:16;7130:7;7122:16;;;;;;;;;;;;;;;;;;;;;:30;;;;7115:37;;7034:125;;;:::o;6426:305::-;6576:28;6586:4;6592:2;6596:7;6576:9;:28::i;:::-;6622:47;6645:4;6651:2;6655:7;6664:4;6622:22;:47::i;:::-;6614:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;6426:305;;;;:::o;3318:92::-;3369:13;3394:9;;;;;;;;;;;;;;3318:92;:::o;392:703:11:-;448:13;674:1;665:5;:10;661:51;;691:10;;;;;;;;;;;;;;;;;;;;;661:51;721:12;736:5;721:20;;751:14;775:75;790:1;782:4;:9;775:75;;807:8;;;;;:::i;:::-;;;;837:2;829:10;;;;;:::i;:::-;;;775:75;;;859:19;891:6;881:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;859:39;;908:150;924:1;915:5;:10;908:150;;951:1;941:11;;;;;:::i;:::-;;;1017:2;1009:5;:10;;;;:::i;:::-;996:2;:24;;;;:::i;:::-;983:39;;966:6;973;966:14;;;;;;;;:::i;:::-;;;;;:56;;;;;;;;;;;1045:2;1036:11;;;;;:::i;:::-;;;908:150;;;1081:6;1067:21;;;;;392:703;;;;:::o;829:155:12:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;2624:572:4:-;2763:45;2790:4;2796:2;2800:7;2763:26;:45::i;:::-;2839:1;2823:18;;:4;:18;;;2819:183;;2857:40;2889:7;2857:31;:40::i;:::-;2819:183;;;2926:2;2918:10;;:4;:10;;;2914:88;;2944:47;2977:4;2983:7;2944:32;:47::i;:::-;2914:88;2819:183;3029:1;3015:16;;:2;:16;;;3011:179;;3047:45;3084:7;3047:36;:45::i;:::-;3011:179;;;3119:4;3113:10;;:2;:10;;;3109:81;;3139:40;3167:2;3171:7;3139:27;:40::i;:::-;3109:81;3011:179;2624:572;;;:::o;14223:121:1:-;;;;:::o;12342:831::-;12491:4;12511:15;:2;:13;;;:15::i;:::-;12507:660;;;12562:2;12546:36;;;12583:12;:10;:12::i;:::-;12597:4;12603:7;12612:4;12546:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;12542:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12801:1;12784:6;:13;:18;12780:321;;12826:60;;;;;;;;;;:::i;:::-;;;;;;;;12780:321;13053:6;13047:13;13038:6;13034:2;13030:15;13023:38;12542:573;12677:41;;;12667:51;;;:6;:51;;;;12660:58;;;;;12507:660;13152:4;13145:11;;12342:831;;;;;;;:::o;13729:122::-;;;;:::o;3902:161:4:-;4005:10;:17;;;;3978:15;:24;3994:7;3978:24;;;;;;;;;;;:44;;;;4032:10;4048:7;4032:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3902:161;:::o;4680:970::-;4942:22;4992:1;4967:22;4984:4;4967:16;:22::i;:::-;:26;;;;:::i;:::-;4942:51;;5003:18;5024:17;:26;5042:7;5024:26;;;;;;;;;;;;5003:47;;5168:14;5154:10;:28;5150:323;;5198:19;5220:12;:18;5233:4;5220:18;;;;;;;;;;;;;;;:34;5239:14;5220:34;;;;;;;;;;;;5198:56;;5302:11;5269:12;:18;5282:4;5269:18;;;;;;;;;;;;;;;:30;5288:10;5269:30;;;;;;;;;;;:44;;;;5418:10;5385:17;:30;5403:11;5385:30;;;;;;;;;;;:43;;;;5184:289;5150:323;5566:17;:26;5584:7;5566:26;;;;;;;;;;;5559:33;;;5609:12;:18;5622:4;5609:18;;;;;;;;;;;;;;;:34;5628:14;5609:34;;;;;;;;;;;5602:41;;;4761:889;;4680:970;;:::o;5938:1061::-;6187:22;6232:1;6212:10;:17;;;;:21;;;;:::i;:::-;6187:46;;6243:18;6264:15;:24;6280:7;6264:24;;;;;;;;;;;;6243:45;;6610:19;6632:10;6643:14;6632:26;;;;;;;;:::i;:::-;;;;;;;;;;6610:48;;6694:11;6669:10;6680;6669:22;;;;;;;;:::i;:::-;;;;;;;;;:36;;;;6804:10;6773:15;:28;6789:11;6773:28;;;;;;;;;;;:41;;;;6942:15;:24;6958:7;6942:24;;;;;;;;;;;6935:31;;;6976:10;:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6009:990;;;5938:1061;:::o;3490:217::-;3574:14;3591:20;3608:2;3591:16;:20::i;:::-;3574:37;;3648:7;3621:12;:16;3634:2;3621:16;;;;;;;;;;;;;;;:24;3638:6;3621:24;;;;;;;;;;;:34;;;;3694:6;3665:17;:26;3683:7;3665:26;;;;;;;;;;;:35;;;;3564:143;3490:217;;:::o;1175:320:8:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;7:75:17:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:118::-;4977:24;4995:5;4977:24;:::i;:::-;4972:3;4965:37;4890:118;;:::o;5014:222::-;5107:4;5145:2;5134:9;5130:18;5122:26;;5158:71;5226:1;5215:9;5211:17;5202:6;5158:71;:::i;:::-;5014:222;;;;:::o;5242:619::-;5319:6;5327;5335;5384:2;5372:9;5363:7;5359:23;5355:32;5352:119;;;5390:79;;:::i;:::-;5352:119;5510:1;5535:53;5580:7;5571:6;5560:9;5556:22;5535:53;:::i;:::-;5525:63;;5481:117;5637:2;5663:53;5708:7;5699:6;5688:9;5684:22;5663:53;:::i;:::-;5653:63;;5608:118;5765:2;5791:53;5836:7;5827:6;5816:9;5812:22;5791:53;:::i;:::-;5781:63;;5736:118;5242:619;;;;;:::o;5867:117::-;5976:1;5973;5966:12;5990:117;6099:1;6096;6089:12;6113:180;6161:77;6158:1;6151:88;6258:4;6255:1;6248:15;6282:4;6279:1;6272:15;6299:281;6382:27;6404:4;6382:27;:::i;:::-;6374:6;6370:40;6512:6;6500:10;6497:22;6476:18;6464:10;6461:34;6458:62;6455:88;;;6523:18;;:::i;:::-;6455:88;6563:10;6559:2;6552:22;6342:238;6299:281;;:::o;6586:129::-;6620:6;6647:20;;:::i;:::-;6637:30;;6676:33;6704:4;6696:6;6676:33;:::i;:::-;6586:129;;;:::o;6721:308::-;6783:4;6873:18;6865:6;6862:30;6859:56;;;6895:18;;:::i;:::-;6859:56;6933:29;6955:6;6933:29;:::i;:::-;6925:37;;7017:4;7011;7007:15;6999:23;;6721:308;;;:::o;7035:146::-;7132:6;7127:3;7122;7109:30;7173:1;7164:6;7159:3;7155:16;7148:27;7035:146;;;:::o;7187:425::-;7265:5;7290:66;7306:49;7348:6;7306:49;:::i;:::-;7290:66;:::i;:::-;7281:75;;7379:6;7372:5;7365:21;7417:4;7410:5;7406:16;7455:3;7446:6;7441:3;7437:16;7434:25;7431:112;;;7462:79;;:::i;:::-;7431:112;7552:54;7599:6;7594:3;7589;7552:54;:::i;:::-;7271:341;7187:425;;;;;:::o;7632:340::-;7688:5;7737:3;7730:4;7722:6;7718:17;7714:27;7704:122;;7745:79;;:::i;:::-;7704:122;7862:6;7849:20;7887:79;7962:3;7954:6;7947:4;7939:6;7935:17;7887:79;:::i;:::-;7878:88;;7694:278;7632:340;;;;:::o;7978:799::-;8065:6;8073;8081;8130:2;8118:9;8109:7;8105:23;8101:32;8098:119;;;8136:79;;:::i;:::-;8098:119;8256:1;8281:53;8326:7;8317:6;8306:9;8302:22;8281:53;:::i;:::-;8271:63;;8227:117;8383:2;8409:53;8454:7;8445:6;8434:9;8430:22;8409:53;:::i;:::-;8399:63;;8354:118;8539:2;8528:9;8524:18;8511:32;8570:18;8562:6;8559:30;8556:117;;;8592:79;;:::i;:::-;8556:117;8697:63;8752:7;8743:6;8732:9;8728:22;8697:63;:::i;:::-;8687:73;;8482:288;7978:799;;;;;:::o;8783:329::-;8842:6;8891:2;8879:9;8870:7;8866:23;8862:32;8859:119;;;8897:79;;:::i;:::-;8859:119;9017:1;9042:53;9087:7;9078:6;9067:9;9063:22;9042:53;:::i;:::-;9032:63;;8988:117;8783:329;;;;:::o;9118:116::-;9188:21;9203:5;9188:21;:::i;:::-;9181:5;9178:32;9168:60;;9224:1;9221;9214:12;9168:60;9118:116;:::o;9240:133::-;9283:5;9321:6;9308:20;9299:29;;9337:30;9361:5;9337:30;:::i;:::-;9240:133;;;;:::o;9379:468::-;9444:6;9452;9501:2;9489:9;9480:7;9476:23;9472:32;9469:119;;;9507:79;;:::i;:::-;9469:119;9627:1;9652:53;9697:7;9688:6;9677:9;9673:22;9652:53;:::i;:::-;9642:63;;9598:117;9754:2;9780:50;9822:7;9813:6;9802:9;9798:22;9780:50;:::i;:::-;9770:60;;9725:115;9379:468;;;;;:::o;9853:307::-;9914:4;10004:18;9996:6;9993:30;9990:56;;;10026:18;;:::i;:::-;9990:56;10064:29;10086:6;10064:29;:::i;:::-;10056:37;;10148:4;10142;10138:15;10130:23;;9853:307;;;:::o;10166:423::-;10243:5;10268:65;10284:48;10325:6;10284:48;:::i;:::-;10268:65;:::i;:::-;10259:74;;10356:6;10349:5;10342:21;10394:4;10387:5;10383:16;10432:3;10423:6;10418:3;10414:16;10411:25;10408:112;;;10439:79;;:::i;:::-;10408:112;10529:54;10576:6;10571:3;10566;10529:54;:::i;:::-;10249:340;10166:423;;;;;:::o;10608:338::-;10663:5;10712:3;10705:4;10697:6;10693:17;10689:27;10679:122;;10720:79;;:::i;:::-;10679:122;10837:6;10824:20;10862:78;10936:3;10928:6;10921:4;10913:6;10909:17;10862:78;:::i;:::-;10853:87;;10669:277;10608:338;;;;:::o;10952:943::-;11047:6;11055;11063;11071;11120:3;11108:9;11099:7;11095:23;11091:33;11088:120;;;11127:79;;:::i;:::-;11088:120;11247:1;11272:53;11317:7;11308:6;11297:9;11293:22;11272:53;:::i;:::-;11262:63;;11218:117;11374:2;11400:53;11445:7;11436:6;11425:9;11421:22;11400:53;:::i;:::-;11390:63;;11345:118;11502:2;11528:53;11573:7;11564:6;11553:9;11549:22;11528:53;:::i;:::-;11518:63;;11473:118;11658:2;11647:9;11643:18;11630:32;11689:18;11681:6;11678:30;11675:117;;;11711:79;;:::i;:::-;11675:117;11816:62;11870:7;11861:6;11850:9;11846:22;11816:62;:::i;:::-;11806:72;;11601:287;10952:943;;;;;;;:::o;11901:474::-;11969:6;11977;12026:2;12014:9;12005:7;12001:23;11997:32;11994:119;;;12032:79;;:::i;:::-;11994:119;12152:1;12177:53;12222:7;12213:6;12202:9;12198:22;12177:53;:::i;:::-;12167:63;;12123:117;12279:2;12305:53;12350:7;12341:6;12330:9;12326:22;12305:53;:::i;:::-;12295:63;;12250:118;11901:474;;;;;:::o;12381:180::-;12429:77;12426:1;12419:88;12526:4;12523:1;12516:15;12550:4;12547:1;12540:15;12567:320;12611:6;12648:1;12642:4;12638:12;12628:22;;12695:1;12689:4;12685:12;12716:18;12706:81;;12772:4;12764:6;12760:17;12750:27;;12706:81;12834:2;12826:6;12823:14;12803:18;12800:38;12797:84;;12853:18;;:::i;:::-;12797:84;12618:269;12567:320;;;:::o;12893:220::-;13033:34;13029:1;13021:6;13017:14;13010:58;13102:3;13097:2;13089:6;13085:15;13078:28;12893:220;:::o;13119:366::-;13261:3;13282:67;13346:2;13341:3;13282:67;:::i;:::-;13275:74;;13358:93;13447:3;13358:93;:::i;:::-;13476:2;13471:3;13467:12;13460:19;;13119:366;;;:::o;13491:419::-;13657:4;13695:2;13684:9;13680:18;13672:26;;13744:9;13738:4;13734:20;13730:1;13719:9;13715:17;13708:47;13772:131;13898:4;13772:131;:::i;:::-;13764:139;;13491:419;;;:::o;13916:249::-;14056:34;14052:1;14044:6;14040:14;14033:58;14125:32;14120:2;14112:6;14108:15;14101:57;13916:249;:::o;14171:366::-;14313:3;14334:67;14398:2;14393:3;14334:67;:::i;:::-;14327:74;;14410:93;14499:3;14410:93;:::i;:::-;14528:2;14523:3;14519:12;14512:19;;14171:366;;;:::o;14543:419::-;14709:4;14747:2;14736:9;14732:18;14724:26;;14796:9;14790:4;14786:20;14782:1;14771:9;14767:17;14760:47;14824:131;14950:4;14824:131;:::i;:::-;14816:139;;14543:419;;;:::o;14968:233::-;15108:34;15104:1;15096:6;15092:14;15085:58;15177:16;15172:2;15164:6;15160:15;15153:41;14968:233;:::o;15207:366::-;15349:3;15370:67;15434:2;15429:3;15370:67;:::i;:::-;15363:74;;15446:93;15535:3;15446:93;:::i;:::-;15564:2;15559:3;15555:12;15548:19;;15207:366;;;:::o;15579:419::-;15745:4;15783:2;15772:9;15768:18;15760:26;;15832:9;15826:4;15822:20;15818:1;15807:9;15803:17;15796:47;15860:131;15986:4;15860:131;:::i;:::-;15852:139;;15579:419;;;:::o;16004:230::-;16144:34;16140:1;16132:6;16128:14;16121:58;16213:13;16208:2;16200:6;16196:15;16189:38;16004:230;:::o;16240:366::-;16382:3;16403:67;16467:2;16462:3;16403:67;:::i;:::-;16396:74;;16479:93;16568:3;16479:93;:::i;:::-;16597:2;16592:3;16588:12;16581:19;;16240:366;;;:::o;16612:419::-;16778:4;16816:2;16805:9;16801:18;16793:26;;16865:9;16859:4;16855:20;16851:1;16840:9;16836:17;16829:47;16893:131;17019:4;16893:131;:::i;:::-;16885:139;;16612:419;;;:::o;17037:231::-;17177:34;17173:1;17165:6;17161:14;17154:58;17246:14;17241:2;17233:6;17229:15;17222:39;17037:231;:::o;17274:366::-;17416:3;17437:67;17501:2;17496:3;17437:67;:::i;:::-;17430:74;;17513:93;17602:3;17513:93;:::i;:::-;17631:2;17626:3;17622:12;17615:19;;17274:366;;;:::o;17646:419::-;17812:4;17850:2;17839:9;17835:18;17827:26;;17899:9;17893:4;17889:20;17885:1;17874:9;17870:17;17863:47;17927:131;18053:4;17927:131;:::i;:::-;17919:139;;17646:419;;;:::o;18071:180::-;18119:77;18116:1;18109:88;18216:4;18213:1;18206:15;18240:4;18237:1;18230:15;18257:141;18306:4;18329:3;18321:11;;18352:3;18349:1;18342:14;18386:4;18383:1;18373:18;18365:26;;18257:141;;;:::o;18404:93::-;18441:6;18488:2;18483;18476:5;18472:14;18468:23;18458:33;;18404:93;;;:::o;18503:107::-;18547:8;18597:5;18591:4;18587:16;18566:37;;18503:107;;;;:::o;18616:393::-;18685:6;18735:1;18723:10;18719:18;18758:97;18788:66;18777:9;18758:97;:::i;:::-;18876:39;18906:8;18895:9;18876:39;:::i;:::-;18864:51;;18948:4;18944:9;18937:5;18933:21;18924:30;;18997:4;18987:8;18983:19;18976:5;18973:30;18963:40;;18692:317;;18616:393;;;;;:::o;19015:60::-;19043:3;19064:5;19057:12;;19015:60;;;:::o;19081:142::-;19131:9;19164:53;19182:34;19191:24;19209:5;19191:24;:::i;:::-;19182:34;:::i;:::-;19164:53;:::i;:::-;19151:66;;19081:142;;;:::o;19229:75::-;19272:3;19293:5;19286:12;;19229:75;;;:::o;19310:269::-;19420:39;19451:7;19420:39;:::i;:::-;19481:91;19530:41;19554:16;19530:41;:::i;:::-;19522:6;19515:4;19509:11;19481:91;:::i;:::-;19475:4;19468:105;19386:193;19310:269;;;:::o;19585:73::-;19630:3;19585:73;:::o;19664:189::-;19741:32;;:::i;:::-;19782:65;19840:6;19832;19826:4;19782:65;:::i;:::-;19717:136;19664:189;;:::o;19859:186::-;19919:120;19936:3;19929:5;19926:14;19919:120;;;19990:39;20027:1;20020:5;19990:39;:::i;:::-;19963:1;19956:5;19952:13;19943:22;;19919:120;;;19859:186;;:::o;20051:543::-;20152:2;20147:3;20144:11;20141:446;;;20186:38;20218:5;20186:38;:::i;:::-;20270:29;20288:10;20270:29;:::i;:::-;20260:8;20256:44;20453:2;20441:10;20438:18;20435:49;;;20474:8;20459:23;;20435:49;20497:80;20553:22;20571:3;20553:22;:::i;:::-;20543:8;20539:37;20526:11;20497:80;:::i;:::-;20156:431;;20141:446;20051:543;;;:::o;20600:117::-;20654:8;20704:5;20698:4;20694:16;20673:37;;20600:117;;;;:::o;20723:169::-;20767:6;20800:51;20848:1;20844:6;20836:5;20833:1;20829:13;20800:51;:::i;:::-;20796:56;20881:4;20875;20871:15;20861:25;;20774:118;20723:169;;;;:::o;20897:295::-;20973:4;21119:29;21144:3;21138:4;21119:29;:::i;:::-;21111:37;;21181:3;21178:1;21174:11;21168:4;21165:21;21157:29;;20897:295;;;;:::o;21197:1395::-;21314:37;21347:3;21314:37;:::i;:::-;21416:18;21408:6;21405:30;21402:56;;;21438:18;;:::i;:::-;21402:56;21482:38;21514:4;21508:11;21482:38;:::i;:::-;21567:67;21627:6;21619;21613:4;21567:67;:::i;:::-;21661:1;21685:4;21672:17;;21717:2;21709:6;21706:14;21734:1;21729:618;;;;22391:1;22408:6;22405:77;;;22457:9;22452:3;22448:19;22442:26;22433:35;;22405:77;22508:67;22568:6;22561:5;22508:67;:::i;:::-;22502:4;22495:81;22364:222;21699:887;;21729:618;21781:4;21777:9;21769:6;21765:22;21815:37;21847:4;21815:37;:::i;:::-;21874:1;21888:208;21902:7;21899:1;21896:14;21888:208;;;21981:9;21976:3;21972:19;21966:26;21958:6;21951:42;22032:1;22024:6;22020:14;22010:24;;22079:2;22068:9;22064:18;22051:31;;21925:4;21922:1;21918:12;21913:17;;21888:208;;;22124:6;22115:7;22112:19;22109:179;;;22182:9;22177:3;22173:19;22167:26;22225:48;22267:4;22259:6;22255:17;22244:9;22225:48;:::i;:::-;22217:6;22210:64;22132:156;22109:179;22334:1;22330;22322:6;22318:14;22314:22;22308:4;22301:36;21736:611;;;21699:887;;21289:1303;;;21197:1395;;:::o;22598:174::-;22738:26;22734:1;22726:6;22722:14;22715:50;22598:174;:::o;22778:366::-;22920:3;22941:67;23005:2;23000:3;22941:67;:::i;:::-;22934:74;;23017:93;23106:3;23017:93;:::i;:::-;23135:2;23130:3;23126:12;23119:19;;22778:366;;;:::o;23150:419::-;23316:4;23354:2;23343:9;23339:18;23331:26;;23403:9;23397:4;23393:20;23389:1;23378:9;23374:17;23367:47;23431:131;23557:4;23431:131;:::i;:::-;23423:139;;23150:419;;;:::o;23575:228::-;23715:34;23711:1;23703:6;23699:14;23692:58;23784:11;23779:2;23771:6;23767:15;23760:36;23575:228;:::o;23809:366::-;23951:3;23972:67;24036:2;24031:3;23972:67;:::i;:::-;23965:74;;24048:93;24137:3;24048:93;:::i;:::-;24166:2;24161:3;24157:12;24150:19;;23809:366;;;:::o;24181:419::-;24347:4;24385:2;24374:9;24370:18;24362:26;;24434:9;24428:4;24424:20;24420:1;24409:9;24405:17;24398:47;24462:131;24588:4;24462:131;:::i;:::-;24454:139;;24181:419;;;:::o;24606:170::-;24746:22;24742:1;24734:6;24730:14;24723:46;24606:170;:::o;24782:366::-;24924:3;24945:67;25009:2;25004:3;24945:67;:::i;:::-;24938:74;;25021:93;25110:3;25021:93;:::i;:::-;25139:2;25134:3;25130:12;25123:19;;24782:366;;;:::o;25154:419::-;25320:4;25358:2;25347:9;25343:18;25335:26;;25407:9;25401:4;25397:20;25393:1;25382:9;25378:17;25371:47;25435:131;25561:4;25435:131;:::i;:::-;25427:139;;25154:419;;;:::o;25579:148::-;25681:11;25718:3;25703:18;;25579:148;;;;:::o;25733:390::-;25839:3;25867:39;25900:5;25867:39;:::i;:::-;25922:89;26004:6;25999:3;25922:89;:::i;:::-;25915:96;;26020:65;26078:6;26073:3;26066:4;26059:5;26055:16;26020:65;:::i;:::-;26110:6;26105:3;26101:16;26094:23;;25843:280;25733:390;;;;:::o;26129:435::-;26309:3;26331:95;26422:3;26413:6;26331:95;:::i;:::-;26324:102;;26443:95;26534:3;26525:6;26443:95;:::i;:::-;26436:102;;26555:3;26548:10;;26129:435;;;;;:::o;26570:224::-;26710:34;26706:1;26698:6;26694:14;26687:58;26779:7;26774:2;26766:6;26762:15;26755:32;26570:224;:::o;26800:366::-;26942:3;26963:67;27027:2;27022:3;26963:67;:::i;:::-;26956:74;;27039:93;27128:3;27039:93;:::i;:::-;27157:2;27152:3;27148:12;27141:19;;26800:366;;;:::o;27172:419::-;27338:4;27376:2;27365:9;27361:18;27353:26;;27425:9;27419:4;27415:20;27411:1;27400:9;27396:17;27389:47;27453:131;27579:4;27453:131;:::i;:::-;27445:139;;27172:419;;;:::o;27597:223::-;27737:34;27733:1;27725:6;27721:14;27714:58;27806:6;27801:2;27793:6;27789:15;27782:31;27597:223;:::o;27826:366::-;27968:3;27989:67;28053:2;28048:3;27989:67;:::i;:::-;27982:74;;28065:93;28154:3;28065:93;:::i;:::-;28183:2;28178:3;28174:12;28167:19;;27826:366;;;:::o;28198:419::-;28364:4;28402:2;28391:9;28387:18;28379:26;;28451:9;28445:4;28441:20;28437:1;28426:9;28422:17;28415:47;28479:131;28605:4;28479:131;:::i;:::-;28471:139;;28198:419;;;:::o;28623:180::-;28671:77;28668:1;28661:88;28768:4;28765:1;28758:15;28792:4;28789:1;28782:15;28809:194;28849:4;28869:20;28887:1;28869:20;:::i;:::-;28864:25;;28903:20;28921:1;28903:20;:::i;:::-;28898:25;;28947:1;28944;28940:9;28932:17;;28971:1;28965:4;28962:11;28959:37;;;28976:18;;:::i;:::-;28959:37;28809:194;;;;:::o;29009:191::-;29049:3;29068:20;29086:1;29068:20;:::i;:::-;29063:25;;29102:20;29120:1;29102:20;:::i;:::-;29097:25;;29145:1;29142;29138:9;29131:16;;29166:3;29163:1;29160:10;29157:36;;;29173:18;;:::i;:::-;29157:36;29009:191;;;;:::o;29206:182::-;29346:34;29342:1;29334:6;29330:14;29323:58;29206:182;:::o;29394:366::-;29536:3;29557:67;29621:2;29616:3;29557:67;:::i;:::-;29550:74;;29633:93;29722:3;29633:93;:::i;:::-;29751:2;29746:3;29742:12;29735:19;;29394:366;;;:::o;29766:419::-;29932:4;29970:2;29959:9;29955:18;29947:26;;30019:9;30013:4;30009:20;30005:1;29994:9;29990:17;29983:47;30047:131;30173:4;30047:131;:::i;:::-;30039:139;;29766:419;;;:::o;30191:178::-;30331:30;30327:1;30319:6;30315:14;30308:54;30191:178;:::o;30375:366::-;30517:3;30538:67;30602:2;30597:3;30538:67;:::i;:::-;30531:74;;30614:93;30703:3;30614:93;:::i;:::-;30732:2;30727:3;30723:12;30716:19;;30375:366;;;:::o;30747:419::-;30913:4;30951:2;30940:9;30936:18;30928:26;;31000:9;30994:4;30990:20;30986:1;30975:9;30971:17;30964:47;31028:131;31154:4;31028:131;:::i;:::-;31020:139;;30747:419;;;:::o;31172:175::-;31312:27;31308:1;31300:6;31296:14;31289:51;31172:175;:::o;31353:366::-;31495:3;31516:67;31580:2;31575:3;31516:67;:::i;:::-;31509:74;;31592:93;31681:3;31592:93;:::i;:::-;31710:2;31705:3;31701:12;31694:19;;31353:366;;;:::o;31725:419::-;31891:4;31929:2;31918:9;31914:18;31906:26;;31978:9;31972:4;31968:20;31964:1;31953:9;31949:17;31942:47;32006:131;32132:4;32006:131;:::i;:::-;31998:139;;31725:419;;;:::o;32150:237::-;32290:34;32286:1;32278:6;32274:14;32267:58;32359:20;32354:2;32346:6;32342:15;32335:45;32150:237;:::o;32393:366::-;32535:3;32556:67;32620:2;32615:3;32556:67;:::i;:::-;32549:74;;32632:93;32721:3;32632:93;:::i;:::-;32750:2;32745:3;32741:12;32734:19;;32393:366;;;:::o;32765:419::-;32931:4;32969:2;32958:9;32954:18;32946:26;;33018:9;33012:4;33008:20;33004:1;32993:9;32989:17;32982:47;33046:131;33172:4;33046:131;:::i;:::-;33038:139;;32765:419;;;:::o;33190:233::-;33229:3;33252:24;33270:5;33252:24;:::i;:::-;33243:33;;33298:66;33291:5;33288:77;33285:103;;33368:18;;:::i;:::-;33285:103;33415:1;33408:5;33404:13;33397:20;;33190:233;;;:::o;33429:180::-;33477:77;33474:1;33467:88;33574:4;33571:1;33564:15;33598:4;33595:1;33588:15;33615:185;33655:1;33672:20;33690:1;33672:20;:::i;:::-;33667:25;;33706:20;33724:1;33706:20;:::i;:::-;33701:25;;33745:1;33735:35;;33750:18;;:::i;:::-;33735:35;33792:1;33789;33785:9;33780:14;;33615:185;;;;:::o;33806:176::-;33838:1;33855:20;33873:1;33855:20;:::i;:::-;33850:25;;33889:20;33907:1;33889:20;:::i;:::-;33884:25;;33928:1;33918:35;;33933:18;;:::i;:::-;33918:35;33974:1;33971;33967:9;33962:14;;33806:176;;;;:::o;33988:98::-;34039:6;34073:5;34067:12;34057:22;;33988:98;;;:::o;34092:168::-;34175:11;34209:6;34204:3;34197:19;34249:4;34244:3;34240:14;34225:29;;34092:168;;;;:::o;34266:373::-;34352:3;34380:38;34412:5;34380:38;:::i;:::-;34434:70;34497:6;34492:3;34434:70;:::i;:::-;34427:77;;34513:65;34571:6;34566:3;34559:4;34552:5;34548:16;34513:65;:::i;:::-;34603:29;34625:6;34603:29;:::i;:::-;34598:3;34594:39;34587:46;;34356:283;34266:373;;;;:::o;34645:640::-;34840:4;34878:3;34867:9;34863:19;34855:27;;34892:71;34960:1;34949:9;34945:17;34936:6;34892:71;:::i;:::-;34973:72;35041:2;35030:9;35026:18;35017:6;34973:72;:::i;:::-;35055;35123:2;35112:9;35108:18;35099:6;35055:72;:::i;:::-;35174:9;35168:4;35164:20;35159:2;35148:9;35144:18;35137:48;35202:76;35273:4;35264:6;35202:76;:::i;:::-;35194:84;;34645:640;;;;;;;:::o;35291:141::-;35347:5;35378:6;35372:13;35363:22;;35394:32;35420:5;35394:32;:::i;:::-;35291:141;;;;:::o;35438:349::-;35507:6;35556:2;35544:9;35535:7;35531:23;35527:32;35524:119;;;35562:79;;:::i;:::-;35524:119;35682:1;35707:63;35762:7;35753:6;35742:9;35738:22;35707:63;:::i;:::-;35697:73;;35653:127;35438:349;;;;:::o;35793:180::-;35841:77;35838:1;35831:88;35938:4;35935:1;35928:15;35962:4;35959:1;35952:15"},"gasEstimates":{"creation":{"codeDepositCost":"2519200","executionCost":"infinite","totalCost":"infinite"},"external":{"approve(address,uint256)":"infinite","balanceOf(address)":"2943","getAccessURI(uint256)":"infinite","getApproved(uint256)":"5257","isApprovedForAll(address,address)":"infinite","mintAccessKey(address,uint256,string)":"infinite","name()":"infinite","ownerOf(uint256)":"3001","safeTransferFrom(address,address,uint256)":"infinite","safeTransferFrom(address,address,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"infinite","supportsInterface(bytes4)":"886","symbol()":"infinite","tokenByIndex(uint256)":"infinite","tokenOfOwnerByIndex(address,uint256)":"infinite","tokenURI(uint256)":"3438","totalSupply()":"2468","transferFrom(address,address,uint256)":"infinite"}},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getAccessURI(uint256)":"a2c512cb","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","mintAccessKey(address,uint256,string)":"5cdda2fa","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenByIndex(uint256)":"4f6ccce7","tokenOfOwnerByIndex(address,uint256)":"2f745c59","tokenURI(uint256)":"c87b56dd","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getAccessURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"accessURI\",\"type\":\"string\"}],\"name\":\"mintAccessKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AccessKey.sol\":\"AccessKey\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: address zero is not a valid owner\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _owners[tokenId];\\n        require(owner != address(0), \\\"ERC721: invalid token ID\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not token owner nor approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        _requireMinted(tokenId);\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner nor approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner nor approved\\\");\\n        _safeTransfer(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _owners[tokenId] != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId);\\n\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId);\\n\\n        // Clear approvals\\n        _approve(address(0), tokenId);\\n\\n        _balances[owner] -= 1;\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId);\\n\\n        // Clear approvals from the previous owner\\n        _approve(address(0), tokenId);\\n\\n        _balances[from] -= 1;\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(\\n        address owner,\\n        address operator,\\n        bool approved\\n    ) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` has not been minted yet.\\n     */\\n    function _requireMinted(uint256 tokenId) internal view virtual {\\n        require(_exists(tokenId), \\\"ERC721: invalid token ID\\\");\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x0b606994df12f0ce35f6d2f6dcdde7e55e6899cdef7e00f180980caa81e3844e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/ERC721Enumerable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC721.sol\\\";\\nimport \\\"./IERC721Enumerable.sol\\\";\\n\\n/**\\n * @dev This implements an optional extension of {ERC721} defined in the EIP that adds\\n * enumerability of all the token ids in the contract as well as all token ids owned by each\\n * account.\\n */\\nabstract contract ERC721Enumerable is ERC721, IERC721Enumerable {\\n    // Mapping from owner to list of owned token IDs\\n    mapping(address => mapping(uint256 => uint256)) private _ownedTokens;\\n\\n    // Mapping from token ID to index of the owner tokens list\\n    mapping(uint256 => uint256) private _ownedTokensIndex;\\n\\n    // Array with all token ids, used for enumeration\\n    uint256[] private _allTokens;\\n\\n    // Mapping from token id to position in the allTokens array\\n    mapping(uint256 => uint256) private _allTokensIndex;\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {\\n        return interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.\\n     */\\n    function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual override returns (uint256) {\\n        require(index < ERC721.balanceOf(owner), \\\"ERC721Enumerable: owner index out of bounds\\\");\\n        return _ownedTokens[owner][index];\\n    }\\n\\n    /**\\n     * @dev See {IERC721Enumerable-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _allTokens.length;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Enumerable-tokenByIndex}.\\n     */\\n    function tokenByIndex(uint256 index) public view virtual override returns (uint256) {\\n        require(index < ERC721Enumerable.totalSupply(), \\\"ERC721Enumerable: global index out of bounds\\\");\\n        return _allTokens[index];\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual override {\\n        super._beforeTokenTransfer(from, to, tokenId);\\n\\n        if (from == address(0)) {\\n            _addTokenToAllTokensEnumeration(tokenId);\\n        } else if (from != to) {\\n            _removeTokenFromOwnerEnumeration(from, tokenId);\\n        }\\n        if (to == address(0)) {\\n            _removeTokenFromAllTokensEnumeration(tokenId);\\n        } else if (to != from) {\\n            _addTokenToOwnerEnumeration(to, tokenId);\\n        }\\n    }\\n\\n    /**\\n     * @dev Private function to add a token to this extension's ownership-tracking data structures.\\n     * @param to address representing the new owner of the given token ID\\n     * @param tokenId uint256 ID of the token to be added to the tokens list of the given address\\n     */\\n    function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {\\n        uint256 length = ERC721.balanceOf(to);\\n        _ownedTokens[to][length] = tokenId;\\n        _ownedTokensIndex[tokenId] = length;\\n    }\\n\\n    /**\\n     * @dev Private function to add a token to this extension's token tracking data structures.\\n     * @param tokenId uint256 ID of the token to be added to the tokens list\\n     */\\n    function _addTokenToAllTokensEnumeration(uint256 tokenId) private {\\n        _allTokensIndex[tokenId] = _allTokens.length;\\n        _allTokens.push(tokenId);\\n    }\\n\\n    /**\\n     * @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\\n     * while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\\n     * gas optimizations e.g. when performing a transfer operation (avoiding double writes).\\n     * This has O(1) time complexity, but alters the order of the _ownedTokens array.\\n     * @param from address representing the previous owner of the given token ID\\n     * @param tokenId uint256 ID of the token to be removed from the tokens list of the given address\\n     */\\n    function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {\\n        // To prevent a gap in from's tokens array, we store the last token in the index of the token to delete, and\\n        // then delete the last slot (swap and pop).\\n\\n        uint256 lastTokenIndex = ERC721.balanceOf(from) - 1;\\n        uint256 tokenIndex = _ownedTokensIndex[tokenId];\\n\\n        // When the token to delete is the last token, the swap operation is unnecessary\\n        if (tokenIndex != lastTokenIndex) {\\n            uint256 lastTokenId = _ownedTokens[from][lastTokenIndex];\\n\\n            _ownedTokens[from][tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\\n            _ownedTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\\n        }\\n\\n        // This also deletes the contents at the last position of the array\\n        delete _ownedTokensIndex[tokenId];\\n        delete _ownedTokens[from][lastTokenIndex];\\n    }\\n\\n    /**\\n     * @dev Private function to remove a token from this extension's token tracking data structures.\\n     * This has O(1) time complexity, but alters the order of the _allTokens array.\\n     * @param tokenId uint256 ID of the token to be removed from the tokens list\\n     */\\n    function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {\\n        // To prevent a gap in the tokens array, we store the last token in the index of the token to delete, and\\n        // then delete the last slot (swap and pop).\\n\\n        uint256 lastTokenIndex = _allTokens.length - 1;\\n        uint256 tokenIndex = _allTokensIndex[tokenId];\\n\\n        // When the token to delete is the last token, the swap operation is unnecessary. However, since this occurs so\\n        // rarely (when the last minted token is burnt) that we still do the swap here to avoid the gas cost of adding\\n        // an 'if' statement (like in _removeTokenFromOwnerEnumeration)\\n        uint256 lastTokenId = _allTokens[lastTokenIndex];\\n\\n        _allTokens[tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\\n        _allTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\\n\\n        // This also deletes the contents at the last position of the array\\n        delete _allTokensIndex[tokenId];\\n        _allTokens.pop();\\n    }\\n}\\n\",\"keccak256\":\"0x0a79511df8151b10b0a0004d6a76ad956582d32824af4c0f4886bdbdfe5746e5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC721/extensions/IERC721Enumerable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Enumerable is IERC721 {\\n    /**\\n     * @dev Returns the total amount of tokens stored by the contract.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\\n     */\\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\\n     * Use along with {totalSupply} to enumerate all tokens.\\n     */\\n    function tokenByIndex(uint256 index) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/AccessKey.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.18;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\\\";\\n\\ncontract AccessKey is ERC721Enumerable {\\n    mapping(uint256 => string) private _accessURIs;\\n\\n    constructor() ERC721(\\\"AccessKey\\\", \\\"AKY\\\") {}\\n\\n    function mintAccessKey(address to, uint256 tokenId, string memory accessURI) public {\\n        _mint(to, tokenId);\\n        _accessURIs[tokenId] = accessURI;\\n    }\\n\\n    function getAccessURI(uint256 tokenId) public view returns (string memory) {\\n        require(_exists(tokenId), \\\"Token does not exist\\\");\\n        return _accessURIs[tokenId];\\n    }\\n}\\n\",\"keccak256\":\"0x285f7638ba6a48bc66b55fe10ffe178992ccdd1d55bded544b2cd6243bd4c7d6\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":138,"contract":"contracts/AccessKey.sol:AccessKey","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":140,"contract":"contracts/AccessKey.sol:AccessKey","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":144,"contract":"contracts/AccessKey.sol:AccessKey","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":148,"contract":"contracts/AccessKey.sol:AccessKey","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":152,"contract":"contracts/AccessKey.sol:AccessKey","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":158,"contract":"contracts/AccessKey.sol:AccessKey","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":1128,"contract":"contracts/AccessKey.sol:AccessKey","label":"_ownedTokens","offset":0,"slot":"6","type":"t_mapping(t_address,t_mapping(t_uint256,t_uint256))"},{"astId":1132,"contract":"contracts/AccessKey.sol:AccessKey","label":"_ownedTokensIndex","offset":0,"slot":"7","type":"t_mapping(t_uint256,t_uint256)"},{"astId":1135,"contract":"contracts/AccessKey.sol:AccessKey","label":"_allTokens","offset":0,"slot":"8","type":"t_array(t_uint256)dyn_storage"},{"astId":1139,"contract":"contracts/AccessKey.sol:AccessKey","label":"_allTokensIndex","offset":0,"slot":"9","type":"t_mapping(t_uint256,t_uint256)"},{"astId":2296,"contract":"contracts/AccessKey.sol:AccessKey","label":"_accessURIs","offset":0,"slot":"10","type":"t_mapping(t_uint256,t_string_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)dyn_storage":{"base":"t_uint256","encoding":"dynamic_array","label":"uint256[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_mapping(t_uint256,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(uint256 => uint256))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint256,t_string_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => string)","numberOfBytes":"32","value":"t_string_storage"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/Certificate.sol":{"Certificate":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"courseId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"CertificateMinted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"hasCertificate","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"courseId","type":"uint256"},{"internalType":"string","name":"tokenURI","type":"string"}],"name":"mintCertificate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"ERC721 token that mints non-transferable course certificates","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"mintCertificate(address,uint256,string)":{"params":{"courseId":"The ID of the completed course","tokenURI":"The metadata URI for the certificate","user":"The address of the user receiving the certificate"}},"name()":{"details":"See {IERC721Metadata-name}."},"owner()":{"details":"Returns the address of the current owner."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenByIndex(uint256)":{"details":"See {IERC721Enumerable-tokenByIndex}."},"tokenOfOwnerByIndex(address,uint256)":{"details":"See {IERC721Enumerable-tokenOfOwnerByIndex}."},"totalSupply()":{"details":"See {IERC721Enumerable-totalSupply}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"title":"Certificate NFT Contract for Course Completion","version":1},"evm":{"bytecode":{"functionDebugData":{"@_175":{"entryPoint":null,"id":175,"parameterSlots":2,"returnSlots":0},"@_23":{"entryPoint":null,"id":23,"parameterSlots":0,"returnSlots":0},"@_2391":{"entryPoint":null,"id":2391,"parameterSlots":2,"returnSlots":0},"@_msgSender_1941":{"entryPoint":135,"id":1941,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_111":{"entryPoint":143,"id":111,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":618,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":693,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":744,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":489,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":341,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":520,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":988,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":877,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1309,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_uint256":{"entryPoint":1124,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1270,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":1144,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1464,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":574,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":1009,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":935,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1434,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":435,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":1134,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1402,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":888,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":388,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":1184,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":361,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":366,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":356,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":351,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":371,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":1025,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1389,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1242,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":1038,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":1194,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":1237,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8574:17","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:17","statements":[{"nodeType":"YulAssignment","src":"57:19:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:17"},"nodeType":"YulFunctionCall","src":"67:9:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:17"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:17","type":""}],"src":"7:75:17"},{"body":{"nodeType":"YulBlock","src":"177:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:17"},"nodeType":"YulFunctionCall","src":"187:12:17"},"nodeType":"YulExpressionStatement","src":"187:12:17"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:17"},{"body":{"nodeType":"YulBlock","src":"300:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:17"},"nodeType":"YulFunctionCall","src":"310:12:17"},"nodeType":"YulExpressionStatement","src":"310:12:17"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:17"},{"body":{"nodeType":"YulBlock","src":"423:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:17"},"nodeType":"YulFunctionCall","src":"433:12:17"},"nodeType":"YulExpressionStatement","src":"433:12:17"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:17"},{"body":{"nodeType":"YulBlock","src":"546:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:17"},"nodeType":"YulFunctionCall","src":"556:12:17"},"nodeType":"YulExpressionStatement","src":"556:12:17"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:17"},{"body":{"nodeType":"YulBlock","src":"628:54:17","statements":[{"nodeType":"YulAssignment","src":"638:38:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:17"},"nodeType":"YulFunctionCall","src":"652:14:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:17","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:17"},"nodeType":"YulFunctionCall","src":"668:7:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:17"},"nodeType":"YulFunctionCall","src":"648:28:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:17"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:17","type":""}],"src":"580:102:17"},{"body":{"nodeType":"YulBlock","src":"716:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:17"},"nodeType":"YulFunctionCall","src":"726:88:17"},"nodeType":"YulExpressionStatement","src":"726:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:17","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:17"},"nodeType":"YulFunctionCall","src":"823:15:17"},"nodeType":"YulExpressionStatement","src":"823:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:17"},"nodeType":"YulFunctionCall","src":"847:15:17"},"nodeType":"YulExpressionStatement","src":"847:15:17"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:17"},{"body":{"nodeType":"YulBlock","src":"917:238:17","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:17","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:17"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:17"},"nodeType":"YulFunctionCall","src":"957:27:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:17"},"nodeType":"YulFunctionCall","src":"945:40:17"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:17"},"nodeType":"YulFunctionCall","src":"1098:18:17"},"nodeType":"YulExpressionStatement","src":"1098:18:17"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:17"},"nodeType":"YulFunctionCall","src":"1036:34:17"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:17"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:17"},"nodeType":"YulFunctionCall","src":"1072:22:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:17"},"nodeType":"YulFunctionCall","src":"1033:62:17"},"nodeType":"YulIf","src":"1030:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:17","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:17"},"nodeType":"YulFunctionCall","src":"1127:22:17"},"nodeType":"YulExpressionStatement","src":"1127:22:17"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:17","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:17","type":""}],"src":"874:281:17"},{"body":{"nodeType":"YulBlock","src":"1202:88:17","statements":[{"nodeType":"YulAssignment","src":"1212:30:17","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:17"},"nodeType":"YulFunctionCall","src":"1222:20:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:17"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:17"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:17"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:17"},"nodeType":"YulFunctionCall","src":"1251:33:17"},"nodeType":"YulExpressionStatement","src":"1251:33:17"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:17","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:17","type":""}],"src":"1161:129:17"},{"body":{"nodeType":"YulBlock","src":"1363:241:17","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:17"},"nodeType":"YulFunctionCall","src":"1470:18:17"},"nodeType":"YulExpressionStatement","src":"1470:18:17"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:17"},"nodeType":"YulFunctionCall","src":"1437:30:17"},"nodeType":"YulIf","src":"1434:56:17"},{"nodeType":"YulAssignment","src":"1500:37:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:17"},"nodeType":"YulFunctionCall","src":"1508:29:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:17"}]},{"nodeType":"YulAssignment","src":"1574:23:17","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:17"},"nodeType":"YulFunctionCall","src":"1582:15:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:17"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:17","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:17","type":""}],"src":"1296:308:17"},{"body":{"nodeType":"YulBlock","src":"1672:184:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1682:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"1691:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1686:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"1751:63:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1776:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"1781:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:17"},"nodeType":"YulFunctionCall","src":"1772:11:17"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1795:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"1800:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1791:3:17"},"nodeType":"YulFunctionCall","src":"1791:11:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1785:5:17"},"nodeType":"YulFunctionCall","src":"1785:18:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1765:6:17"},"nodeType":"YulFunctionCall","src":"1765:39:17"},"nodeType":"YulExpressionStatement","src":"1765:39:17"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1712:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"1715:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1709:2:17"},"nodeType":"YulFunctionCall","src":"1709:13:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1723:19:17","statements":[{"nodeType":"YulAssignment","src":"1725:15:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1734:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"1737:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1730:3:17"},"nodeType":"YulFunctionCall","src":"1730:10:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1725:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"1705:3:17","statements":[]},"src":"1701:113:17"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1834:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"1839:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1830:3:17"},"nodeType":"YulFunctionCall","src":"1830:16:17"},{"kind":"number","nodeType":"YulLiteral","src":"1848:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1823:6:17"},"nodeType":"YulFunctionCall","src":"1823:27:17"},"nodeType":"YulExpressionStatement","src":"1823:27:17"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1654:3:17","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1659:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"1664:6:17","type":""}],"src":"1610:246:17"},{"body":{"nodeType":"YulBlock","src":"1957:339:17","statements":[{"nodeType":"YulAssignment","src":"1967:75:17","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2034:6:17"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1992:41:17"},"nodeType":"YulFunctionCall","src":"1992:49:17"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1976:15:17"},"nodeType":"YulFunctionCall","src":"1976:66:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1967:5:17"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2058:5:17"},{"name":"length","nodeType":"YulIdentifier","src":"2065:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2051:6:17"},"nodeType":"YulFunctionCall","src":"2051:21:17"},"nodeType":"YulExpressionStatement","src":"2051:21:17"},{"nodeType":"YulVariableDeclaration","src":"2081:27:17","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2096:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"2103:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2092:3:17"},"nodeType":"YulFunctionCall","src":"2092:16:17"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2085:3:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"2146:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2148:77:17"},"nodeType":"YulFunctionCall","src":"2148:79:17"},"nodeType":"YulExpressionStatement","src":"2148:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2127:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"2132:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2123:3:17"},"nodeType":"YulFunctionCall","src":"2123:16:17"},{"name":"end","nodeType":"YulIdentifier","src":"2141:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2120:2:17"},"nodeType":"YulFunctionCall","src":"2120:25:17"},"nodeType":"YulIf","src":"2117:112:17"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2273:3:17"},{"name":"dst","nodeType":"YulIdentifier","src":"2278:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"2283:6:17"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2238:34:17"},"nodeType":"YulFunctionCall","src":"2238:52:17"},"nodeType":"YulExpressionStatement","src":"2238:52:17"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1930:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"1935:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"1943:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1951:5:17","type":""}],"src":"1862:434:17"},{"body":{"nodeType":"YulBlock","src":"2389:282:17","statements":[{"body":{"nodeType":"YulBlock","src":"2438:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2440:77:17"},"nodeType":"YulFunctionCall","src":"2440:79:17"},"nodeType":"YulExpressionStatement","src":"2440:79:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2417:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"2425:4:17","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2413:3:17"},"nodeType":"YulFunctionCall","src":"2413:17:17"},{"name":"end","nodeType":"YulIdentifier","src":"2432:3:17"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2409:3:17"},"nodeType":"YulFunctionCall","src":"2409:27:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2402:6:17"},"nodeType":"YulFunctionCall","src":"2402:35:17"},"nodeType":"YulIf","src":"2399:122:17"},{"nodeType":"YulVariableDeclaration","src":"2530:27:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2550:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2544:5:17"},"nodeType":"YulFunctionCall","src":"2544:13:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2534:6:17","type":""}]},{"nodeType":"YulAssignment","src":"2566:99:17","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2638:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"2646:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2634:3:17"},"nodeType":"YulFunctionCall","src":"2634:17:17"},{"name":"length","nodeType":"YulIdentifier","src":"2653:6:17"},{"name":"end","nodeType":"YulIdentifier","src":"2661:3:17"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2575:58:17"},"nodeType":"YulFunctionCall","src":"2575:90:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2566:5:17"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2367:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"2375:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2383:5:17","type":""}],"src":"2316:355:17"},{"body":{"nodeType":"YulBlock","src":"2791:739:17","statements":[{"body":{"nodeType":"YulBlock","src":"2837:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2839:77:17"},"nodeType":"YulFunctionCall","src":"2839:79:17"},"nodeType":"YulExpressionStatement","src":"2839:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2812:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"2821:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2808:3:17"},"nodeType":"YulFunctionCall","src":"2808:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"2833:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2804:3:17"},"nodeType":"YulFunctionCall","src":"2804:32:17"},"nodeType":"YulIf","src":"2801:119:17"},{"nodeType":"YulBlock","src":"2930:291:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2945:38:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2969:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2980:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2965:3:17"},"nodeType":"YulFunctionCall","src":"2965:17:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2959:5:17"},"nodeType":"YulFunctionCall","src":"2959:24:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2949:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"3030:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3032:77:17"},"nodeType":"YulFunctionCall","src":"3032:79:17"},"nodeType":"YulExpressionStatement","src":"3032:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3002:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"3010:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2999:2:17"},"nodeType":"YulFunctionCall","src":"2999:30:17"},"nodeType":"YulIf","src":"2996:117:17"},{"nodeType":"YulAssignment","src":"3127:84:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3183:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"3194:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3179:3:17"},"nodeType":"YulFunctionCall","src":"3179:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3203:7:17"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3137:41:17"},"nodeType":"YulFunctionCall","src":"3137:74:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3127:6:17"}]}]},{"nodeType":"YulBlock","src":"3231:292:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3246:39:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3270:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3281:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3266:3:17"},"nodeType":"YulFunctionCall","src":"3266:18:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3260:5:17"},"nodeType":"YulFunctionCall","src":"3260:25:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3250:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"3332:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3334:77:17"},"nodeType":"YulFunctionCall","src":"3334:79:17"},"nodeType":"YulExpressionStatement","src":"3334:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3304:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"3312:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3301:2:17"},"nodeType":"YulFunctionCall","src":"3301:30:17"},"nodeType":"YulIf","src":"3298:117:17"},{"nodeType":"YulAssignment","src":"3429:84:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3485:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"3496:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3481:3:17"},"nodeType":"YulFunctionCall","src":"3481:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3505:7:17"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3439:41:17"},"nodeType":"YulFunctionCall","src":"3439:74:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3429:6:17"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2753:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2764:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2776:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2784:6:17","type":""}],"src":"2677:853:17"},{"body":{"nodeType":"YulBlock","src":"3595:40:17","statements":[{"nodeType":"YulAssignment","src":"3606:22:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3622:5:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3616:5:17"},"nodeType":"YulFunctionCall","src":"3616:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3606:6:17"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3578:5:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3588:6:17","type":""}],"src":"3536:99:17"},{"body":{"nodeType":"YulBlock","src":"3669:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3686:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3689:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3679:6:17"},"nodeType":"YulFunctionCall","src":"3679:88:17"},"nodeType":"YulExpressionStatement","src":"3679:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3783:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3786:4:17","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3776:6:17"},"nodeType":"YulFunctionCall","src":"3776:15:17"},"nodeType":"YulExpressionStatement","src":"3776:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3807:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3810:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3800:6:17"},"nodeType":"YulFunctionCall","src":"3800:15:17"},"nodeType":"YulExpressionStatement","src":"3800:15:17"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"3641:180:17"},{"body":{"nodeType":"YulBlock","src":"3878:269:17","statements":[{"nodeType":"YulAssignment","src":"3888:22:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3902:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"3908:1:17","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3898:3:17"},"nodeType":"YulFunctionCall","src":"3898:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3888:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"3919:38:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3949:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"3955:1:17","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3945:3:17"},"nodeType":"YulFunctionCall","src":"3945:12:17"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3923:18:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"3996:51:17","statements":[{"nodeType":"YulAssignment","src":"4010:27:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4024:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"4032:4:17","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4020:3:17"},"nodeType":"YulFunctionCall","src":"4020:17:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4010:6:17"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3976:18:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3969:6:17"},"nodeType":"YulFunctionCall","src":"3969:26:17"},"nodeType":"YulIf","src":"3966:81:17"},{"body":{"nodeType":"YulBlock","src":"4099:42:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"4113:16:17"},"nodeType":"YulFunctionCall","src":"4113:18:17"},"nodeType":"YulExpressionStatement","src":"4113:18:17"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4063:18:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4086:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"4094:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4083:2:17"},"nodeType":"YulFunctionCall","src":"4083:14:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4060:2:17"},"nodeType":"YulFunctionCall","src":"4060:38:17"},"nodeType":"YulIf","src":"4057:84:17"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3862:4:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3871:6:17","type":""}],"src":"3827:320:17"},{"body":{"nodeType":"YulBlock","src":"4207:87:17","statements":[{"nodeType":"YulAssignment","src":"4217:11:17","value":{"name":"ptr","nodeType":"YulIdentifier","src":"4225:3:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4217:4:17"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4245:1:17","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"4248:3:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4238:6:17"},"nodeType":"YulFunctionCall","src":"4238:14:17"},"nodeType":"YulExpressionStatement","src":"4238:14:17"},{"nodeType":"YulAssignment","src":"4261:26:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4279:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4282:4:17","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4269:9:17"},"nodeType":"YulFunctionCall","src":"4269:18:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4261:4:17"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"4194:3:17","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"4202:4:17","type":""}],"src":"4153:141:17"},{"body":{"nodeType":"YulBlock","src":"4344:49:17","statements":[{"nodeType":"YulAssignment","src":"4354:33:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4372:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"4379:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:17"},"nodeType":"YulFunctionCall","src":"4368:14:17"},{"kind":"number","nodeType":"YulLiteral","src":"4384:2:17","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4364:3:17"},"nodeType":"YulFunctionCall","src":"4364:23:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4354:6:17"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4327:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4337:6:17","type":""}],"src":"4300:93:17"},{"body":{"nodeType":"YulBlock","src":"4452:54:17","statements":[{"nodeType":"YulAssignment","src":"4462:37:17","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"4487:4:17"},{"name":"value","nodeType":"YulIdentifier","src":"4493:5:17"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4483:3:17"},"nodeType":"YulFunctionCall","src":"4483:16:17"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"4462:8:17"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"4427:4:17","type":""},{"name":"value","nodeType":"YulTypedName","src":"4433:5:17","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"4443:8:17","type":""}],"src":"4399:107:17"},{"body":{"nodeType":"YulBlock","src":"4588:317:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4598:35:17","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"4619:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"4631:1:17","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4615:3:17"},"nodeType":"YulFunctionCall","src":"4615:18:17"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"4602:9:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4642:109:17","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4673:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4684:66:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4654:18:17"},"nodeType":"YulFunctionCall","src":"4654:97:17"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"4646:4:17","type":""}]},{"nodeType":"YulAssignment","src":"4760:51:17","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4791:9:17"},{"name":"toInsert","nodeType":"YulIdentifier","src":"4802:8:17"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4772:18:17"},"nodeType":"YulFunctionCall","src":"4772:39:17"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4760:8:17"}]},{"nodeType":"YulAssignment","src":"4820:30:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4833:5:17"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"4844:4:17"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4840:3:17"},"nodeType":"YulFunctionCall","src":"4840:9:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4829:3:17"},"nodeType":"YulFunctionCall","src":"4829:21:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4820:5:17"}]},{"nodeType":"YulAssignment","src":"4859:40:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4872:5:17"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4883:8:17"},{"name":"mask","nodeType":"YulIdentifier","src":"4893:4:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4879:3:17"},"nodeType":"YulFunctionCall","src":"4879:19:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4869:2:17"},"nodeType":"YulFunctionCall","src":"4869:30:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4859:6:17"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4549:5:17","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"4556:10:17","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"4568:8:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4581:6:17","type":""}],"src":"4512:393:17"},{"body":{"nodeType":"YulBlock","src":"4956:32:17","statements":[{"nodeType":"YulAssignment","src":"4966:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"4977:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4966:7:17"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4938:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4948:7:17","type":""}],"src":"4911:77:17"},{"body":{"nodeType":"YulBlock","src":"5026:28:17","statements":[{"nodeType":"YulAssignment","src":"5036:12:17","value":{"name":"value","nodeType":"YulIdentifier","src":"5043:5:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5036:3:17"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5012:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5022:3:17","type":""}],"src":"4994:60:17"},{"body":{"nodeType":"YulBlock","src":"5120:82:17","statements":[{"nodeType":"YulAssignment","src":"5130:66:17","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5188:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5170:17:17"},"nodeType":"YulFunctionCall","src":"5170:24:17"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"5161:8:17"},"nodeType":"YulFunctionCall","src":"5161:34:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5143:17:17"},"nodeType":"YulFunctionCall","src":"5143:53:17"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5130:9:17"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5100:5:17","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5110:9:17","type":""}],"src":"5060:142:17"},{"body":{"nodeType":"YulBlock","src":"5255:28:17","statements":[{"nodeType":"YulAssignment","src":"5265:12:17","value":{"name":"value","nodeType":"YulIdentifier","src":"5272:5:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5265:3:17"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5241:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5251:3:17","type":""}],"src":"5208:75:17"},{"body":{"nodeType":"YulBlock","src":"5365:193:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5375:63:17","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"5430:7:17"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5399:30:17"},"nodeType":"YulFunctionCall","src":"5399:39:17"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"5379:16:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5454:4:17"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5494:4:17"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5488:5:17"},"nodeType":"YulFunctionCall","src":"5488:11:17"},{"name":"offset","nodeType":"YulIdentifier","src":"5501:6:17"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"5533:16:17"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"5509:23:17"},"nodeType":"YulFunctionCall","src":"5509:41:17"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"5460:27:17"},"nodeType":"YulFunctionCall","src":"5460:91:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5447:6:17"},"nodeType":"YulFunctionCall","src":"5447:105:17"},"nodeType":"YulExpressionStatement","src":"5447:105:17"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5342:4:17","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5348:6:17","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"5356:7:17","type":""}],"src":"5289:269:17"},{"body":{"nodeType":"YulBlock","src":"5613:24:17","statements":[{"nodeType":"YulAssignment","src":"5623:8:17","value":{"kind":"number","nodeType":"YulLiteral","src":"5630:1:17","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5623:3:17"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5609:3:17","type":""}],"src":"5564:73:17"},{"body":{"nodeType":"YulBlock","src":"5696:136:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5706:46:17","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"5720:30:17"},"nodeType":"YulFunctionCall","src":"5720:32:17"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"5710:6:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5805:4:17"},{"name":"offset","nodeType":"YulIdentifier","src":"5811:6:17"},{"name":"zero_0","nodeType":"YulIdentifier","src":"5819:6:17"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5761:43:17"},"nodeType":"YulFunctionCall","src":"5761:65:17"},"nodeType":"YulExpressionStatement","src":"5761:65:17"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5682:4:17","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5688:6:17","type":""}],"src":"5643:189:17"},{"body":{"nodeType":"YulBlock","src":"5888:136:17","statements":[{"body":{"nodeType":"YulBlock","src":"5955:63:17","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5999:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"6006:1:17","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"5969:29:17"},"nodeType":"YulFunctionCall","src":"5969:39:17"},"nodeType":"YulExpressionStatement","src":"5969:39:17"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5908:5:17"},{"name":"end","nodeType":"YulIdentifier","src":"5915:3:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5905:2:17"},"nodeType":"YulFunctionCall","src":"5905:14:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5920:26:17","statements":[{"nodeType":"YulAssignment","src":"5922:22:17","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5935:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"5942:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5931:3:17"},"nodeType":"YulFunctionCall","src":"5931:13:17"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"5922:5:17"}]}]},"pre":{"nodeType":"YulBlock","src":"5902:2:17","statements":[]},"src":"5898:120:17"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"5876:5:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"5883:3:17","type":""}],"src":"5838:186:17"},{"body":{"nodeType":"YulBlock","src":"6109:464:17","statements":[{"body":{"nodeType":"YulBlock","src":"6135:431:17","statements":[{"nodeType":"YulVariableDeclaration","src":"6149:54:17","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6197:5:17"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"6165:31:17"},"nodeType":"YulFunctionCall","src":"6165:38:17"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"6153:8:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6216:63:17","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6239:8:17"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6267:10:17"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6249:17:17"},"nodeType":"YulFunctionCall","src":"6249:29:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6235:3:17"},"nodeType":"YulFunctionCall","src":"6235:44:17"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"6220:11:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"6436:27:17","statements":[{"nodeType":"YulAssignment","src":"6438:23:17","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"6453:8:17"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6438:11:17"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6420:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"6432:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6417:2:17"},"nodeType":"YulFunctionCall","src":"6417:18:17"},"nodeType":"YulIf","src":"6414:49:17"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6505:11:17"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6522:8:17"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6550:3:17"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6532:17:17"},"nodeType":"YulFunctionCall","src":"6532:22:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6518:3:17"},"nodeType":"YulFunctionCall","src":"6518:37:17"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"6476:28:17"},"nodeType":"YulFunctionCall","src":"6476:80:17"},"nodeType":"YulExpressionStatement","src":"6476:80:17"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6126:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"6131:2:17","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6123:2:17"},"nodeType":"YulFunctionCall","src":"6123:11:17"},"nodeType":"YulIf","src":"6120:446:17"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"6085:5:17","type":""},{"name":"len","nodeType":"YulTypedName","src":"6092:3:17","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"6097:10:17","type":""}],"src":"6030:543:17"},{"body":{"nodeType":"YulBlock","src":"6642:54:17","statements":[{"nodeType":"YulAssignment","src":"6652:37:17","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"6677:4:17"},{"name":"value","nodeType":"YulIdentifier","src":"6683:5:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6673:3:17"},"nodeType":"YulFunctionCall","src":"6673:16:17"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"6652:8:17"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"6617:4:17","type":""},{"name":"value","nodeType":"YulTypedName","src":"6623:5:17","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"6633:8:17","type":""}],"src":"6579:117:17"},{"body":{"nodeType":"YulBlock","src":"6753:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"6763:68:17","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6812:1:17","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"6815:5:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6808:3:17"},"nodeType":"YulFunctionCall","src":"6808:13:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6827:1:17","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6823:3:17"},"nodeType":"YulFunctionCall","src":"6823:6:17"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"6779:28:17"},"nodeType":"YulFunctionCall","src":"6779:51:17"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6775:3:17"},"nodeType":"YulFunctionCall","src":"6775:56:17"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"6767:4:17","type":""}]},{"nodeType":"YulAssignment","src":"6840:25:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6854:4:17"},{"name":"mask","nodeType":"YulIdentifier","src":"6860:4:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6850:3:17"},"nodeType":"YulFunctionCall","src":"6850:15:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"6840:6:17"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6730:4:17","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"6736:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"6746:6:17","type":""}],"src":"6702:169:17"},{"body":{"nodeType":"YulBlock","src":"6957:214:17","statements":[{"nodeType":"YulAssignment","src":"7090:37:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7117:4:17"},{"name":"len","nodeType":"YulIdentifier","src":"7123:3:17"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"7098:18:17"},"nodeType":"YulFunctionCall","src":"7098:29:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7090:4:17"}]},{"nodeType":"YulAssignment","src":"7136:29:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7147:4:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7157:1:17","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"7160:3:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7153:3:17"},"nodeType":"YulFunctionCall","src":"7153:11:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7144:2:17"},"nodeType":"YulFunctionCall","src":"7144:21:17"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"7136:4:17"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6938:4:17","type":""},{"name":"len","nodeType":"YulTypedName","src":"6944:3:17","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"6952:4:17","type":""}],"src":"6876:295:17"},{"body":{"nodeType":"YulBlock","src":"7268:1303:17","statements":[{"nodeType":"YulVariableDeclaration","src":"7279:51:17","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7326:3:17"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7293:32:17"},"nodeType":"YulFunctionCall","src":"7293:37:17"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"7283:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"7415:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7417:16:17"},"nodeType":"YulFunctionCall","src":"7417:18:17"},"nodeType":"YulExpressionStatement","src":"7417:18:17"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7387:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"7395:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7384:2:17"},"nodeType":"YulFunctionCall","src":"7384:30:17"},"nodeType":"YulIf","src":"7381:56:17"},{"nodeType":"YulVariableDeclaration","src":"7447:52:17","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7493:4:17"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"7487:5:17"},"nodeType":"YulFunctionCall","src":"7487:11:17"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"7461:25:17"},"nodeType":"YulFunctionCall","src":"7461:38:17"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"7451:6:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7592:4:17"},{"name":"oldLen","nodeType":"YulIdentifier","src":"7598:6:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"7606:6:17"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"7546:45:17"},"nodeType":"YulFunctionCall","src":"7546:67:17"},"nodeType":"YulExpressionStatement","src":"7546:67:17"},{"nodeType":"YulVariableDeclaration","src":"7623:18:17","value":{"kind":"number","nodeType":"YulLiteral","src":"7640:1:17","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"7627:9:17","type":""}]},{"nodeType":"YulAssignment","src":"7651:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"7664:4:17","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"7651:9:17"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"7715:611:17","statements":[{"nodeType":"YulVariableDeclaration","src":"7729:37:17","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7748:6:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7760:4:17","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7756:3:17"},"nodeType":"YulFunctionCall","src":"7756:9:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7744:3:17"},"nodeType":"YulFunctionCall","src":"7744:22:17"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"7733:7:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7780:51:17","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7826:4:17"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"7794:31:17"},"nodeType":"YulFunctionCall","src":"7794:37:17"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"7784:6:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7844:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"7853:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7848:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"7912:163:17","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7937:6:17"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7955:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"7960:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7951:3:17"},"nodeType":"YulFunctionCall","src":"7951:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7945:5:17"},"nodeType":"YulFunctionCall","src":"7945:26:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7930:6:17"},"nodeType":"YulFunctionCall","src":"7930:42:17"},"nodeType":"YulExpressionStatement","src":"7930:42:17"},{"nodeType":"YulAssignment","src":"7989:24:17","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8003:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"8011:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7999:3:17"},"nodeType":"YulFunctionCall","src":"7999:14:17"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7989:6:17"}]},{"nodeType":"YulAssignment","src":"8030:31:17","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8047:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"8058:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8043:3:17"},"nodeType":"YulFunctionCall","src":"8043:18:17"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8030:9:17"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7878:1:17"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"7881:7:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7875:2:17"},"nodeType":"YulFunctionCall","src":"7875:14:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7890:21:17","statements":[{"nodeType":"YulAssignment","src":"7892:17:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7901:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"7904:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7897:3:17"},"nodeType":"YulFunctionCall","src":"7897:12:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7892:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"7871:3:17","statements":[]},"src":"7867:208:17"},{"body":{"nodeType":"YulBlock","src":"8111:156:17","statements":[{"nodeType":"YulVariableDeclaration","src":"8129:43:17","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8156:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8161:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8152:3:17"},"nodeType":"YulFunctionCall","src":"8152:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8146:5:17"},"nodeType":"YulFunctionCall","src":"8146:26:17"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"8133:9:17","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8196:6:17"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"8223:9:17"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8238:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"8246:4:17","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8234:3:17"},"nodeType":"YulFunctionCall","src":"8234:17:17"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"8204:18:17"},"nodeType":"YulFunctionCall","src":"8204:48:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8189:6:17"},"nodeType":"YulFunctionCall","src":"8189:64:17"},"nodeType":"YulExpressionStatement","src":"8189:64:17"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"8094:7:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"8103:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8091:2:17"},"nodeType":"YulFunctionCall","src":"8091:19:17"},"nodeType":"YulIf","src":"8088:179:17"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8287:4:17"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8301:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"8309:1:17","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8297:3:17"},"nodeType":"YulFunctionCall","src":"8297:14:17"},{"kind":"number","nodeType":"YulLiteral","src":"8313:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8293:3:17"},"nodeType":"YulFunctionCall","src":"8293:22:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8280:6:17"},"nodeType":"YulFunctionCall","src":"8280:36:17"},"nodeType":"YulExpressionStatement","src":"8280:36:17"}]},"nodeType":"YulCase","src":"7708:618:17","value":{"kind":"number","nodeType":"YulLiteral","src":"7713:1:17","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"8343:222:17","statements":[{"nodeType":"YulVariableDeclaration","src":"8357:14:17","value":{"kind":"number","nodeType":"YulLiteral","src":"8370:1:17","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8361:5:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"8394:67:17","statements":[{"nodeType":"YulAssignment","src":"8412:35:17","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8431:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8436:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8427:3:17"},"nodeType":"YulFunctionCall","src":"8427:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8421:5:17"},"nodeType":"YulFunctionCall","src":"8421:26:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8412:5:17"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"8387:6:17"},"nodeType":"YulIf","src":"8384:77:17"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8481:4:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8540:5:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"8547:6:17"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"8487:52:17"},"nodeType":"YulFunctionCall","src":"8487:67:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8474:6:17"},"nodeType":"YulFunctionCall","src":"8474:81:17"},"nodeType":"YulExpressionStatement","src":"8474:81:17"}]},"nodeType":"YulCase","src":"8335:230:17","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7688:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"7696:2:17","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7685:2:17"},"nodeType":"YulFunctionCall","src":"7685:14:17"},"nodeType":"YulSwitch","src":"7678:887:17"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"7257:4:17","type":""},{"name":"src","nodeType":"YulTypedName","src":"7263:3:17","type":""}],"src":"7176:1395:17"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":17,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162004048380380620040488339818101604052810190620000379190620002e8565b818181600090816200004a9190620005b8565b5080600190816200005c9190620005b8565b5050506200007f620000736200008760201b60201c565b6200008f60201b60201c565b50506200069f565b600033905090565b6000600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620001be8262000173565b810181811067ffffffffffffffff82111715620001e057620001df62000184565b5b80604052505050565b6000620001f562000155565b9050620002038282620001b3565b919050565b600067ffffffffffffffff82111562000226576200022562000184565b5b620002318262000173565b9050602081019050919050565b60005b838110156200025e57808201518184015260208101905062000241565b60008484015250505050565b6000620002816200027b8462000208565b620001e9565b905082815260208101848484011115620002a0576200029f6200016e565b5b620002ad8482856200023e565b509392505050565b600082601f830112620002cd57620002cc62000169565b5b8151620002df8482602086016200026a565b91505092915050565b600080604083850312156200030257620003016200015f565b5b600083015167ffffffffffffffff81111562000323576200032262000164565b5b6200033185828601620002b5565b925050602083015167ffffffffffffffff81111562000355576200035462000164565b5b6200036385828601620002b5565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620003c057607f821691505b602082108103620003d657620003d562000378565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620004407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000401565b6200044c868362000401565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600062000499620004936200048d8462000464565b6200046e565b62000464565b9050919050565b6000819050919050565b620004b58362000478565b620004cd620004c482620004a0565b8484546200040e565b825550505050565b600090565b620004e4620004d5565b620004f1818484620004aa565b505050565b5b8181101562000519576200050d600082620004da565b600181019050620004f7565b5050565b601f82111562000568576200053281620003dc565b6200053d84620003f1565b810160208510156200054d578190505b620005656200055c85620003f1565b830182620004f6565b50505b505050565b600082821c905092915050565b60006200058d600019846008026200056d565b1980831691505092915050565b6000620005a883836200057a565b9150826002028217905092915050565b620005c3826200036d565b67ffffffffffffffff811115620005df57620005de62000184565b5b620005eb8254620003a7565b620005f88282856200051d565b600060209050601f8311600181146200063057600084156200061b578287015190505b6200062785826200059a565b86555062000697565b601f1984166200064086620003dc565b60005b828110156200066a5784890151825560018201915060208501945060208101905062000643565b868310156200068a578489015162000686601f8916826200057a565b8355505b6001600288020188555050505b505050505050565b61399980620006af6000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80636352211e116100b8578063a22cb4651161007c578063a22cb46514610362578063a70d0e451461037e578063b88d4fde146103ae578063c87b56dd146103ca578063e985e9c5146103fa578063f2fde38b1461042a57610137565b80636352211e146102bc57806370a08231146102ec578063715018a61461031c5780638da5cb5b1461032657806395d89b411461034457610137565b806318160ddd116100ff57806318160ddd1461020657806323b872dd146102245780632f745c591461024057806342842e0e146102705780634f6ccce71461028c57610137565b806301ffc9a71461013c57806306fdde031461016c578063081812fc1461018a578063095ea7b3146101ba5780630ce7ed98146101d6575b600080fd5b61015660048036038101906101519190612390565b610446565b60405161016391906123d8565b60405180910390f35b610174610458565b6040516101819190612483565b60405180910390f35b6101a4600480360381019061019f91906124db565b6104ea565b6040516101b19190612549565b60405180910390f35b6101d460048036038101906101cf9190612590565b610530565b005b6101f060048036038101906101eb9190612590565b610647565b6040516101fd91906123d8565b60405180910390f35b61020e610676565b60405161021b91906125df565b60405180910390f35b61023e600480360381019061023991906125fa565b610683565b005b61025a60048036038101906102559190612590565b6106e3565b60405161026791906125df565b60405180910390f35b61028a600480360381019061028591906125fa565b610788565b005b6102a660048036038101906102a191906124db565b6107a8565b6040516102b391906125df565b60405180910390f35b6102d660048036038101906102d191906124db565b610819565b6040516102e39190612549565b60405180910390f35b6103066004803603810190610301919061264d565b6108ca565b60405161031391906125df565b60405180910390f35b610324610981565b005b61032e610995565b60405161033b9190612549565b60405180910390f35b61034c6109bf565b6040516103599190612483565b60405180910390f35b61037c600480360381019061037791906126a6565b610a51565b005b6103986004803603810190610393919061281b565b610a67565b6040516103a591906125df565b60405180910390f35b6103c860048036038101906103c3919061292b565b610bfe565b005b6103e460048036038101906103df91906124db565b610c60565b6040516103f19190612483565b60405180910390f35b610414600480360381019061040f91906129ae565b610c72565b60405161042191906123d8565b60405180910390f35b610444600480360381019061043f919061264d565b610d06565b005b600061045182610d89565b9050919050565b60606000805461046790612a1d565b80601f016020809104026020016040519081016040528092919081815260200182805461049390612a1d565b80156104e05780601f106104b5576101008083540402835291602001916104e0565b820191906000526020600020905b8154815290600101906020018083116104c357829003601f168201915b5050505050905090565b60006104f582610e03565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061053b82610819565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036105ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a290612ac0565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166105ca610e4e565b73ffffffffffffffffffffffffffffffffffffffff1614806105f957506105f8816105f3610e4e565b610c72565b5b610638576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062f90612b52565b60405180910390fd5b6106428383610e56565b505050565b600d6020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b6000600880549050905090565b61069461068e610e4e565b82610f0f565b6106d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ca90612be4565b60405180910390fd5b6106de838383610fa4565b505050565b60006106ee836108ca565b821061072f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072690612c76565b60405180910390fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054905092915050565b6107a383838360405180602001604052806000815250610bfe565b505050565b60006107b2610676565b82106107f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ea90612d08565b60405180910390fd5b6008828154811061080757610806612d28565b5b90600052602060002001549050919050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b890612da3565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361093a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093190612e35565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61098961120a565b6109936000611288565b565b6000600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600180546109ce90612a1d565b80601f01602080910402602001604051908101604052809291908181526020018280546109fa90612a1d565b8015610a475780601f10610a1c57610100808354040283529160200191610a47565b820191906000526020600020905b815481529060010190602001808311610a2a57829003601f168201915b5050505050905090565b610a63610a5c610e4e565b838361134e565b5050565b6000610a7161120a565b600d60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060009054906101000a900460ff1615610b0f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0690612ec7565b60405180910390fd5b610b19600c6114ba565b6000610b25600c6114d0565b9050610b3185826114de565b610b3b81846114fc565b6001600d60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600086815260200190815260200160002060006101000a81548160ff021916908315150217905550838573ffffffffffffffffffffffffffffffffffffffff167ffb2a8276c788bcdeaec6f4ec55f21fc636460802e63cb7e05337309232a1b90583604051610beb91906125df565b60405180910390a3809150509392505050565b610c0f610c09610e4e565b83610f0f565b610c4e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4590612be4565b60405180910390fd5b610c5a84848484611569565b50505050565b6060610c6b826115c5565b9050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b610d0e61120a565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7490612f59565b60405180910390fd5b610d8681611288565b50565b60007f780e9d63000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610dfc5750610dfb826116d7565b5b9050919050565b610e0c816117b9565b610e4b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4290612da3565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610ec983610819565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610f1b83610819565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610f5d5750610f5c8185610c72565b5b80610f9b57508373ffffffffffffffffffffffffffffffffffffffff16610f83846104ea565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610fc482610819565b73ffffffffffffffffffffffffffffffffffffffff161461101a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161101190612feb565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611089576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110809061307d565b60405180910390fd5b611094838383611825565b61109f600082610e56565b6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546110ef91906130cc565b925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546111469190613100565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46112058383836118db565b505050565b611212610e4e565b73ffffffffffffffffffffffffffffffffffffffff16611230610995565b73ffffffffffffffffffffffffffffffffffffffff1614611286576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161127d90613180565b60405180910390fd5b565b6000600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036113bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113b3906131ec565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516114ad91906123d8565b60405180910390a3505050565b6001816000016000828254019250508190555050565b600081600001549050919050565b6114f88282604051806020016040528060008152506118e0565b5050565b611505826117b9565b611544576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161153b9061327e565b60405180910390fd5b80600a60008481526020019081526020016000209081611564919061344a565b505050565b611574848484610fa4565b6115808484848461193b565b6115bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115b69061358e565b60405180910390fd5b50505050565b60606115d082610e03565b6000600a600084815260200190815260200160002080546115f090612a1d565b80601f016020809104026020016040519081016040528092919081815260200182805461161c90612a1d565b80156116695780601f1061163e57610100808354040283529160200191611669565b820191906000526020600020905b81548152906001019060200180831161164c57829003601f168201915b50505050509050600061167a611ac2565b9050600081510361168f5781925050506116d2565b6000825111156116c45780826040516020016116ac9291906135ea565b604051602081830303815290604052925050506116d2565b6116cd84611ad9565b925050505b919050565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806117a257507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806117b257506117b182611b41565b5b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16148061188c5750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b6118cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118c290613680565b60405180910390fd5b6118d6838383611bab565b505050565b505050565b6118ea8383611cbd565b6118f7600084848461193b565b611936576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161192d9061358e565b60405180910390fd5b505050565b600061195c8473ffffffffffffffffffffffffffffffffffffffff16611e96565b15611ab5578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611985610e4e565b8786866040518563ffffffff1660e01b81526004016119a794939291906136f5565b6020604051808303816000875af19250505080156119e357506040513d601f19601f820116820180604052508101906119e09190613756565b60015b611a65573d8060008114611a13576040519150601f19603f3d011682016040523d82523d6000602084013e611a18565b606091505b506000815103611a5d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a549061358e565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611aba565b600190505b949350505050565b606060405180602001604052806000815250905090565b6060611ae482610e03565b6000611aee611ac2565b90506000815111611b0e5760405180602001604052806000815250611b39565b80611b1884611eb9565b604051602001611b299291906135ea565b6040516020818303038152906040525b915050919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b611bb6838383612019565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611bf857611bf38161201e565b611c37565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614611c3657611c358382612067565b5b5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611c7957611c74816121d4565b611cb8565b8273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614611cb757611cb682826122a5565b5b5b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611d2c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d23906137cf565b60405180910390fd5b611d35816117b9565b15611d75576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d6c9061383b565b60405180910390fd5b611d8160008383611825565b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611dd19190613100565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4611e92600083836118db565b5050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b606060008203611f00576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050612014565b600082905060005b60008214611f32578080611f1b9061385b565b915050600a82611f2b91906138d2565b9150611f08565b60008167ffffffffffffffff811115611f4e57611f4d6126f0565b5b6040519080825280601f01601f191660200182016040528015611f805781602001600182028036833780820191505090505b5090505b6000851461200d57600182611f9991906130cc565b9150600a85611fa89190613903565b6030611fb49190613100565b60f81b818381518110611fca57611fc9612d28565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8561200691906138d2565b9450611f84565b8093505050505b919050565b505050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505060019003906000526020600020016000909190919091505550565b60006001612074846108ca565b61207e91906130cc565b9050600060076000848152602001908152602001600020549050818114612163576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002054905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002081905550816007600083815260200190815260200160002081905550505b6007600084815260200190815260200160002060009055600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206000905550505050565b600060016008805490506121e891906130cc565b905060006009600084815260200190815260200160002054905060006008838154811061221857612217612d28565b5b90600052602060002001549050806008838154811061223a57612239612d28565b5b90600052602060002001819055508160096000838152602001908152602001600020819055506009600085815260200190815260200160002060009055600880548061228957612288613934565b5b6001900381819060005260206000200160009055905550505050565b60006122b0836108ca565b905081600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002081905550806007600084815260200190815260200160002081905550505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61236d81612338565b811461237857600080fd5b50565b60008135905061238a81612364565b92915050565b6000602082840312156123a6576123a561232e565b5b60006123b48482850161237b565b91505092915050565b60008115159050919050565b6123d2816123bd565b82525050565b60006020820190506123ed60008301846123c9565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561242d578082015181840152602081019050612412565b60008484015250505050565b6000601f19601f8301169050919050565b6000612455826123f3565b61245f81856123fe565b935061246f81856020860161240f565b61247881612439565b840191505092915050565b6000602082019050818103600083015261249d818461244a565b905092915050565b6000819050919050565b6124b8816124a5565b81146124c357600080fd5b50565b6000813590506124d5816124af565b92915050565b6000602082840312156124f1576124f061232e565b5b60006124ff848285016124c6565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061253382612508565b9050919050565b61254381612528565b82525050565b600060208201905061255e600083018461253a565b92915050565b61256d81612528565b811461257857600080fd5b50565b60008135905061258a81612564565b92915050565b600080604083850312156125a7576125a661232e565b5b60006125b58582860161257b565b92505060206125c6858286016124c6565b9150509250929050565b6125d9816124a5565b82525050565b60006020820190506125f460008301846125d0565b92915050565b6000806000606084860312156126135761261261232e565b5b60006126218682870161257b565b93505060206126328682870161257b565b9250506040612643868287016124c6565b9150509250925092565b6000602082840312156126635761266261232e565b5b60006126718482850161257b565b91505092915050565b612683816123bd565b811461268e57600080fd5b50565b6000813590506126a08161267a565b92915050565b600080604083850312156126bd576126bc61232e565b5b60006126cb8582860161257b565b92505060206126dc85828601612691565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61272882612439565b810181811067ffffffffffffffff82111715612747576127466126f0565b5b80604052505050565b600061275a612324565b9050612766828261271f565b919050565b600067ffffffffffffffff821115612786576127856126f0565b5b61278f82612439565b9050602081019050919050565b82818337600083830152505050565b60006127be6127b98461276b565b612750565b9050828152602081018484840111156127da576127d96126eb565b5b6127e584828561279c565b509392505050565b600082601f830112612802576128016126e6565b5b81356128128482602086016127ab565b91505092915050565b6000806000606084860312156128345761283361232e565b5b60006128428682870161257b565b9350506020612853868287016124c6565b925050604084013567ffffffffffffffff81111561287457612873612333565b5b612880868287016127ed565b9150509250925092565b600067ffffffffffffffff8211156128a5576128a46126f0565b5b6128ae82612439565b9050602081019050919050565b60006128ce6128c98461288a565b612750565b9050828152602081018484840111156128ea576128e96126eb565b5b6128f584828561279c565b509392505050565b600082601f830112612912576129116126e6565b5b81356129228482602086016128bb565b91505092915050565b600080600080608085870312156129455761294461232e565b5b60006129538782880161257b565b94505060206129648782880161257b565b9350506040612975878288016124c6565b925050606085013567ffffffffffffffff81111561299657612995612333565b5b6129a2878288016128fd565b91505092959194509250565b600080604083850312156129c5576129c461232e565b5b60006129d38582860161257b565b92505060206129e48582860161257b565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680612a3557607f821691505b602082108103612a4857612a476129ee565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000612aaa6021836123fe565b9150612ab582612a4e565b604082019050919050565b60006020820190508181036000830152612ad981612a9d565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c0000602082015250565b6000612b3c603e836123fe565b9150612b4782612ae0565b604082019050919050565b60006020820190508181036000830152612b6b81612b2f565b9050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206e6f7220617070726f766564000000000000000000000000000000000000602082015250565b6000612bce602e836123fe565b9150612bd982612b72565b604082019050919050565b60006020820190508181036000830152612bfd81612bc1565b9050919050565b7f455243373231456e756d657261626c653a206f776e657220696e646578206f7560008201527f74206f6620626f756e6473000000000000000000000000000000000000000000602082015250565b6000612c60602b836123fe565b9150612c6b82612c04565b604082019050919050565b60006020820190508181036000830152612c8f81612c53565b9050919050565b7f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60008201527f7574206f6620626f756e64730000000000000000000000000000000000000000602082015250565b6000612cf2602c836123fe565b9150612cfd82612c96565b604082019050919050565b60006020820190508181036000830152612d2181612ce5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b6000612d8d6018836123fe565b9150612d9882612d57565b602082019050919050565b60006020820190508181036000830152612dbc81612d80565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b6000612e1f6029836123fe565b9150612e2a82612dc3565b604082019050919050565b60006020820190508181036000830152612e4e81612e12565b9050919050565b7f436572746966696361746520616c72656164792069737375656420666f72207460008201527f68697320636f7572736500000000000000000000000000000000000000000000602082015250565b6000612eb1602a836123fe565b9150612ebc82612e55565b604082019050919050565b60006020820190508181036000830152612ee081612ea4565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000612f436026836123fe565b9150612f4e82612ee7565b604082019050919050565b60006020820190508181036000830152612f7281612f36565b9050919050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b6000612fd56025836123fe565b9150612fe082612f79565b604082019050919050565b6000602082019050818103600083015261300481612fc8565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006130676024836123fe565b91506130728261300b565b604082019050919050565b600060208201905081810360008301526130968161305a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006130d7826124a5565b91506130e2836124a5565b92508282039050818111156130fa576130f961309d565b5b92915050565b600061310b826124a5565b9150613116836124a5565b925082820190508082111561312e5761312d61309d565b5b92915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061316a6020836123fe565b915061317582613134565b602082019050919050565b600060208201905081810360008301526131998161315d565b9050919050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b60006131d66019836123fe565b91506131e1826131a0565b602082019050919050565b60006020820190508181036000830152613205816131c9565b9050919050565b7f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60008201527f6578697374656e7420746f6b656e000000000000000000000000000000000000602082015250565b6000613268602e836123fe565b91506132738261320c565b604082019050919050565b600060208201905081810360008301526132978161325b565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026133007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826132c3565b61330a86836132c3565b95508019841693508086168417925050509392505050565b6000819050919050565b600061334761334261333d846124a5565b613322565b6124a5565b9050919050565b6000819050919050565b6133618361332c565b61337561336d8261334e565b8484546132d0565b825550505050565b600090565b61338a61337d565b613395818484613358565b505050565b5b818110156133b9576133ae600082613382565b60018101905061339b565b5050565b601f8211156133fe576133cf8161329e565b6133d8846132b3565b810160208510156133e7578190505b6133fb6133f3856132b3565b83018261339a565b50505b505050565b600082821c905092915050565b600061342160001984600802613403565b1980831691505092915050565b600061343a8383613410565b9150826002028217905092915050565b613453826123f3565b67ffffffffffffffff81111561346c5761346b6126f0565b5b6134768254612a1d565b6134818282856133bd565b600060209050601f8311600181146134b457600084156134a2578287015190505b6134ac858261342e565b865550613514565b601f1984166134c28661329e565b60005b828110156134ea578489015182556001820191506020850194506020810190506134c5565b868310156135075784890151613503601f891682613410565b8355505b6001600288020188555050505b505050505050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b60006135786032836123fe565b91506135838261351c565b604082019050919050565b600060208201905081810360008301526135a78161356b565b9050919050565b600081905092915050565b60006135c4826123f3565b6135ce81856135ae565b93506135de81856020860161240f565b80840191505092915050565b60006135f682856135b9565b915061360282846135b9565b91508190509392505050565b7f43657274696669636174657320617265206e6f6e2d7472616e7366657261626c60008201527f6500000000000000000000000000000000000000000000000000000000000000602082015250565b600061366a6021836123fe565b91506136758261360e565b604082019050919050565b600060208201905081810360008301526136998161365d565b9050919050565b600081519050919050565b600082825260208201905092915050565b60006136c7826136a0565b6136d181856136ab565b93506136e181856020860161240f565b6136ea81612439565b840191505092915050565b600060808201905061370a600083018761253a565b613717602083018661253a565b61372460408301856125d0565b818103606083015261373681846136bc565b905095945050505050565b60008151905061375081612364565b92915050565b60006020828403121561376c5761376b61232e565b5b600061377a84828501613741565b91505092915050565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b60006137b96020836123fe565b91506137c482613783565b602082019050919050565b600060208201905081810360008301526137e8816137ac565b9050919050565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b6000613825601c836123fe565b9150613830826137ef565b602082019050919050565b6000602082019050818103600083015261385481613818565b9050919050565b6000613866826124a5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036138985761389761309d565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006138dd826124a5565b91506138e8836124a5565b9250826138f8576138f76138a3565b5b828204905092915050565b600061390e826124a5565b9150613919836124a5565b925082613929576139286138a3565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea26469706673582212204fd53ef9a875ebd3f68467f8f26ad0939bb9cafb075ca27238e97ecc34d784df64736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x4048 CODESIZE SUB DUP1 PUSH3 0x4048 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x2E8 JUMP JUMPDEST DUP2 DUP2 DUP2 PUSH1 0x0 SWAP1 DUP2 PUSH3 0x4A SWAP2 SWAP1 PUSH3 0x5B8 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0x5C SWAP2 SWAP1 PUSH3 0x5B8 JUMP JUMPDEST POP POP POP PUSH3 0x7F PUSH3 0x73 PUSH3 0x87 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x8F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH3 0x69F JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0xB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x1BE DUP3 PUSH3 0x173 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x1E0 JUMPI PUSH3 0x1DF PUSH3 0x184 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1F5 PUSH3 0x155 JUMP JUMPDEST SWAP1 POP PUSH3 0x203 DUP3 DUP3 PUSH3 0x1B3 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x226 JUMPI PUSH3 0x225 PUSH3 0x184 JUMP JUMPDEST JUMPDEST PUSH3 0x231 DUP3 PUSH3 0x173 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x25E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x241 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x281 PUSH3 0x27B DUP5 PUSH3 0x208 JUMP JUMPDEST PUSH3 0x1E9 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x2A0 JUMPI PUSH3 0x29F PUSH3 0x16E JUMP JUMPDEST JUMPDEST PUSH3 0x2AD DUP5 DUP3 DUP6 PUSH3 0x23E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x2CD JUMPI PUSH3 0x2CC PUSH3 0x169 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x2DF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x26A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x302 JUMPI PUSH3 0x301 PUSH3 0x15F JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x323 JUMPI PUSH3 0x322 PUSH3 0x164 JUMP JUMPDEST JUMPDEST PUSH3 0x331 DUP6 DUP3 DUP7 ADD PUSH3 0x2B5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x355 JUMPI PUSH3 0x354 PUSH3 0x164 JUMP JUMPDEST JUMPDEST PUSH3 0x363 DUP6 DUP3 DUP7 ADD PUSH3 0x2B5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x3C0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x3D6 JUMPI PUSH3 0x3D5 PUSH3 0x378 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x440 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x401 JUMP JUMPDEST PUSH3 0x44C DUP7 DUP4 PUSH3 0x401 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x499 PUSH3 0x493 PUSH3 0x48D DUP5 PUSH3 0x464 JUMP JUMPDEST PUSH3 0x46E JUMP JUMPDEST PUSH3 0x464 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x4B5 DUP4 PUSH3 0x478 JUMP JUMPDEST PUSH3 0x4CD PUSH3 0x4C4 DUP3 PUSH3 0x4A0 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x40E JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x4E4 PUSH3 0x4D5 JUMP JUMPDEST PUSH3 0x4F1 DUP2 DUP5 DUP5 PUSH3 0x4AA JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x519 JUMPI PUSH3 0x50D PUSH1 0x0 DUP3 PUSH3 0x4DA JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x4F7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x568 JUMPI PUSH3 0x532 DUP2 PUSH3 0x3DC JUMP JUMPDEST PUSH3 0x53D DUP5 PUSH3 0x3F1 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x54D JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x565 PUSH3 0x55C DUP6 PUSH3 0x3F1 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x4F6 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x58D PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x56D JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5A8 DUP4 DUP4 PUSH3 0x57A JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x5C3 DUP3 PUSH3 0x36D JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x5DF JUMPI PUSH3 0x5DE PUSH3 0x184 JUMP JUMPDEST JUMPDEST PUSH3 0x5EB DUP3 SLOAD PUSH3 0x3A7 JUMP JUMPDEST PUSH3 0x5F8 DUP3 DUP3 DUP6 PUSH3 0x51D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x630 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x61B JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x627 DUP6 DUP3 PUSH3 0x59A JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x697 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x640 DUP7 PUSH3 0x3DC JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x66A JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x643 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x68A JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x686 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x57A JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x3999 DUP1 PUSH3 0x6AF PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x137 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x362 JUMPI DUP1 PUSH4 0xA70D0E45 EQ PUSH2 0x37E JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x3AE JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x3FA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x42A JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x344 JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x28C JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0xCE7ED98 EQ PUSH2 0x1D6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x156 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x2390 JUMP JUMPDEST PUSH2 0x446 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x163 SWAP2 SWAP1 PUSH2 0x23D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x174 PUSH2 0x458 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x181 SWAP2 SWAP1 PUSH2 0x2483 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x24DB JUMP JUMPDEST PUSH2 0x4EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B1 SWAP2 SWAP1 PUSH2 0x2549 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CF SWAP2 SWAP1 PUSH2 0x2590 JUMP JUMPDEST PUSH2 0x530 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x2590 JUMP JUMPDEST PUSH2 0x647 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x23D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH2 0x676 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x25DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x25FA JUMP JUMPDEST PUSH2 0x683 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x2590 JUMP JUMPDEST PUSH2 0x6E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x267 SWAP2 SWAP1 PUSH2 0x25DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x285 SWAP2 SWAP1 PUSH2 0x25FA JUMP JUMPDEST PUSH2 0x788 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x24DB JUMP JUMPDEST PUSH2 0x7A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x25DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D1 SWAP2 SWAP1 PUSH2 0x24DB JUMP JUMPDEST PUSH2 0x819 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E3 SWAP2 SWAP1 PUSH2 0x2549 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x306 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x301 SWAP2 SWAP1 PUSH2 0x264D JUMP JUMPDEST PUSH2 0x8CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x25DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x324 PUSH2 0x981 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x32E PUSH2 0x995 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33B SWAP2 SWAP1 PUSH2 0x2549 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34C PUSH2 0x9BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x359 SWAP2 SWAP1 PUSH2 0x2483 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x377 SWAP2 SWAP1 PUSH2 0x26A6 JUMP JUMPDEST PUSH2 0xA51 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x398 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x393 SWAP2 SWAP1 PUSH2 0x281B JUMP JUMPDEST PUSH2 0xA67 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x25DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C3 SWAP2 SWAP1 PUSH2 0x292B JUMP JUMPDEST PUSH2 0xBFE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DF SWAP2 SWAP1 PUSH2 0x24DB JUMP JUMPDEST PUSH2 0xC60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F1 SWAP2 SWAP1 PUSH2 0x2483 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x414 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40F SWAP2 SWAP1 PUSH2 0x29AE JUMP JUMPDEST PUSH2 0xC72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x421 SWAP2 SWAP1 PUSH2 0x23D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x444 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43F SWAP2 SWAP1 PUSH2 0x264D JUMP JUMPDEST PUSH2 0xD06 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH2 0x451 DUP3 PUSH2 0xD89 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x467 SWAP1 PUSH2 0x2A1D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x493 SWAP1 PUSH2 0x2A1D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4E0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4B5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4E0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4C3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F5 DUP3 PUSH2 0xE03 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x53B DUP3 PUSH2 0x819 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A2 SWAP1 PUSH2 0x2AC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5CA PUSH2 0xE4E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x5F9 JUMPI POP PUSH2 0x5F8 DUP2 PUSH2 0x5F3 PUSH2 0xE4E JUMP JUMPDEST PUSH2 0xC72 JUMP JUMPDEST JUMPDEST PUSH2 0x638 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x62F SWAP1 PUSH2 0x2B52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x642 DUP4 DUP4 PUSH2 0xE56 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x694 PUSH2 0x68E PUSH2 0xE4E JUMP JUMPDEST DUP3 PUSH2 0xF0F JUMP JUMPDEST PUSH2 0x6D3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CA SWAP1 PUSH2 0x2BE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6DE DUP4 DUP4 DUP4 PUSH2 0xFA4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6EE DUP4 PUSH2 0x8CA JUMP JUMPDEST DUP3 LT PUSH2 0x72F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x726 SWAP1 PUSH2 0x2C76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7A3 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xBFE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B2 PUSH2 0x676 JUMP JUMPDEST DUP3 LT PUSH2 0x7F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7EA SWAP1 PUSH2 0x2D08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x807 JUMPI PUSH2 0x806 PUSH2 0x2D28 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B8 SWAP1 PUSH2 0x2DA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x93A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x931 SWAP1 PUSH2 0x2E35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x989 PUSH2 0x120A JUMP JUMPDEST PUSH2 0x993 PUSH1 0x0 PUSH2 0x1288 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x9CE SWAP1 PUSH2 0x2A1D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9FA SWAP1 PUSH2 0x2A1D JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA47 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA1C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA47 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA2A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA63 PUSH2 0xA5C PUSH2 0xE4E JUMP JUMPDEST DUP4 DUP4 PUSH2 0x134E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA71 PUSH2 0x120A JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB0F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB06 SWAP1 PUSH2 0x2EC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB19 PUSH1 0xC PUSH2 0x14BA JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB25 PUSH1 0xC PUSH2 0x14D0 JUMP JUMPDEST SWAP1 POP PUSH2 0xB31 DUP6 DUP3 PUSH2 0x14DE JUMP JUMPDEST PUSH2 0xB3B DUP2 DUP5 PUSH2 0x14FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0xD PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFB2A8276C788BCDEAEC6F4EC55F21FC636460802E63CB7E05337309232A1B905 DUP4 PUSH1 0x40 MLOAD PUSH2 0xBEB SWAP2 SWAP1 PUSH2 0x25DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xC0F PUSH2 0xC09 PUSH2 0xE4E JUMP JUMPDEST DUP4 PUSH2 0xF0F JUMP JUMPDEST PUSH2 0xC4E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC45 SWAP1 PUSH2 0x2BE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC5A DUP5 DUP5 DUP5 DUP5 PUSH2 0x1569 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xC6B DUP3 PUSH2 0x15C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD0E PUSH2 0x120A JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD7D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD74 SWAP1 PUSH2 0x2F59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD86 DUP2 PUSH2 0x1288 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x780E9D6300000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xDFC JUMPI POP PUSH2 0xDFB DUP3 PUSH2 0x16D7 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE0C DUP2 PUSH2 0x17B9 JUMP JUMPDEST PUSH2 0xE4B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE42 SWAP1 PUSH2 0x2DA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEC9 DUP4 PUSH2 0x819 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xF1B DUP4 PUSH2 0x819 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xF5D JUMPI POP PUSH2 0xF5C DUP2 DUP6 PUSH2 0xC72 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xF9B JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF83 DUP5 PUSH2 0x4EA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFC4 DUP3 PUSH2 0x819 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x101A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1011 SWAP1 PUSH2 0x2FEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1089 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1080 SWAP1 PUSH2 0x307D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1094 DUP4 DUP4 DUP4 PUSH2 0x1825 JUMP JUMPDEST PUSH2 0x109F PUSH1 0x0 DUP3 PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x10EF SWAP2 SWAP1 PUSH2 0x30CC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1146 SWAP2 SWAP1 PUSH2 0x3100 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1205 DUP4 DUP4 DUP4 PUSH2 0x18DB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1212 PUSH2 0xE4E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1230 PUSH2 0x995 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1286 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x127D SWAP1 PUSH2 0x3180 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0xB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13B3 SWAP1 PUSH2 0x31EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x14AD SWAP2 SWAP1 PUSH2 0x23D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14F8 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x18E0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1505 DUP3 PUSH2 0x17B9 JUMP JUMPDEST PUSH2 0x1544 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x153B SWAP1 PUSH2 0x327E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xA PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x1564 SWAP2 SWAP1 PUSH2 0x344A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1574 DUP5 DUP5 DUP5 PUSH2 0xFA4 JUMP JUMPDEST PUSH2 0x1580 DUP5 DUP5 DUP5 DUP5 PUSH2 0x193B JUMP JUMPDEST PUSH2 0x15BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15B6 SWAP1 PUSH2 0x358E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x15D0 DUP3 PUSH2 0xE03 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x15F0 SWAP1 PUSH2 0x2A1D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x161C SWAP1 PUSH2 0x2A1D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1669 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x163E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1669 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x164C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x167A PUSH2 0x1AC2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x168F JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x16D2 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x16C4 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x16AC SWAP3 SWAP2 SWAP1 PUSH2 0x35EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x16D2 JUMP JUMPDEST PUSH2 0x16CD DUP5 PUSH2 0x1AD9 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x17A2 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x17B2 JUMPI POP PUSH2 0x17B1 DUP3 PUSH2 0x1B41 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x188C JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x18CB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18C2 SWAP1 PUSH2 0x3680 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x18D6 DUP4 DUP4 DUP4 PUSH2 0x1BAB JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x18EA DUP4 DUP4 PUSH2 0x1CBD JUMP JUMPDEST PUSH2 0x18F7 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x193B JUMP JUMPDEST PUSH2 0x1936 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x192D SWAP1 PUSH2 0x358E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x195C DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1E96 JUMP JUMPDEST ISZERO PUSH2 0x1AB5 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1985 PUSH2 0xE4E JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19A7 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x36F5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x19E3 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19E0 SWAP2 SWAP1 PUSH2 0x3756 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1A65 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1A13 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1A18 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1A5D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A54 SWAP1 PUSH2 0x358E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x1ABA JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1AE4 DUP3 PUSH2 0xE03 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AEE PUSH2 0x1AC2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x1B0E JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1B39 JUMP JUMPDEST DUP1 PUSH2 0x1B18 DUP5 PUSH2 0x1EB9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1B29 SWAP3 SWAP2 SWAP1 PUSH2 0x35EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BB6 DUP4 DUP4 DUP4 PUSH2 0x2019 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1BF8 JUMPI PUSH2 0x1BF3 DUP2 PUSH2 0x201E JUMP JUMPDEST PUSH2 0x1C37 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1C36 JUMPI PUSH2 0x1C35 DUP4 DUP3 PUSH2 0x2067 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C79 JUMPI PUSH2 0x1C74 DUP2 PUSH2 0x21D4 JUMP JUMPDEST PUSH2 0x1CB8 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1CB7 JUMPI PUSH2 0x1CB6 DUP3 DUP3 PUSH2 0x22A5 JUMP JUMPDEST JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D2C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D23 SWAP1 PUSH2 0x37CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D35 DUP2 PUSH2 0x17B9 JUMP JUMPDEST ISZERO PUSH2 0x1D75 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D6C SWAP1 PUSH2 0x383B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D81 PUSH1 0x0 DUP4 DUP4 PUSH2 0x1825 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1DD1 SWAP2 SWAP1 PUSH2 0x3100 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1E92 PUSH1 0x0 DUP4 DUP4 PUSH2 0x18DB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 SUB PUSH2 0x1F00 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x2014 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x1F32 JUMPI DUP1 DUP1 PUSH2 0x1F1B SWAP1 PUSH2 0x385B JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x1F2B SWAP2 SWAP1 PUSH2 0x38D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F08 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F4E JUMPI PUSH2 0x1F4D PUSH2 0x26F0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1F80 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0x200D JUMPI PUSH1 0x1 DUP3 PUSH2 0x1F99 SWAP2 SWAP1 PUSH2 0x30CC JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x1FA8 SWAP2 SWAP1 PUSH2 0x3903 JUMP JUMPDEST PUSH1 0x30 PUSH2 0x1FB4 SWAP2 SWAP1 PUSH2 0x3100 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1FCA JUMPI PUSH2 0x1FC9 PUSH2 0x2D28 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x2006 SWAP2 SWAP1 PUSH2 0x38D2 JUMP JUMPDEST SWAP5 POP PUSH2 0x1F84 JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD SWAP1 POP PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x8 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x2074 DUP5 PUSH2 0x8CA JUMP JUMPDEST PUSH2 0x207E SWAP2 SWAP1 PUSH2 0x30CC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 EQ PUSH2 0x2163 JUMPI PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP1 PUSH1 0x6 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x8 DUP1 SLOAD SWAP1 POP PUSH2 0x21E8 SWAP2 SWAP1 PUSH2 0x30CC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2218 JUMPI PUSH2 0x2217 PUSH2 0x2D28 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x223A JUMPI PUSH2 0x2239 PUSH2 0x2D28 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x9 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x8 DUP1 SLOAD DUP1 PUSH2 0x2289 JUMPI PUSH2 0x2288 PUSH2 0x3934 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22B0 DUP4 PUSH2 0x8CA JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x236D DUP2 PUSH2 0x2338 JUMP JUMPDEST DUP2 EQ PUSH2 0x2378 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x238A DUP2 PUSH2 0x2364 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23A6 JUMPI PUSH2 0x23A5 PUSH2 0x232E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23B4 DUP5 DUP3 DUP6 ADD PUSH2 0x237B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23D2 DUP2 PUSH2 0x23BD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x23ED PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x23C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x242D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2412 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2455 DUP3 PUSH2 0x23F3 JUMP JUMPDEST PUSH2 0x245F DUP2 DUP6 PUSH2 0x23FE JUMP JUMPDEST SWAP4 POP PUSH2 0x246F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x240F JUMP JUMPDEST PUSH2 0x2478 DUP2 PUSH2 0x2439 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x249D DUP2 DUP5 PUSH2 0x244A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24B8 DUP2 PUSH2 0x24A5 JUMP JUMPDEST DUP2 EQ PUSH2 0x24C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x24D5 DUP2 PUSH2 0x24AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24F1 JUMPI PUSH2 0x24F0 PUSH2 0x232E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x24FF DUP5 DUP3 DUP6 ADD PUSH2 0x24C6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2533 DUP3 PUSH2 0x2508 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2543 DUP2 PUSH2 0x2528 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x255E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x253A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x256D DUP2 PUSH2 0x2528 JUMP JUMPDEST DUP2 EQ PUSH2 0x2578 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x258A DUP2 PUSH2 0x2564 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25A7 JUMPI PUSH2 0x25A6 PUSH2 0x232E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x25B5 DUP6 DUP3 DUP7 ADD PUSH2 0x257B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x25C6 DUP6 DUP3 DUP7 ADD PUSH2 0x24C6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x25D9 DUP2 PUSH2 0x24A5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x25F4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x25D0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2613 JUMPI PUSH2 0x2612 PUSH2 0x232E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2621 DUP7 DUP3 DUP8 ADD PUSH2 0x257B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2632 DUP7 DUP3 DUP8 ADD PUSH2 0x257B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2643 DUP7 DUP3 DUP8 ADD PUSH2 0x24C6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2663 JUMPI PUSH2 0x2662 PUSH2 0x232E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2671 DUP5 DUP3 DUP6 ADD PUSH2 0x257B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2683 DUP2 PUSH2 0x23BD JUMP JUMPDEST DUP2 EQ PUSH2 0x268E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x26A0 DUP2 PUSH2 0x267A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x26BD JUMPI PUSH2 0x26BC PUSH2 0x232E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x26CB DUP6 DUP3 DUP7 ADD PUSH2 0x257B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x26DC DUP6 DUP3 DUP7 ADD PUSH2 0x2691 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2728 DUP3 PUSH2 0x2439 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2747 JUMPI PUSH2 0x2746 PUSH2 0x26F0 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x275A PUSH2 0x2324 JUMP JUMPDEST SWAP1 POP PUSH2 0x2766 DUP3 DUP3 PUSH2 0x271F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2786 JUMPI PUSH2 0x2785 PUSH2 0x26F0 JUMP JUMPDEST JUMPDEST PUSH2 0x278F DUP3 PUSH2 0x2439 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27BE PUSH2 0x27B9 DUP5 PUSH2 0x276B JUMP JUMPDEST PUSH2 0x2750 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x27DA JUMPI PUSH2 0x27D9 PUSH2 0x26EB JUMP JUMPDEST JUMPDEST PUSH2 0x27E5 DUP5 DUP3 DUP6 PUSH2 0x279C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2802 JUMPI PUSH2 0x2801 PUSH2 0x26E6 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2812 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x27AB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2834 JUMPI PUSH2 0x2833 PUSH2 0x232E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2842 DUP7 DUP3 DUP8 ADD PUSH2 0x257B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2853 DUP7 DUP3 DUP8 ADD PUSH2 0x24C6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2874 JUMPI PUSH2 0x2873 PUSH2 0x2333 JUMP JUMPDEST JUMPDEST PUSH2 0x2880 DUP7 DUP3 DUP8 ADD PUSH2 0x27ED JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x28A5 JUMPI PUSH2 0x28A4 PUSH2 0x26F0 JUMP JUMPDEST JUMPDEST PUSH2 0x28AE DUP3 PUSH2 0x2439 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28CE PUSH2 0x28C9 DUP5 PUSH2 0x288A JUMP JUMPDEST PUSH2 0x2750 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x28EA JUMPI PUSH2 0x28E9 PUSH2 0x26EB JUMP JUMPDEST JUMPDEST PUSH2 0x28F5 DUP5 DUP3 DUP6 PUSH2 0x279C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2912 JUMPI PUSH2 0x2911 PUSH2 0x26E6 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2922 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x28BB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2945 JUMPI PUSH2 0x2944 PUSH2 0x232E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2953 DUP8 DUP3 DUP9 ADD PUSH2 0x257B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2964 DUP8 DUP3 DUP9 ADD PUSH2 0x257B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2975 DUP8 DUP3 DUP9 ADD PUSH2 0x24C6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2996 JUMPI PUSH2 0x2995 PUSH2 0x2333 JUMP JUMPDEST JUMPDEST PUSH2 0x29A2 DUP8 DUP3 DUP9 ADD PUSH2 0x28FD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x29C5 JUMPI PUSH2 0x29C4 PUSH2 0x232E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x29D3 DUP6 DUP3 DUP7 ADD PUSH2 0x257B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x29E4 DUP6 DUP3 DUP7 ADD PUSH2 0x257B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2A35 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2A48 JUMPI PUSH2 0x2A47 PUSH2 0x29EE JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AAA PUSH1 0x21 DUP4 PUSH2 0x23FE JUMP JUMPDEST SWAP2 POP PUSH2 0x2AB5 DUP3 PUSH2 0x2A4E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2AD9 DUP2 PUSH2 0x2A9D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206E6F7220617070726F76656420666F7220616C6C0000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B3C PUSH1 0x3E DUP4 PUSH2 0x23FE JUMP JUMPDEST SWAP2 POP PUSH2 0x2B47 DUP3 PUSH2 0x2AE0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B6B DUP2 PUSH2 0x2B2F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206E6F7220617070726F766564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BCE PUSH1 0x2E DUP4 PUSH2 0x23FE JUMP JUMPDEST SWAP2 POP PUSH2 0x2BD9 DUP3 PUSH2 0x2B72 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2BFD DUP2 PUSH2 0x2BC1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243373231456E756D657261626C653A206F776E657220696E646578206F75 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x74206F6620626F756E6473000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C60 PUSH1 0x2B DUP4 PUSH2 0x23FE JUMP JUMPDEST SWAP2 POP PUSH2 0x2C6B DUP3 PUSH2 0x2C04 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C8F DUP2 PUSH2 0x2C53 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7574206F6620626F756E64730000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CF2 PUSH1 0x2C DUP4 PUSH2 0x23FE JUMP JUMPDEST SWAP2 POP PUSH2 0x2CFD DUP3 PUSH2 0x2C96 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D21 DUP2 PUSH2 0x2CE5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D8D PUSH1 0x18 DUP4 PUSH2 0x23FE JUMP JUMPDEST SWAP2 POP PUSH2 0x2D98 DUP3 PUSH2 0x2D57 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2DBC DUP2 PUSH2 0x2D80 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E1F PUSH1 0x29 DUP4 PUSH2 0x23FE JUMP JUMPDEST SWAP2 POP PUSH2 0x2E2A DUP3 PUSH2 0x2DC3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E4E DUP2 PUSH2 0x2E12 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436572746966696361746520616C72656164792069737375656420666F722074 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x68697320636F7572736500000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EB1 PUSH1 0x2A DUP4 PUSH2 0x23FE JUMP JUMPDEST SWAP2 POP PUSH2 0x2EBC DUP3 PUSH2 0x2E55 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2EE0 DUP2 PUSH2 0x2EA4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F43 PUSH1 0x26 DUP4 PUSH2 0x23FE JUMP JUMPDEST SWAP2 POP PUSH2 0x2F4E DUP3 PUSH2 0x2EE7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F72 DUP2 PUSH2 0x2F36 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FD5 PUSH1 0x25 DUP4 PUSH2 0x23FE JUMP JUMPDEST SWAP2 POP PUSH2 0x2FE0 DUP3 PUSH2 0x2F79 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3004 DUP2 PUSH2 0x2FC8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3067 PUSH1 0x24 DUP4 PUSH2 0x23FE JUMP JUMPDEST SWAP2 POP PUSH2 0x3072 DUP3 PUSH2 0x300B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3096 DUP2 PUSH2 0x305A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x30D7 DUP3 PUSH2 0x24A5 JUMP JUMPDEST SWAP2 POP PUSH2 0x30E2 DUP4 PUSH2 0x24A5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x30FA JUMPI PUSH2 0x30F9 PUSH2 0x309D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x310B DUP3 PUSH2 0x24A5 JUMP JUMPDEST SWAP2 POP PUSH2 0x3116 DUP4 PUSH2 0x24A5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x312E JUMPI PUSH2 0x312D PUSH2 0x309D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x316A PUSH1 0x20 DUP4 PUSH2 0x23FE JUMP JUMPDEST SWAP2 POP PUSH2 0x3175 DUP3 PUSH2 0x3134 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3199 DUP2 PUSH2 0x315D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31D6 PUSH1 0x19 DUP4 PUSH2 0x23FE JUMP JUMPDEST SWAP2 POP PUSH2 0x31E1 DUP3 PUSH2 0x31A0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3205 DUP2 PUSH2 0x31C9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524337323155524953746F726167653A2055524920736574206F66206E6F6E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6578697374656E7420746F6B656E000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3268 PUSH1 0x2E DUP4 PUSH2 0x23FE JUMP JUMPDEST SWAP2 POP PUSH2 0x3273 DUP3 PUSH2 0x320C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3297 DUP2 PUSH2 0x325B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x3300 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x32C3 JUMP JUMPDEST PUSH2 0x330A DUP7 DUP4 PUSH2 0x32C3 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3347 PUSH2 0x3342 PUSH2 0x333D DUP5 PUSH2 0x24A5 JUMP JUMPDEST PUSH2 0x3322 JUMP JUMPDEST PUSH2 0x24A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3361 DUP4 PUSH2 0x332C JUMP JUMPDEST PUSH2 0x3375 PUSH2 0x336D DUP3 PUSH2 0x334E JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x32D0 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x338A PUSH2 0x337D JUMP JUMPDEST PUSH2 0x3395 DUP2 DUP5 DUP5 PUSH2 0x3358 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x33B9 JUMPI PUSH2 0x33AE PUSH1 0x0 DUP3 PUSH2 0x3382 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x339B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x33FE JUMPI PUSH2 0x33CF DUP2 PUSH2 0x329E JUMP JUMPDEST PUSH2 0x33D8 DUP5 PUSH2 0x32B3 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x33E7 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x33FB PUSH2 0x33F3 DUP6 PUSH2 0x32B3 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x339A JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3421 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x3403 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x343A DUP4 DUP4 PUSH2 0x3410 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3453 DUP3 PUSH2 0x23F3 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x346C JUMPI PUSH2 0x346B PUSH2 0x26F0 JUMP JUMPDEST JUMPDEST PUSH2 0x3476 DUP3 SLOAD PUSH2 0x2A1D JUMP JUMPDEST PUSH2 0x3481 DUP3 DUP3 DUP6 PUSH2 0x33BD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x34B4 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x34A2 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x34AC DUP6 DUP3 PUSH2 0x342E JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x3514 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x34C2 DUP7 PUSH2 0x329E JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x34EA JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x34C5 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x3507 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x3503 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x3410 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3578 PUSH1 0x32 DUP4 PUSH2 0x23FE JUMP JUMPDEST SWAP2 POP PUSH2 0x3583 DUP3 PUSH2 0x351C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x35A7 DUP2 PUSH2 0x356B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35C4 DUP3 PUSH2 0x23F3 JUMP JUMPDEST PUSH2 0x35CE DUP2 DUP6 PUSH2 0x35AE JUMP JUMPDEST SWAP4 POP PUSH2 0x35DE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x240F JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35F6 DUP3 DUP6 PUSH2 0x35B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x3602 DUP3 DUP5 PUSH2 0x35B9 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x43657274696669636174657320617265206E6F6E2D7472616E7366657261626C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6500000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x366A PUSH1 0x21 DUP4 PUSH2 0x23FE JUMP JUMPDEST SWAP2 POP PUSH2 0x3675 DUP3 PUSH2 0x360E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3699 DUP2 PUSH2 0x365D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36C7 DUP3 PUSH2 0x36A0 JUMP JUMPDEST PUSH2 0x36D1 DUP2 DUP6 PUSH2 0x36AB JUMP JUMPDEST SWAP4 POP PUSH2 0x36E1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x240F JUMP JUMPDEST PUSH2 0x36EA DUP2 PUSH2 0x2439 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x370A PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x253A JUMP JUMPDEST PUSH2 0x3717 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x253A JUMP JUMPDEST PUSH2 0x3724 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x25D0 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x3736 DUP2 DUP5 PUSH2 0x36BC JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3750 DUP2 PUSH2 0x2364 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x376C JUMPI PUSH2 0x376B PUSH2 0x232E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x377A DUP5 DUP3 DUP6 ADD PUSH2 0x3741 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37B9 PUSH1 0x20 DUP4 PUSH2 0x23FE JUMP JUMPDEST SWAP2 POP PUSH2 0x37C4 DUP3 PUSH2 0x3783 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x37E8 DUP2 PUSH2 0x37AC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3825 PUSH1 0x1C DUP4 PUSH2 0x23FE JUMP JUMPDEST SWAP2 POP PUSH2 0x3830 DUP3 PUSH2 0x37EF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3854 DUP2 PUSH2 0x3818 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3866 DUP3 PUSH2 0x24A5 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x3898 JUMPI PUSH2 0x3897 PUSH2 0x309D JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x38DD DUP3 PUSH2 0x24A5 JUMP JUMPDEST SWAP2 POP PUSH2 0x38E8 DUP4 PUSH2 0x24A5 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x38F8 JUMPI PUSH2 0x38F7 PUSH2 0x38A3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x390E DUP3 PUSH2 0x24A5 JUMP JUMPDEST SWAP2 POP PUSH2 0x3919 DUP4 PUSH2 0x24A5 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3929 JUMPI PUSH2 0x3928 PUSH2 0x38A3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F 0xD5 RETURNDATACOPY 0xF9 0xA8 PUSH22 0xEBD3F68467F8F26AD0939BB9CAFB075CA27238E97ECC CALLVALUE 0xD7 DUP5 0xDF PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"461:2581:15:-:0;;;914:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;975:4;981:6;1464:5:1;1456;:13;;;;;;:::i;:::-;;1489:7;1479;:17;;;;;;:::i;:::-;;1390:113;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;914:77:15;;461:2581;;640:96:9;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;7:75:17:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:853::-;2776:6;2784;2833:2;2821:9;2812:7;2808:23;2804:32;2801:119;;;2839:79;;:::i;:::-;2801:119;2980:1;2969:9;2965:17;2959:24;3010:18;3002:6;2999:30;2996:117;;;3032:79;;:::i;:::-;2996:117;3137:74;3203:7;3194:6;3183:9;3179:22;3137:74;:::i;:::-;3127:84;;2930:291;3281:2;3270:9;3266:18;3260:25;3312:18;3304:6;3301:30;3298:117;;;3334:79;;:::i;:::-;3298:117;3439:74;3505:7;3496:6;3485:9;3481:22;3439:74;:::i;:::-;3429:84;;3231:292;2677:853;;;;;:::o;3536:99::-;3588:6;3622:5;3616:12;3606:22;;3536:99;;;:::o;3641:180::-;3689:77;3686:1;3679:88;3786:4;3783:1;3776:15;3810:4;3807:1;3800:15;3827:320;3871:6;3908:1;3902:4;3898:12;3888:22;;3955:1;3949:4;3945:12;3976:18;3966:81;;4032:4;4024:6;4020:17;4010:27;;3966:81;4094:2;4086:6;4083:14;4063:18;4060:38;4057:84;;4113:18;;:::i;:::-;4057:84;3878:269;3827:320;;;:::o;4153:141::-;4202:4;4225:3;4217:11;;4248:3;4245:1;4238:14;4282:4;4279:1;4269:18;4261:26;;4153:141;;;:::o;4300:93::-;4337:6;4384:2;4379;4372:5;4368:14;4364:23;4354:33;;4300:93;;;:::o;4399:107::-;4443:8;4493:5;4487:4;4483:16;4462:37;;4399:107;;;;:::o;4512:393::-;4581:6;4631:1;4619:10;4615:18;4654:97;4684:66;4673:9;4654:97;:::i;:::-;4772:39;4802:8;4791:9;4772:39;:::i;:::-;4760:51;;4844:4;4840:9;4833:5;4829:21;4820:30;;4893:4;4883:8;4879:19;4872:5;4869:30;4859:40;;4588:317;;4512:393;;;;;:::o;4911:77::-;4948:7;4977:5;4966:16;;4911:77;;;:::o;4994:60::-;5022:3;5043:5;5036:12;;4994:60;;;:::o;5060:142::-;5110:9;5143:53;5161:34;5170:24;5188:5;5170:24;:::i;:::-;5161:34;:::i;:::-;5143:53;:::i;:::-;5130:66;;5060:142;;;:::o;5208:75::-;5251:3;5272:5;5265:12;;5208:75;;;:::o;5289:269::-;5399:39;5430:7;5399:39;:::i;:::-;5460:91;5509:41;5533:16;5509:41;:::i;:::-;5501:6;5494:4;5488:11;5460:91;:::i;:::-;5454:4;5447:105;5365:193;5289:269;;;:::o;5564:73::-;5609:3;5564:73;:::o;5643:189::-;5720:32;;:::i;:::-;5761:65;5819:6;5811;5805:4;5761:65;:::i;:::-;5696:136;5643:189;;:::o;5838:186::-;5898:120;5915:3;5908:5;5905:14;5898:120;;;5969:39;6006:1;5999:5;5969:39;:::i;:::-;5942:1;5935:5;5931:13;5922:22;;5898:120;;;5838:186;;:::o;6030:543::-;6131:2;6126:3;6123:11;6120:446;;;6165:38;6197:5;6165:38;:::i;:::-;6249:29;6267:10;6249:29;:::i;:::-;6239:8;6235:44;6432:2;6420:10;6417:18;6414:49;;;6453:8;6438:23;;6414:49;6476:80;6532:22;6550:3;6532:22;:::i;:::-;6522:8;6518:37;6505:11;6476:80;:::i;:::-;6135:431;;6120:446;6030:543;;;:::o;6579:117::-;6633:8;6683:5;6677:4;6673:16;6652:37;;6579:117;;;;:::o;6702:169::-;6746:6;6779:51;6827:1;6823:6;6815:5;6812:1;6808:13;6779:51;:::i;:::-;6775:56;6860:4;6854;6850:15;6840:25;;6753:118;6702:169;;;;:::o;6876:295::-;6952:4;7098:29;7123:3;7117:4;7098:29;:::i;:::-;7090:37;;7160:3;7157:1;7153:11;7147:4;7144:21;7136:29;;6876:295;;;;:::o;7176:1395::-;7293:37;7326:3;7293:37;:::i;:::-;7395:18;7387:6;7384:30;7381:56;;;7417:18;;:::i;:::-;7381:56;7461:38;7493:4;7487:11;7461:38;:::i;:::-;7546:67;7606:6;7598;7592:4;7546:67;:::i;:::-;7640:1;7664:4;7651:17;;7696:2;7688:6;7685:14;7713:1;7708:618;;;;8370:1;8387:6;8384:77;;;8436:9;8431:3;8427:19;8421:26;8412:35;;8384:77;8487:67;8547:6;8540:5;8487:67;:::i;:::-;8481:4;8474:81;8343:222;7678:887;;7708:618;7760:4;7756:9;7748:6;7744:22;7794:37;7826:4;7794:37;:::i;:::-;7853:1;7867:208;7881:7;7878:1;7875:14;7867:208;;;7960:9;7955:3;7951:19;7945:26;7937:6;7930:42;8011:1;8003:6;7999:14;7989:24;;8058:2;8047:9;8043:18;8030:31;;7904:4;7901:1;7897:12;7892:17;;7867:208;;;8103:6;8094:7;8091:19;8088:179;;;8161:9;8156:3;8152:19;8146:26;8204:48;8246:4;8238:6;8234:17;8223:9;8204:48;:::i;:::-;8196:6;8189:64;8111:156;8088:179;8313:1;8309;8301:6;8297:14;8293:22;8287:4;8280:36;7715:611;;;7678:887;;7268:1303;;;7176:1395;;:::o;461:2581:15:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_addTokenToAllTokensEnumeration_1339":{"entryPoint":8222,"id":1339,"parameterSlots":1,"returnSlots":0},"@_addTokenToOwnerEnumeration_1319":{"entryPoint":8869,"id":1319,"parameterSlots":2,"returnSlots":0},"@_afterTokenTransfer_978":{"entryPoint":6363,"id":978,"parameterSlots":3,"returnSlots":0},"@_approve_848":{"entryPoint":3670,"id":848,"parameterSlots":2,"returnSlots":0},"@_baseURI_326":{"entryPoint":6850,"id":326,"parameterSlots":0,"returnSlots":1},"@_beforeTokenTransfer_1289":{"entryPoint":7083,"id":1289,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_2525":{"entryPoint":6181,"id":2525,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_967":{"entryPoint":8217,"id":967,"parameterSlots":3,"returnSlots":0},"@_checkOnERC721Received_956":{"entryPoint":6459,"id":956,"parameterSlots":4,"returnSlots":1},"@_checkOwner_54":{"entryPoint":4618,"id":54,"parameterSlots":0,"returnSlots":0},"@_exists_545":{"entryPoint":6073,"id":545,"parameterSlots":1,"returnSlots":1},"@_isApprovedOrOwner_579":{"entryPoint":3855,"id":579,"parameterSlots":2,"returnSlots":1},"@_mint_689":{"entryPoint":7357,"id":689,"parameterSlots":2,"returnSlots":0},"@_msgSender_1941":{"entryPoint":3662,"id":1941,"parameterSlots":0,"returnSlots":1},"@_removeTokenFromAllTokensEnumeration_1450":{"entryPoint":8660,"id":1450,"parameterSlots":1,"returnSlots":0},"@_removeTokenFromOwnerEnumeration_1402":{"entryPoint":8295,"id":1402,"parameterSlots":2,"returnSlots":0},"@_requireMinted_894":{"entryPoint":3587,"id":894,"parameterSlots":1,"returnSlots":0},"@_safeMint_594":{"entryPoint":5342,"id":594,"parameterSlots":2,"returnSlots":0},"@_safeMint_623":{"entryPoint":6368,"id":623,"parameterSlots":3,"returnSlots":0},"@_safeTransfer_527":{"entryPoint":5481,"id":527,"parameterSlots":4,"returnSlots":0},"@_setApprovalForAll_880":{"entryPoint":4942,"id":880,"parameterSlots":3,"returnSlots":0},"@_setTokenURI_1545":{"entryPoint":5372,"id":1545,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_111":{"entryPoint":4744,"id":111,"parameterSlots":1,"returnSlots":0},"@_transfer_824":{"entryPoint":4004,"id":824,"parameterSlots":3,"returnSlots":0},"@approve_369":{"entryPoint":1328,"id":369,"parameterSlots":2,"returnSlots":0},"@balanceOf_230":{"entryPoint":2250,"id":230,"parameterSlots":1,"returnSlots":1},"@current_1969":{"entryPoint":5328,"id":1969,"parameterSlots":1,"returnSlots":1},"@getApproved_387":{"entryPoint":1258,"id":387,"parameterSlots":1,"returnSlots":1},"@hasCertificate_2371":{"entryPoint":1607,"id":2371,"parameterSlots":0,"returnSlots":0},"@increment_1983":{"entryPoint":5306,"id":1983,"parameterSlots":1,"returnSlots":0},"@isApprovedForAll_422":{"entryPoint":3186,"id":422,"parameterSlots":2,"returnSlots":1},"@isContract_1652":{"entryPoint":7830,"id":1652,"parameterSlots":1,"returnSlots":1},"@mintCertificate_2453":{"entryPoint":2663,"id":2453,"parameterSlots":3,"returnSlots":1},"@name_268":{"entryPoint":1112,"id":268,"parameterSlots":0,"returnSlots":1},"@ownerOf_258":{"entryPoint":2073,"id":258,"parameterSlots":1,"returnSlots":1},"@owner_40":{"entryPoint":2453,"id":40,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_68":{"entryPoint":2433,"id":68,"parameterSlots":0,"returnSlots":0},"@safeTransferFrom_468":{"entryPoint":1928,"id":468,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_498":{"entryPoint":3070,"id":498,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_404":{"entryPoint":2641,"id":404,"parameterSlots":2,"returnSlots":0},"@supportsInterface_1163":{"entryPoint":3465,"id":1163,"parameterSlots":1,"returnSlots":1},"@supportsInterface_206":{"entryPoint":5847,"id":206,"parameterSlots":1,"returnSlots":1},"@supportsInterface_2274":{"entryPoint":6977,"id":2274,"parameterSlots":1,"returnSlots":1},"@supportsInterface_2542":{"entryPoint":1094,"id":2542,"parameterSlots":1,"returnSlots":1},"@symbol_278":{"entryPoint":2495,"id":278,"parameterSlots":0,"returnSlots":1},"@toString_2113":{"entryPoint":7865,"id":2113,"parameterSlots":1,"returnSlots":1},"@tokenByIndex_1225":{"entryPoint":1960,"id":1225,"parameterSlots":1,"returnSlots":1},"@tokenOfOwnerByIndex_1191":{"entryPoint":1763,"id":1191,"parameterSlots":2,"returnSlots":1},"@tokenURI_1523":{"entryPoint":5573,"id":1523,"parameterSlots":1,"returnSlots":1},"@tokenURI_2486":{"entryPoint":3168,"id":2486,"parameterSlots":1,"returnSlots":1},"@tokenURI_317":{"entryPoint":6873,"id":317,"parameterSlots":1,"returnSlots":1},"@totalSupply_1202":{"entryPoint":1654,"id":1202,"parameterSlots":0,"returnSlots":1},"@transferFrom_449":{"entryPoint":1667,"id":449,"parameterSlots":3,"returnSlots":0},"@transferOwnership_91":{"entryPoint":3334,"id":91,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":10427,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":10155,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":9595,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":9873,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":9083,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":14145,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":10493,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":10221,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":9414,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":9805,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":10670,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":9722,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":10539,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":9894,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":9616,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_string_memory_ptr":{"entryPoint":10267,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bytes4":{"entryPoint":9104,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":14166,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":9435,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":9530,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":9161,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":14012,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":9290,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":13753,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c_to_t_string_memory_ptr_fromStack":{"entryPoint":11347,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack":{"entryPoint":13675,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":12086,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack":{"entryPoint":12232,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack":{"entryPoint":14360,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3054708b0a11b38511bc7d353b1f656d5fdd977e39d245846af7029381d44603_to_t_string_memory_ptr_fromStack":{"entryPoint":13917,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack":{"entryPoint":12378,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack":{"entryPoint":12745,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack":{"entryPoint":11794,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack":{"entryPoint":12891,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack":{"entryPoint":11055,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack":{"entryPoint":14252,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":12637,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack":{"entryPoint":11648,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack":{"entryPoint":10909,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c27c27ff6242e5bd79390ca1eefbf48595a03e84aa4e6aa818e3eb06e9b5656c_to_t_string_memory_ptr_fromStack":{"entryPoint":11940,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc_to_t_string_memory_ptr_fromStack":{"entryPoint":11493,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack":{"entryPoint":11201,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":9680,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":13802,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":9545,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":14069,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":9176,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9347,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11382,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13710,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12121,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12267,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14395,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3054708b0a11b38511bc7d353b1f656d5fdd977e39d245846af7029381d44603__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13952,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12413,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12780,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11829,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12926,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11090,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14287,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12672,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11683,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10944,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c27c27ff6242e5bd79390ca1eefbf48595a03e84aa4e6aa818e3eb06e9b5656c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11975,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11528,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11236,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":9695,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":10064,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":8996,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":10378,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":10091,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":12958,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":13984,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":9203,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":13995,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":9214,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":13742,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":12544,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":14546,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":12492,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":13245,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":9512,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":9149,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":9016,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":9480,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":9381,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":13210,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":13100,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":13386,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":10140,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":9231,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":12979,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":10781,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":13358,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":10015,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":13090,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":14427,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":13328,"id":null,"parameterSlots":2,"returnSlots":1},"mod_t_uint256":{"entryPoint":14595,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":12445,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":14499,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":10734,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":14644,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":11560,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":9968,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":13134,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":9958,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":9963,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":9011,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":9006,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":9273,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":12995,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":13315,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":13186,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c":{"entryPoint":11268,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e":{"entryPoint":13596,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":12007,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48":{"entryPoint":12153,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57":{"entryPoint":14319,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3054708b0a11b38511bc7d353b1f656d5fdd977e39d245846af7029381d44603":{"entryPoint":13838,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4":{"entryPoint":12299,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05":{"entryPoint":12704,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159":{"entryPoint":11715,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4":{"entryPoint":12812,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304":{"entryPoint":10976,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6":{"entryPoint":14211,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":12596,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f":{"entryPoint":11607,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942":{"entryPoint":10830,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c27c27ff6242e5bd79390ca1eefbf48595a03e84aa4e6aa818e3eb06e9b5656c":{"entryPoint":11861,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc":{"entryPoint":11414,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b":{"entryPoint":11122,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":13008,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":13144,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":9572,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":9850,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":9060,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":9391,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":13181,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:40107:17","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:17","statements":[{"nodeType":"YulAssignment","src":"57:19:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:17"},"nodeType":"YulFunctionCall","src":"67:9:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:17"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:17","type":""}],"src":"7:75:17"},{"body":{"nodeType":"YulBlock","src":"177:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:17"},"nodeType":"YulFunctionCall","src":"187:12:17"},"nodeType":"YulExpressionStatement","src":"187:12:17"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:17"},{"body":{"nodeType":"YulBlock","src":"300:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:17"},"nodeType":"YulFunctionCall","src":"310:12:17"},"nodeType":"YulExpressionStatement","src":"310:12:17"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:17"},{"body":{"nodeType":"YulBlock","src":"378:105:17","statements":[{"nodeType":"YulAssignment","src":"388:89:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:17","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:17"},"nodeType":"YulFunctionCall","src":"399:78:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:17"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:17","type":""}],"src":"334:149:17"},{"body":{"nodeType":"YulBlock","src":"531:78:17","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:17"},"nodeType":"YulFunctionCall","src":"589:12:17"},"nodeType":"YulExpressionStatement","src":"589:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:17"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:17"},"nodeType":"YulFunctionCall","src":"561:23:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:17"},"nodeType":"YulFunctionCall","src":"551:34:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:17"},"nodeType":"YulFunctionCall","src":"544:42:17"},"nodeType":"YulIf","src":"541:62:17"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:17","type":""}],"src":"489:120:17"},{"body":{"nodeType":"YulBlock","src":"666:86:17","statements":[{"nodeType":"YulAssignment","src":"676:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:17"},"nodeType":"YulFunctionCall","src":"685:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:17"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:17"},"nodeType":"YulFunctionCall","src":"714:32:17"},"nodeType":"YulExpressionStatement","src":"714:32:17"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:17","type":""}],"src":"615:137:17"},{"body":{"nodeType":"YulBlock","src":"823:262:17","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:17"},"nodeType":"YulFunctionCall","src":"871:79:17"},"nodeType":"YulExpressionStatement","src":"871:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:17"},"nodeType":"YulFunctionCall","src":"840:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:17"},"nodeType":"YulFunctionCall","src":"836:32:17"},"nodeType":"YulIf","src":"833:119:17"},{"nodeType":"YulBlock","src":"962:116:17","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:17","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:17"},"nodeType":"YulFunctionCall","src":"1036:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:17"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:17"},"nodeType":"YulFunctionCall","src":"1016:52:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:17"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:17","type":""}],"src":"758:327:17"},{"body":{"nodeType":"YulBlock","src":"1133:48:17","statements":[{"nodeType":"YulAssignment","src":"1143:32:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:17"},"nodeType":"YulFunctionCall","src":"1161:13:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:17"},"nodeType":"YulFunctionCall","src":"1154:21:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:17"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:17","type":""}],"src":"1091:90:17"},{"body":{"nodeType":"YulBlock","src":"1246:50:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:17"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:17"},"nodeType":"YulFunctionCall","src":"1268:21:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:17"},"nodeType":"YulFunctionCall","src":"1256:34:17"},"nodeType":"YulExpressionStatement","src":"1256:34:17"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:17","type":""}],"src":"1187:109:17"},{"body":{"nodeType":"YulBlock","src":"1394:118:17","statements":[{"nodeType":"YulAssignment","src":"1404:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:17"},"nodeType":"YulFunctionCall","src":"1412:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:17"},"nodeType":"YulFunctionCall","src":"1487:17:17"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:17"},"nodeType":"YulFunctionCall","src":"1440:65:17"},"nodeType":"YulExpressionStatement","src":"1440:65:17"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:17","type":""}],"src":"1302:210:17"},{"body":{"nodeType":"YulBlock","src":"1577:40:17","statements":[{"nodeType":"YulAssignment","src":"1588:22:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1604:5:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1598:5:17"},"nodeType":"YulFunctionCall","src":"1598:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1588:6:17"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1560:5:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1570:6:17","type":""}],"src":"1518:99:17"},{"body":{"nodeType":"YulBlock","src":"1719:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1736:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"1741:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1729:6:17"},"nodeType":"YulFunctionCall","src":"1729:19:17"},"nodeType":"YulExpressionStatement","src":"1729:19:17"},{"nodeType":"YulAssignment","src":"1757:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1776:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"1781:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:17"},"nodeType":"YulFunctionCall","src":"1772:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1757:11:17"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1691:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"1696:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1707:11:17","type":""}],"src":"1623:169:17"},{"body":{"nodeType":"YulBlock","src":"1860:184:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1870:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"1879:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1874:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"1939:63:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1964:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"1969:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1960:3:17"},"nodeType":"YulFunctionCall","src":"1960:11:17"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1983:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"1988:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1979:3:17"},"nodeType":"YulFunctionCall","src":"1979:11:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1973:5:17"},"nodeType":"YulFunctionCall","src":"1973:18:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1953:6:17"},"nodeType":"YulFunctionCall","src":"1953:39:17"},"nodeType":"YulExpressionStatement","src":"1953:39:17"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1900:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"1903:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1897:2:17"},"nodeType":"YulFunctionCall","src":"1897:13:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1911:19:17","statements":[{"nodeType":"YulAssignment","src":"1913:15:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1922:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"1925:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1918:3:17"},"nodeType":"YulFunctionCall","src":"1918:10:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1913:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"1893:3:17","statements":[]},"src":"1889:113:17"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2022:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"2027:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2018:3:17"},"nodeType":"YulFunctionCall","src":"2018:16:17"},{"kind":"number","nodeType":"YulLiteral","src":"2036:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2011:6:17"},"nodeType":"YulFunctionCall","src":"2011:27:17"},"nodeType":"YulExpressionStatement","src":"2011:27:17"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1842:3:17","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1847:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"1852:6:17","type":""}],"src":"1798:246:17"},{"body":{"nodeType":"YulBlock","src":"2098:54:17","statements":[{"nodeType":"YulAssignment","src":"2108:38:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2126:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"2133:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2122:3:17"},"nodeType":"YulFunctionCall","src":"2122:14:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2142:2:17","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2138:3:17"},"nodeType":"YulFunctionCall","src":"2138:7:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2118:3:17"},"nodeType":"YulFunctionCall","src":"2118:28:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2108:6:17"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2081:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2091:6:17","type":""}],"src":"2050:102:17"},{"body":{"nodeType":"YulBlock","src":"2250:285:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2260:53:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2307:5:17"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2274:32:17"},"nodeType":"YulFunctionCall","src":"2274:39:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2264:6:17","type":""}]},{"nodeType":"YulAssignment","src":"2322:78:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2388:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"2393:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2329:58:17"},"nodeType":"YulFunctionCall","src":"2329:71:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2322:3:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2448:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"2455:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2444:3:17"},"nodeType":"YulFunctionCall","src":"2444:16:17"},{"name":"pos","nodeType":"YulIdentifier","src":"2462:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"2467:6:17"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2409:34:17"},"nodeType":"YulFunctionCall","src":"2409:65:17"},"nodeType":"YulExpressionStatement","src":"2409:65:17"},{"nodeType":"YulAssignment","src":"2483:46:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2494:3:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2521:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2499:21:17"},"nodeType":"YulFunctionCall","src":"2499:29:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2490:3:17"},"nodeType":"YulFunctionCall","src":"2490:39:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2483:3:17"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2231:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2238:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2246:3:17","type":""}],"src":"2158:377:17"},{"body":{"nodeType":"YulBlock","src":"2659:195:17","statements":[{"nodeType":"YulAssignment","src":"2669:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2681:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2692:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2677:3:17"},"nodeType":"YulFunctionCall","src":"2677:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2669:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2716:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2727:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2712:3:17"},"nodeType":"YulFunctionCall","src":"2712:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2735:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"2741:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2731:3:17"},"nodeType":"YulFunctionCall","src":"2731:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2705:6:17"},"nodeType":"YulFunctionCall","src":"2705:47:17"},"nodeType":"YulExpressionStatement","src":"2705:47:17"},{"nodeType":"YulAssignment","src":"2761:86:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2833:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"2842:4:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2769:63:17"},"nodeType":"YulFunctionCall","src":"2769:78:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2761:4:17"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2631:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2643:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2654:4:17","type":""}],"src":"2541:313:17"},{"body":{"nodeType":"YulBlock","src":"2905:32:17","statements":[{"nodeType":"YulAssignment","src":"2915:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"2926:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2915:7:17"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2887:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2897:7:17","type":""}],"src":"2860:77:17"},{"body":{"nodeType":"YulBlock","src":"2986:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"3043:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3052:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3055:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3045:6:17"},"nodeType":"YulFunctionCall","src":"3045:12:17"},"nodeType":"YulExpressionStatement","src":"3045:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3009:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3034:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3016:17:17"},"nodeType":"YulFunctionCall","src":"3016:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3006:2:17"},"nodeType":"YulFunctionCall","src":"3006:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2999:6:17"},"nodeType":"YulFunctionCall","src":"2999:43:17"},"nodeType":"YulIf","src":"2996:63:17"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2979:5:17","type":""}],"src":"2943:122:17"},{"body":{"nodeType":"YulBlock","src":"3123:87:17","statements":[{"nodeType":"YulAssignment","src":"3133:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3155:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3142:12:17"},"nodeType":"YulFunctionCall","src":"3142:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3133:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3198:5:17"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3171:26:17"},"nodeType":"YulFunctionCall","src":"3171:33:17"},"nodeType":"YulExpressionStatement","src":"3171:33:17"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3101:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"3109:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3117:5:17","type":""}],"src":"3071:139:17"},{"body":{"nodeType":"YulBlock","src":"3282:263:17","statements":[{"body":{"nodeType":"YulBlock","src":"3328:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3330:77:17"},"nodeType":"YulFunctionCall","src":"3330:79:17"},"nodeType":"YulExpressionStatement","src":"3330:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3303:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"3312:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3299:3:17"},"nodeType":"YulFunctionCall","src":"3299:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"3324:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3295:3:17"},"nodeType":"YulFunctionCall","src":"3295:32:17"},"nodeType":"YulIf","src":"3292:119:17"},{"nodeType":"YulBlock","src":"3421:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3436:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"3450:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3440:6:17","type":""}]},{"nodeType":"YulAssignment","src":"3465:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3500:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"3511:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3496:3:17"},"nodeType":"YulFunctionCall","src":"3496:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3520:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3475:20:17"},"nodeType":"YulFunctionCall","src":"3475:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3465:6:17"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3252:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3263:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3275:6:17","type":""}],"src":"3216:329:17"},{"body":{"nodeType":"YulBlock","src":"3596:81:17","statements":[{"nodeType":"YulAssignment","src":"3606:65:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3621:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"3628:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3617:3:17"},"nodeType":"YulFunctionCall","src":"3617:54:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3606:7:17"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3578:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3588:7:17","type":""}],"src":"3551:126:17"},{"body":{"nodeType":"YulBlock","src":"3728:51:17","statements":[{"nodeType":"YulAssignment","src":"3738:35:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3767:5:17"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3749:17:17"},"nodeType":"YulFunctionCall","src":"3749:24:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3738:7:17"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3710:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3720:7:17","type":""}],"src":"3683:96:17"},{"body":{"nodeType":"YulBlock","src":"3850:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3867:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3890:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3872:17:17"},"nodeType":"YulFunctionCall","src":"3872:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3860:6:17"},"nodeType":"YulFunctionCall","src":"3860:37:17"},"nodeType":"YulExpressionStatement","src":"3860:37:17"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3838:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3845:3:17","type":""}],"src":"3785:118:17"},{"body":{"nodeType":"YulBlock","src":"4007:124:17","statements":[{"nodeType":"YulAssignment","src":"4017:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4029:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4040:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4025:3:17"},"nodeType":"YulFunctionCall","src":"4025:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4017:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4097:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4110:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4121:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4106:3:17"},"nodeType":"YulFunctionCall","src":"4106:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4053:43:17"},"nodeType":"YulFunctionCall","src":"4053:71:17"},"nodeType":"YulExpressionStatement","src":"4053:71:17"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3979:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3991:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4002:4:17","type":""}],"src":"3909:222:17"},{"body":{"nodeType":"YulBlock","src":"4180:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"4237:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4246:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4249:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4239:6:17"},"nodeType":"YulFunctionCall","src":"4239:12:17"},"nodeType":"YulExpressionStatement","src":"4239:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4203:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4228:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4210:17:17"},"nodeType":"YulFunctionCall","src":"4210:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4200:2:17"},"nodeType":"YulFunctionCall","src":"4200:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4193:6:17"},"nodeType":"YulFunctionCall","src":"4193:43:17"},"nodeType":"YulIf","src":"4190:63:17"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4173:5:17","type":""}],"src":"4137:122:17"},{"body":{"nodeType":"YulBlock","src":"4317:87:17","statements":[{"nodeType":"YulAssignment","src":"4327:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4349:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4336:12:17"},"nodeType":"YulFunctionCall","src":"4336:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4327:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4392:5:17"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"4365:26:17"},"nodeType":"YulFunctionCall","src":"4365:33:17"},"nodeType":"YulExpressionStatement","src":"4365:33:17"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4295:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"4303:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4311:5:17","type":""}],"src":"4265:139:17"},{"body":{"nodeType":"YulBlock","src":"4493:391:17","statements":[{"body":{"nodeType":"YulBlock","src":"4539:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4541:77:17"},"nodeType":"YulFunctionCall","src":"4541:79:17"},"nodeType":"YulExpressionStatement","src":"4541:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4514:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"4523:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4510:3:17"},"nodeType":"YulFunctionCall","src":"4510:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"4535:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4506:3:17"},"nodeType":"YulFunctionCall","src":"4506:32:17"},"nodeType":"YulIf","src":"4503:119:17"},{"nodeType":"YulBlock","src":"4632:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4647:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4661:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4651:6:17","type":""}]},{"nodeType":"YulAssignment","src":"4676:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4711:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"4722:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4707:3:17"},"nodeType":"YulFunctionCall","src":"4707:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4731:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4686:20:17"},"nodeType":"YulFunctionCall","src":"4686:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4676:6:17"}]}]},{"nodeType":"YulBlock","src":"4759:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4774:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4788:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4778:6:17","type":""}]},{"nodeType":"YulAssignment","src":"4804:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4839:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"4850:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4835:3:17"},"nodeType":"YulFunctionCall","src":"4835:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4859:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4814:20:17"},"nodeType":"YulFunctionCall","src":"4814:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4804:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4455:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4466:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4478:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4486:6:17","type":""}],"src":"4410:474:17"},{"body":{"nodeType":"YulBlock","src":"4955:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4972:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4995:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4977:17:17"},"nodeType":"YulFunctionCall","src":"4977:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4965:6:17"},"nodeType":"YulFunctionCall","src":"4965:37:17"},"nodeType":"YulExpressionStatement","src":"4965:37:17"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4943:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4950:3:17","type":""}],"src":"4890:118:17"},{"body":{"nodeType":"YulBlock","src":"5112:124:17","statements":[{"nodeType":"YulAssignment","src":"5122:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5134:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5145:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5130:3:17"},"nodeType":"YulFunctionCall","src":"5130:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5122:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5202:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5215:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5226:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5211:3:17"},"nodeType":"YulFunctionCall","src":"5211:17:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5158:43:17"},"nodeType":"YulFunctionCall","src":"5158:71:17"},"nodeType":"YulExpressionStatement","src":"5158:71:17"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5084:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5096:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5107:4:17","type":""}],"src":"5014:222:17"},{"body":{"nodeType":"YulBlock","src":"5342:519:17","statements":[{"body":{"nodeType":"YulBlock","src":"5388:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5390:77:17"},"nodeType":"YulFunctionCall","src":"5390:79:17"},"nodeType":"YulExpressionStatement","src":"5390:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5363:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"5372:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5359:3:17"},"nodeType":"YulFunctionCall","src":"5359:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"5384:2:17","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5355:3:17"},"nodeType":"YulFunctionCall","src":"5355:32:17"},"nodeType":"YulIf","src":"5352:119:17"},{"nodeType":"YulBlock","src":"5481:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5496:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"5510:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5500:6:17","type":""}]},{"nodeType":"YulAssignment","src":"5525:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5560:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"5571:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5556:3:17"},"nodeType":"YulFunctionCall","src":"5556:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5580:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5535:20:17"},"nodeType":"YulFunctionCall","src":"5535:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5525:6:17"}]}]},{"nodeType":"YulBlock","src":"5608:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5623:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"5637:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5627:6:17","type":""}]},{"nodeType":"YulAssignment","src":"5653:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5688:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"5699:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5684:3:17"},"nodeType":"YulFunctionCall","src":"5684:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5708:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5663:20:17"},"nodeType":"YulFunctionCall","src":"5663:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5653:6:17"}]}]},{"nodeType":"YulBlock","src":"5736:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5751:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"5765:2:17","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5755:6:17","type":""}]},{"nodeType":"YulAssignment","src":"5781:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5816:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"5827:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5812:3:17"},"nodeType":"YulFunctionCall","src":"5812:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5836:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5791:20:17"},"nodeType":"YulFunctionCall","src":"5791:53:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5781:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5296:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5307:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5319:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5327:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5335:6:17","type":""}],"src":"5242:619:17"},{"body":{"nodeType":"YulBlock","src":"5933:263:17","statements":[{"body":{"nodeType":"YulBlock","src":"5979:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5981:77:17"},"nodeType":"YulFunctionCall","src":"5981:79:17"},"nodeType":"YulExpressionStatement","src":"5981:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5954:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"5963:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5950:3:17"},"nodeType":"YulFunctionCall","src":"5950:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"5975:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5946:3:17"},"nodeType":"YulFunctionCall","src":"5946:32:17"},"nodeType":"YulIf","src":"5943:119:17"},{"nodeType":"YulBlock","src":"6072:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"6087:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"6101:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6091:6:17","type":""}]},{"nodeType":"YulAssignment","src":"6116:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6151:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"6162:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6147:3:17"},"nodeType":"YulFunctionCall","src":"6147:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6171:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6126:20:17"},"nodeType":"YulFunctionCall","src":"6126:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6116:6:17"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5903:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5914:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5926:6:17","type":""}],"src":"5867:329:17"},{"body":{"nodeType":"YulBlock","src":"6242:76:17","statements":[{"body":{"nodeType":"YulBlock","src":"6296:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6305:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6308:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6298:6:17"},"nodeType":"YulFunctionCall","src":"6298:12:17"},"nodeType":"YulExpressionStatement","src":"6298:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6265:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6287:5:17"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"6272:14:17"},"nodeType":"YulFunctionCall","src":"6272:21:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6262:2:17"},"nodeType":"YulFunctionCall","src":"6262:32:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6255:6:17"},"nodeType":"YulFunctionCall","src":"6255:40:17"},"nodeType":"YulIf","src":"6252:60:17"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6235:5:17","type":""}],"src":"6202:116:17"},{"body":{"nodeType":"YulBlock","src":"6373:84:17","statements":[{"nodeType":"YulAssignment","src":"6383:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6405:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6392:12:17"},"nodeType":"YulFunctionCall","src":"6392:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6383:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6445:5:17"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"6421:23:17"},"nodeType":"YulFunctionCall","src":"6421:30:17"},"nodeType":"YulExpressionStatement","src":"6421:30:17"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6351:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"6359:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6367:5:17","type":""}],"src":"6324:133:17"},{"body":{"nodeType":"YulBlock","src":"6543:388:17","statements":[{"body":{"nodeType":"YulBlock","src":"6589:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6591:77:17"},"nodeType":"YulFunctionCall","src":"6591:79:17"},"nodeType":"YulExpressionStatement","src":"6591:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6564:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"6573:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6560:3:17"},"nodeType":"YulFunctionCall","src":"6560:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"6585:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6556:3:17"},"nodeType":"YulFunctionCall","src":"6556:32:17"},"nodeType":"YulIf","src":"6553:119:17"},{"nodeType":"YulBlock","src":"6682:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"6697:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"6711:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6701:6:17","type":""}]},{"nodeType":"YulAssignment","src":"6726:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6761:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"6772:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6757:3:17"},"nodeType":"YulFunctionCall","src":"6757:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6781:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6736:20:17"},"nodeType":"YulFunctionCall","src":"6736:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6726:6:17"}]}]},{"nodeType":"YulBlock","src":"6809:115:17","statements":[{"nodeType":"YulVariableDeclaration","src":"6824:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"6838:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6828:6:17","type":""}]},{"nodeType":"YulAssignment","src":"6854:60:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6886:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"6897:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6882:3:17"},"nodeType":"YulFunctionCall","src":"6882:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6906:7:17"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"6864:17:17"},"nodeType":"YulFunctionCall","src":"6864:50:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6854:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6505:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6516:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6528:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6536:6:17","type":""}],"src":"6463:468:17"},{"body":{"nodeType":"YulBlock","src":"7026:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7043:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7046:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7036:6:17"},"nodeType":"YulFunctionCall","src":"7036:12:17"},"nodeType":"YulExpressionStatement","src":"7036:12:17"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"6937:117:17"},{"body":{"nodeType":"YulBlock","src":"7149:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7166:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7169:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7159:6:17"},"nodeType":"YulFunctionCall","src":"7159:12:17"},"nodeType":"YulExpressionStatement","src":"7159:12:17"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"7060:117:17"},{"body":{"nodeType":"YulBlock","src":"7211:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7228:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7231:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7221:6:17"},"nodeType":"YulFunctionCall","src":"7221:88:17"},"nodeType":"YulExpressionStatement","src":"7221:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7325:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7328:4:17","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7318:6:17"},"nodeType":"YulFunctionCall","src":"7318:15:17"},"nodeType":"YulExpressionStatement","src":"7318:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7349:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7352:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7342:6:17"},"nodeType":"YulFunctionCall","src":"7342:15:17"},"nodeType":"YulExpressionStatement","src":"7342:15:17"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"7183:180:17"},{"body":{"nodeType":"YulBlock","src":"7412:238:17","statements":[{"nodeType":"YulVariableDeclaration","src":"7422:58:17","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7444:6:17"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"7474:4:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7452:21:17"},"nodeType":"YulFunctionCall","src":"7452:27:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7440:3:17"},"nodeType":"YulFunctionCall","src":"7440:40:17"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"7426:10:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"7591:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7593:16:17"},"nodeType":"YulFunctionCall","src":"7593:18:17"},"nodeType":"YulExpressionStatement","src":"7593:18:17"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7534:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"7546:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7531:2:17"},"nodeType":"YulFunctionCall","src":"7531:34:17"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7570:10:17"},{"name":"memPtr","nodeType":"YulIdentifier","src":"7582:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7567:2:17"},"nodeType":"YulFunctionCall","src":"7567:22:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7528:2:17"},"nodeType":"YulFunctionCall","src":"7528:62:17"},"nodeType":"YulIf","src":"7525:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7629:2:17","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7633:10:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7622:6:17"},"nodeType":"YulFunctionCall","src":"7622:22:17"},"nodeType":"YulExpressionStatement","src":"7622:22:17"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7398:6:17","type":""},{"name":"size","nodeType":"YulTypedName","src":"7406:4:17","type":""}],"src":"7369:281:17"},{"body":{"nodeType":"YulBlock","src":"7697:88:17","statements":[{"nodeType":"YulAssignment","src":"7707:30:17","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"7717:18:17"},"nodeType":"YulFunctionCall","src":"7717:20:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7707:6:17"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7766:6:17"},{"name":"size","nodeType":"YulIdentifier","src":"7774:4:17"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"7746:19:17"},"nodeType":"YulFunctionCall","src":"7746:33:17"},"nodeType":"YulExpressionStatement","src":"7746:33:17"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"7681:4:17","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"7690:6:17","type":""}],"src":"7656:129:17"},{"body":{"nodeType":"YulBlock","src":"7858:241:17","statements":[{"body":{"nodeType":"YulBlock","src":"7963:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7965:16:17"},"nodeType":"YulFunctionCall","src":"7965:18:17"},"nodeType":"YulExpressionStatement","src":"7965:18:17"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7935:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"7943:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7932:2:17"},"nodeType":"YulFunctionCall","src":"7932:30:17"},"nodeType":"YulIf","src":"7929:56:17"},{"nodeType":"YulAssignment","src":"7995:37:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8025:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8003:21:17"},"nodeType":"YulFunctionCall","src":"8003:29:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"7995:4:17"}]},{"nodeType":"YulAssignment","src":"8069:23:17","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"8081:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"8087:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8077:3:17"},"nodeType":"YulFunctionCall","src":"8077:15:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8069:4:17"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"7842:6:17","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"7853:4:17","type":""}],"src":"7791:308:17"},{"body":{"nodeType":"YulBlock","src":"8169:82:17","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8192:3:17"},{"name":"src","nodeType":"YulIdentifier","src":"8197:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"8202:6:17"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"8179:12:17"},"nodeType":"YulFunctionCall","src":"8179:30:17"},"nodeType":"YulExpressionStatement","src":"8179:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8229:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"8234:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8225:3:17"},"nodeType":"YulFunctionCall","src":"8225:16:17"},{"kind":"number","nodeType":"YulLiteral","src":"8243:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8218:6:17"},"nodeType":"YulFunctionCall","src":"8218:27:17"},"nodeType":"YulExpressionStatement","src":"8218:27:17"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8151:3:17","type":""},{"name":"dst","nodeType":"YulTypedName","src":"8156:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"8161:6:17","type":""}],"src":"8105:146:17"},{"body":{"nodeType":"YulBlock","src":"8341:341:17","statements":[{"nodeType":"YulAssignment","src":"8351:75:17","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8418:6:17"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"8376:41:17"},"nodeType":"YulFunctionCall","src":"8376:49:17"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"8360:15:17"},"nodeType":"YulFunctionCall","src":"8360:66:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8351:5:17"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8442:5:17"},{"name":"length","nodeType":"YulIdentifier","src":"8449:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8435:6:17"},"nodeType":"YulFunctionCall","src":"8435:21:17"},"nodeType":"YulExpressionStatement","src":"8435:21:17"},{"nodeType":"YulVariableDeclaration","src":"8465:27:17","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8480:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"8487:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8476:3:17"},"nodeType":"YulFunctionCall","src":"8476:16:17"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"8469:3:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"8530:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"8532:77:17"},"nodeType":"YulFunctionCall","src":"8532:79:17"},"nodeType":"YulExpressionStatement","src":"8532:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8511:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"8516:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8507:3:17"},"nodeType":"YulFunctionCall","src":"8507:16:17"},{"name":"end","nodeType":"YulIdentifier","src":"8525:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8504:2:17"},"nodeType":"YulFunctionCall","src":"8504:25:17"},"nodeType":"YulIf","src":"8501:112:17"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8659:3:17"},{"name":"dst","nodeType":"YulIdentifier","src":"8664:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"8669:6:17"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"8622:36:17"},"nodeType":"YulFunctionCall","src":"8622:54:17"},"nodeType":"YulExpressionStatement","src":"8622:54:17"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8314:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"8319:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"8327:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8335:5:17","type":""}],"src":"8257:425:17"},{"body":{"nodeType":"YulBlock","src":"8764:278:17","statements":[{"body":{"nodeType":"YulBlock","src":"8813:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"8815:77:17"},"nodeType":"YulFunctionCall","src":"8815:79:17"},"nodeType":"YulExpressionStatement","src":"8815:79:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8792:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"8800:4:17","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8788:3:17"},"nodeType":"YulFunctionCall","src":"8788:17:17"},{"name":"end","nodeType":"YulIdentifier","src":"8807:3:17"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8784:3:17"},"nodeType":"YulFunctionCall","src":"8784:27:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8777:6:17"},"nodeType":"YulFunctionCall","src":"8777:35:17"},"nodeType":"YulIf","src":"8774:122:17"},{"nodeType":"YulVariableDeclaration","src":"8905:34:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8932:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8919:12:17"},"nodeType":"YulFunctionCall","src":"8919:20:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8909:6:17","type":""}]},{"nodeType":"YulAssignment","src":"8948:88:17","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9009:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"9017:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9005:3:17"},"nodeType":"YulFunctionCall","src":"9005:17:17"},{"name":"length","nodeType":"YulIdentifier","src":"9024:6:17"},{"name":"end","nodeType":"YulIdentifier","src":"9032:3:17"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"8957:47:17"},"nodeType":"YulFunctionCall","src":"8957:79:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8948:5:17"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8742:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"8750:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8758:5:17","type":""}],"src":"8702:340:17"},{"body":{"nodeType":"YulBlock","src":"9158:689:17","statements":[{"body":{"nodeType":"YulBlock","src":"9204:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9206:77:17"},"nodeType":"YulFunctionCall","src":"9206:79:17"},"nodeType":"YulExpressionStatement","src":"9206:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9179:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"9188:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9175:3:17"},"nodeType":"YulFunctionCall","src":"9175:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"9200:2:17","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9171:3:17"},"nodeType":"YulFunctionCall","src":"9171:32:17"},"nodeType":"YulIf","src":"9168:119:17"},{"nodeType":"YulBlock","src":"9297:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"9312:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"9326:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9316:6:17","type":""}]},{"nodeType":"YulAssignment","src":"9341:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9376:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"9387:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9372:3:17"},"nodeType":"YulFunctionCall","src":"9372:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9396:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9351:20:17"},"nodeType":"YulFunctionCall","src":"9351:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9341:6:17"}]}]},{"nodeType":"YulBlock","src":"9424:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"9439:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"9453:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9443:6:17","type":""}]},{"nodeType":"YulAssignment","src":"9469:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9504:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"9515:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9500:3:17"},"nodeType":"YulFunctionCall","src":"9500:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9524:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9479:20:17"},"nodeType":"YulFunctionCall","src":"9479:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9469:6:17"}]}]},{"nodeType":"YulBlock","src":"9552:288:17","statements":[{"nodeType":"YulVariableDeclaration","src":"9567:46:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9598:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9609:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9594:3:17"},"nodeType":"YulFunctionCall","src":"9594:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9581:12:17"},"nodeType":"YulFunctionCall","src":"9581:32:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9571:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"9660:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"9662:77:17"},"nodeType":"YulFunctionCall","src":"9662:79:17"},"nodeType":"YulExpressionStatement","src":"9662:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9632:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"9640:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9629:2:17"},"nodeType":"YulFunctionCall","src":"9629:30:17"},"nodeType":"YulIf","src":"9626:117:17"},{"nodeType":"YulAssignment","src":"9757:73:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9802:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"9813:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9798:3:17"},"nodeType":"YulFunctionCall","src":"9798:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9822:7:17"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"9767:30:17"},"nodeType":"YulFunctionCall","src":"9767:63:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"9757:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9112:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9123:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9135:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9143:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9151:6:17","type":""}],"src":"9048:799:17"},{"body":{"nodeType":"YulBlock","src":"9919:241:17","statements":[{"body":{"nodeType":"YulBlock","src":"10024:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"10026:16:17"},"nodeType":"YulFunctionCall","src":"10026:18:17"},"nodeType":"YulExpressionStatement","src":"10026:18:17"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9996:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"10004:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9993:2:17"},"nodeType":"YulFunctionCall","src":"9993:30:17"},"nodeType":"YulIf","src":"9990:56:17"},{"nodeType":"YulAssignment","src":"10056:37:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10086:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"10064:21:17"},"nodeType":"YulFunctionCall","src":"10064:29:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"10056:4:17"}]},{"nodeType":"YulAssignment","src":"10130:23:17","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"10142:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"10148:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10138:3:17"},"nodeType":"YulFunctionCall","src":"10138:15:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"10130:4:17"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"9903:6:17","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"9914:4:17","type":""}],"src":"9853:307:17"},{"body":{"nodeType":"YulBlock","src":"10249:340:17","statements":[{"nodeType":"YulAssignment","src":"10259:74:17","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10325:6:17"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"10284:40:17"},"nodeType":"YulFunctionCall","src":"10284:48:17"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"10268:15:17"},"nodeType":"YulFunctionCall","src":"10268:65:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"10259:5:17"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"10349:5:17"},{"name":"length","nodeType":"YulIdentifier","src":"10356:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10342:6:17"},"nodeType":"YulFunctionCall","src":"10342:21:17"},"nodeType":"YulExpressionStatement","src":"10342:21:17"},{"nodeType":"YulVariableDeclaration","src":"10372:27:17","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"10387:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"10394:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10383:3:17"},"nodeType":"YulFunctionCall","src":"10383:16:17"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"10376:3:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"10437:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"10439:77:17"},"nodeType":"YulFunctionCall","src":"10439:79:17"},"nodeType":"YulExpressionStatement","src":"10439:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10418:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"10423:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10414:3:17"},"nodeType":"YulFunctionCall","src":"10414:16:17"},{"name":"end","nodeType":"YulIdentifier","src":"10432:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10411:2:17"},"nodeType":"YulFunctionCall","src":"10411:25:17"},"nodeType":"YulIf","src":"10408:112:17"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10566:3:17"},{"name":"dst","nodeType":"YulIdentifier","src":"10571:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"10576:6:17"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"10529:36:17"},"nodeType":"YulFunctionCall","src":"10529:54:17"},"nodeType":"YulExpressionStatement","src":"10529:54:17"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"10222:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"10227:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"10235:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"10243:5:17","type":""}],"src":"10166:423:17"},{"body":{"nodeType":"YulBlock","src":"10669:277:17","statements":[{"body":{"nodeType":"YulBlock","src":"10718:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"10720:77:17"},"nodeType":"YulFunctionCall","src":"10720:79:17"},"nodeType":"YulExpressionStatement","src":"10720:79:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10697:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"10705:4:17","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10693:3:17"},"nodeType":"YulFunctionCall","src":"10693:17:17"},{"name":"end","nodeType":"YulIdentifier","src":"10712:3:17"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10689:3:17"},"nodeType":"YulFunctionCall","src":"10689:27:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10682:6:17"},"nodeType":"YulFunctionCall","src":"10682:35:17"},"nodeType":"YulIf","src":"10679:122:17"},{"nodeType":"YulVariableDeclaration","src":"10810:34:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10837:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10824:12:17"},"nodeType":"YulFunctionCall","src":"10824:20:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"10814:6:17","type":""}]},{"nodeType":"YulAssignment","src":"10853:87:17","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10913:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"10921:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10909:3:17"},"nodeType":"YulFunctionCall","src":"10909:17:17"},{"name":"length","nodeType":"YulIdentifier","src":"10928:6:17"},{"name":"end","nodeType":"YulIdentifier","src":"10936:3:17"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"10862:46:17"},"nodeType":"YulFunctionCall","src":"10862:78:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"10853:5:17"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"10647:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"10655:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"10663:5:17","type":""}],"src":"10608:338:17"},{"body":{"nodeType":"YulBlock","src":"11078:817:17","statements":[{"body":{"nodeType":"YulBlock","src":"11125:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11127:77:17"},"nodeType":"YulFunctionCall","src":"11127:79:17"},"nodeType":"YulExpressionStatement","src":"11127:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11099:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"11108:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11095:3:17"},"nodeType":"YulFunctionCall","src":"11095:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"11120:3:17","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11091:3:17"},"nodeType":"YulFunctionCall","src":"11091:33:17"},"nodeType":"YulIf","src":"11088:120:17"},{"nodeType":"YulBlock","src":"11218:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"11233:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"11247:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11237:6:17","type":""}]},{"nodeType":"YulAssignment","src":"11262:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11297:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"11308:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11293:3:17"},"nodeType":"YulFunctionCall","src":"11293:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11317:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11272:20:17"},"nodeType":"YulFunctionCall","src":"11272:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11262:6:17"}]}]},{"nodeType":"YulBlock","src":"11345:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"11360:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"11374:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11364:6:17","type":""}]},{"nodeType":"YulAssignment","src":"11390:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11425:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"11436:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11421:3:17"},"nodeType":"YulFunctionCall","src":"11421:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11445:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11400:20:17"},"nodeType":"YulFunctionCall","src":"11400:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11390:6:17"}]}]},{"nodeType":"YulBlock","src":"11473:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"11488:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"11502:2:17","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11492:6:17","type":""}]},{"nodeType":"YulAssignment","src":"11518:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11553:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"11564:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11549:3:17"},"nodeType":"YulFunctionCall","src":"11549:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11573:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"11528:20:17"},"nodeType":"YulFunctionCall","src":"11528:53:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"11518:6:17"}]}]},{"nodeType":"YulBlock","src":"11601:287:17","statements":[{"nodeType":"YulVariableDeclaration","src":"11616:46:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11647:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"11658:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11643:3:17"},"nodeType":"YulFunctionCall","src":"11643:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11630:12:17"},"nodeType":"YulFunctionCall","src":"11630:32:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11620:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"11709:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"11711:77:17"},"nodeType":"YulFunctionCall","src":"11711:79:17"},"nodeType":"YulExpressionStatement","src":"11711:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11681:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"11689:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11678:2:17"},"nodeType":"YulFunctionCall","src":"11678:30:17"},"nodeType":"YulIf","src":"11675:117:17"},{"nodeType":"YulAssignment","src":"11806:72:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11850:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"11861:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11846:3:17"},"nodeType":"YulFunctionCall","src":"11846:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11870:7:17"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"11816:29:17"},"nodeType":"YulFunctionCall","src":"11816:62:17"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"11806:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11024:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11035:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11047:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11055:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11063:6:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11071:6:17","type":""}],"src":"10952:943:17"},{"body":{"nodeType":"YulBlock","src":"11984:391:17","statements":[{"body":{"nodeType":"YulBlock","src":"12030:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12032:77:17"},"nodeType":"YulFunctionCall","src":"12032:79:17"},"nodeType":"YulExpressionStatement","src":"12032:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12005:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"12014:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12001:3:17"},"nodeType":"YulFunctionCall","src":"12001:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"12026:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11997:3:17"},"nodeType":"YulFunctionCall","src":"11997:32:17"},"nodeType":"YulIf","src":"11994:119:17"},{"nodeType":"YulBlock","src":"12123:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"12138:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"12152:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12142:6:17","type":""}]},{"nodeType":"YulAssignment","src":"12167:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12202:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"12213:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12198:3:17"},"nodeType":"YulFunctionCall","src":"12198:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12222:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"12177:20:17"},"nodeType":"YulFunctionCall","src":"12177:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12167:6:17"}]}]},{"nodeType":"YulBlock","src":"12250:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"12265:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"12279:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12269:6:17","type":""}]},{"nodeType":"YulAssignment","src":"12295:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12330:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"12341:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12326:3:17"},"nodeType":"YulFunctionCall","src":"12326:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12350:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"12305:20:17"},"nodeType":"YulFunctionCall","src":"12305:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12295:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11946:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11957:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11969:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11977:6:17","type":""}],"src":"11901:474:17"},{"body":{"nodeType":"YulBlock","src":"12409:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12426:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12429:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12419:6:17"},"nodeType":"YulFunctionCall","src":"12419:88:17"},"nodeType":"YulExpressionStatement","src":"12419:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12523:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12526:4:17","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12516:6:17"},"nodeType":"YulFunctionCall","src":"12516:15:17"},"nodeType":"YulExpressionStatement","src":"12516:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12547:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12550:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12540:6:17"},"nodeType":"YulFunctionCall","src":"12540:15:17"},"nodeType":"YulExpressionStatement","src":"12540:15:17"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"12381:180:17"},{"body":{"nodeType":"YulBlock","src":"12618:269:17","statements":[{"nodeType":"YulAssignment","src":"12628:22:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"12642:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"12648:1:17","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"12638:3:17"},"nodeType":"YulFunctionCall","src":"12638:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"12628:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"12659:38:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"12689:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"12695:1:17","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12685:3:17"},"nodeType":"YulFunctionCall","src":"12685:12:17"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"12663:18:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"12736:51:17","statements":[{"nodeType":"YulAssignment","src":"12750:27:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12764:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"12772:4:17","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12760:3:17"},"nodeType":"YulFunctionCall","src":"12760:17:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"12750:6:17"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"12716:18:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12709:6:17"},"nodeType":"YulFunctionCall","src":"12709:26:17"},"nodeType":"YulIf","src":"12706:81:17"},{"body":{"nodeType":"YulBlock","src":"12839:42:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"12853:16:17"},"nodeType":"YulFunctionCall","src":"12853:18:17"},"nodeType":"YulExpressionStatement","src":"12853:18:17"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"12803:18:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12826:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"12834:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12823:2:17"},"nodeType":"YulFunctionCall","src":"12823:14:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"12800:2:17"},"nodeType":"YulFunctionCall","src":"12800:38:17"},"nodeType":"YulIf","src":"12797:84:17"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"12602:4:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"12611:6:17","type":""}],"src":"12567:320:17"},{"body":{"nodeType":"YulBlock","src":"12999:114:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13021:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"13029:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13017:3:17"},"nodeType":"YulFunctionCall","src":"13017:14:17"},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e65","kind":"string","nodeType":"YulLiteral","src":"13033:34:17","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13010:6:17"},"nodeType":"YulFunctionCall","src":"13010:58:17"},"nodeType":"YulExpressionStatement","src":"13010:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13089:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"13097:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13085:3:17"},"nodeType":"YulFunctionCall","src":"13085:15:17"},{"hexValue":"72","kind":"string","nodeType":"YulLiteral","src":"13102:3:17","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13078:6:17"},"nodeType":"YulFunctionCall","src":"13078:28:17"},"nodeType":"YulExpressionStatement","src":"13078:28:17"}]},"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12991:6:17","type":""}],"src":"12893:220:17"},{"body":{"nodeType":"YulBlock","src":"13265:220:17","statements":[{"nodeType":"YulAssignment","src":"13275:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13341:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"13346:2:17","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13282:58:17"},"nodeType":"YulFunctionCall","src":"13282:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13275:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13447:3:17"}],"functionName":{"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulIdentifier","src":"13358:88:17"},"nodeType":"YulFunctionCall","src":"13358:93:17"},"nodeType":"YulExpressionStatement","src":"13358:93:17"},{"nodeType":"YulAssignment","src":"13460:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13471:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"13476:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13467:3:17"},"nodeType":"YulFunctionCall","src":"13467:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13460:3:17"}]}]},"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13253:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13261:3:17","type":""}],"src":"13119:366:17"},{"body":{"nodeType":"YulBlock","src":"13662:248:17","statements":[{"nodeType":"YulAssignment","src":"13672:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13684:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"13695:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13680:3:17"},"nodeType":"YulFunctionCall","src":"13680:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13672:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13719:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"13730:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13715:3:17"},"nodeType":"YulFunctionCall","src":"13715:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13738:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"13744:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13734:3:17"},"nodeType":"YulFunctionCall","src":"13734:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13708:6:17"},"nodeType":"YulFunctionCall","src":"13708:47:17"},"nodeType":"YulExpressionStatement","src":"13708:47:17"},{"nodeType":"YulAssignment","src":"13764:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13898:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13772:124:17"},"nodeType":"YulFunctionCall","src":"13772:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13764:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13642:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13657:4:17","type":""}],"src":"13491:419:17"},{"body":{"nodeType":"YulBlock","src":"14022:143:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14044:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"14052:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14040:3:17"},"nodeType":"YulFunctionCall","src":"14040:14:17"},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f","kind":"string","nodeType":"YulLiteral","src":"14056:34:17","type":"","value":"ERC721: approve caller is not to"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14033:6:17"},"nodeType":"YulFunctionCall","src":"14033:58:17"},"nodeType":"YulExpressionStatement","src":"14033:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14112:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"14120:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14108:3:17"},"nodeType":"YulFunctionCall","src":"14108:15:17"},{"hexValue":"6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c","kind":"string","nodeType":"YulLiteral","src":"14125:32:17","type":"","value":"ken owner nor approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14101:6:17"},"nodeType":"YulFunctionCall","src":"14101:57:17"},"nodeType":"YulExpressionStatement","src":"14101:57:17"}]},"name":"store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14014:6:17","type":""}],"src":"13916:249:17"},{"body":{"nodeType":"YulBlock","src":"14317:220:17","statements":[{"nodeType":"YulAssignment","src":"14327:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14393:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"14398:2:17","type":"","value":"62"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14334:58:17"},"nodeType":"YulFunctionCall","src":"14334:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14327:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14499:3:17"}],"functionName":{"name":"store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304","nodeType":"YulIdentifier","src":"14410:88:17"},"nodeType":"YulFunctionCall","src":"14410:93:17"},"nodeType":"YulExpressionStatement","src":"14410:93:17"},{"nodeType":"YulAssignment","src":"14512:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14523:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"14528:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14519:3:17"},"nodeType":"YulFunctionCall","src":"14519:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14512:3:17"}]}]},"name":"abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14305:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14313:3:17","type":""}],"src":"14171:366:17"},{"body":{"nodeType":"YulBlock","src":"14714:248:17","statements":[{"nodeType":"YulAssignment","src":"14724:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14736:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"14747:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14732:3:17"},"nodeType":"YulFunctionCall","src":"14732:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14724:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14771:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"14782:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14767:3:17"},"nodeType":"YulFunctionCall","src":"14767:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14790:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"14796:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14786:3:17"},"nodeType":"YulFunctionCall","src":"14786:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14760:6:17"},"nodeType":"YulFunctionCall","src":"14760:47:17"},"nodeType":"YulExpressionStatement","src":"14760:47:17"},{"nodeType":"YulAssignment","src":"14816:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14950:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14824:124:17"},"nodeType":"YulFunctionCall","src":"14824:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14816:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14694:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14709:4:17","type":""}],"src":"14543:419:17"},{"body":{"nodeType":"YulBlock","src":"15074:127:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15096:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"15104:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15092:3:17"},"nodeType":"YulFunctionCall","src":"15092:14:17"},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65","kind":"string","nodeType":"YulLiteral","src":"15108:34:17","type":"","value":"ERC721: caller is not token owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15085:6:17"},"nodeType":"YulFunctionCall","src":"15085:58:17"},"nodeType":"YulExpressionStatement","src":"15085:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15164:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"15172:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15160:3:17"},"nodeType":"YulFunctionCall","src":"15160:15:17"},{"hexValue":"72206e6f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"15177:16:17","type":"","value":"r nor approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15153:6:17"},"nodeType":"YulFunctionCall","src":"15153:41:17"},"nodeType":"YulExpressionStatement","src":"15153:41:17"}]},"name":"store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15066:6:17","type":""}],"src":"14968:233:17"},{"body":{"nodeType":"YulBlock","src":"15353:220:17","statements":[{"nodeType":"YulAssignment","src":"15363:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15429:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"15434:2:17","type":"","value":"46"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15370:58:17"},"nodeType":"YulFunctionCall","src":"15370:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15363:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15535:3:17"}],"functionName":{"name":"store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b","nodeType":"YulIdentifier","src":"15446:88:17"},"nodeType":"YulFunctionCall","src":"15446:93:17"},"nodeType":"YulExpressionStatement","src":"15446:93:17"},{"nodeType":"YulAssignment","src":"15548:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15559:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"15564:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15555:3:17"},"nodeType":"YulFunctionCall","src":"15555:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15548:3:17"}]}]},"name":"abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15341:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15349:3:17","type":""}],"src":"15207:366:17"},{"body":{"nodeType":"YulBlock","src":"15750:248:17","statements":[{"nodeType":"YulAssignment","src":"15760:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15772:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"15783:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15768:3:17"},"nodeType":"YulFunctionCall","src":"15768:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15760:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15807:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"15818:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15803:3:17"},"nodeType":"YulFunctionCall","src":"15803:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15826:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"15832:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15822:3:17"},"nodeType":"YulFunctionCall","src":"15822:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15796:6:17"},"nodeType":"YulFunctionCall","src":"15796:47:17"},"nodeType":"YulExpressionStatement","src":"15796:47:17"},{"nodeType":"YulAssignment","src":"15852:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15986:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15860:124:17"},"nodeType":"YulFunctionCall","src":"15860:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15852:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15730:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15745:4:17","type":""}],"src":"15579:419:17"},{"body":{"nodeType":"YulBlock","src":"16110:124:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16132:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"16140:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16128:3:17"},"nodeType":"YulFunctionCall","src":"16128:14:17"},{"hexValue":"455243373231456e756d657261626c653a206f776e657220696e646578206f75","kind":"string","nodeType":"YulLiteral","src":"16144:34:17","type":"","value":"ERC721Enumerable: owner index ou"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16121:6:17"},"nodeType":"YulFunctionCall","src":"16121:58:17"},"nodeType":"YulExpressionStatement","src":"16121:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16200:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"16208:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16196:3:17"},"nodeType":"YulFunctionCall","src":"16196:15:17"},{"hexValue":"74206f6620626f756e6473","kind":"string","nodeType":"YulLiteral","src":"16213:13:17","type":"","value":"t of bounds"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16189:6:17"},"nodeType":"YulFunctionCall","src":"16189:38:17"},"nodeType":"YulExpressionStatement","src":"16189:38:17"}]},"name":"store_literal_in_memory_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16102:6:17","type":""}],"src":"16004:230:17"},{"body":{"nodeType":"YulBlock","src":"16386:220:17","statements":[{"nodeType":"YulAssignment","src":"16396:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16462:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"16467:2:17","type":"","value":"43"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16403:58:17"},"nodeType":"YulFunctionCall","src":"16403:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16396:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16568:3:17"}],"functionName":{"name":"store_literal_in_memory_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c","nodeType":"YulIdentifier","src":"16479:88:17"},"nodeType":"YulFunctionCall","src":"16479:93:17"},"nodeType":"YulExpressionStatement","src":"16479:93:17"},{"nodeType":"YulAssignment","src":"16581:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16592:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"16597:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16588:3:17"},"nodeType":"YulFunctionCall","src":"16588:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16581:3:17"}]}]},"name":"abi_encode_t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16374:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16382:3:17","type":""}],"src":"16240:366:17"},{"body":{"nodeType":"YulBlock","src":"16783:248:17","statements":[{"nodeType":"YulAssignment","src":"16793:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16805:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"16816:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16801:3:17"},"nodeType":"YulFunctionCall","src":"16801:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16793:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16840:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"16851:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16836:3:17"},"nodeType":"YulFunctionCall","src":"16836:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16859:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"16865:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16855:3:17"},"nodeType":"YulFunctionCall","src":"16855:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16829:6:17"},"nodeType":"YulFunctionCall","src":"16829:47:17"},"nodeType":"YulExpressionStatement","src":"16829:47:17"},{"nodeType":"YulAssignment","src":"16885:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17019:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16893:124:17"},"nodeType":"YulFunctionCall","src":"16893:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16885:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16763:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16778:4:17","type":""}],"src":"16612:419:17"},{"body":{"nodeType":"YulBlock","src":"17143:125:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17165:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"17173:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17161:3:17"},"nodeType":"YulFunctionCall","src":"17161:14:17"},{"hexValue":"455243373231456e756d657261626c653a20676c6f62616c20696e646578206f","kind":"string","nodeType":"YulLiteral","src":"17177:34:17","type":"","value":"ERC721Enumerable: global index o"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17154:6:17"},"nodeType":"YulFunctionCall","src":"17154:58:17"},"nodeType":"YulExpressionStatement","src":"17154:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17233:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"17241:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17229:3:17"},"nodeType":"YulFunctionCall","src":"17229:15:17"},{"hexValue":"7574206f6620626f756e6473","kind":"string","nodeType":"YulLiteral","src":"17246:14:17","type":"","value":"ut of bounds"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17222:6:17"},"nodeType":"YulFunctionCall","src":"17222:39:17"},"nodeType":"YulExpressionStatement","src":"17222:39:17"}]},"name":"store_literal_in_memory_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17135:6:17","type":""}],"src":"17037:231:17"},{"body":{"nodeType":"YulBlock","src":"17420:220:17","statements":[{"nodeType":"YulAssignment","src":"17430:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17496:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"17501:2:17","type":"","value":"44"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17437:58:17"},"nodeType":"YulFunctionCall","src":"17437:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17430:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17602:3:17"}],"functionName":{"name":"store_literal_in_memory_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc","nodeType":"YulIdentifier","src":"17513:88:17"},"nodeType":"YulFunctionCall","src":"17513:93:17"},"nodeType":"YulExpressionStatement","src":"17513:93:17"},{"nodeType":"YulAssignment","src":"17615:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17626:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"17631:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17622:3:17"},"nodeType":"YulFunctionCall","src":"17622:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17615:3:17"}]}]},"name":"abi_encode_t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17408:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17416:3:17","type":""}],"src":"17274:366:17"},{"body":{"nodeType":"YulBlock","src":"17817:248:17","statements":[{"nodeType":"YulAssignment","src":"17827:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17839:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"17850:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17835:3:17"},"nodeType":"YulFunctionCall","src":"17835:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17827:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17874:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"17885:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17870:3:17"},"nodeType":"YulFunctionCall","src":"17870:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17893:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"17899:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17889:3:17"},"nodeType":"YulFunctionCall","src":"17889:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17863:6:17"},"nodeType":"YulFunctionCall","src":"17863:47:17"},"nodeType":"YulExpressionStatement","src":"17863:47:17"},{"nodeType":"YulAssignment","src":"17919:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18053:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17927:124:17"},"nodeType":"YulFunctionCall","src":"17927:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17919:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17797:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17812:4:17","type":""}],"src":"17646:419:17"},{"body":{"nodeType":"YulBlock","src":"18099:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18116:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18119:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18109:6:17"},"nodeType":"YulFunctionCall","src":"18109:88:17"},"nodeType":"YulExpressionStatement","src":"18109:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18213:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"18216:4:17","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18206:6:17"},"nodeType":"YulFunctionCall","src":"18206:15:17"},"nodeType":"YulExpressionStatement","src":"18206:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18237:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18240:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18230:6:17"},"nodeType":"YulFunctionCall","src":"18230:15:17"},"nodeType":"YulExpressionStatement","src":"18230:15:17"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"18071:180:17"},{"body":{"nodeType":"YulBlock","src":"18363:68:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18385:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"18393:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18381:3:17"},"nodeType":"YulFunctionCall","src":"18381:14:17"},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","kind":"string","nodeType":"YulLiteral","src":"18397:26:17","type":"","value":"ERC721: invalid token ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18374:6:17"},"nodeType":"YulFunctionCall","src":"18374:50:17"},"nodeType":"YulExpressionStatement","src":"18374:50:17"}]},"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18355:6:17","type":""}],"src":"18257:174:17"},{"body":{"nodeType":"YulBlock","src":"18583:220:17","statements":[{"nodeType":"YulAssignment","src":"18593:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18659:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"18664:2:17","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18600:58:17"},"nodeType":"YulFunctionCall","src":"18600:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18593:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18765:3:17"}],"functionName":{"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulIdentifier","src":"18676:88:17"},"nodeType":"YulFunctionCall","src":"18676:93:17"},"nodeType":"YulExpressionStatement","src":"18676:93:17"},{"nodeType":"YulAssignment","src":"18778:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18789:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"18794:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18785:3:17"},"nodeType":"YulFunctionCall","src":"18785:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18778:3:17"}]}]},"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18571:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18579:3:17","type":""}],"src":"18437:366:17"},{"body":{"nodeType":"YulBlock","src":"18980:248:17","statements":[{"nodeType":"YulAssignment","src":"18990:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19002:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"19013:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18998:3:17"},"nodeType":"YulFunctionCall","src":"18998:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18990:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19037:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"19048:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19033:3:17"},"nodeType":"YulFunctionCall","src":"19033:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19056:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"19062:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19052:3:17"},"nodeType":"YulFunctionCall","src":"19052:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19026:6:17"},"nodeType":"YulFunctionCall","src":"19026:47:17"},"nodeType":"YulExpressionStatement","src":"19026:47:17"},{"nodeType":"YulAssignment","src":"19082:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19216:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19090:124:17"},"nodeType":"YulFunctionCall","src":"19090:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19082:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18960:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18975:4:17","type":""}],"src":"18809:419:17"},{"body":{"nodeType":"YulBlock","src":"19340:122:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19362:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"19370:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19358:3:17"},"nodeType":"YulFunctionCall","src":"19358:14:17"},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f742061207661","kind":"string","nodeType":"YulLiteral","src":"19374:34:17","type":"","value":"ERC721: address zero is not a va"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19351:6:17"},"nodeType":"YulFunctionCall","src":"19351:58:17"},"nodeType":"YulExpressionStatement","src":"19351:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19430:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"19438:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19426:3:17"},"nodeType":"YulFunctionCall","src":"19426:15:17"},{"hexValue":"6c6964206f776e6572","kind":"string","nodeType":"YulLiteral","src":"19443:11:17","type":"","value":"lid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19419:6:17"},"nodeType":"YulFunctionCall","src":"19419:36:17"},"nodeType":"YulExpressionStatement","src":"19419:36:17"}]},"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19332:6:17","type":""}],"src":"19234:228:17"},{"body":{"nodeType":"YulBlock","src":"19614:220:17","statements":[{"nodeType":"YulAssignment","src":"19624:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19690:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"19695:2:17","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19631:58:17"},"nodeType":"YulFunctionCall","src":"19631:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19624:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19796:3:17"}],"functionName":{"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulIdentifier","src":"19707:88:17"},"nodeType":"YulFunctionCall","src":"19707:93:17"},"nodeType":"YulExpressionStatement","src":"19707:93:17"},{"nodeType":"YulAssignment","src":"19809:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19820:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"19825:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19816:3:17"},"nodeType":"YulFunctionCall","src":"19816:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19809:3:17"}]}]},"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19602:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19610:3:17","type":""}],"src":"19468:366:17"},{"body":{"nodeType":"YulBlock","src":"20011:248:17","statements":[{"nodeType":"YulAssignment","src":"20021:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20033:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"20044:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20029:3:17"},"nodeType":"YulFunctionCall","src":"20029:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20021:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20068:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"20079:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20064:3:17"},"nodeType":"YulFunctionCall","src":"20064:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20087:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"20093:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20083:3:17"},"nodeType":"YulFunctionCall","src":"20083:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20057:6:17"},"nodeType":"YulFunctionCall","src":"20057:47:17"},"nodeType":"YulExpressionStatement","src":"20057:47:17"},{"nodeType":"YulAssignment","src":"20113:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20247:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20121:124:17"},"nodeType":"YulFunctionCall","src":"20121:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20113:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19991:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20006:4:17","type":""}],"src":"19840:419:17"},{"body":{"nodeType":"YulBlock","src":"20371:123:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20393:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"20401:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20389:3:17"},"nodeType":"YulFunctionCall","src":"20389:14:17"},{"hexValue":"436572746966696361746520616c72656164792069737375656420666f722074","kind":"string","nodeType":"YulLiteral","src":"20405:34:17","type":"","value":"Certificate already issued for t"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20382:6:17"},"nodeType":"YulFunctionCall","src":"20382:58:17"},"nodeType":"YulExpressionStatement","src":"20382:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20461:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"20469:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20457:3:17"},"nodeType":"YulFunctionCall","src":"20457:15:17"},{"hexValue":"68697320636f75727365","kind":"string","nodeType":"YulLiteral","src":"20474:12:17","type":"","value":"his course"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20450:6:17"},"nodeType":"YulFunctionCall","src":"20450:37:17"},"nodeType":"YulExpressionStatement","src":"20450:37:17"}]},"name":"store_literal_in_memory_c27c27ff6242e5bd79390ca1eefbf48595a03e84aa4e6aa818e3eb06e9b5656c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20363:6:17","type":""}],"src":"20265:229:17"},{"body":{"nodeType":"YulBlock","src":"20646:220:17","statements":[{"nodeType":"YulAssignment","src":"20656:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20722:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"20727:2:17","type":"","value":"42"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20663:58:17"},"nodeType":"YulFunctionCall","src":"20663:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20656:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20828:3:17"}],"functionName":{"name":"store_literal_in_memory_c27c27ff6242e5bd79390ca1eefbf48595a03e84aa4e6aa818e3eb06e9b5656c","nodeType":"YulIdentifier","src":"20739:88:17"},"nodeType":"YulFunctionCall","src":"20739:93:17"},"nodeType":"YulExpressionStatement","src":"20739:93:17"},{"nodeType":"YulAssignment","src":"20841:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20852:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"20857:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20848:3:17"},"nodeType":"YulFunctionCall","src":"20848:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20841:3:17"}]}]},"name":"abi_encode_t_stringliteral_c27c27ff6242e5bd79390ca1eefbf48595a03e84aa4e6aa818e3eb06e9b5656c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20634:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20642:3:17","type":""}],"src":"20500:366:17"},{"body":{"nodeType":"YulBlock","src":"21043:248:17","statements":[{"nodeType":"YulAssignment","src":"21053:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21065:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"21076:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21061:3:17"},"nodeType":"YulFunctionCall","src":"21061:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21053:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21100:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"21111:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21096:3:17"},"nodeType":"YulFunctionCall","src":"21096:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21119:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"21125:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21115:3:17"},"nodeType":"YulFunctionCall","src":"21115:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21089:6:17"},"nodeType":"YulFunctionCall","src":"21089:47:17"},"nodeType":"YulExpressionStatement","src":"21089:47:17"},{"nodeType":"YulAssignment","src":"21145:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21279:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_c27c27ff6242e5bd79390ca1eefbf48595a03e84aa4e6aa818e3eb06e9b5656c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21153:124:17"},"nodeType":"YulFunctionCall","src":"21153:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21145:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_c27c27ff6242e5bd79390ca1eefbf48595a03e84aa4e6aa818e3eb06e9b5656c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21023:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21038:4:17","type":""}],"src":"20872:419:17"},{"body":{"nodeType":"YulBlock","src":"21403:119:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21425:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"21433:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21421:3:17"},"nodeType":"YulFunctionCall","src":"21421:14:17"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"21437:34:17","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21414:6:17"},"nodeType":"YulFunctionCall","src":"21414:58:17"},"nodeType":"YulExpressionStatement","src":"21414:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21493:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"21501:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21489:3:17"},"nodeType":"YulFunctionCall","src":"21489:15:17"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"21506:8:17","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21482:6:17"},"nodeType":"YulFunctionCall","src":"21482:33:17"},"nodeType":"YulExpressionStatement","src":"21482:33:17"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21395:6:17","type":""}],"src":"21297:225:17"},{"body":{"nodeType":"YulBlock","src":"21674:220:17","statements":[{"nodeType":"YulAssignment","src":"21684:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21750:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"21755:2:17","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21691:58:17"},"nodeType":"YulFunctionCall","src":"21691:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21684:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21856:3:17"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"21767:88:17"},"nodeType":"YulFunctionCall","src":"21767:93:17"},"nodeType":"YulExpressionStatement","src":"21767:93:17"},{"nodeType":"YulAssignment","src":"21869:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21880:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"21885:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21876:3:17"},"nodeType":"YulFunctionCall","src":"21876:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21869:3:17"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21662:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21670:3:17","type":""}],"src":"21528:366:17"},{"body":{"nodeType":"YulBlock","src":"22071:248:17","statements":[{"nodeType":"YulAssignment","src":"22081:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22093:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"22104:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22089:3:17"},"nodeType":"YulFunctionCall","src":"22089:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22081:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22128:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"22139:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22124:3:17"},"nodeType":"YulFunctionCall","src":"22124:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22147:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"22153:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22143:3:17"},"nodeType":"YulFunctionCall","src":"22143:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22117:6:17"},"nodeType":"YulFunctionCall","src":"22117:47:17"},"nodeType":"YulExpressionStatement","src":"22117:47:17"},{"nodeType":"YulAssignment","src":"22173:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22307:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22181:124:17"},"nodeType":"YulFunctionCall","src":"22181:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22173:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22051:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22066:4:17","type":""}],"src":"21900:419:17"},{"body":{"nodeType":"YulBlock","src":"22431:118:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22453:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"22461:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22449:3:17"},"nodeType":"YulFunctionCall","src":"22449:14:17"},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f727265637420","kind":"string","nodeType":"YulLiteral","src":"22465:34:17","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22442:6:17"},"nodeType":"YulFunctionCall","src":"22442:58:17"},"nodeType":"YulExpressionStatement","src":"22442:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22521:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"22529:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22517:3:17"},"nodeType":"YulFunctionCall","src":"22517:15:17"},{"hexValue":"6f776e6572","kind":"string","nodeType":"YulLiteral","src":"22534:7:17","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22510:6:17"},"nodeType":"YulFunctionCall","src":"22510:32:17"},"nodeType":"YulExpressionStatement","src":"22510:32:17"}]},"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22423:6:17","type":""}],"src":"22325:224:17"},{"body":{"nodeType":"YulBlock","src":"22701:220:17","statements":[{"nodeType":"YulAssignment","src":"22711:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22777:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"22782:2:17","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22718:58:17"},"nodeType":"YulFunctionCall","src":"22718:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22711:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22883:3:17"}],"functionName":{"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulIdentifier","src":"22794:88:17"},"nodeType":"YulFunctionCall","src":"22794:93:17"},"nodeType":"YulExpressionStatement","src":"22794:93:17"},{"nodeType":"YulAssignment","src":"22896:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22907:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"22912:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22903:3:17"},"nodeType":"YulFunctionCall","src":"22903:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22896:3:17"}]}]},"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22689:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22697:3:17","type":""}],"src":"22555:366:17"},{"body":{"nodeType":"YulBlock","src":"23098:248:17","statements":[{"nodeType":"YulAssignment","src":"23108:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23120:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"23131:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23116:3:17"},"nodeType":"YulFunctionCall","src":"23116:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23108:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23155:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"23166:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23151:3:17"},"nodeType":"YulFunctionCall","src":"23151:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23174:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"23180:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23170:3:17"},"nodeType":"YulFunctionCall","src":"23170:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23144:6:17"},"nodeType":"YulFunctionCall","src":"23144:47:17"},"nodeType":"YulExpressionStatement","src":"23144:47:17"},{"nodeType":"YulAssignment","src":"23200:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23334:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23208:124:17"},"nodeType":"YulFunctionCall","src":"23208:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23200:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23078:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23093:4:17","type":""}],"src":"22927:419:17"},{"body":{"nodeType":"YulBlock","src":"23458:117:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23480:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"23488:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23476:3:17"},"nodeType":"YulFunctionCall","src":"23476:14:17"},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"23492:34:17","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23469:6:17"},"nodeType":"YulFunctionCall","src":"23469:58:17"},"nodeType":"YulExpressionStatement","src":"23469:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23548:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"23556:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23544:3:17"},"nodeType":"YulFunctionCall","src":"23544:15:17"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"23561:6:17","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23537:6:17"},"nodeType":"YulFunctionCall","src":"23537:31:17"},"nodeType":"YulExpressionStatement","src":"23537:31:17"}]},"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23450:6:17","type":""}],"src":"23352:223:17"},{"body":{"nodeType":"YulBlock","src":"23727:220:17","statements":[{"nodeType":"YulAssignment","src":"23737:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23803:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"23808:2:17","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23744:58:17"},"nodeType":"YulFunctionCall","src":"23744:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23737:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23909:3:17"}],"functionName":{"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulIdentifier","src":"23820:88:17"},"nodeType":"YulFunctionCall","src":"23820:93:17"},"nodeType":"YulExpressionStatement","src":"23820:93:17"},{"nodeType":"YulAssignment","src":"23922:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23933:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"23938:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23929:3:17"},"nodeType":"YulFunctionCall","src":"23929:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23922:3:17"}]}]},"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23715:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23723:3:17","type":""}],"src":"23581:366:17"},{"body":{"nodeType":"YulBlock","src":"24124:248:17","statements":[{"nodeType":"YulAssignment","src":"24134:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24146:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"24157:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24142:3:17"},"nodeType":"YulFunctionCall","src":"24142:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24134:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24181:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"24192:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24177:3:17"},"nodeType":"YulFunctionCall","src":"24177:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24200:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"24206:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24196:3:17"},"nodeType":"YulFunctionCall","src":"24196:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24170:6:17"},"nodeType":"YulFunctionCall","src":"24170:47:17"},"nodeType":"YulExpressionStatement","src":"24170:47:17"},{"nodeType":"YulAssignment","src":"24226:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24360:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24234:124:17"},"nodeType":"YulFunctionCall","src":"24234:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24226:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24104:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24119:4:17","type":""}],"src":"23953:419:17"},{"body":{"nodeType":"YulBlock","src":"24406:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24423:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24426:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24416:6:17"},"nodeType":"YulFunctionCall","src":"24416:88:17"},"nodeType":"YulExpressionStatement","src":"24416:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24520:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"24523:4:17","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24513:6:17"},"nodeType":"YulFunctionCall","src":"24513:15:17"},"nodeType":"YulExpressionStatement","src":"24513:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24544:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24547:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"24537:6:17"},"nodeType":"YulFunctionCall","src":"24537:15:17"},"nodeType":"YulExpressionStatement","src":"24537:15:17"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"24378:180:17"},{"body":{"nodeType":"YulBlock","src":"24609:149:17","statements":[{"nodeType":"YulAssignment","src":"24619:25:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24642:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24624:17:17"},"nodeType":"YulFunctionCall","src":"24624:20:17"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"24619:1:17"}]},{"nodeType":"YulAssignment","src":"24653:25:17","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"24676:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24658:17:17"},"nodeType":"YulFunctionCall","src":"24658:20:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"24653:1:17"}]},{"nodeType":"YulAssignment","src":"24687:17:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24699:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"24702:1:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24695:3:17"},"nodeType":"YulFunctionCall","src":"24695:9:17"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"24687:4:17"}]},{"body":{"nodeType":"YulBlock","src":"24729:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"24731:16:17"},"nodeType":"YulFunctionCall","src":"24731:18:17"},"nodeType":"YulExpressionStatement","src":"24731:18:17"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"24720:4:17"},{"name":"x","nodeType":"YulIdentifier","src":"24726:1:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"24717:2:17"},"nodeType":"YulFunctionCall","src":"24717:11:17"},"nodeType":"YulIf","src":"24714:37:17"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"24595:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"24598:1:17","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"24604:4:17","type":""}],"src":"24564:194:17"},{"body":{"nodeType":"YulBlock","src":"24808:147:17","statements":[{"nodeType":"YulAssignment","src":"24818:25:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24841:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24823:17:17"},"nodeType":"YulFunctionCall","src":"24823:20:17"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"24818:1:17"}]},{"nodeType":"YulAssignment","src":"24852:25:17","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"24875:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24857:17:17"},"nodeType":"YulFunctionCall","src":"24857:20:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"24852:1:17"}]},{"nodeType":"YulAssignment","src":"24886:16:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24897:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"24900:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24893:3:17"},"nodeType":"YulFunctionCall","src":"24893:9:17"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"24886:3:17"}]},{"body":{"nodeType":"YulBlock","src":"24926:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"24928:16:17"},"nodeType":"YulFunctionCall","src":"24928:18:17"},"nodeType":"YulExpressionStatement","src":"24928:18:17"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24918:1:17"},{"name":"sum","nodeType":"YulIdentifier","src":"24921:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"24915:2:17"},"nodeType":"YulFunctionCall","src":"24915:10:17"},"nodeType":"YulIf","src":"24912:36:17"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"24795:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"24798:1:17","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"24804:3:17","type":""}],"src":"24764:191:17"},{"body":{"nodeType":"YulBlock","src":"25067:76:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25089:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"25097:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25085:3:17"},"nodeType":"YulFunctionCall","src":"25085:14:17"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"25101:34:17","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25078:6:17"},"nodeType":"YulFunctionCall","src":"25078:58:17"},"nodeType":"YulExpressionStatement","src":"25078:58:17"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"25059:6:17","type":""}],"src":"24961:182:17"},{"body":{"nodeType":"YulBlock","src":"25295:220:17","statements":[{"nodeType":"YulAssignment","src":"25305:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25371:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"25376:2:17","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25312:58:17"},"nodeType":"YulFunctionCall","src":"25312:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25305:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25477:3:17"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"25388:88:17"},"nodeType":"YulFunctionCall","src":"25388:93:17"},"nodeType":"YulExpressionStatement","src":"25388:93:17"},{"nodeType":"YulAssignment","src":"25490:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25501:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"25506:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25497:3:17"},"nodeType":"YulFunctionCall","src":"25497:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25490:3:17"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25283:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25291:3:17","type":""}],"src":"25149:366:17"},{"body":{"nodeType":"YulBlock","src":"25692:248:17","statements":[{"nodeType":"YulAssignment","src":"25702:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25714:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"25725:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25710:3:17"},"nodeType":"YulFunctionCall","src":"25710:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25702:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25749:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"25760:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25745:3:17"},"nodeType":"YulFunctionCall","src":"25745:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25768:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"25774:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25764:3:17"},"nodeType":"YulFunctionCall","src":"25764:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25738:6:17"},"nodeType":"YulFunctionCall","src":"25738:47:17"},"nodeType":"YulExpressionStatement","src":"25738:47:17"},{"nodeType":"YulAssignment","src":"25794:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25928:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25802:124:17"},"nodeType":"YulFunctionCall","src":"25802:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25794:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25672:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25687:4:17","type":""}],"src":"25521:419:17"},{"body":{"nodeType":"YulBlock","src":"26052:69:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26074:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"26082:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26070:3:17"},"nodeType":"YulFunctionCall","src":"26070:14:17"},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"26086:27:17","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26063:6:17"},"nodeType":"YulFunctionCall","src":"26063:51:17"},"nodeType":"YulExpressionStatement","src":"26063:51:17"}]},"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"26044:6:17","type":""}],"src":"25946:175:17"},{"body":{"nodeType":"YulBlock","src":"26273:220:17","statements":[{"nodeType":"YulAssignment","src":"26283:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26349:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"26354:2:17","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26290:58:17"},"nodeType":"YulFunctionCall","src":"26290:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26283:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26455:3:17"}],"functionName":{"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulIdentifier","src":"26366:88:17"},"nodeType":"YulFunctionCall","src":"26366:93:17"},"nodeType":"YulExpressionStatement","src":"26366:93:17"},{"nodeType":"YulAssignment","src":"26468:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26479:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"26484:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26475:3:17"},"nodeType":"YulFunctionCall","src":"26475:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26468:3:17"}]}]},"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26261:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26269:3:17","type":""}],"src":"26127:366:17"},{"body":{"nodeType":"YulBlock","src":"26670:248:17","statements":[{"nodeType":"YulAssignment","src":"26680:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26692:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"26703:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26688:3:17"},"nodeType":"YulFunctionCall","src":"26688:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26680:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26727:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"26738:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26723:3:17"},"nodeType":"YulFunctionCall","src":"26723:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26746:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"26752:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26742:3:17"},"nodeType":"YulFunctionCall","src":"26742:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26716:6:17"},"nodeType":"YulFunctionCall","src":"26716:47:17"},"nodeType":"YulExpressionStatement","src":"26716:47:17"},{"nodeType":"YulAssignment","src":"26772:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26906:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26780:124:17"},"nodeType":"YulFunctionCall","src":"26780:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26772:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26650:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26665:4:17","type":""}],"src":"26499:419:17"},{"body":{"nodeType":"YulBlock","src":"27030:127:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27052:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"27060:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27048:3:17"},"nodeType":"YulFunctionCall","src":"27048:14:17"},{"hexValue":"45524337323155524953746f726167653a2055524920736574206f66206e6f6e","kind":"string","nodeType":"YulLiteral","src":"27064:34:17","type":"","value":"ERC721URIStorage: URI set of non"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27041:6:17"},"nodeType":"YulFunctionCall","src":"27041:58:17"},"nodeType":"YulExpressionStatement","src":"27041:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27120:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"27128:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27116:3:17"},"nodeType":"YulFunctionCall","src":"27116:15:17"},{"hexValue":"6578697374656e7420746f6b656e","kind":"string","nodeType":"YulLiteral","src":"27133:16:17","type":"","value":"existent token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27109:6:17"},"nodeType":"YulFunctionCall","src":"27109:41:17"},"nodeType":"YulExpressionStatement","src":"27109:41:17"}]},"name":"store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"27022:6:17","type":""}],"src":"26924:233:17"},{"body":{"nodeType":"YulBlock","src":"27309:220:17","statements":[{"nodeType":"YulAssignment","src":"27319:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27385:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"27390:2:17","type":"","value":"46"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27326:58:17"},"nodeType":"YulFunctionCall","src":"27326:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27319:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27491:3:17"}],"functionName":{"name":"store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","nodeType":"YulIdentifier","src":"27402:88:17"},"nodeType":"YulFunctionCall","src":"27402:93:17"},"nodeType":"YulExpressionStatement","src":"27402:93:17"},{"nodeType":"YulAssignment","src":"27504:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27515:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"27520:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27511:3:17"},"nodeType":"YulFunctionCall","src":"27511:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"27504:3:17"}]}]},"name":"abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"27297:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"27305:3:17","type":""}],"src":"27163:366:17"},{"body":{"nodeType":"YulBlock","src":"27706:248:17","statements":[{"nodeType":"YulAssignment","src":"27716:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27728:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"27739:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27724:3:17"},"nodeType":"YulFunctionCall","src":"27724:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27716:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27763:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"27774:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27759:3:17"},"nodeType":"YulFunctionCall","src":"27759:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27782:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"27788:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27778:3:17"},"nodeType":"YulFunctionCall","src":"27778:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27752:6:17"},"nodeType":"YulFunctionCall","src":"27752:47:17"},"nodeType":"YulExpressionStatement","src":"27752:47:17"},{"nodeType":"YulAssignment","src":"27808:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27942:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27816:124:17"},"nodeType":"YulFunctionCall","src":"27816:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27808:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27686:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27701:4:17","type":""}],"src":"27535:419:17"},{"body":{"nodeType":"YulBlock","src":"28014:87:17","statements":[{"nodeType":"YulAssignment","src":"28024:11:17","value":{"name":"ptr","nodeType":"YulIdentifier","src":"28032:3:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"28024:4:17"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28052:1:17","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"28055:3:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28045:6:17"},"nodeType":"YulFunctionCall","src":"28045:14:17"},"nodeType":"YulExpressionStatement","src":"28045:14:17"},{"nodeType":"YulAssignment","src":"28068:26:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28086:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"28089:4:17","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"28076:9:17"},"nodeType":"YulFunctionCall","src":"28076:18:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"28068:4:17"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"28001:3:17","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"28009:4:17","type":""}],"src":"27960:141:17"},{"body":{"nodeType":"YulBlock","src":"28151:49:17","statements":[{"nodeType":"YulAssignment","src":"28161:33:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28179:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"28186:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28175:3:17"},"nodeType":"YulFunctionCall","src":"28175:14:17"},{"kind":"number","nodeType":"YulLiteral","src":"28191:2:17","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"28171:3:17"},"nodeType":"YulFunctionCall","src":"28171:23:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"28161:6:17"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"28134:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"28144:6:17","type":""}],"src":"28107:93:17"},{"body":{"nodeType":"YulBlock","src":"28259:54:17","statements":[{"nodeType":"YulAssignment","src":"28269:37:17","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"28294:4:17"},{"name":"value","nodeType":"YulIdentifier","src":"28300:5:17"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"28290:3:17"},"nodeType":"YulFunctionCall","src":"28290:16:17"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"28269:8:17"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"28234:4:17","type":""},{"name":"value","nodeType":"YulTypedName","src":"28240:5:17","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"28250:8:17","type":""}],"src":"28206:107:17"},{"body":{"nodeType":"YulBlock","src":"28395:317:17","statements":[{"nodeType":"YulVariableDeclaration","src":"28405:35:17","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"28426:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"28438:1:17","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"28422:3:17"},"nodeType":"YulFunctionCall","src":"28422:18:17"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"28409:9:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"28449:109:17","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"28480:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"28491:66:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"28461:18:17"},"nodeType":"YulFunctionCall","src":"28461:97:17"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"28453:4:17","type":""}]},{"nodeType":"YulAssignment","src":"28567:51:17","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"28598:9:17"},{"name":"toInsert","nodeType":"YulIdentifier","src":"28609:8:17"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"28579:18:17"},"nodeType":"YulFunctionCall","src":"28579:39:17"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"28567:8:17"}]},{"nodeType":"YulAssignment","src":"28627:30:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28640:5:17"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"28651:4:17"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"28647:3:17"},"nodeType":"YulFunctionCall","src":"28647:9:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"28636:3:17"},"nodeType":"YulFunctionCall","src":"28636:21:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"28627:5:17"}]},{"nodeType":"YulAssignment","src":"28666:40:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28679:5:17"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"28690:8:17"},{"name":"mask","nodeType":"YulIdentifier","src":"28700:4:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"28686:3:17"},"nodeType":"YulFunctionCall","src":"28686:19:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"28676:2:17"},"nodeType":"YulFunctionCall","src":"28676:30:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"28666:6:17"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"28356:5:17","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"28363:10:17","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"28375:8:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"28388:6:17","type":""}],"src":"28319:393:17"},{"body":{"nodeType":"YulBlock","src":"28750:28:17","statements":[{"nodeType":"YulAssignment","src":"28760:12:17","value":{"name":"value","nodeType":"YulIdentifier","src":"28767:5:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"28760:3:17"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"28736:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"28746:3:17","type":""}],"src":"28718:60:17"},{"body":{"nodeType":"YulBlock","src":"28844:82:17","statements":[{"nodeType":"YulAssignment","src":"28854:66:17","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28912:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"28894:17:17"},"nodeType":"YulFunctionCall","src":"28894:24:17"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"28885:8:17"},"nodeType":"YulFunctionCall","src":"28885:34:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"28867:17:17"},"nodeType":"YulFunctionCall","src":"28867:53:17"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"28854:9:17"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"28824:5:17","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"28834:9:17","type":""}],"src":"28784:142:17"},{"body":{"nodeType":"YulBlock","src":"28979:28:17","statements":[{"nodeType":"YulAssignment","src":"28989:12:17","value":{"name":"value","nodeType":"YulIdentifier","src":"28996:5:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"28989:3:17"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"28965:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"28975:3:17","type":""}],"src":"28932:75:17"},{"body":{"nodeType":"YulBlock","src":"29089:193:17","statements":[{"nodeType":"YulVariableDeclaration","src":"29099:63:17","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"29154:7:17"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"29123:30:17"},"nodeType":"YulFunctionCall","src":"29123:39:17"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"29103:16:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"29178:4:17"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"29218:4:17"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"29212:5:17"},"nodeType":"YulFunctionCall","src":"29212:11:17"},{"name":"offset","nodeType":"YulIdentifier","src":"29225:6:17"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"29257:16:17"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"29233:23:17"},"nodeType":"YulFunctionCall","src":"29233:41:17"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"29184:27:17"},"nodeType":"YulFunctionCall","src":"29184:91:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"29171:6:17"},"nodeType":"YulFunctionCall","src":"29171:105:17"},"nodeType":"YulExpressionStatement","src":"29171:105:17"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"29066:4:17","type":""},{"name":"offset","nodeType":"YulTypedName","src":"29072:6:17","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"29080:7:17","type":""}],"src":"29013:269:17"},{"body":{"nodeType":"YulBlock","src":"29337:24:17","statements":[{"nodeType":"YulAssignment","src":"29347:8:17","value":{"kind":"number","nodeType":"YulLiteral","src":"29354:1:17","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"29347:3:17"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"29333:3:17","type":""}],"src":"29288:73:17"},{"body":{"nodeType":"YulBlock","src":"29420:136:17","statements":[{"nodeType":"YulVariableDeclaration","src":"29430:46:17","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"29444:30:17"},"nodeType":"YulFunctionCall","src":"29444:32:17"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"29434:6:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"29529:4:17"},{"name":"offset","nodeType":"YulIdentifier","src":"29535:6:17"},{"name":"zero_0","nodeType":"YulIdentifier","src":"29543:6:17"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"29485:43:17"},"nodeType":"YulFunctionCall","src":"29485:65:17"},"nodeType":"YulExpressionStatement","src":"29485:65:17"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"29406:4:17","type":""},{"name":"offset","nodeType":"YulTypedName","src":"29412:6:17","type":""}],"src":"29367:189:17"},{"body":{"nodeType":"YulBlock","src":"29612:136:17","statements":[{"body":{"nodeType":"YulBlock","src":"29679:63:17","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"29723:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"29730:1:17","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"29693:29:17"},"nodeType":"YulFunctionCall","src":"29693:39:17"},"nodeType":"YulExpressionStatement","src":"29693:39:17"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"29632:5:17"},{"name":"end","nodeType":"YulIdentifier","src":"29639:3:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"29629:2:17"},"nodeType":"YulFunctionCall","src":"29629:14:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"29644:26:17","statements":[{"nodeType":"YulAssignment","src":"29646:22:17","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"29659:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"29666:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29655:3:17"},"nodeType":"YulFunctionCall","src":"29655:13:17"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"29646:5:17"}]}]},"pre":{"nodeType":"YulBlock","src":"29626:2:17","statements":[]},"src":"29622:120:17"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"29600:5:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"29607:3:17","type":""}],"src":"29562:186:17"},{"body":{"nodeType":"YulBlock","src":"29833:464:17","statements":[{"body":{"nodeType":"YulBlock","src":"29859:431:17","statements":[{"nodeType":"YulVariableDeclaration","src":"29873:54:17","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"29921:5:17"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"29889:31:17"},"nodeType":"YulFunctionCall","src":"29889:38:17"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"29877:8:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"29940:63:17","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"29963:8:17"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"29991:10:17"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"29973:17:17"},"nodeType":"YulFunctionCall","src":"29973:29:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29959:3:17"},"nodeType":"YulFunctionCall","src":"29959:44:17"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"29944:11:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"30160:27:17","statements":[{"nodeType":"YulAssignment","src":"30162:23:17","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"30177:8:17"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"30162:11:17"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"30144:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"30156:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"30141:2:17"},"nodeType":"YulFunctionCall","src":"30141:18:17"},"nodeType":"YulIf","src":"30138:49:17"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"30229:11:17"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"30246:8:17"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"30274:3:17"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"30256:17:17"},"nodeType":"YulFunctionCall","src":"30256:22:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30242:3:17"},"nodeType":"YulFunctionCall","src":"30242:37:17"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"30200:28:17"},"nodeType":"YulFunctionCall","src":"30200:80:17"},"nodeType":"YulExpressionStatement","src":"30200:80:17"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"29850:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"29855:2:17","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"29847:2:17"},"nodeType":"YulFunctionCall","src":"29847:11:17"},"nodeType":"YulIf","src":"29844:446:17"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"29809:5:17","type":""},{"name":"len","nodeType":"YulTypedName","src":"29816:3:17","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"29821:10:17","type":""}],"src":"29754:543:17"},{"body":{"nodeType":"YulBlock","src":"30366:54:17","statements":[{"nodeType":"YulAssignment","src":"30376:37:17","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"30401:4:17"},{"name":"value","nodeType":"YulIdentifier","src":"30407:5:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"30397:3:17"},"nodeType":"YulFunctionCall","src":"30397:16:17"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"30376:8:17"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"30341:4:17","type":""},{"name":"value","nodeType":"YulTypedName","src":"30347:5:17","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"30357:8:17","type":""}],"src":"30303:117:17"},{"body":{"nodeType":"YulBlock","src":"30477:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"30487:68:17","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30536:1:17","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"30539:5:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"30532:3:17"},"nodeType":"YulFunctionCall","src":"30532:13:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30551:1:17","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"30547:3:17"},"nodeType":"YulFunctionCall","src":"30547:6:17"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"30503:28:17"},"nodeType":"YulFunctionCall","src":"30503:51:17"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"30499:3:17"},"nodeType":"YulFunctionCall","src":"30499:56:17"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"30491:4:17","type":""}]},{"nodeType":"YulAssignment","src":"30564:25:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"30578:4:17"},{"name":"mask","nodeType":"YulIdentifier","src":"30584:4:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"30574:3:17"},"nodeType":"YulFunctionCall","src":"30574:15:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"30564:6:17"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"30454:4:17","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"30460:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"30470:6:17","type":""}],"src":"30426:169:17"},{"body":{"nodeType":"YulBlock","src":"30681:214:17","statements":[{"nodeType":"YulAssignment","src":"30814:37:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"30841:4:17"},{"name":"len","nodeType":"YulIdentifier","src":"30847:3:17"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"30822:18:17"},"nodeType":"YulFunctionCall","src":"30822:29:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"30814:4:17"}]},{"nodeType":"YulAssignment","src":"30860:29:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"30871:4:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30881:1:17","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"30884:3:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"30877:3:17"},"nodeType":"YulFunctionCall","src":"30877:11:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"30868:2:17"},"nodeType":"YulFunctionCall","src":"30868:21:17"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"30860:4:17"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"30662:4:17","type":""},{"name":"len","nodeType":"YulTypedName","src":"30668:3:17","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"30676:4:17","type":""}],"src":"30600:295:17"},{"body":{"nodeType":"YulBlock","src":"30992:1303:17","statements":[{"nodeType":"YulVariableDeclaration","src":"31003:51:17","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"31050:3:17"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"31017:32:17"},"nodeType":"YulFunctionCall","src":"31017:37:17"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"31007:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"31139:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"31141:16:17"},"nodeType":"YulFunctionCall","src":"31141:18:17"},"nodeType":"YulExpressionStatement","src":"31141:18:17"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"31111:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"31119:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"31108:2:17"},"nodeType":"YulFunctionCall","src":"31108:30:17"},"nodeType":"YulIf","src":"31105:56:17"},{"nodeType":"YulVariableDeclaration","src":"31171:52:17","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"31217:4:17"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"31211:5:17"},"nodeType":"YulFunctionCall","src":"31211:11:17"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"31185:25:17"},"nodeType":"YulFunctionCall","src":"31185:38:17"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"31175:6:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"31316:4:17"},{"name":"oldLen","nodeType":"YulIdentifier","src":"31322:6:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"31330:6:17"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"31270:45:17"},"nodeType":"YulFunctionCall","src":"31270:67:17"},"nodeType":"YulExpressionStatement","src":"31270:67:17"},{"nodeType":"YulVariableDeclaration","src":"31347:18:17","value":{"kind":"number","nodeType":"YulLiteral","src":"31364:1:17","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"31351:9:17","type":""}]},{"nodeType":"YulAssignment","src":"31375:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"31388:4:17","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"31375:9:17"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"31439:611:17","statements":[{"nodeType":"YulVariableDeclaration","src":"31453:37:17","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"31472:6:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31484:4:17","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"31480:3:17"},"nodeType":"YulFunctionCall","src":"31480:9:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"31468:3:17"},"nodeType":"YulFunctionCall","src":"31468:22:17"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"31457:7:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"31504:51:17","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"31550:4:17"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"31518:31:17"},"nodeType":"YulFunctionCall","src":"31518:37:17"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"31508:6:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"31568:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"31577:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"31572:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"31636:163:17","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"31661:6:17"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"31679:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"31684:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31675:3:17"},"nodeType":"YulFunctionCall","src":"31675:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"31669:5:17"},"nodeType":"YulFunctionCall","src":"31669:26:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"31654:6:17"},"nodeType":"YulFunctionCall","src":"31654:42:17"},"nodeType":"YulExpressionStatement","src":"31654:42:17"},{"nodeType":"YulAssignment","src":"31713:24:17","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"31727:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"31735:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31723:3:17"},"nodeType":"YulFunctionCall","src":"31723:14:17"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"31713:6:17"}]},{"nodeType":"YulAssignment","src":"31754:31:17","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"31771:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"31782:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31767:3:17"},"nodeType":"YulFunctionCall","src":"31767:18:17"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"31754:9:17"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"31602:1:17"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"31605:7:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"31599:2:17"},"nodeType":"YulFunctionCall","src":"31599:14:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"31614:21:17","statements":[{"nodeType":"YulAssignment","src":"31616:17:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"31625:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"31628:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31621:3:17"},"nodeType":"YulFunctionCall","src":"31621:12:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"31616:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"31595:3:17","statements":[]},"src":"31591:208:17"},{"body":{"nodeType":"YulBlock","src":"31835:156:17","statements":[{"nodeType":"YulVariableDeclaration","src":"31853:43:17","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"31880:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"31885:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31876:3:17"},"nodeType":"YulFunctionCall","src":"31876:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"31870:5:17"},"nodeType":"YulFunctionCall","src":"31870:26:17"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"31857:9:17","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"31920:6:17"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"31947:9:17"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"31962:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"31970:4:17","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"31958:3:17"},"nodeType":"YulFunctionCall","src":"31958:17:17"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"31928:18:17"},"nodeType":"YulFunctionCall","src":"31928:48:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"31913:6:17"},"nodeType":"YulFunctionCall","src":"31913:64:17"},"nodeType":"YulExpressionStatement","src":"31913:64:17"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"31818:7:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"31827:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"31815:2:17"},"nodeType":"YulFunctionCall","src":"31815:19:17"},"nodeType":"YulIf","src":"31812:179:17"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"32011:4:17"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"32025:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"32033:1:17","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"32021:3:17"},"nodeType":"YulFunctionCall","src":"32021:14:17"},{"kind":"number","nodeType":"YulLiteral","src":"32037:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32017:3:17"},"nodeType":"YulFunctionCall","src":"32017:22:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"32004:6:17"},"nodeType":"YulFunctionCall","src":"32004:36:17"},"nodeType":"YulExpressionStatement","src":"32004:36:17"}]},"nodeType":"YulCase","src":"31432:618:17","value":{"kind":"number","nodeType":"YulLiteral","src":"31437:1:17","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"32067:222:17","statements":[{"nodeType":"YulVariableDeclaration","src":"32081:14:17","value":{"kind":"number","nodeType":"YulLiteral","src":"32094:1:17","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"32085:5:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"32118:67:17","statements":[{"nodeType":"YulAssignment","src":"32136:35:17","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"32155:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"32160:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32151:3:17"},"nodeType":"YulFunctionCall","src":"32151:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"32145:5:17"},"nodeType":"YulFunctionCall","src":"32145:26:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"32136:5:17"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"32111:6:17"},"nodeType":"YulIf","src":"32108:77:17"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"32205:4:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32264:5:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"32271:6:17"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"32211:52:17"},"nodeType":"YulFunctionCall","src":"32211:67:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"32198:6:17"},"nodeType":"YulFunctionCall","src":"32198:81:17"},"nodeType":"YulExpressionStatement","src":"32198:81:17"}]},"nodeType":"YulCase","src":"32059:230:17","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"31412:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"31420:2:17","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"31409:2:17"},"nodeType":"YulFunctionCall","src":"31409:14:17"},"nodeType":"YulSwitch","src":"31402:887:17"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"30981:4:17","type":""},{"name":"src","nodeType":"YulTypedName","src":"30987:3:17","type":""}],"src":"30900:1395:17"},{"body":{"nodeType":"YulBlock","src":"32407:131:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"32429:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"32437:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32425:3:17"},"nodeType":"YulFunctionCall","src":"32425:14:17"},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e204552433732315265","kind":"string","nodeType":"YulLiteral","src":"32441:34:17","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32418:6:17"},"nodeType":"YulFunctionCall","src":"32418:58:17"},"nodeType":"YulExpressionStatement","src":"32418:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"32497:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"32505:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32493:3:17"},"nodeType":"YulFunctionCall","src":"32493:15:17"},{"hexValue":"63656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"32510:20:17","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32486:6:17"},"nodeType":"YulFunctionCall","src":"32486:45:17"},"nodeType":"YulExpressionStatement","src":"32486:45:17"}]},"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"32399:6:17","type":""}],"src":"32301:237:17"},{"body":{"nodeType":"YulBlock","src":"32690:220:17","statements":[{"nodeType":"YulAssignment","src":"32700:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32766:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"32771:2:17","type":"","value":"50"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32707:58:17"},"nodeType":"YulFunctionCall","src":"32707:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"32700:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32872:3:17"}],"functionName":{"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulIdentifier","src":"32783:88:17"},"nodeType":"YulFunctionCall","src":"32783:93:17"},"nodeType":"YulExpressionStatement","src":"32783:93:17"},{"nodeType":"YulAssignment","src":"32885:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32896:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"32901:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32892:3:17"},"nodeType":"YulFunctionCall","src":"32892:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"32885:3:17"}]}]},"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"32678:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"32686:3:17","type":""}],"src":"32544:366:17"},{"body":{"nodeType":"YulBlock","src":"33087:248:17","statements":[{"nodeType":"YulAssignment","src":"33097:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33109:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"33120:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33105:3:17"},"nodeType":"YulFunctionCall","src":"33105:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33097:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33144:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"33155:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33140:3:17"},"nodeType":"YulFunctionCall","src":"33140:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33163:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"33169:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33159:3:17"},"nodeType":"YulFunctionCall","src":"33159:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33133:6:17"},"nodeType":"YulFunctionCall","src":"33133:47:17"},"nodeType":"YulExpressionStatement","src":"33133:47:17"},{"nodeType":"YulAssignment","src":"33189:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33323:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33197:124:17"},"nodeType":"YulFunctionCall","src":"33197:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33189:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33067:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33082:4:17","type":""}],"src":"32916:419:17"},{"body":{"nodeType":"YulBlock","src":"33455:34:17","statements":[{"nodeType":"YulAssignment","src":"33465:18:17","value":{"name":"pos","nodeType":"YulIdentifier","src":"33480:3:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"33465:11:17"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"33427:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"33432:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"33443:11:17","type":""}],"src":"33341:148:17"},{"body":{"nodeType":"YulBlock","src":"33605:280:17","statements":[{"nodeType":"YulVariableDeclaration","src":"33615:53:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33662:5:17"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"33629:32:17"},"nodeType":"YulFunctionCall","src":"33629:39:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"33619:6:17","type":""}]},{"nodeType":"YulAssignment","src":"33677:96:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33761:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"33766:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"33684:76:17"},"nodeType":"YulFunctionCall","src":"33684:89:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"33677:3:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33821:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"33828:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33817:3:17"},"nodeType":"YulFunctionCall","src":"33817:16:17"},{"name":"pos","nodeType":"YulIdentifier","src":"33835:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"33840:6:17"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"33782:34:17"},"nodeType":"YulFunctionCall","src":"33782:65:17"},"nodeType":"YulExpressionStatement","src":"33782:65:17"},{"nodeType":"YulAssignment","src":"33856:23:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33867:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"33872:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33863:3:17"},"nodeType":"YulFunctionCall","src":"33863:16:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"33856:3:17"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33586:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"33593:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"33601:3:17","type":""}],"src":"33495:390:17"},{"body":{"nodeType":"YulBlock","src":"34075:251:17","statements":[{"nodeType":"YulAssignment","src":"34086:102:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"34175:6:17"},{"name":"pos","nodeType":"YulIdentifier","src":"34184:3:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"34093:81:17"},"nodeType":"YulFunctionCall","src":"34093:95:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"34086:3:17"}]},{"nodeType":"YulAssignment","src":"34198:102:17","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"34287:6:17"},{"name":"pos","nodeType":"YulIdentifier","src":"34296:3:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"34205:81:17"},"nodeType":"YulFunctionCall","src":"34205:95:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"34198:3:17"}]},{"nodeType":"YulAssignment","src":"34310:10:17","value":{"name":"pos","nodeType":"YulIdentifier","src":"34317:3:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"34310:3:17"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"34046:3:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"34052:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"34060:6:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"34071:3:17","type":""}],"src":"33891:435:17"},{"body":{"nodeType":"YulBlock","src":"34438:114:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"34460:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"34468:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34456:3:17"},"nodeType":"YulFunctionCall","src":"34456:14:17"},{"hexValue":"43657274696669636174657320617265206e6f6e2d7472616e7366657261626c","kind":"string","nodeType":"YulLiteral","src":"34472:34:17","type":"","value":"Certificates are non-transferabl"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34449:6:17"},"nodeType":"YulFunctionCall","src":"34449:58:17"},"nodeType":"YulExpressionStatement","src":"34449:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"34528:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"34536:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34524:3:17"},"nodeType":"YulFunctionCall","src":"34524:15:17"},{"hexValue":"65","kind":"string","nodeType":"YulLiteral","src":"34541:3:17","type":"","value":"e"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34517:6:17"},"nodeType":"YulFunctionCall","src":"34517:28:17"},"nodeType":"YulExpressionStatement","src":"34517:28:17"}]},"name":"store_literal_in_memory_3054708b0a11b38511bc7d353b1f656d5fdd977e39d245846af7029381d44603","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"34430:6:17","type":""}],"src":"34332:220:17"},{"body":{"nodeType":"YulBlock","src":"34704:220:17","statements":[{"nodeType":"YulAssignment","src":"34714:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34780:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"34785:2:17","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34721:58:17"},"nodeType":"YulFunctionCall","src":"34721:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"34714:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34886:3:17"}],"functionName":{"name":"store_literal_in_memory_3054708b0a11b38511bc7d353b1f656d5fdd977e39d245846af7029381d44603","nodeType":"YulIdentifier","src":"34797:88:17"},"nodeType":"YulFunctionCall","src":"34797:93:17"},"nodeType":"YulExpressionStatement","src":"34797:93:17"},{"nodeType":"YulAssignment","src":"34899:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34910:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"34915:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34906:3:17"},"nodeType":"YulFunctionCall","src":"34906:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"34899:3:17"}]}]},"name":"abi_encode_t_stringliteral_3054708b0a11b38511bc7d353b1f656d5fdd977e39d245846af7029381d44603_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"34692:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"34700:3:17","type":""}],"src":"34558:366:17"},{"body":{"nodeType":"YulBlock","src":"35101:248:17","statements":[{"nodeType":"YulAssignment","src":"35111:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35123:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"35134:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35119:3:17"},"nodeType":"YulFunctionCall","src":"35119:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35111:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35158:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"35169:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35154:3:17"},"nodeType":"YulFunctionCall","src":"35154:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35177:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"35183:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35173:3:17"},"nodeType":"YulFunctionCall","src":"35173:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35147:6:17"},"nodeType":"YulFunctionCall","src":"35147:47:17"},"nodeType":"YulExpressionStatement","src":"35147:47:17"},{"nodeType":"YulAssignment","src":"35203:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35337:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_3054708b0a11b38511bc7d353b1f656d5fdd977e39d245846af7029381d44603_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35211:124:17"},"nodeType":"YulFunctionCall","src":"35211:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35203:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_3054708b0a11b38511bc7d353b1f656d5fdd977e39d245846af7029381d44603__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35081:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35096:4:17","type":""}],"src":"34930:419:17"},{"body":{"nodeType":"YulBlock","src":"35413:40:17","statements":[{"nodeType":"YulAssignment","src":"35424:22:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35440:5:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"35434:5:17"},"nodeType":"YulFunctionCall","src":"35434:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"35424:6:17"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35396:5:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"35406:6:17","type":""}],"src":"35355:98:17"},{"body":{"nodeType":"YulBlock","src":"35554:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35571:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"35576:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35564:6:17"},"nodeType":"YulFunctionCall","src":"35564:19:17"},"nodeType":"YulExpressionStatement","src":"35564:19:17"},{"nodeType":"YulAssignment","src":"35592:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35611:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"35616:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35607:3:17"},"nodeType":"YulFunctionCall","src":"35607:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"35592:11:17"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"35526:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"35531:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"35542:11:17","type":""}],"src":"35459:168:17"},{"body":{"nodeType":"YulBlock","src":"35723:283:17","statements":[{"nodeType":"YulVariableDeclaration","src":"35733:52:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35779:5:17"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"35747:31:17"},"nodeType":"YulFunctionCall","src":"35747:38:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"35737:6:17","type":""}]},{"nodeType":"YulAssignment","src":"35794:77:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35859:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"35864:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35801:57:17"},"nodeType":"YulFunctionCall","src":"35801:70:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"35794:3:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35919:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"35926:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35915:3:17"},"nodeType":"YulFunctionCall","src":"35915:16:17"},{"name":"pos","nodeType":"YulIdentifier","src":"35933:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"35938:6:17"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"35880:34:17"},"nodeType":"YulFunctionCall","src":"35880:65:17"},"nodeType":"YulExpressionStatement","src":"35880:65:17"},{"nodeType":"YulAssignment","src":"35954:46:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35965:3:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"35992:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"35970:21:17"},"nodeType":"YulFunctionCall","src":"35970:29:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35961:3:17"},"nodeType":"YulFunctionCall","src":"35961:39:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"35954:3:17"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35704:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"35711:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"35719:3:17","type":""}],"src":"35633:373:17"},{"body":{"nodeType":"YulBlock","src":"36212:440:17","statements":[{"nodeType":"YulAssignment","src":"36222:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36234:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"36245:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36230:3:17"},"nodeType":"YulFunctionCall","src":"36230:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36222:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"36303:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36316:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"36327:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36312:3:17"},"nodeType":"YulFunctionCall","src":"36312:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"36259:43:17"},"nodeType":"YulFunctionCall","src":"36259:71:17"},"nodeType":"YulExpressionStatement","src":"36259:71:17"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"36384:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36397:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"36408:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36393:3:17"},"nodeType":"YulFunctionCall","src":"36393:18:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"36340:43:17"},"nodeType":"YulFunctionCall","src":"36340:72:17"},"nodeType":"YulExpressionStatement","src":"36340:72:17"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"36466:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36479:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"36490:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36475:3:17"},"nodeType":"YulFunctionCall","src":"36475:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"36422:43:17"},"nodeType":"YulFunctionCall","src":"36422:72:17"},"nodeType":"YulExpressionStatement","src":"36422:72:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36515:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"36526:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36511:3:17"},"nodeType":"YulFunctionCall","src":"36511:18:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"36535:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"36541:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"36531:3:17"},"nodeType":"YulFunctionCall","src":"36531:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36504:6:17"},"nodeType":"YulFunctionCall","src":"36504:48:17"},"nodeType":"YulExpressionStatement","src":"36504:48:17"},{"nodeType":"YulAssignment","src":"36561:84:17","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"36631:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"36640:4:17"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"36569:61:17"},"nodeType":"YulFunctionCall","src":"36569:76:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36561:4:17"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36160:9:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"36172:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"36180:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"36188:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"36196:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"36207:4:17","type":""}],"src":"36012:640:17"},{"body":{"nodeType":"YulBlock","src":"36720:79:17","statements":[{"nodeType":"YulAssignment","src":"36730:22:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"36745:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"36739:5:17"},"nodeType":"YulFunctionCall","src":"36739:13:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"36730:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36787:5:17"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"36761:25:17"},"nodeType":"YulFunctionCall","src":"36761:32:17"},"nodeType":"YulExpressionStatement","src":"36761:32:17"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"36698:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"36706:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"36714:5:17","type":""}],"src":"36658:141:17"},{"body":{"nodeType":"YulBlock","src":"36881:273:17","statements":[{"body":{"nodeType":"YulBlock","src":"36927:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"36929:77:17"},"nodeType":"YulFunctionCall","src":"36929:79:17"},"nodeType":"YulExpressionStatement","src":"36929:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"36902:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"36911:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"36898:3:17"},"nodeType":"YulFunctionCall","src":"36898:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"36923:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"36894:3:17"},"nodeType":"YulFunctionCall","src":"36894:32:17"},"nodeType":"YulIf","src":"36891:119:17"},{"nodeType":"YulBlock","src":"37020:127:17","statements":[{"nodeType":"YulVariableDeclaration","src":"37035:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"37049:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"37039:6:17","type":""}]},{"nodeType":"YulAssignment","src":"37064:73:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37109:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"37120:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37105:3:17"},"nodeType":"YulFunctionCall","src":"37105:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"37129:7:17"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"37074:30:17"},"nodeType":"YulFunctionCall","src":"37074:63:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"37064:6:17"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36851:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"36862:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"36874:6:17","type":""}],"src":"36805:349:17"},{"body":{"nodeType":"YulBlock","src":"37266:76:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"37288:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"37296:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37284:3:17"},"nodeType":"YulFunctionCall","src":"37284:14:17"},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"37300:34:17","type":"","value":"ERC721: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37277:6:17"},"nodeType":"YulFunctionCall","src":"37277:58:17"},"nodeType":"YulExpressionStatement","src":"37277:58:17"}]},"name":"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"37258:6:17","type":""}],"src":"37160:182:17"},{"body":{"nodeType":"YulBlock","src":"37494:220:17","statements":[{"nodeType":"YulAssignment","src":"37504:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37570:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"37575:2:17","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"37511:58:17"},"nodeType":"YulFunctionCall","src":"37511:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"37504:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37676:3:17"}],"functionName":{"name":"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","nodeType":"YulIdentifier","src":"37587:88:17"},"nodeType":"YulFunctionCall","src":"37587:93:17"},"nodeType":"YulExpressionStatement","src":"37587:93:17"},{"nodeType":"YulAssignment","src":"37689:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37700:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"37705:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37696:3:17"},"nodeType":"YulFunctionCall","src":"37696:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"37689:3:17"}]}]},"name":"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"37482:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"37490:3:17","type":""}],"src":"37348:366:17"},{"body":{"nodeType":"YulBlock","src":"37891:248:17","statements":[{"nodeType":"YulAssignment","src":"37901:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37913:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"37924:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37909:3:17"},"nodeType":"YulFunctionCall","src":"37909:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37901:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37948:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"37959:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37944:3:17"},"nodeType":"YulFunctionCall","src":"37944:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"37967:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"37973:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"37963:3:17"},"nodeType":"YulFunctionCall","src":"37963:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37937:6:17"},"nodeType":"YulFunctionCall","src":"37937:47:17"},"nodeType":"YulExpressionStatement","src":"37937:47:17"},{"nodeType":"YulAssignment","src":"37993:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"38127:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"38001:124:17"},"nodeType":"YulFunctionCall","src":"38001:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37993:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"37871:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"37886:4:17","type":""}],"src":"37720:419:17"},{"body":{"nodeType":"YulBlock","src":"38251:72:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"38273:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"38281:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38269:3:17"},"nodeType":"YulFunctionCall","src":"38269:14:17"},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","kind":"string","nodeType":"YulLiteral","src":"38285:30:17","type":"","value":"ERC721: token already minted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38262:6:17"},"nodeType":"YulFunctionCall","src":"38262:54:17"},"nodeType":"YulExpressionStatement","src":"38262:54:17"}]},"name":"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"38243:6:17","type":""}],"src":"38145:178:17"},{"body":{"nodeType":"YulBlock","src":"38475:220:17","statements":[{"nodeType":"YulAssignment","src":"38485:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38551:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"38556:2:17","type":"","value":"28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"38492:58:17"},"nodeType":"YulFunctionCall","src":"38492:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"38485:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38657:3:17"}],"functionName":{"name":"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","nodeType":"YulIdentifier","src":"38568:88:17"},"nodeType":"YulFunctionCall","src":"38568:93:17"},"nodeType":"YulExpressionStatement","src":"38568:93:17"},{"nodeType":"YulAssignment","src":"38670:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38681:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"38686:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38677:3:17"},"nodeType":"YulFunctionCall","src":"38677:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"38670:3:17"}]}]},"name":"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"38463:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"38471:3:17","type":""}],"src":"38329:366:17"},{"body":{"nodeType":"YulBlock","src":"38872:248:17","statements":[{"nodeType":"YulAssignment","src":"38882:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38894:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"38905:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38890:3:17"},"nodeType":"YulFunctionCall","src":"38890:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38882:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38929:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"38940:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38925:3:17"},"nodeType":"YulFunctionCall","src":"38925:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"38948:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"38954:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"38944:3:17"},"nodeType":"YulFunctionCall","src":"38944:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38918:6:17"},"nodeType":"YulFunctionCall","src":"38918:47:17"},"nodeType":"YulExpressionStatement","src":"38918:47:17"},{"nodeType":"YulAssignment","src":"38974:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"39108:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"38982:124:17"},"nodeType":"YulFunctionCall","src":"38982:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38974:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"38852:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"38867:4:17","type":""}],"src":"38701:419:17"},{"body":{"nodeType":"YulBlock","src":"39169:190:17","statements":[{"nodeType":"YulAssignment","src":"39179:33:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"39206:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"39188:17:17"},"nodeType":"YulFunctionCall","src":"39188:24:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"39179:5:17"}]},{"body":{"nodeType":"YulBlock","src":"39302:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"39304:16:17"},"nodeType":"YulFunctionCall","src":"39304:18:17"},"nodeType":"YulExpressionStatement","src":"39304:18:17"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"39227:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"39234:66:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"39224:2:17"},"nodeType":"YulFunctionCall","src":"39224:77:17"},"nodeType":"YulIf","src":"39221:103:17"},{"nodeType":"YulAssignment","src":"39333:20:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"39344:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"39351:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39340:3:17"},"nodeType":"YulFunctionCall","src":"39340:13:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"39333:3:17"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"39155:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"39165:3:17","type":""}],"src":"39126:233:17"},{"body":{"nodeType":"YulBlock","src":"39393:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"39410:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"39413:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39403:6:17"},"nodeType":"YulFunctionCall","src":"39403:88:17"},"nodeType":"YulExpressionStatement","src":"39403:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"39507:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"39510:4:17","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39500:6:17"},"nodeType":"YulFunctionCall","src":"39500:15:17"},"nodeType":"YulExpressionStatement","src":"39500:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"39531:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"39534:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"39524:6:17"},"nodeType":"YulFunctionCall","src":"39524:15:17"},"nodeType":"YulExpressionStatement","src":"39524:15:17"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"39365:180:17"},{"body":{"nodeType":"YulBlock","src":"39593:143:17","statements":[{"nodeType":"YulAssignment","src":"39603:25:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"39626:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"39608:17:17"},"nodeType":"YulFunctionCall","src":"39608:20:17"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"39603:1:17"}]},{"nodeType":"YulAssignment","src":"39637:25:17","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"39660:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"39642:17:17"},"nodeType":"YulFunctionCall","src":"39642:20:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"39637:1:17"}]},{"body":{"nodeType":"YulBlock","src":"39684:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"39686:16:17"},"nodeType":"YulFunctionCall","src":"39686:18:17"},"nodeType":"YulExpressionStatement","src":"39686:18:17"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"39681:1:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"39674:6:17"},"nodeType":"YulFunctionCall","src":"39674:9:17"},"nodeType":"YulIf","src":"39671:35:17"},{"nodeType":"YulAssignment","src":"39716:14:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"39725:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"39728:1:17"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"39721:3:17"},"nodeType":"YulFunctionCall","src":"39721:9:17"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"39716:1:17"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"39582:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"39585:1:17","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"39591:1:17","type":""}],"src":"39551:185:17"},{"body":{"nodeType":"YulBlock","src":"39776:142:17","statements":[{"nodeType":"YulAssignment","src":"39786:25:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"39809:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"39791:17:17"},"nodeType":"YulFunctionCall","src":"39791:20:17"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"39786:1:17"}]},{"nodeType":"YulAssignment","src":"39820:25:17","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"39843:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"39825:17:17"},"nodeType":"YulFunctionCall","src":"39825:20:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"39820:1:17"}]},{"body":{"nodeType":"YulBlock","src":"39867:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"39869:16:17"},"nodeType":"YulFunctionCall","src":"39869:18:17"},"nodeType":"YulExpressionStatement","src":"39869:18:17"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"39864:1:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"39857:6:17"},"nodeType":"YulFunctionCall","src":"39857:9:17"},"nodeType":"YulIf","src":"39854:35:17"},{"nodeType":"YulAssignment","src":"39898:14:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"39907:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"39910:1:17"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"39903:3:17"},"nodeType":"YulFunctionCall","src":"39903:9:17"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"39898:1:17"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"39765:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"39768:1:17","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"39774:1:17","type":""}],"src":"39742:176:17"},{"body":{"nodeType":"YulBlock","src":"39952:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"39969:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"39972:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39962:6:17"},"nodeType":"YulFunctionCall","src":"39962:88:17"},"nodeType":"YulExpressionStatement","src":"39962:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"40066:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"40069:4:17","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40059:6:17"},"nodeType":"YulFunctionCall","src":"40059:15:17"},"nodeType":"YulExpressionStatement","src":"40059:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"40090:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"40093:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"40083:6:17"},"nodeType":"YulFunctionCall","src":"40083:15:17"},"nodeType":"YulExpressionStatement","src":"40083:15:17"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"39924:180:17"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not to\")\n\n        mstore(add(memPtr, 32), \"ken owner nor approved for all\")\n\n    }\n\n    function abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 62)\n        store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: caller is not token owne\")\n\n        mstore(add(memPtr, 32), \"r nor approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721Enumerable: owner index ou\")\n\n        mstore(add(memPtr, 32), \"t of bounds\")\n\n    }\n\n    function abi_encode_t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721Enumerable: global index o\")\n\n        mstore(add(memPtr, 32), \"ut of bounds\")\n\n    }\n\n    function abi_encode_t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: invalid token ID\")\n\n    }\n\n    function abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: address zero is not a va\")\n\n        mstore(add(memPtr, 32), \"lid owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c27c27ff6242e5bd79390ca1eefbf48595a03e84aa4e6aa818e3eb06e9b5656c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Certificate already issued for t\")\n\n        mstore(add(memPtr, 32), \"his course\")\n\n    }\n\n    function abi_encode_t_stringliteral_c27c27ff6242e5bd79390ca1eefbf48595a03e84aa4e6aa818e3eb06e9b5656c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_c27c27ff6242e5bd79390ca1eefbf48595a03e84aa4e6aa818e3eb06e9b5656c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c27c27ff6242e5bd79390ca1eefbf48595a03e84aa4e6aa818e3eb06e9b5656c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c27c27ff6242e5bd79390ca1eefbf48595a03e84aa4e6aa818e3eb06e9b5656c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer from incorrect \")\n\n        mstore(add(memPtr, 32), \"owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721URIStorage: URI set of non\")\n\n        mstore(add(memPtr, 32), \"existent token\")\n\n    }\n\n    function abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_3054708b0a11b38511bc7d353b1f656d5fdd977e39d245846af7029381d44603(memPtr) {\n\n        mstore(add(memPtr, 0), \"Certificates are non-transferabl\")\n\n        mstore(add(memPtr, 32), \"e\")\n\n    }\n\n    function abi_encode_t_stringliteral_3054708b0a11b38511bc7d353b1f656d5fdd977e39d245846af7029381d44603_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_3054708b0a11b38511bc7d353b1f656d5fdd977e39d245846af7029381d44603(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3054708b0a11b38511bc7d353b1f656d5fdd977e39d245846af7029381d44603__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3054708b0a11b38511bc7d353b1f656d5fdd977e39d245846af7029381d44603_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: token already minted\")\n\n    }\n\n    function abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n}\n","id":17,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101375760003560e01c80636352211e116100b8578063a22cb4651161007c578063a22cb46514610362578063a70d0e451461037e578063b88d4fde146103ae578063c87b56dd146103ca578063e985e9c5146103fa578063f2fde38b1461042a57610137565b80636352211e146102bc57806370a08231146102ec578063715018a61461031c5780638da5cb5b1461032657806395d89b411461034457610137565b806318160ddd116100ff57806318160ddd1461020657806323b872dd146102245780632f745c591461024057806342842e0e146102705780634f6ccce71461028c57610137565b806301ffc9a71461013c57806306fdde031461016c578063081812fc1461018a578063095ea7b3146101ba5780630ce7ed98146101d6575b600080fd5b61015660048036038101906101519190612390565b610446565b60405161016391906123d8565b60405180910390f35b610174610458565b6040516101819190612483565b60405180910390f35b6101a4600480360381019061019f91906124db565b6104ea565b6040516101b19190612549565b60405180910390f35b6101d460048036038101906101cf9190612590565b610530565b005b6101f060048036038101906101eb9190612590565b610647565b6040516101fd91906123d8565b60405180910390f35b61020e610676565b60405161021b91906125df565b60405180910390f35b61023e600480360381019061023991906125fa565b610683565b005b61025a60048036038101906102559190612590565b6106e3565b60405161026791906125df565b60405180910390f35b61028a600480360381019061028591906125fa565b610788565b005b6102a660048036038101906102a191906124db565b6107a8565b6040516102b391906125df565b60405180910390f35b6102d660048036038101906102d191906124db565b610819565b6040516102e39190612549565b60405180910390f35b6103066004803603810190610301919061264d565b6108ca565b60405161031391906125df565b60405180910390f35b610324610981565b005b61032e610995565b60405161033b9190612549565b60405180910390f35b61034c6109bf565b6040516103599190612483565b60405180910390f35b61037c600480360381019061037791906126a6565b610a51565b005b6103986004803603810190610393919061281b565b610a67565b6040516103a591906125df565b60405180910390f35b6103c860048036038101906103c3919061292b565b610bfe565b005b6103e460048036038101906103df91906124db565b610c60565b6040516103f19190612483565b60405180910390f35b610414600480360381019061040f91906129ae565b610c72565b60405161042191906123d8565b60405180910390f35b610444600480360381019061043f919061264d565b610d06565b005b600061045182610d89565b9050919050565b60606000805461046790612a1d565b80601f016020809104026020016040519081016040528092919081815260200182805461049390612a1d565b80156104e05780601f106104b5576101008083540402835291602001916104e0565b820191906000526020600020905b8154815290600101906020018083116104c357829003601f168201915b5050505050905090565b60006104f582610e03565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061053b82610819565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036105ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a290612ac0565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166105ca610e4e565b73ffffffffffffffffffffffffffffffffffffffff1614806105f957506105f8816105f3610e4e565b610c72565b5b610638576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062f90612b52565b60405180910390fd5b6106428383610e56565b505050565b600d6020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b6000600880549050905090565b61069461068e610e4e565b82610f0f565b6106d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ca90612be4565b60405180910390fd5b6106de838383610fa4565b505050565b60006106ee836108ca565b821061072f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072690612c76565b60405180910390fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054905092915050565b6107a383838360405180602001604052806000815250610bfe565b505050565b60006107b2610676565b82106107f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ea90612d08565b60405180910390fd5b6008828154811061080757610806612d28565b5b90600052602060002001549050919050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b890612da3565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361093a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093190612e35565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61098961120a565b6109936000611288565b565b6000600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600180546109ce90612a1d565b80601f01602080910402602001604051908101604052809291908181526020018280546109fa90612a1d565b8015610a475780601f10610a1c57610100808354040283529160200191610a47565b820191906000526020600020905b815481529060010190602001808311610a2a57829003601f168201915b5050505050905090565b610a63610a5c610e4e565b838361134e565b5050565b6000610a7161120a565b600d60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060009054906101000a900460ff1615610b0f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0690612ec7565b60405180910390fd5b610b19600c6114ba565b6000610b25600c6114d0565b9050610b3185826114de565b610b3b81846114fc565b6001600d60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600086815260200190815260200160002060006101000a81548160ff021916908315150217905550838573ffffffffffffffffffffffffffffffffffffffff167ffb2a8276c788bcdeaec6f4ec55f21fc636460802e63cb7e05337309232a1b90583604051610beb91906125df565b60405180910390a3809150509392505050565b610c0f610c09610e4e565b83610f0f565b610c4e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4590612be4565b60405180910390fd5b610c5a84848484611569565b50505050565b6060610c6b826115c5565b9050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b610d0e61120a565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7490612f59565b60405180910390fd5b610d8681611288565b50565b60007f780e9d63000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610dfc5750610dfb826116d7565b5b9050919050565b610e0c816117b9565b610e4b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4290612da3565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610ec983610819565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610f1b83610819565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610f5d5750610f5c8185610c72565b5b80610f9b57508373ffffffffffffffffffffffffffffffffffffffff16610f83846104ea565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610fc482610819565b73ffffffffffffffffffffffffffffffffffffffff161461101a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161101190612feb565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611089576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110809061307d565b60405180910390fd5b611094838383611825565b61109f600082610e56565b6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546110ef91906130cc565b925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546111469190613100565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46112058383836118db565b505050565b611212610e4e565b73ffffffffffffffffffffffffffffffffffffffff16611230610995565b73ffffffffffffffffffffffffffffffffffffffff1614611286576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161127d90613180565b60405180910390fd5b565b6000600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036113bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113b3906131ec565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516114ad91906123d8565b60405180910390a3505050565b6001816000016000828254019250508190555050565b600081600001549050919050565b6114f88282604051806020016040528060008152506118e0565b5050565b611505826117b9565b611544576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161153b9061327e565b60405180910390fd5b80600a60008481526020019081526020016000209081611564919061344a565b505050565b611574848484610fa4565b6115808484848461193b565b6115bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115b69061358e565b60405180910390fd5b50505050565b60606115d082610e03565b6000600a600084815260200190815260200160002080546115f090612a1d565b80601f016020809104026020016040519081016040528092919081815260200182805461161c90612a1d565b80156116695780601f1061163e57610100808354040283529160200191611669565b820191906000526020600020905b81548152906001019060200180831161164c57829003601f168201915b50505050509050600061167a611ac2565b9050600081510361168f5781925050506116d2565b6000825111156116c45780826040516020016116ac9291906135ea565b604051602081830303815290604052925050506116d2565b6116cd84611ad9565b925050505b919050565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806117a257507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806117b257506117b182611b41565b5b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16148061188c5750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b6118cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118c290613680565b60405180910390fd5b6118d6838383611bab565b505050565b505050565b6118ea8383611cbd565b6118f7600084848461193b565b611936576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161192d9061358e565b60405180910390fd5b505050565b600061195c8473ffffffffffffffffffffffffffffffffffffffff16611e96565b15611ab5578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611985610e4e565b8786866040518563ffffffff1660e01b81526004016119a794939291906136f5565b6020604051808303816000875af19250505080156119e357506040513d601f19601f820116820180604052508101906119e09190613756565b60015b611a65573d8060008114611a13576040519150601f19603f3d011682016040523d82523d6000602084013e611a18565b606091505b506000815103611a5d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a549061358e565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611aba565b600190505b949350505050565b606060405180602001604052806000815250905090565b6060611ae482610e03565b6000611aee611ac2565b90506000815111611b0e5760405180602001604052806000815250611b39565b80611b1884611eb9565b604051602001611b299291906135ea565b6040516020818303038152906040525b915050919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b611bb6838383612019565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611bf857611bf38161201e565b611c37565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614611c3657611c358382612067565b5b5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611c7957611c74816121d4565b611cb8565b8273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614611cb757611cb682826122a5565b5b5b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611d2c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d23906137cf565b60405180910390fd5b611d35816117b9565b15611d75576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d6c9061383b565b60405180910390fd5b611d8160008383611825565b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611dd19190613100565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4611e92600083836118db565b5050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b606060008203611f00576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050612014565b600082905060005b60008214611f32578080611f1b9061385b565b915050600a82611f2b91906138d2565b9150611f08565b60008167ffffffffffffffff811115611f4e57611f4d6126f0565b5b6040519080825280601f01601f191660200182016040528015611f805781602001600182028036833780820191505090505b5090505b6000851461200d57600182611f9991906130cc565b9150600a85611fa89190613903565b6030611fb49190613100565b60f81b818381518110611fca57611fc9612d28565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8561200691906138d2565b9450611f84565b8093505050505b919050565b505050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505060019003906000526020600020016000909190919091505550565b60006001612074846108ca565b61207e91906130cc565b9050600060076000848152602001908152602001600020549050818114612163576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002054905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002081905550816007600083815260200190815260200160002081905550505b6007600084815260200190815260200160002060009055600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206000905550505050565b600060016008805490506121e891906130cc565b905060006009600084815260200190815260200160002054905060006008838154811061221857612217612d28565b5b90600052602060002001549050806008838154811061223a57612239612d28565b5b90600052602060002001819055508160096000838152602001908152602001600020819055506009600085815260200190815260200160002060009055600880548061228957612288613934565b5b6001900381819060005260206000200160009055905550505050565b60006122b0836108ca565b905081600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002081905550806007600084815260200190815260200160002081905550505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61236d81612338565b811461237857600080fd5b50565b60008135905061238a81612364565b92915050565b6000602082840312156123a6576123a561232e565b5b60006123b48482850161237b565b91505092915050565b60008115159050919050565b6123d2816123bd565b82525050565b60006020820190506123ed60008301846123c9565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561242d578082015181840152602081019050612412565b60008484015250505050565b6000601f19601f8301169050919050565b6000612455826123f3565b61245f81856123fe565b935061246f81856020860161240f565b61247881612439565b840191505092915050565b6000602082019050818103600083015261249d818461244a565b905092915050565b6000819050919050565b6124b8816124a5565b81146124c357600080fd5b50565b6000813590506124d5816124af565b92915050565b6000602082840312156124f1576124f061232e565b5b60006124ff848285016124c6565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061253382612508565b9050919050565b61254381612528565b82525050565b600060208201905061255e600083018461253a565b92915050565b61256d81612528565b811461257857600080fd5b50565b60008135905061258a81612564565b92915050565b600080604083850312156125a7576125a661232e565b5b60006125b58582860161257b565b92505060206125c6858286016124c6565b9150509250929050565b6125d9816124a5565b82525050565b60006020820190506125f460008301846125d0565b92915050565b6000806000606084860312156126135761261261232e565b5b60006126218682870161257b565b93505060206126328682870161257b565b9250506040612643868287016124c6565b9150509250925092565b6000602082840312156126635761266261232e565b5b60006126718482850161257b565b91505092915050565b612683816123bd565b811461268e57600080fd5b50565b6000813590506126a08161267a565b92915050565b600080604083850312156126bd576126bc61232e565b5b60006126cb8582860161257b565b92505060206126dc85828601612691565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61272882612439565b810181811067ffffffffffffffff82111715612747576127466126f0565b5b80604052505050565b600061275a612324565b9050612766828261271f565b919050565b600067ffffffffffffffff821115612786576127856126f0565b5b61278f82612439565b9050602081019050919050565b82818337600083830152505050565b60006127be6127b98461276b565b612750565b9050828152602081018484840111156127da576127d96126eb565b5b6127e584828561279c565b509392505050565b600082601f830112612802576128016126e6565b5b81356128128482602086016127ab565b91505092915050565b6000806000606084860312156128345761283361232e565b5b60006128428682870161257b565b9350506020612853868287016124c6565b925050604084013567ffffffffffffffff81111561287457612873612333565b5b612880868287016127ed565b9150509250925092565b600067ffffffffffffffff8211156128a5576128a46126f0565b5b6128ae82612439565b9050602081019050919050565b60006128ce6128c98461288a565b612750565b9050828152602081018484840111156128ea576128e96126eb565b5b6128f584828561279c565b509392505050565b600082601f830112612912576129116126e6565b5b81356129228482602086016128bb565b91505092915050565b600080600080608085870312156129455761294461232e565b5b60006129538782880161257b565b94505060206129648782880161257b565b9350506040612975878288016124c6565b925050606085013567ffffffffffffffff81111561299657612995612333565b5b6129a2878288016128fd565b91505092959194509250565b600080604083850312156129c5576129c461232e565b5b60006129d38582860161257b565b92505060206129e48582860161257b565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680612a3557607f821691505b602082108103612a4857612a476129ee565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000612aaa6021836123fe565b9150612ab582612a4e565b604082019050919050565b60006020820190508181036000830152612ad981612a9d565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c0000602082015250565b6000612b3c603e836123fe565b9150612b4782612ae0565b604082019050919050565b60006020820190508181036000830152612b6b81612b2f565b9050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206e6f7220617070726f766564000000000000000000000000000000000000602082015250565b6000612bce602e836123fe565b9150612bd982612b72565b604082019050919050565b60006020820190508181036000830152612bfd81612bc1565b9050919050565b7f455243373231456e756d657261626c653a206f776e657220696e646578206f7560008201527f74206f6620626f756e6473000000000000000000000000000000000000000000602082015250565b6000612c60602b836123fe565b9150612c6b82612c04565b604082019050919050565b60006020820190508181036000830152612c8f81612c53565b9050919050565b7f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60008201527f7574206f6620626f756e64730000000000000000000000000000000000000000602082015250565b6000612cf2602c836123fe565b9150612cfd82612c96565b604082019050919050565b60006020820190508181036000830152612d2181612ce5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b6000612d8d6018836123fe565b9150612d9882612d57565b602082019050919050565b60006020820190508181036000830152612dbc81612d80565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b6000612e1f6029836123fe565b9150612e2a82612dc3565b604082019050919050565b60006020820190508181036000830152612e4e81612e12565b9050919050565b7f436572746966696361746520616c72656164792069737375656420666f72207460008201527f68697320636f7572736500000000000000000000000000000000000000000000602082015250565b6000612eb1602a836123fe565b9150612ebc82612e55565b604082019050919050565b60006020820190508181036000830152612ee081612ea4565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000612f436026836123fe565b9150612f4e82612ee7565b604082019050919050565b60006020820190508181036000830152612f7281612f36565b9050919050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b6000612fd56025836123fe565b9150612fe082612f79565b604082019050919050565b6000602082019050818103600083015261300481612fc8565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006130676024836123fe565b91506130728261300b565b604082019050919050565b600060208201905081810360008301526130968161305a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006130d7826124a5565b91506130e2836124a5565b92508282039050818111156130fa576130f961309d565b5b92915050565b600061310b826124a5565b9150613116836124a5565b925082820190508082111561312e5761312d61309d565b5b92915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061316a6020836123fe565b915061317582613134565b602082019050919050565b600060208201905081810360008301526131998161315d565b9050919050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b60006131d66019836123fe565b91506131e1826131a0565b602082019050919050565b60006020820190508181036000830152613205816131c9565b9050919050565b7f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60008201527f6578697374656e7420746f6b656e000000000000000000000000000000000000602082015250565b6000613268602e836123fe565b91506132738261320c565b604082019050919050565b600060208201905081810360008301526132978161325b565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026133007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826132c3565b61330a86836132c3565b95508019841693508086168417925050509392505050565b6000819050919050565b600061334761334261333d846124a5565b613322565b6124a5565b9050919050565b6000819050919050565b6133618361332c565b61337561336d8261334e565b8484546132d0565b825550505050565b600090565b61338a61337d565b613395818484613358565b505050565b5b818110156133b9576133ae600082613382565b60018101905061339b565b5050565b601f8211156133fe576133cf8161329e565b6133d8846132b3565b810160208510156133e7578190505b6133fb6133f3856132b3565b83018261339a565b50505b505050565b600082821c905092915050565b600061342160001984600802613403565b1980831691505092915050565b600061343a8383613410565b9150826002028217905092915050565b613453826123f3565b67ffffffffffffffff81111561346c5761346b6126f0565b5b6134768254612a1d565b6134818282856133bd565b600060209050601f8311600181146134b457600084156134a2578287015190505b6134ac858261342e565b865550613514565b601f1984166134c28661329e565b60005b828110156134ea578489015182556001820191506020850194506020810190506134c5565b868310156135075784890151613503601f891682613410565b8355505b6001600288020188555050505b505050505050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b60006135786032836123fe565b91506135838261351c565b604082019050919050565b600060208201905081810360008301526135a78161356b565b9050919050565b600081905092915050565b60006135c4826123f3565b6135ce81856135ae565b93506135de81856020860161240f565b80840191505092915050565b60006135f682856135b9565b915061360282846135b9565b91508190509392505050565b7f43657274696669636174657320617265206e6f6e2d7472616e7366657261626c60008201527f6500000000000000000000000000000000000000000000000000000000000000602082015250565b600061366a6021836123fe565b91506136758261360e565b604082019050919050565b600060208201905081810360008301526136998161365d565b9050919050565b600081519050919050565b600082825260208201905092915050565b60006136c7826136a0565b6136d181856136ab565b93506136e181856020860161240f565b6136ea81612439565b840191505092915050565b600060808201905061370a600083018761253a565b613717602083018661253a565b61372460408301856125d0565b818103606083015261373681846136bc565b905095945050505050565b60008151905061375081612364565b92915050565b60006020828403121561376c5761376b61232e565b5b600061377a84828501613741565b91505092915050565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b60006137b96020836123fe565b91506137c482613783565b602082019050919050565b600060208201905081810360008301526137e8816137ac565b9050919050565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b6000613825601c836123fe565b9150613830826137ef565b602082019050919050565b6000602082019050818103600083015261385481613818565b9050919050565b6000613866826124a5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036138985761389761309d565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006138dd826124a5565b91506138e8836124a5565b9250826138f8576138f76138a3565b5b828204905092915050565b600061390e826124a5565b9150613919836124a5565b925082613929576139286138a3565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea26469706673582212204fd53ef9a875ebd3f68467f8f26ad0939bb9cafb075ca27238e97ecc34d784df64736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x137 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x362 JUMPI DUP1 PUSH4 0xA70D0E45 EQ PUSH2 0x37E JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x3AE JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x3FA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x42A JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x344 JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x28C JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0xCE7ED98 EQ PUSH2 0x1D6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x156 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x2390 JUMP JUMPDEST PUSH2 0x446 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x163 SWAP2 SWAP1 PUSH2 0x23D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x174 PUSH2 0x458 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x181 SWAP2 SWAP1 PUSH2 0x2483 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x24DB JUMP JUMPDEST PUSH2 0x4EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B1 SWAP2 SWAP1 PUSH2 0x2549 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CF SWAP2 SWAP1 PUSH2 0x2590 JUMP JUMPDEST PUSH2 0x530 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x2590 JUMP JUMPDEST PUSH2 0x647 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x23D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH2 0x676 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x25DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x25FA JUMP JUMPDEST PUSH2 0x683 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x2590 JUMP JUMPDEST PUSH2 0x6E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x267 SWAP2 SWAP1 PUSH2 0x25DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x285 SWAP2 SWAP1 PUSH2 0x25FA JUMP JUMPDEST PUSH2 0x788 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x24DB JUMP JUMPDEST PUSH2 0x7A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x25DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D1 SWAP2 SWAP1 PUSH2 0x24DB JUMP JUMPDEST PUSH2 0x819 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E3 SWAP2 SWAP1 PUSH2 0x2549 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x306 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x301 SWAP2 SWAP1 PUSH2 0x264D JUMP JUMPDEST PUSH2 0x8CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x25DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x324 PUSH2 0x981 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x32E PUSH2 0x995 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33B SWAP2 SWAP1 PUSH2 0x2549 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34C PUSH2 0x9BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x359 SWAP2 SWAP1 PUSH2 0x2483 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x377 SWAP2 SWAP1 PUSH2 0x26A6 JUMP JUMPDEST PUSH2 0xA51 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x398 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x393 SWAP2 SWAP1 PUSH2 0x281B JUMP JUMPDEST PUSH2 0xA67 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x25DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C3 SWAP2 SWAP1 PUSH2 0x292B JUMP JUMPDEST PUSH2 0xBFE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DF SWAP2 SWAP1 PUSH2 0x24DB JUMP JUMPDEST PUSH2 0xC60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F1 SWAP2 SWAP1 PUSH2 0x2483 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x414 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40F SWAP2 SWAP1 PUSH2 0x29AE JUMP JUMPDEST PUSH2 0xC72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x421 SWAP2 SWAP1 PUSH2 0x23D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x444 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43F SWAP2 SWAP1 PUSH2 0x264D JUMP JUMPDEST PUSH2 0xD06 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH2 0x451 DUP3 PUSH2 0xD89 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x467 SWAP1 PUSH2 0x2A1D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x493 SWAP1 PUSH2 0x2A1D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4E0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4B5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4E0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4C3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F5 DUP3 PUSH2 0xE03 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x53B DUP3 PUSH2 0x819 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A2 SWAP1 PUSH2 0x2AC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5CA PUSH2 0xE4E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x5F9 JUMPI POP PUSH2 0x5F8 DUP2 PUSH2 0x5F3 PUSH2 0xE4E JUMP JUMPDEST PUSH2 0xC72 JUMP JUMPDEST JUMPDEST PUSH2 0x638 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x62F SWAP1 PUSH2 0x2B52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x642 DUP4 DUP4 PUSH2 0xE56 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x694 PUSH2 0x68E PUSH2 0xE4E JUMP JUMPDEST DUP3 PUSH2 0xF0F JUMP JUMPDEST PUSH2 0x6D3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CA SWAP1 PUSH2 0x2BE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6DE DUP4 DUP4 DUP4 PUSH2 0xFA4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6EE DUP4 PUSH2 0x8CA JUMP JUMPDEST DUP3 LT PUSH2 0x72F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x726 SWAP1 PUSH2 0x2C76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7A3 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xBFE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B2 PUSH2 0x676 JUMP JUMPDEST DUP3 LT PUSH2 0x7F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7EA SWAP1 PUSH2 0x2D08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x807 JUMPI PUSH2 0x806 PUSH2 0x2D28 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B8 SWAP1 PUSH2 0x2DA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x93A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x931 SWAP1 PUSH2 0x2E35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x989 PUSH2 0x120A JUMP JUMPDEST PUSH2 0x993 PUSH1 0x0 PUSH2 0x1288 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x9CE SWAP1 PUSH2 0x2A1D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9FA SWAP1 PUSH2 0x2A1D JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA47 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA1C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA47 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA2A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA63 PUSH2 0xA5C PUSH2 0xE4E JUMP JUMPDEST DUP4 DUP4 PUSH2 0x134E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA71 PUSH2 0x120A JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB0F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB06 SWAP1 PUSH2 0x2EC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB19 PUSH1 0xC PUSH2 0x14BA JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB25 PUSH1 0xC PUSH2 0x14D0 JUMP JUMPDEST SWAP1 POP PUSH2 0xB31 DUP6 DUP3 PUSH2 0x14DE JUMP JUMPDEST PUSH2 0xB3B DUP2 DUP5 PUSH2 0x14FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0xD PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFB2A8276C788BCDEAEC6F4EC55F21FC636460802E63CB7E05337309232A1B905 DUP4 PUSH1 0x40 MLOAD PUSH2 0xBEB SWAP2 SWAP1 PUSH2 0x25DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xC0F PUSH2 0xC09 PUSH2 0xE4E JUMP JUMPDEST DUP4 PUSH2 0xF0F JUMP JUMPDEST PUSH2 0xC4E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC45 SWAP1 PUSH2 0x2BE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC5A DUP5 DUP5 DUP5 DUP5 PUSH2 0x1569 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xC6B DUP3 PUSH2 0x15C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD0E PUSH2 0x120A JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD7D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD74 SWAP1 PUSH2 0x2F59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD86 DUP2 PUSH2 0x1288 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x780E9D6300000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xDFC JUMPI POP PUSH2 0xDFB DUP3 PUSH2 0x16D7 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE0C DUP2 PUSH2 0x17B9 JUMP JUMPDEST PUSH2 0xE4B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE42 SWAP1 PUSH2 0x2DA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEC9 DUP4 PUSH2 0x819 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xF1B DUP4 PUSH2 0x819 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xF5D JUMPI POP PUSH2 0xF5C DUP2 DUP6 PUSH2 0xC72 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xF9B JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF83 DUP5 PUSH2 0x4EA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFC4 DUP3 PUSH2 0x819 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x101A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1011 SWAP1 PUSH2 0x2FEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1089 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1080 SWAP1 PUSH2 0x307D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1094 DUP4 DUP4 DUP4 PUSH2 0x1825 JUMP JUMPDEST PUSH2 0x109F PUSH1 0x0 DUP3 PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x10EF SWAP2 SWAP1 PUSH2 0x30CC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1146 SWAP2 SWAP1 PUSH2 0x3100 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1205 DUP4 DUP4 DUP4 PUSH2 0x18DB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1212 PUSH2 0xE4E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1230 PUSH2 0x995 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1286 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x127D SWAP1 PUSH2 0x3180 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0xB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13B3 SWAP1 PUSH2 0x31EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x14AD SWAP2 SWAP1 PUSH2 0x23D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14F8 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x18E0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1505 DUP3 PUSH2 0x17B9 JUMP JUMPDEST PUSH2 0x1544 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x153B SWAP1 PUSH2 0x327E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xA PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x1564 SWAP2 SWAP1 PUSH2 0x344A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1574 DUP5 DUP5 DUP5 PUSH2 0xFA4 JUMP JUMPDEST PUSH2 0x1580 DUP5 DUP5 DUP5 DUP5 PUSH2 0x193B JUMP JUMPDEST PUSH2 0x15BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15B6 SWAP1 PUSH2 0x358E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x15D0 DUP3 PUSH2 0xE03 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x15F0 SWAP1 PUSH2 0x2A1D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x161C SWAP1 PUSH2 0x2A1D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1669 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x163E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1669 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x164C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x167A PUSH2 0x1AC2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x168F JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x16D2 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x16C4 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x16AC SWAP3 SWAP2 SWAP1 PUSH2 0x35EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x16D2 JUMP JUMPDEST PUSH2 0x16CD DUP5 PUSH2 0x1AD9 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x17A2 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x17B2 JUMPI POP PUSH2 0x17B1 DUP3 PUSH2 0x1B41 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x188C JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x18CB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18C2 SWAP1 PUSH2 0x3680 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x18D6 DUP4 DUP4 DUP4 PUSH2 0x1BAB JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x18EA DUP4 DUP4 PUSH2 0x1CBD JUMP JUMPDEST PUSH2 0x18F7 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x193B JUMP JUMPDEST PUSH2 0x1936 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x192D SWAP1 PUSH2 0x358E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x195C DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1E96 JUMP JUMPDEST ISZERO PUSH2 0x1AB5 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1985 PUSH2 0xE4E JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19A7 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x36F5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x19E3 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19E0 SWAP2 SWAP1 PUSH2 0x3756 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1A65 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1A13 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1A18 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1A5D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A54 SWAP1 PUSH2 0x358E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x1ABA JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1AE4 DUP3 PUSH2 0xE03 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AEE PUSH2 0x1AC2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x1B0E JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1B39 JUMP JUMPDEST DUP1 PUSH2 0x1B18 DUP5 PUSH2 0x1EB9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1B29 SWAP3 SWAP2 SWAP1 PUSH2 0x35EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BB6 DUP4 DUP4 DUP4 PUSH2 0x2019 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1BF8 JUMPI PUSH2 0x1BF3 DUP2 PUSH2 0x201E JUMP JUMPDEST PUSH2 0x1C37 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1C36 JUMPI PUSH2 0x1C35 DUP4 DUP3 PUSH2 0x2067 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C79 JUMPI PUSH2 0x1C74 DUP2 PUSH2 0x21D4 JUMP JUMPDEST PUSH2 0x1CB8 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1CB7 JUMPI PUSH2 0x1CB6 DUP3 DUP3 PUSH2 0x22A5 JUMP JUMPDEST JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D2C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D23 SWAP1 PUSH2 0x37CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D35 DUP2 PUSH2 0x17B9 JUMP JUMPDEST ISZERO PUSH2 0x1D75 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D6C SWAP1 PUSH2 0x383B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D81 PUSH1 0x0 DUP4 DUP4 PUSH2 0x1825 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1DD1 SWAP2 SWAP1 PUSH2 0x3100 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1E92 PUSH1 0x0 DUP4 DUP4 PUSH2 0x18DB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 SUB PUSH2 0x1F00 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x2014 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x1F32 JUMPI DUP1 DUP1 PUSH2 0x1F1B SWAP1 PUSH2 0x385B JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x1F2B SWAP2 SWAP1 PUSH2 0x38D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F08 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F4E JUMPI PUSH2 0x1F4D PUSH2 0x26F0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1F80 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0x200D JUMPI PUSH1 0x1 DUP3 PUSH2 0x1F99 SWAP2 SWAP1 PUSH2 0x30CC JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x1FA8 SWAP2 SWAP1 PUSH2 0x3903 JUMP JUMPDEST PUSH1 0x30 PUSH2 0x1FB4 SWAP2 SWAP1 PUSH2 0x3100 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1FCA JUMPI PUSH2 0x1FC9 PUSH2 0x2D28 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x2006 SWAP2 SWAP1 PUSH2 0x38D2 JUMP JUMPDEST SWAP5 POP PUSH2 0x1F84 JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD SWAP1 POP PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x8 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x2074 DUP5 PUSH2 0x8CA JUMP JUMPDEST PUSH2 0x207E SWAP2 SWAP1 PUSH2 0x30CC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 EQ PUSH2 0x2163 JUMPI PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP1 PUSH1 0x6 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x8 DUP1 SLOAD SWAP1 POP PUSH2 0x21E8 SWAP2 SWAP1 PUSH2 0x30CC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2218 JUMPI PUSH2 0x2217 PUSH2 0x2D28 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x223A JUMPI PUSH2 0x2239 PUSH2 0x2D28 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x9 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x8 DUP1 SLOAD DUP1 PUSH2 0x2289 JUMPI PUSH2 0x2288 PUSH2 0x3934 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22B0 DUP4 PUSH2 0x8CA JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x236D DUP2 PUSH2 0x2338 JUMP JUMPDEST DUP2 EQ PUSH2 0x2378 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x238A DUP2 PUSH2 0x2364 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23A6 JUMPI PUSH2 0x23A5 PUSH2 0x232E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23B4 DUP5 DUP3 DUP6 ADD PUSH2 0x237B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23D2 DUP2 PUSH2 0x23BD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x23ED PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x23C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x242D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2412 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2455 DUP3 PUSH2 0x23F3 JUMP JUMPDEST PUSH2 0x245F DUP2 DUP6 PUSH2 0x23FE JUMP JUMPDEST SWAP4 POP PUSH2 0x246F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x240F JUMP JUMPDEST PUSH2 0x2478 DUP2 PUSH2 0x2439 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x249D DUP2 DUP5 PUSH2 0x244A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24B8 DUP2 PUSH2 0x24A5 JUMP JUMPDEST DUP2 EQ PUSH2 0x24C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x24D5 DUP2 PUSH2 0x24AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24F1 JUMPI PUSH2 0x24F0 PUSH2 0x232E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x24FF DUP5 DUP3 DUP6 ADD PUSH2 0x24C6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2533 DUP3 PUSH2 0x2508 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2543 DUP2 PUSH2 0x2528 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x255E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x253A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x256D DUP2 PUSH2 0x2528 JUMP JUMPDEST DUP2 EQ PUSH2 0x2578 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x258A DUP2 PUSH2 0x2564 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25A7 JUMPI PUSH2 0x25A6 PUSH2 0x232E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x25B5 DUP6 DUP3 DUP7 ADD PUSH2 0x257B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x25C6 DUP6 DUP3 DUP7 ADD PUSH2 0x24C6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x25D9 DUP2 PUSH2 0x24A5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x25F4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x25D0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2613 JUMPI PUSH2 0x2612 PUSH2 0x232E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2621 DUP7 DUP3 DUP8 ADD PUSH2 0x257B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2632 DUP7 DUP3 DUP8 ADD PUSH2 0x257B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2643 DUP7 DUP3 DUP8 ADD PUSH2 0x24C6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2663 JUMPI PUSH2 0x2662 PUSH2 0x232E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2671 DUP5 DUP3 DUP6 ADD PUSH2 0x257B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2683 DUP2 PUSH2 0x23BD JUMP JUMPDEST DUP2 EQ PUSH2 0x268E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x26A0 DUP2 PUSH2 0x267A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x26BD JUMPI PUSH2 0x26BC PUSH2 0x232E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x26CB DUP6 DUP3 DUP7 ADD PUSH2 0x257B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x26DC DUP6 DUP3 DUP7 ADD PUSH2 0x2691 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2728 DUP3 PUSH2 0x2439 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2747 JUMPI PUSH2 0x2746 PUSH2 0x26F0 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x275A PUSH2 0x2324 JUMP JUMPDEST SWAP1 POP PUSH2 0x2766 DUP3 DUP3 PUSH2 0x271F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2786 JUMPI PUSH2 0x2785 PUSH2 0x26F0 JUMP JUMPDEST JUMPDEST PUSH2 0x278F DUP3 PUSH2 0x2439 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27BE PUSH2 0x27B9 DUP5 PUSH2 0x276B JUMP JUMPDEST PUSH2 0x2750 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x27DA JUMPI PUSH2 0x27D9 PUSH2 0x26EB JUMP JUMPDEST JUMPDEST PUSH2 0x27E5 DUP5 DUP3 DUP6 PUSH2 0x279C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2802 JUMPI PUSH2 0x2801 PUSH2 0x26E6 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2812 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x27AB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2834 JUMPI PUSH2 0x2833 PUSH2 0x232E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2842 DUP7 DUP3 DUP8 ADD PUSH2 0x257B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2853 DUP7 DUP3 DUP8 ADD PUSH2 0x24C6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2874 JUMPI PUSH2 0x2873 PUSH2 0x2333 JUMP JUMPDEST JUMPDEST PUSH2 0x2880 DUP7 DUP3 DUP8 ADD PUSH2 0x27ED JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x28A5 JUMPI PUSH2 0x28A4 PUSH2 0x26F0 JUMP JUMPDEST JUMPDEST PUSH2 0x28AE DUP3 PUSH2 0x2439 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28CE PUSH2 0x28C9 DUP5 PUSH2 0x288A JUMP JUMPDEST PUSH2 0x2750 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x28EA JUMPI PUSH2 0x28E9 PUSH2 0x26EB JUMP JUMPDEST JUMPDEST PUSH2 0x28F5 DUP5 DUP3 DUP6 PUSH2 0x279C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2912 JUMPI PUSH2 0x2911 PUSH2 0x26E6 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2922 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x28BB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2945 JUMPI PUSH2 0x2944 PUSH2 0x232E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2953 DUP8 DUP3 DUP9 ADD PUSH2 0x257B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2964 DUP8 DUP3 DUP9 ADD PUSH2 0x257B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2975 DUP8 DUP3 DUP9 ADD PUSH2 0x24C6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2996 JUMPI PUSH2 0x2995 PUSH2 0x2333 JUMP JUMPDEST JUMPDEST PUSH2 0x29A2 DUP8 DUP3 DUP9 ADD PUSH2 0x28FD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x29C5 JUMPI PUSH2 0x29C4 PUSH2 0x232E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x29D3 DUP6 DUP3 DUP7 ADD PUSH2 0x257B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x29E4 DUP6 DUP3 DUP7 ADD PUSH2 0x257B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2A35 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2A48 JUMPI PUSH2 0x2A47 PUSH2 0x29EE JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AAA PUSH1 0x21 DUP4 PUSH2 0x23FE JUMP JUMPDEST SWAP2 POP PUSH2 0x2AB5 DUP3 PUSH2 0x2A4E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2AD9 DUP2 PUSH2 0x2A9D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206E6F7220617070726F76656420666F7220616C6C0000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B3C PUSH1 0x3E DUP4 PUSH2 0x23FE JUMP JUMPDEST SWAP2 POP PUSH2 0x2B47 DUP3 PUSH2 0x2AE0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B6B DUP2 PUSH2 0x2B2F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206E6F7220617070726F766564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BCE PUSH1 0x2E DUP4 PUSH2 0x23FE JUMP JUMPDEST SWAP2 POP PUSH2 0x2BD9 DUP3 PUSH2 0x2B72 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2BFD DUP2 PUSH2 0x2BC1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243373231456E756D657261626C653A206F776E657220696E646578206F75 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x74206F6620626F756E6473000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C60 PUSH1 0x2B DUP4 PUSH2 0x23FE JUMP JUMPDEST SWAP2 POP PUSH2 0x2C6B DUP3 PUSH2 0x2C04 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C8F DUP2 PUSH2 0x2C53 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7574206F6620626F756E64730000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CF2 PUSH1 0x2C DUP4 PUSH2 0x23FE JUMP JUMPDEST SWAP2 POP PUSH2 0x2CFD DUP3 PUSH2 0x2C96 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D21 DUP2 PUSH2 0x2CE5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D8D PUSH1 0x18 DUP4 PUSH2 0x23FE JUMP JUMPDEST SWAP2 POP PUSH2 0x2D98 DUP3 PUSH2 0x2D57 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2DBC DUP2 PUSH2 0x2D80 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E1F PUSH1 0x29 DUP4 PUSH2 0x23FE JUMP JUMPDEST SWAP2 POP PUSH2 0x2E2A DUP3 PUSH2 0x2DC3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E4E DUP2 PUSH2 0x2E12 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436572746966696361746520616C72656164792069737375656420666F722074 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x68697320636F7572736500000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EB1 PUSH1 0x2A DUP4 PUSH2 0x23FE JUMP JUMPDEST SWAP2 POP PUSH2 0x2EBC DUP3 PUSH2 0x2E55 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2EE0 DUP2 PUSH2 0x2EA4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F43 PUSH1 0x26 DUP4 PUSH2 0x23FE JUMP JUMPDEST SWAP2 POP PUSH2 0x2F4E DUP3 PUSH2 0x2EE7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F72 DUP2 PUSH2 0x2F36 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FD5 PUSH1 0x25 DUP4 PUSH2 0x23FE JUMP JUMPDEST SWAP2 POP PUSH2 0x2FE0 DUP3 PUSH2 0x2F79 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3004 DUP2 PUSH2 0x2FC8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3067 PUSH1 0x24 DUP4 PUSH2 0x23FE JUMP JUMPDEST SWAP2 POP PUSH2 0x3072 DUP3 PUSH2 0x300B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3096 DUP2 PUSH2 0x305A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x30D7 DUP3 PUSH2 0x24A5 JUMP JUMPDEST SWAP2 POP PUSH2 0x30E2 DUP4 PUSH2 0x24A5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x30FA JUMPI PUSH2 0x30F9 PUSH2 0x309D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x310B DUP3 PUSH2 0x24A5 JUMP JUMPDEST SWAP2 POP PUSH2 0x3116 DUP4 PUSH2 0x24A5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x312E JUMPI PUSH2 0x312D PUSH2 0x309D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x316A PUSH1 0x20 DUP4 PUSH2 0x23FE JUMP JUMPDEST SWAP2 POP PUSH2 0x3175 DUP3 PUSH2 0x3134 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3199 DUP2 PUSH2 0x315D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31D6 PUSH1 0x19 DUP4 PUSH2 0x23FE JUMP JUMPDEST SWAP2 POP PUSH2 0x31E1 DUP3 PUSH2 0x31A0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3205 DUP2 PUSH2 0x31C9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524337323155524953746F726167653A2055524920736574206F66206E6F6E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6578697374656E7420746F6B656E000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3268 PUSH1 0x2E DUP4 PUSH2 0x23FE JUMP JUMPDEST SWAP2 POP PUSH2 0x3273 DUP3 PUSH2 0x320C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3297 DUP2 PUSH2 0x325B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x3300 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x32C3 JUMP JUMPDEST PUSH2 0x330A DUP7 DUP4 PUSH2 0x32C3 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3347 PUSH2 0x3342 PUSH2 0x333D DUP5 PUSH2 0x24A5 JUMP JUMPDEST PUSH2 0x3322 JUMP JUMPDEST PUSH2 0x24A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3361 DUP4 PUSH2 0x332C JUMP JUMPDEST PUSH2 0x3375 PUSH2 0x336D DUP3 PUSH2 0x334E JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x32D0 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x338A PUSH2 0x337D JUMP JUMPDEST PUSH2 0x3395 DUP2 DUP5 DUP5 PUSH2 0x3358 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x33B9 JUMPI PUSH2 0x33AE PUSH1 0x0 DUP3 PUSH2 0x3382 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x339B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x33FE JUMPI PUSH2 0x33CF DUP2 PUSH2 0x329E JUMP JUMPDEST PUSH2 0x33D8 DUP5 PUSH2 0x32B3 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x33E7 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x33FB PUSH2 0x33F3 DUP6 PUSH2 0x32B3 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x339A JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3421 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x3403 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x343A DUP4 DUP4 PUSH2 0x3410 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3453 DUP3 PUSH2 0x23F3 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x346C JUMPI PUSH2 0x346B PUSH2 0x26F0 JUMP JUMPDEST JUMPDEST PUSH2 0x3476 DUP3 SLOAD PUSH2 0x2A1D JUMP JUMPDEST PUSH2 0x3481 DUP3 DUP3 DUP6 PUSH2 0x33BD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x34B4 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x34A2 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x34AC DUP6 DUP3 PUSH2 0x342E JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x3514 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x34C2 DUP7 PUSH2 0x329E JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x34EA JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x34C5 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x3507 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x3503 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x3410 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3578 PUSH1 0x32 DUP4 PUSH2 0x23FE JUMP JUMPDEST SWAP2 POP PUSH2 0x3583 DUP3 PUSH2 0x351C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x35A7 DUP2 PUSH2 0x356B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35C4 DUP3 PUSH2 0x23F3 JUMP JUMPDEST PUSH2 0x35CE DUP2 DUP6 PUSH2 0x35AE JUMP JUMPDEST SWAP4 POP PUSH2 0x35DE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x240F JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35F6 DUP3 DUP6 PUSH2 0x35B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x3602 DUP3 DUP5 PUSH2 0x35B9 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x43657274696669636174657320617265206E6F6E2D7472616E7366657261626C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6500000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x366A PUSH1 0x21 DUP4 PUSH2 0x23FE JUMP JUMPDEST SWAP2 POP PUSH2 0x3675 DUP3 PUSH2 0x360E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3699 DUP2 PUSH2 0x365D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36C7 DUP3 PUSH2 0x36A0 JUMP JUMPDEST PUSH2 0x36D1 DUP2 DUP6 PUSH2 0x36AB JUMP JUMPDEST SWAP4 POP PUSH2 0x36E1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x240F JUMP JUMPDEST PUSH2 0x36EA DUP2 PUSH2 0x2439 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x370A PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x253A JUMP JUMPDEST PUSH2 0x3717 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x253A JUMP JUMPDEST PUSH2 0x3724 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x25D0 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x3736 DUP2 DUP5 PUSH2 0x36BC JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3750 DUP2 PUSH2 0x2364 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x376C JUMPI PUSH2 0x376B PUSH2 0x232E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x377A DUP5 DUP3 DUP6 ADD PUSH2 0x3741 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37B9 PUSH1 0x20 DUP4 PUSH2 0x23FE JUMP JUMPDEST SWAP2 POP PUSH2 0x37C4 DUP3 PUSH2 0x3783 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x37E8 DUP2 PUSH2 0x37AC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3825 PUSH1 0x1C DUP4 PUSH2 0x23FE JUMP JUMPDEST SWAP2 POP PUSH2 0x3830 DUP3 PUSH2 0x37EF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3854 DUP2 PUSH2 0x3818 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3866 DUP3 PUSH2 0x24A5 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x3898 JUMPI PUSH2 0x3897 PUSH2 0x309D JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x38DD DUP3 PUSH2 0x24A5 JUMP JUMPDEST SWAP2 POP PUSH2 0x38E8 DUP4 PUSH2 0x24A5 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x38F8 JUMPI PUSH2 0x38F7 PUSH2 0x38A3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x390E DUP3 PUSH2 0x24A5 JUMP JUMPDEST SWAP2 POP PUSH2 0x3919 DUP4 PUSH2 0x24A5 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3929 JUMPI PUSH2 0x3928 PUSH2 0x38A3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F 0xD5 RETURNDATACOPY 0xF9 0xA8 PUSH22 0xEBD3F68467F8F26AD0939BB9CAFB075CA27238E97ECC CALLVALUE 0xD7 DUP5 0xDF PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"461:2581:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2827:212;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2470:98:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3935:167;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3467:407;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;727:66:15;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1615:111:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4612:327:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1291:253:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5005:179:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1798:230:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2190:218:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1929:204;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:0;;;:::i;:::-;;1201:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2632:102:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4169:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1256:673:15;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5250:315:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2172:196:15;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4388:162:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2827:212:15;2966:4;2995:36;3019:11;2995:23;:36::i;:::-;2988:43;;2827:212;;;:::o;2470:98:1:-;2524:13;2556:5;2549:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2470:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;4071:15;:24;4087:7;4071:24;;;;;;;;;;;;;;;;;;;;;4064:31;;3935:167;;;:::o;3467:407::-;3547:13;3563:23;3578:7;3563:14;:23::i;:::-;3547:39;;3610:5;3604:11;;:2;:11;;;3596:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3701:5;3685:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3710:37;3727:5;3734:12;:10;:12::i;:::-;3710:16;:37::i;:::-;3685:62;3664:171;;;;;;;;;;;;:::i;:::-;;;;;;;;;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3537:337;3467:407;;:::o;727:66:15:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1615:111:4:-;1676:7;1702:10;:17;;;;1695:24;;1615:111;:::o;4612:327:1:-;4801:41;4820:12;:10;:12::i;:::-;4834:7;4801:18;:41::i;:::-;4793:100;;;;;;;;;;;;:::i;:::-;;;;;;;;;4904:28;4914:4;4920:2;4924:7;4904:9;:28::i;:::-;4612:327;;;:::o;1291:253:4:-;1388:7;1423:23;1440:5;1423:16;:23::i;:::-;1415:5;:31;1407:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;1511:12;:19;1524:5;1511:19;;;;;;;;;;;;;;;:26;1531:5;1511:26;;;;;;;;;;;;1504:33;;1291:253;;;;:::o;5005:179:1:-;5138:39;5155:4;5161:2;5165:7;5138:39;;;;;;;;;;;;:16;:39::i;:::-;5005:179;;;:::o;1798:230:4:-;1873:7;1908:30;:28;:30::i;:::-;1900:5;:38;1892:95;;;;;;;;;;;;:::i;:::-;;;;;;;;;2004:10;2015:5;2004:17;;;;;;;;:::i;:::-;;;;;;;;;;1997:24;;1798:230;;;:::o;2190:218:1:-;2262:7;2281:13;2297:7;:16;2305:7;2297:16;;;;;;;;;;;;;;;;;;;;;2281:32;;2348:1;2331:19;;:5;:19;;;2323:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2396:5;2389:12;;;2190:218;;;:::o;1929:204::-;2001:7;2045:1;2028:19;;:5;:19;;;2020:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2110:9;:16;2120:5;2110:16;;;;;;;;;;;;;;;;2103:23;;1929:204;;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1201:85::-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;2632:102:1:-;2688:13;2720:7;2713:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2632:102;:::o;4169:153::-;4263:52;4282:12;:10;:12::i;:::-;4296:8;4306;4263:18;:52::i;:::-;4169:153;;:::o;1256:673:15:-;1399:7;1094:13:0;:11;:13::i;:::-;1428:14:15::1;:20;1443:4;1428:20;;;;;;;;;;;;;;;:30;1449:8;1428:30;;;;;;;;;;;;;;;;;;;;;1427:31;1419:86;;;;;;;;;;;;:::i;:::-;;;;;;;;;1518:21;:9;:19;:21::i;:::-;1550:18;1571:19;:9;:17;:19::i;:::-;1550:40;;1640:27;1650:4;1656:10;1640:9;:27::i;:::-;1678:34;1691:10;1703:8;1678:12;:34::i;:::-;1826:4;1793:14;:20;1808:4;1793:20;;;;;;;;;;;;;;;:30;1814:8;1793:30;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;1872:8;1866:4;1848:45;;;1882:10;1848:45;;;;;;:::i;:::-;;;;;;;;1911:10;1904:17;;;1256:673:::0;;;;;:::o;5250:315:1:-;5418:41;5437:12;:10;:12::i;:::-;5451:7;5418:18;:41::i;:::-;5410:100;;;;;;;;;;;;:::i;:::-;;;;;;;;;5520:38;5534:4;5540:2;5544:7;5553:4;5520:13;:38::i;:::-;5250:315;;;;:::o;2172:196:15:-;2299:13;2337:23;2352:7;2337:14;:23::i;:::-;2330:30;;2172:196;;;:::o;4388:162:1:-;4485:4;4508:18;:25;4527:5;4508:25;;;;;;;;;;;;;;;:35;4534:8;4508:35;;;;;;;;;;;;;;;;;;;;;;;;;4501:42;;4388:162;;;;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;::::0;2161:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;990:222:4:-;1092:4;1130:35;1115:50;;;:11;:50;;;;:90;;;;1169:36;1193:11;1169:23;:36::i;:::-;1115:90;1108:97;;990:222;;;:::o;11657:133:1:-;11738:16;11746:7;11738;:16::i;:::-;11730:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;11657:133;:::o;640:96:9:-;693:7;719:10;712:17;;640:96;:::o;10959:171:1:-;11060:2;11033:15;:24;11049:7;11033:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;11115:7;11111:2;11077:46;;11086:23;11101:7;11086:14;:23::i;:::-;11077:46;;;;;;;;;;;;10959:171;;:::o;7317:261::-;7410:4;7426:13;7442:23;7457:7;7442:14;:23::i;:::-;7426:39;;7494:5;7483:16;;:7;:16;;;:52;;;;7503:32;7520:5;7527:7;7503:16;:32::i;:::-;7483:52;:87;;;;7563:7;7539:31;;:20;7551:7;7539:11;:20::i;:::-;:31;;;7483:87;7475:96;;;7317:261;;;;:::o;10242:605::-;10396:4;10369:31;;:23;10384:7;10369:14;:23::i;:::-;:31;;;10361:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;10474:1;10460:16;;:2;:16;;;10452:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;10528:39;10549:4;10555:2;10559:7;10528:20;:39::i;:::-;10629:29;10646:1;10650:7;10629:8;:29::i;:::-;10688:1;10669:9;:15;10679:4;10669:15;;;;;;;;;;;;;;;;:20;;;;;;;:::i;:::-;;;;;;;;10716:1;10699:9;:13;10709:2;10699:13;;;;;;;;;;;;;;;;:18;;;;;;;:::i;:::-;;;;;;;;10746:2;10727:7;:16;10735:7;10727:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;10783:7;10779:2;10764:27;;10773:4;10764:27;;;;;;;;;;;;10802:38;10822:4;10828:2;10832:7;10802:19;:38::i;:::-;10242:605;;;:::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;11266:307:1:-;11416:8;11407:17;;:5;:17;;;11399:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;11502:8;11464:18;:25;11483:5;11464:25;;;;;;;;;;;;;;;:35;11490:8;11464:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;11547:8;11525:41;;11540:5;11525:41;;;11557:8;11525:41;;;;;;:::i;:::-;;;;;;;;11266:307;;;:::o;945:123:10:-;1050:1;1032:7;:14;;;:19;;;;;;;;;;;945:123;:::o;827:112::-;892:7;918;:14;;;911:21;;827:112;;;:::o;7908:108:1:-;7983:26;7993:2;7997:7;7983:26;;;;;;;;;;;;:9;:26::i;:::-;7908:108;;:::o;1237:214:5:-;1336:16;1344:7;1336;:16::i;:::-;1328:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;1435:9;1413:10;:19;1424:7;1413:19;;;;;;;;;;;:31;;;;;;:::i;:::-;;1237:214;;:::o;6426:305:1:-;6576:28;6586:4;6592:2;6596:7;6576:9;:28::i;:::-;6622:47;6645:4;6651:2;6655:7;6664:4;6622:22;:47::i;:::-;6614:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;6426:305;;;;:::o;482:608:5:-;555:13;580:23;595:7;580:14;:23::i;:::-;614;640:10;:19;651:7;640:19;;;;;;;;;;;614:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;669:18;690:10;:8;:10::i;:::-;669:31;;795:1;779:4;773:18;:23;769:70;;819:9;812:16;;;;;;769:70;967:1;947:9;941:23;:27;937:106;;;1015:4;1021:9;998:33;;;;;;;;;:::i;:::-;;;;;;;;;;;;;984:48;;;;;;937:106;1060:23;1075:7;1060:14;:23::i;:::-;1053:30;;;;482:608;;;;:::o;1570:300:1:-;1672:4;1722:25;1707:40;;;:11;:40;;;;:104;;;;1778:33;1763:48;;;:11;:48;;;;1707:104;:156;;;;1827:36;1851:11;1827:23;:36::i;:::-;1707:156;1688:175;;1570:300;;;:::o;7034:125::-;7099:4;7150:1;7122:30;;:7;:16;7130:7;7122:16;;;;;;;;;;;;;;;;;;;;;:30;;;;7115:37;;7034:125;;;:::o;2453:310:15:-;2639:1;2623:18;;:4;:18;;;:38;;;;2659:1;2645:16;;:2;:16;;;2623:38;2615:84;;;;;;;;;;;;:::i;:::-;;;;;;;;;2710:45;2737:4;2743:2;2747:7;2710:26;:45::i;:::-;2453:310;;;:::o;14223:121:1:-;;;;:::o;8237:309::-;8361:18;8367:2;8371:7;8361:5;:18::i;:::-;8410:53;8441:1;8445:2;8449:7;8458:4;8410:22;:53::i;:::-;8389:150;;;;;;;;;;;;:::i;:::-;;;;;;;;;8237:309;;;:::o;12342:831::-;12491:4;12511:15;:2;:13;;;:15::i;:::-;12507:660;;;12562:2;12546:36;;;12583:12;:10;:12::i;:::-;12597:4;12603:7;12612:4;12546:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;12542:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12801:1;12784:6;:13;:18;12780:321;;12826:60;;;;;;;;;;:::i;:::-;;;;;;;;12780:321;13053:6;13047:13;13038:6;13034:2;13030:15;13023:38;12542:573;12677:41;;;12667:51;;;:6;:51;;;;12660:58;;;;;12507:660;13152:4;13145:11;;12342:831;;;;;;;:::o;3318:92::-;3369:13;3394:9;;;;;;;;;;;;;;3318:92;:::o;2800:276::-;2873:13;2898:23;2913:7;2898:14;:23::i;:::-;2932:21;2956:10;:8;:10::i;:::-;2932:34;;3007:1;2989:7;2983:21;:25;:86;;;;;;;;;;;;;;;;;3035:7;3044:18;:7;:16;:18::i;:::-;3018:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2983:86;2976:93;;;2800:276;;;:::o;829:155:12:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;2624:572:4:-;2763:45;2790:4;2796:2;2800:7;2763:26;:45::i;:::-;2839:1;2823:18;;:4;:18;;;2819:183;;2857:40;2889:7;2857:31;:40::i;:::-;2819:183;;;2926:2;2918:10;;:4;:10;;;2914:88;;2944:47;2977:4;2983:7;2944:32;:47::i;:::-;2914:88;2819:183;3029:1;3015:16;;:2;:16;;;3011:179;;3047:45;3084:7;3047:36;:45::i;:::-;3011:179;;;3119:4;3113:10;;:2;:10;;;3109:81;;3139:40;3167:2;3171:7;3139:27;:40::i;:::-;3109:81;3011:179;2624:572;;;:::o;8868:427:1:-;8961:1;8947:16;;:2;:16;;;8939:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;9019:16;9027:7;9019;:16::i;:::-;9018:17;9010:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;9079:45;9108:1;9112:2;9116:7;9079:20;:45::i;:::-;9152:1;9135:9;:13;9145:2;9135:13;;;;;;;;;;;;;;;;:18;;;;;;;:::i;:::-;;;;;;;;9182:2;9163:7;:16;9171:7;9163:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9225:7;9221:2;9200:33;;9217:1;9200:33;;;;;;;;;;;;9244:44;9272:1;9276:2;9280:7;9244:19;:44::i;:::-;8868:427;;:::o;1175:320:8:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;392:703:11:-;448:13;674:1;665:5;:10;661:51;;691:10;;;;;;;;;;;;;;;;;;;;;661:51;721:12;736:5;721:20;;751:14;775:75;790:1;782:4;:9;775:75;;807:8;;;;;:::i;:::-;;;;837:2;829:10;;;;;:::i;:::-;;;775:75;;;859:19;891:6;881:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;859:39;;908:150;924:1;915:5;:10;908:150;;951:1;941:11;;;;;:::i;:::-;;;1017:2;1009:5;:10;;;;:::i;:::-;996:2;:24;;;;:::i;:::-;983:39;;966:6;973;966:14;;;;;;;;:::i;:::-;;;;;:56;;;;;;;;;;;1045:2;1036:11;;;;;:::i;:::-;;;908:150;;;1081:6;1067:21;;;;;392:703;;;;:::o;13729:122:1:-;;;;:::o;3902:161:4:-;4005:10;:17;;;;3978:15;:24;3994:7;3978:24;;;;;;;;;;;:44;;;;4032:10;4048:7;4032:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3902:161;:::o;4680:970::-;4942:22;4992:1;4967:22;4984:4;4967:16;:22::i;:::-;:26;;;;:::i;:::-;4942:51;;5003:18;5024:17;:26;5042:7;5024:26;;;;;;;;;;;;5003:47;;5168:14;5154:10;:28;5150:323;;5198:19;5220:12;:18;5233:4;5220:18;;;;;;;;;;;;;;;:34;5239:14;5220:34;;;;;;;;;;;;5198:56;;5302:11;5269:12;:18;5282:4;5269:18;;;;;;;;;;;;;;;:30;5288:10;5269:30;;;;;;;;;;;:44;;;;5418:10;5385:17;:30;5403:11;5385:30;;;;;;;;;;;:43;;;;5184:289;5150:323;5566:17;:26;5584:7;5566:26;;;;;;;;;;;5559:33;;;5609:12;:18;5622:4;5609:18;;;;;;;;;;;;;;;:34;5628:14;5609:34;;;;;;;;;;;5602:41;;;4761:889;;4680:970;;:::o;5938:1061::-;6187:22;6232:1;6212:10;:17;;;;:21;;;;:::i;:::-;6187:46;;6243:18;6264:15;:24;6280:7;6264:24;;;;;;;;;;;;6243:45;;6610:19;6632:10;6643:14;6632:26;;;;;;;;:::i;:::-;;;;;;;;;;6610:48;;6694:11;6669:10;6680;6669:22;;;;;;;;:::i;:::-;;;;;;;;;:36;;;;6804:10;6773:15;:28;6789:11;6773:28;;;;;;;;;;;:41;;;;6942:15;:24;6958:7;6942:24;;;;;;;;;;;6935:31;;;6976:10;:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6009:990;;;5938:1061;:::o;3490:217::-;3574:14;3591:20;3608:2;3591:16;:20::i;:::-;3574:37;;3648:7;3621:12;:16;3634:2;3621:16;;;;;;;;;;;;;;;:24;3638:6;3621:24;;;;;;;;;;;:34;;;;3694:6;3665:17;:26;3683:7;3665:26;;;;;;;;;;;:35;;;;3564:143;3490:217;;:::o;7:75:17:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:118::-;4977:24;4995:5;4977:24;:::i;:::-;4972:3;4965:37;4890:118;;:::o;5014:222::-;5107:4;5145:2;5134:9;5130:18;5122:26;;5158:71;5226:1;5215:9;5211:17;5202:6;5158:71;:::i;:::-;5014:222;;;;:::o;5242:619::-;5319:6;5327;5335;5384:2;5372:9;5363:7;5359:23;5355:32;5352:119;;;5390:79;;:::i;:::-;5352:119;5510:1;5535:53;5580:7;5571:6;5560:9;5556:22;5535:53;:::i;:::-;5525:63;;5481:117;5637:2;5663:53;5708:7;5699:6;5688:9;5684:22;5663:53;:::i;:::-;5653:63;;5608:118;5765:2;5791:53;5836:7;5827:6;5816:9;5812:22;5791:53;:::i;:::-;5781:63;;5736:118;5242:619;;;;;:::o;5867:329::-;5926:6;5975:2;5963:9;5954:7;5950:23;5946:32;5943:119;;;5981:79;;:::i;:::-;5943:119;6101:1;6126:53;6171:7;6162:6;6151:9;6147:22;6126:53;:::i;:::-;6116:63;;6072:117;5867:329;;;;:::o;6202:116::-;6272:21;6287:5;6272:21;:::i;:::-;6265:5;6262:32;6252:60;;6308:1;6305;6298:12;6252:60;6202:116;:::o;6324:133::-;6367:5;6405:6;6392:20;6383:29;;6421:30;6445:5;6421:30;:::i;:::-;6324:133;;;;:::o;6463:468::-;6528:6;6536;6585:2;6573:9;6564:7;6560:23;6556:32;6553:119;;;6591:79;;:::i;:::-;6553:119;6711:1;6736:53;6781:7;6772:6;6761:9;6757:22;6736:53;:::i;:::-;6726:63;;6682:117;6838:2;6864:50;6906:7;6897:6;6886:9;6882:22;6864:50;:::i;:::-;6854:60;;6809:115;6463:468;;;;;:::o;6937:117::-;7046:1;7043;7036:12;7060:117;7169:1;7166;7159:12;7183:180;7231:77;7228:1;7221:88;7328:4;7325:1;7318:15;7352:4;7349:1;7342:15;7369:281;7452:27;7474:4;7452:27;:::i;:::-;7444:6;7440:40;7582:6;7570:10;7567:22;7546:18;7534:10;7531:34;7528:62;7525:88;;;7593:18;;:::i;:::-;7525:88;7633:10;7629:2;7622:22;7412:238;7369:281;;:::o;7656:129::-;7690:6;7717:20;;:::i;:::-;7707:30;;7746:33;7774:4;7766:6;7746:33;:::i;:::-;7656:129;;;:::o;7791:308::-;7853:4;7943:18;7935:6;7932:30;7929:56;;;7965:18;;:::i;:::-;7929:56;8003:29;8025:6;8003:29;:::i;:::-;7995:37;;8087:4;8081;8077:15;8069:23;;7791:308;;;:::o;8105:146::-;8202:6;8197:3;8192;8179:30;8243:1;8234:6;8229:3;8225:16;8218:27;8105:146;;;:::o;8257:425::-;8335:5;8360:66;8376:49;8418:6;8376:49;:::i;:::-;8360:66;:::i;:::-;8351:75;;8449:6;8442:5;8435:21;8487:4;8480:5;8476:16;8525:3;8516:6;8511:3;8507:16;8504:25;8501:112;;;8532:79;;:::i;:::-;8501:112;8622:54;8669:6;8664:3;8659;8622:54;:::i;:::-;8341:341;8257:425;;;;;:::o;8702:340::-;8758:5;8807:3;8800:4;8792:6;8788:17;8784:27;8774:122;;8815:79;;:::i;:::-;8774:122;8932:6;8919:20;8957:79;9032:3;9024:6;9017:4;9009:6;9005:17;8957:79;:::i;:::-;8948:88;;8764:278;8702:340;;;;:::o;9048:799::-;9135:6;9143;9151;9200:2;9188:9;9179:7;9175:23;9171:32;9168:119;;;9206:79;;:::i;:::-;9168:119;9326:1;9351:53;9396:7;9387:6;9376:9;9372:22;9351:53;:::i;:::-;9341:63;;9297:117;9453:2;9479:53;9524:7;9515:6;9504:9;9500:22;9479:53;:::i;:::-;9469:63;;9424:118;9609:2;9598:9;9594:18;9581:32;9640:18;9632:6;9629:30;9626:117;;;9662:79;;:::i;:::-;9626:117;9767:63;9822:7;9813:6;9802:9;9798:22;9767:63;:::i;:::-;9757:73;;9552:288;9048:799;;;;;:::o;9853:307::-;9914:4;10004:18;9996:6;9993:30;9990:56;;;10026:18;;:::i;:::-;9990:56;10064:29;10086:6;10064:29;:::i;:::-;10056:37;;10148:4;10142;10138:15;10130:23;;9853:307;;;:::o;10166:423::-;10243:5;10268:65;10284:48;10325:6;10284:48;:::i;:::-;10268:65;:::i;:::-;10259:74;;10356:6;10349:5;10342:21;10394:4;10387:5;10383:16;10432:3;10423:6;10418:3;10414:16;10411:25;10408:112;;;10439:79;;:::i;:::-;10408:112;10529:54;10576:6;10571:3;10566;10529:54;:::i;:::-;10249:340;10166:423;;;;;:::o;10608:338::-;10663:5;10712:3;10705:4;10697:6;10693:17;10689:27;10679:122;;10720:79;;:::i;:::-;10679:122;10837:6;10824:20;10862:78;10936:3;10928:6;10921:4;10913:6;10909:17;10862:78;:::i;:::-;10853:87;;10669:277;10608:338;;;;:::o;10952:943::-;11047:6;11055;11063;11071;11120:3;11108:9;11099:7;11095:23;11091:33;11088:120;;;11127:79;;:::i;:::-;11088:120;11247:1;11272:53;11317:7;11308:6;11297:9;11293:22;11272:53;:::i;:::-;11262:63;;11218:117;11374:2;11400:53;11445:7;11436:6;11425:9;11421:22;11400:53;:::i;:::-;11390:63;;11345:118;11502:2;11528:53;11573:7;11564:6;11553:9;11549:22;11528:53;:::i;:::-;11518:63;;11473:118;11658:2;11647:9;11643:18;11630:32;11689:18;11681:6;11678:30;11675:117;;;11711:79;;:::i;:::-;11675:117;11816:62;11870:7;11861:6;11850:9;11846:22;11816:62;:::i;:::-;11806:72;;11601:287;10952:943;;;;;;;:::o;11901:474::-;11969:6;11977;12026:2;12014:9;12005:7;12001:23;11997:32;11994:119;;;12032:79;;:::i;:::-;11994:119;12152:1;12177:53;12222:7;12213:6;12202:9;12198:22;12177:53;:::i;:::-;12167:63;;12123:117;12279:2;12305:53;12350:7;12341:6;12330:9;12326:22;12305:53;:::i;:::-;12295:63;;12250:118;11901:474;;;;;:::o;12381:180::-;12429:77;12426:1;12419:88;12526:4;12523:1;12516:15;12550:4;12547:1;12540:15;12567:320;12611:6;12648:1;12642:4;12638:12;12628:22;;12695:1;12689:4;12685:12;12716:18;12706:81;;12772:4;12764:6;12760:17;12750:27;;12706:81;12834:2;12826:6;12823:14;12803:18;12800:38;12797:84;;12853:18;;:::i;:::-;12797:84;12618:269;12567:320;;;:::o;12893:220::-;13033:34;13029:1;13021:6;13017:14;13010:58;13102:3;13097:2;13089:6;13085:15;13078:28;12893:220;:::o;13119:366::-;13261:3;13282:67;13346:2;13341:3;13282:67;:::i;:::-;13275:74;;13358:93;13447:3;13358:93;:::i;:::-;13476:2;13471:3;13467:12;13460:19;;13119:366;;;:::o;13491:419::-;13657:4;13695:2;13684:9;13680:18;13672:26;;13744:9;13738:4;13734:20;13730:1;13719:9;13715:17;13708:47;13772:131;13898:4;13772:131;:::i;:::-;13764:139;;13491:419;;;:::o;13916:249::-;14056:34;14052:1;14044:6;14040:14;14033:58;14125:32;14120:2;14112:6;14108:15;14101:57;13916:249;:::o;14171:366::-;14313:3;14334:67;14398:2;14393:3;14334:67;:::i;:::-;14327:74;;14410:93;14499:3;14410:93;:::i;:::-;14528:2;14523:3;14519:12;14512:19;;14171:366;;;:::o;14543:419::-;14709:4;14747:2;14736:9;14732:18;14724:26;;14796:9;14790:4;14786:20;14782:1;14771:9;14767:17;14760:47;14824:131;14950:4;14824:131;:::i;:::-;14816:139;;14543:419;;;:::o;14968:233::-;15108:34;15104:1;15096:6;15092:14;15085:58;15177:16;15172:2;15164:6;15160:15;15153:41;14968:233;:::o;15207:366::-;15349:3;15370:67;15434:2;15429:3;15370:67;:::i;:::-;15363:74;;15446:93;15535:3;15446:93;:::i;:::-;15564:2;15559:3;15555:12;15548:19;;15207:366;;;:::o;15579:419::-;15745:4;15783:2;15772:9;15768:18;15760:26;;15832:9;15826:4;15822:20;15818:1;15807:9;15803:17;15796:47;15860:131;15986:4;15860:131;:::i;:::-;15852:139;;15579:419;;;:::o;16004:230::-;16144:34;16140:1;16132:6;16128:14;16121:58;16213:13;16208:2;16200:6;16196:15;16189:38;16004:230;:::o;16240:366::-;16382:3;16403:67;16467:2;16462:3;16403:67;:::i;:::-;16396:74;;16479:93;16568:3;16479:93;:::i;:::-;16597:2;16592:3;16588:12;16581:19;;16240:366;;;:::o;16612:419::-;16778:4;16816:2;16805:9;16801:18;16793:26;;16865:9;16859:4;16855:20;16851:1;16840:9;16836:17;16829:47;16893:131;17019:4;16893:131;:::i;:::-;16885:139;;16612:419;;;:::o;17037:231::-;17177:34;17173:1;17165:6;17161:14;17154:58;17246:14;17241:2;17233:6;17229:15;17222:39;17037:231;:::o;17274:366::-;17416:3;17437:67;17501:2;17496:3;17437:67;:::i;:::-;17430:74;;17513:93;17602:3;17513:93;:::i;:::-;17631:2;17626:3;17622:12;17615:19;;17274:366;;;:::o;17646:419::-;17812:4;17850:2;17839:9;17835:18;17827:26;;17899:9;17893:4;17889:20;17885:1;17874:9;17870:17;17863:47;17927:131;18053:4;17927:131;:::i;:::-;17919:139;;17646:419;;;:::o;18071:180::-;18119:77;18116:1;18109:88;18216:4;18213:1;18206:15;18240:4;18237:1;18230:15;18257:174;18397:26;18393:1;18385:6;18381:14;18374:50;18257:174;:::o;18437:366::-;18579:3;18600:67;18664:2;18659:3;18600:67;:::i;:::-;18593:74;;18676:93;18765:3;18676:93;:::i;:::-;18794:2;18789:3;18785:12;18778:19;;18437:366;;;:::o;18809:419::-;18975:4;19013:2;19002:9;18998:18;18990:26;;19062:9;19056:4;19052:20;19048:1;19037:9;19033:17;19026:47;19090:131;19216:4;19090:131;:::i;:::-;19082:139;;18809:419;;;:::o;19234:228::-;19374:34;19370:1;19362:6;19358:14;19351:58;19443:11;19438:2;19430:6;19426:15;19419:36;19234:228;:::o;19468:366::-;19610:3;19631:67;19695:2;19690:3;19631:67;:::i;:::-;19624:74;;19707:93;19796:3;19707:93;:::i;:::-;19825:2;19820:3;19816:12;19809:19;;19468:366;;;:::o;19840:419::-;20006:4;20044:2;20033:9;20029:18;20021:26;;20093:9;20087:4;20083:20;20079:1;20068:9;20064:17;20057:47;20121:131;20247:4;20121:131;:::i;:::-;20113:139;;19840:419;;;:::o;20265:229::-;20405:34;20401:1;20393:6;20389:14;20382:58;20474:12;20469:2;20461:6;20457:15;20450:37;20265:229;:::o;20500:366::-;20642:3;20663:67;20727:2;20722:3;20663:67;:::i;:::-;20656:74;;20739:93;20828:3;20739:93;:::i;:::-;20857:2;20852:3;20848:12;20841:19;;20500:366;;;:::o;20872:419::-;21038:4;21076:2;21065:9;21061:18;21053:26;;21125:9;21119:4;21115:20;21111:1;21100:9;21096:17;21089:47;21153:131;21279:4;21153:131;:::i;:::-;21145:139;;20872:419;;;:::o;21297:225::-;21437:34;21433:1;21425:6;21421:14;21414:58;21506:8;21501:2;21493:6;21489:15;21482:33;21297:225;:::o;21528:366::-;21670:3;21691:67;21755:2;21750:3;21691:67;:::i;:::-;21684:74;;21767:93;21856:3;21767:93;:::i;:::-;21885:2;21880:3;21876:12;21869:19;;21528:366;;;:::o;21900:419::-;22066:4;22104:2;22093:9;22089:18;22081:26;;22153:9;22147:4;22143:20;22139:1;22128:9;22124:17;22117:47;22181:131;22307:4;22181:131;:::i;:::-;22173:139;;21900:419;;;:::o;22325:224::-;22465:34;22461:1;22453:6;22449:14;22442:58;22534:7;22529:2;22521:6;22517:15;22510:32;22325:224;:::o;22555:366::-;22697:3;22718:67;22782:2;22777:3;22718:67;:::i;:::-;22711:74;;22794:93;22883:3;22794:93;:::i;:::-;22912:2;22907:3;22903:12;22896:19;;22555:366;;;:::o;22927:419::-;23093:4;23131:2;23120:9;23116:18;23108:26;;23180:9;23174:4;23170:20;23166:1;23155:9;23151:17;23144:47;23208:131;23334:4;23208:131;:::i;:::-;23200:139;;22927:419;;;:::o;23352:223::-;23492:34;23488:1;23480:6;23476:14;23469:58;23561:6;23556:2;23548:6;23544:15;23537:31;23352:223;:::o;23581:366::-;23723:3;23744:67;23808:2;23803:3;23744:67;:::i;:::-;23737:74;;23820:93;23909:3;23820:93;:::i;:::-;23938:2;23933:3;23929:12;23922:19;;23581:366;;;:::o;23953:419::-;24119:4;24157:2;24146:9;24142:18;24134:26;;24206:9;24200:4;24196:20;24192:1;24181:9;24177:17;24170:47;24234:131;24360:4;24234:131;:::i;:::-;24226:139;;23953:419;;;:::o;24378:180::-;24426:77;24423:1;24416:88;24523:4;24520:1;24513:15;24547:4;24544:1;24537:15;24564:194;24604:4;24624:20;24642:1;24624:20;:::i;:::-;24619:25;;24658:20;24676:1;24658:20;:::i;:::-;24653:25;;24702:1;24699;24695:9;24687:17;;24726:1;24720:4;24717:11;24714:37;;;24731:18;;:::i;:::-;24714:37;24564:194;;;;:::o;24764:191::-;24804:3;24823:20;24841:1;24823:20;:::i;:::-;24818:25;;24857:20;24875:1;24857:20;:::i;:::-;24852:25;;24900:1;24897;24893:9;24886:16;;24921:3;24918:1;24915:10;24912:36;;;24928:18;;:::i;:::-;24912:36;24764:191;;;;:::o;24961:182::-;25101:34;25097:1;25089:6;25085:14;25078:58;24961:182;:::o;25149:366::-;25291:3;25312:67;25376:2;25371:3;25312:67;:::i;:::-;25305:74;;25388:93;25477:3;25388:93;:::i;:::-;25506:2;25501:3;25497:12;25490:19;;25149:366;;;:::o;25521:419::-;25687:4;25725:2;25714:9;25710:18;25702:26;;25774:9;25768:4;25764:20;25760:1;25749:9;25745:17;25738:47;25802:131;25928:4;25802:131;:::i;:::-;25794:139;;25521:419;;;:::o;25946:175::-;26086:27;26082:1;26074:6;26070:14;26063:51;25946:175;:::o;26127:366::-;26269:3;26290:67;26354:2;26349:3;26290:67;:::i;:::-;26283:74;;26366:93;26455:3;26366:93;:::i;:::-;26484:2;26479:3;26475:12;26468:19;;26127:366;;;:::o;26499:419::-;26665:4;26703:2;26692:9;26688:18;26680:26;;26752:9;26746:4;26742:20;26738:1;26727:9;26723:17;26716:47;26780:131;26906:4;26780:131;:::i;:::-;26772:139;;26499:419;;;:::o;26924:233::-;27064:34;27060:1;27052:6;27048:14;27041:58;27133:16;27128:2;27120:6;27116:15;27109:41;26924:233;:::o;27163:366::-;27305:3;27326:67;27390:2;27385:3;27326:67;:::i;:::-;27319:74;;27402:93;27491:3;27402:93;:::i;:::-;27520:2;27515:3;27511:12;27504:19;;27163:366;;;:::o;27535:419::-;27701:4;27739:2;27728:9;27724:18;27716:26;;27788:9;27782:4;27778:20;27774:1;27763:9;27759:17;27752:47;27816:131;27942:4;27816:131;:::i;:::-;27808:139;;27535:419;;;:::o;27960:141::-;28009:4;28032:3;28024:11;;28055:3;28052:1;28045:14;28089:4;28086:1;28076:18;28068:26;;27960:141;;;:::o;28107:93::-;28144:6;28191:2;28186;28179:5;28175:14;28171:23;28161:33;;28107:93;;;:::o;28206:107::-;28250:8;28300:5;28294:4;28290:16;28269:37;;28206:107;;;;:::o;28319:393::-;28388:6;28438:1;28426:10;28422:18;28461:97;28491:66;28480:9;28461:97;:::i;:::-;28579:39;28609:8;28598:9;28579:39;:::i;:::-;28567:51;;28651:4;28647:9;28640:5;28636:21;28627:30;;28700:4;28690:8;28686:19;28679:5;28676:30;28666:40;;28395:317;;28319:393;;;;;:::o;28718:60::-;28746:3;28767:5;28760:12;;28718:60;;;:::o;28784:142::-;28834:9;28867:53;28885:34;28894:24;28912:5;28894:24;:::i;:::-;28885:34;:::i;:::-;28867:53;:::i;:::-;28854:66;;28784:142;;;:::o;28932:75::-;28975:3;28996:5;28989:12;;28932:75;;;:::o;29013:269::-;29123:39;29154:7;29123:39;:::i;:::-;29184:91;29233:41;29257:16;29233:41;:::i;:::-;29225:6;29218:4;29212:11;29184:91;:::i;:::-;29178:4;29171:105;29089:193;29013:269;;;:::o;29288:73::-;29333:3;29288:73;:::o;29367:189::-;29444:32;;:::i;:::-;29485:65;29543:6;29535;29529:4;29485:65;:::i;:::-;29420:136;29367:189;;:::o;29562:186::-;29622:120;29639:3;29632:5;29629:14;29622:120;;;29693:39;29730:1;29723:5;29693:39;:::i;:::-;29666:1;29659:5;29655:13;29646:22;;29622:120;;;29562:186;;:::o;29754:543::-;29855:2;29850:3;29847:11;29844:446;;;29889:38;29921:5;29889:38;:::i;:::-;29973:29;29991:10;29973:29;:::i;:::-;29963:8;29959:44;30156:2;30144:10;30141:18;30138:49;;;30177:8;30162:23;;30138:49;30200:80;30256:22;30274:3;30256:22;:::i;:::-;30246:8;30242:37;30229:11;30200:80;:::i;:::-;29859:431;;29844:446;29754:543;;;:::o;30303:117::-;30357:8;30407:5;30401:4;30397:16;30376:37;;30303:117;;;;:::o;30426:169::-;30470:6;30503:51;30551:1;30547:6;30539:5;30536:1;30532:13;30503:51;:::i;:::-;30499:56;30584:4;30578;30574:15;30564:25;;30477:118;30426:169;;;;:::o;30600:295::-;30676:4;30822:29;30847:3;30841:4;30822:29;:::i;:::-;30814:37;;30884:3;30881:1;30877:11;30871:4;30868:21;30860:29;;30600:295;;;;:::o;30900:1395::-;31017:37;31050:3;31017:37;:::i;:::-;31119:18;31111:6;31108:30;31105:56;;;31141:18;;:::i;:::-;31105:56;31185:38;31217:4;31211:11;31185:38;:::i;:::-;31270:67;31330:6;31322;31316:4;31270:67;:::i;:::-;31364:1;31388:4;31375:17;;31420:2;31412:6;31409:14;31437:1;31432:618;;;;32094:1;32111:6;32108:77;;;32160:9;32155:3;32151:19;32145:26;32136:35;;32108:77;32211:67;32271:6;32264:5;32211:67;:::i;:::-;32205:4;32198:81;32067:222;31402:887;;31432:618;31484:4;31480:9;31472:6;31468:22;31518:37;31550:4;31518:37;:::i;:::-;31577:1;31591:208;31605:7;31602:1;31599:14;31591:208;;;31684:9;31679:3;31675:19;31669:26;31661:6;31654:42;31735:1;31727:6;31723:14;31713:24;;31782:2;31771:9;31767:18;31754:31;;31628:4;31625:1;31621:12;31616:17;;31591:208;;;31827:6;31818:7;31815:19;31812:179;;;31885:9;31880:3;31876:19;31870:26;31928:48;31970:4;31962:6;31958:17;31947:9;31928:48;:::i;:::-;31920:6;31913:64;31835:156;31812:179;32037:1;32033;32025:6;32021:14;32017:22;32011:4;32004:36;31439:611;;;31402:887;;30992:1303;;;30900:1395;;:::o;32301:237::-;32441:34;32437:1;32429:6;32425:14;32418:58;32510:20;32505:2;32497:6;32493:15;32486:45;32301:237;:::o;32544:366::-;32686:3;32707:67;32771:2;32766:3;32707:67;:::i;:::-;32700:74;;32783:93;32872:3;32783:93;:::i;:::-;32901:2;32896:3;32892:12;32885:19;;32544:366;;;:::o;32916:419::-;33082:4;33120:2;33109:9;33105:18;33097:26;;33169:9;33163:4;33159:20;33155:1;33144:9;33140:17;33133:47;33197:131;33323:4;33197:131;:::i;:::-;33189:139;;32916:419;;;:::o;33341:148::-;33443:11;33480:3;33465:18;;33341:148;;;;:::o;33495:390::-;33601:3;33629:39;33662:5;33629:39;:::i;:::-;33684:89;33766:6;33761:3;33684:89;:::i;:::-;33677:96;;33782:65;33840:6;33835:3;33828:4;33821:5;33817:16;33782:65;:::i;:::-;33872:6;33867:3;33863:16;33856:23;;33605:280;33495:390;;;;:::o;33891:435::-;34071:3;34093:95;34184:3;34175:6;34093:95;:::i;:::-;34086:102;;34205:95;34296:3;34287:6;34205:95;:::i;:::-;34198:102;;34317:3;34310:10;;33891:435;;;;;:::o;34332:220::-;34472:34;34468:1;34460:6;34456:14;34449:58;34541:3;34536:2;34528:6;34524:15;34517:28;34332:220;:::o;34558:366::-;34700:3;34721:67;34785:2;34780:3;34721:67;:::i;:::-;34714:74;;34797:93;34886:3;34797:93;:::i;:::-;34915:2;34910:3;34906:12;34899:19;;34558:366;;;:::o;34930:419::-;35096:4;35134:2;35123:9;35119:18;35111:26;;35183:9;35177:4;35173:20;35169:1;35158:9;35154:17;35147:47;35211:131;35337:4;35211:131;:::i;:::-;35203:139;;34930:419;;;:::o;35355:98::-;35406:6;35440:5;35434:12;35424:22;;35355:98;;;:::o;35459:168::-;35542:11;35576:6;35571:3;35564:19;35616:4;35611:3;35607:14;35592:29;;35459:168;;;;:::o;35633:373::-;35719:3;35747:38;35779:5;35747:38;:::i;:::-;35801:70;35864:6;35859:3;35801:70;:::i;:::-;35794:77;;35880:65;35938:6;35933:3;35926:4;35919:5;35915:16;35880:65;:::i;:::-;35970:29;35992:6;35970:29;:::i;:::-;35965:3;35961:39;35954:46;;35723:283;35633:373;;;;:::o;36012:640::-;36207:4;36245:3;36234:9;36230:19;36222:27;;36259:71;36327:1;36316:9;36312:17;36303:6;36259:71;:::i;:::-;36340:72;36408:2;36397:9;36393:18;36384:6;36340:72;:::i;:::-;36422;36490:2;36479:9;36475:18;36466:6;36422:72;:::i;:::-;36541:9;36535:4;36531:20;36526:2;36515:9;36511:18;36504:48;36569:76;36640:4;36631:6;36569:76;:::i;:::-;36561:84;;36012:640;;;;;;;:::o;36658:141::-;36714:5;36745:6;36739:13;36730:22;;36761:32;36787:5;36761:32;:::i;:::-;36658:141;;;;:::o;36805:349::-;36874:6;36923:2;36911:9;36902:7;36898:23;36894:32;36891:119;;;36929:79;;:::i;:::-;36891:119;37049:1;37074:63;37129:7;37120:6;37109:9;37105:22;37074:63;:::i;:::-;37064:73;;37020:127;36805:349;;;;:::o;37160:182::-;37300:34;37296:1;37288:6;37284:14;37277:58;37160:182;:::o;37348:366::-;37490:3;37511:67;37575:2;37570:3;37511:67;:::i;:::-;37504:74;;37587:93;37676:3;37587:93;:::i;:::-;37705:2;37700:3;37696:12;37689:19;;37348:366;;;:::o;37720:419::-;37886:4;37924:2;37913:9;37909:18;37901:26;;37973:9;37967:4;37963:20;37959:1;37948:9;37944:17;37937:47;38001:131;38127:4;38001:131;:::i;:::-;37993:139;;37720:419;;;:::o;38145:178::-;38285:30;38281:1;38273:6;38269:14;38262:54;38145:178;:::o;38329:366::-;38471:3;38492:67;38556:2;38551:3;38492:67;:::i;:::-;38485:74;;38568:93;38657:3;38568:93;:::i;:::-;38686:2;38681:3;38677:12;38670:19;;38329:366;;;:::o;38701:419::-;38867:4;38905:2;38894:9;38890:18;38882:26;;38954:9;38948:4;38944:20;38940:1;38929:9;38925:17;38918:47;38982:131;39108:4;38982:131;:::i;:::-;38974:139;;38701:419;;;:::o;39126:233::-;39165:3;39188:24;39206:5;39188:24;:::i;:::-;39179:33;;39234:66;39227:5;39224:77;39221:103;;39304:18;;:::i;:::-;39221:103;39351:1;39344:5;39340:13;39333:20;;39126:233;;;:::o;39365:180::-;39413:77;39410:1;39403:88;39510:4;39507:1;39500:15;39534:4;39531:1;39524:15;39551:185;39591:1;39608:20;39626:1;39608:20;:::i;:::-;39603:25;;39642:20;39660:1;39642:20;:::i;:::-;39637:25;;39681:1;39671:35;;39686:18;;:::i;:::-;39671:35;39728:1;39725;39721:9;39716:14;;39551:185;;;;:::o;39742:176::-;39774:1;39791:20;39809:1;39791:20;:::i;:::-;39786:25;;39825:20;39843:1;39825:20;:::i;:::-;39820:25;;39864:1;39854:35;;39869:18;;:::i;:::-;39854:35;39910:1;39907;39903:9;39898:14;;39742:176;;;;:::o;39924:180::-;39972:77;39969:1;39962:88;40069:4;40066:1;40059:15;40093:4;40090:1;40083:15"},"gasEstimates":{"creation":{"codeDepositCost":"2949000","executionCost":"infinite","totalCost":"infinite"},"external":{"approve(address,uint256)":"infinite","balanceOf(address)":"2921","getApproved(uint256)":"5257","hasCertificate(address,uint256)":"3199","isApprovedForAll(address,address)":"infinite","mintCertificate(address,uint256,string)":"infinite","name()":"infinite","owner()":"2611","ownerOf(uint256)":"2979","renounceOwnership()":"30465","safeTransferFrom(address,address,uint256)":"infinite","safeTransferFrom(address,address,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"infinite","supportsInterface(bytes4)":"929","symbol()":"infinite","tokenByIndex(uint256)":"infinite","tokenOfOwnerByIndex(address,uint256)":"infinite","tokenURI(uint256)":"infinite","totalSupply()":"2468","transferFrom(address,address,uint256)":"infinite","transferOwnership(address)":"30876"},"internal":{"_beforeTokenTransfer(address,address,uint256)":"infinite","_burn(uint256)":"infinite"}},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","hasCertificate(address,uint256)":"0ce7ed98","isApprovedForAll(address,address)":"e985e9c5","mintCertificate(address,uint256,string)":"a70d0e45","name()":"06fdde03","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","renounceOwnership()":"715018a6","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenByIndex(uint256)":"4f6ccce7","tokenOfOwnerByIndex(address,uint256)":"2f745c59","tokenURI(uint256)":"c87b56dd","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"courseId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"CertificateMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"hasCertificate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"courseId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"mintCertificate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token that mints non-transferable course certificates\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"mintCertificate(address,uint256,string)\":{\"params\":{\"courseId\":\"The ID of the completed course\",\"tokenURI\":\"The metadata URI for the certificate\",\"user\":\"The address of the user receiving the certificate\"}},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Certificate NFT Contract for Course Completion\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"mintCertificate(address,uint256,string)\":{\"notice\":\"Mint a certificate to a user for a specific course\"},\"supportsInterface(bytes4)\":{\"notice\":\"Override required for ERC721Enumerable\"},\"tokenURI(uint256)\":{\"notice\":\"Override required for ERC721URIStorage\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Certificate.sol\":\"Certificate\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: address zero is not a valid owner\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _owners[tokenId];\\n        require(owner != address(0), \\\"ERC721: invalid token ID\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not token owner nor approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        _requireMinted(tokenId);\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner nor approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner nor approved\\\");\\n        _safeTransfer(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _owners[tokenId] != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId);\\n\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId);\\n\\n        // Clear approvals\\n        _approve(address(0), tokenId);\\n\\n        _balances[owner] -= 1;\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId);\\n\\n        // Clear approvals from the previous owner\\n        _approve(address(0), tokenId);\\n\\n        _balances[from] -= 1;\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(\\n        address owner,\\n        address operator,\\n        bool approved\\n    ) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` has not been minted yet.\\n     */\\n    function _requireMinted(uint256 tokenId) internal view virtual {\\n        require(_exists(tokenId), \\\"ERC721: invalid token ID\\\");\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x0b606994df12f0ce35f6d2f6dcdde7e55e6899cdef7e00f180980caa81e3844e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/ERC721Enumerable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC721.sol\\\";\\nimport \\\"./IERC721Enumerable.sol\\\";\\n\\n/**\\n * @dev This implements an optional extension of {ERC721} defined in the EIP that adds\\n * enumerability of all the token ids in the contract as well as all token ids owned by each\\n * account.\\n */\\nabstract contract ERC721Enumerable is ERC721, IERC721Enumerable {\\n    // Mapping from owner to list of owned token IDs\\n    mapping(address => mapping(uint256 => uint256)) private _ownedTokens;\\n\\n    // Mapping from token ID to index of the owner tokens list\\n    mapping(uint256 => uint256) private _ownedTokensIndex;\\n\\n    // Array with all token ids, used for enumeration\\n    uint256[] private _allTokens;\\n\\n    // Mapping from token id to position in the allTokens array\\n    mapping(uint256 => uint256) private _allTokensIndex;\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {\\n        return interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.\\n     */\\n    function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual override returns (uint256) {\\n        require(index < ERC721.balanceOf(owner), \\\"ERC721Enumerable: owner index out of bounds\\\");\\n        return _ownedTokens[owner][index];\\n    }\\n\\n    /**\\n     * @dev See {IERC721Enumerable-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _allTokens.length;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Enumerable-tokenByIndex}.\\n     */\\n    function tokenByIndex(uint256 index) public view virtual override returns (uint256) {\\n        require(index < ERC721Enumerable.totalSupply(), \\\"ERC721Enumerable: global index out of bounds\\\");\\n        return _allTokens[index];\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual override {\\n        super._beforeTokenTransfer(from, to, tokenId);\\n\\n        if (from == address(0)) {\\n            _addTokenToAllTokensEnumeration(tokenId);\\n        } else if (from != to) {\\n            _removeTokenFromOwnerEnumeration(from, tokenId);\\n        }\\n        if (to == address(0)) {\\n            _removeTokenFromAllTokensEnumeration(tokenId);\\n        } else if (to != from) {\\n            _addTokenToOwnerEnumeration(to, tokenId);\\n        }\\n    }\\n\\n    /**\\n     * @dev Private function to add a token to this extension's ownership-tracking data structures.\\n     * @param to address representing the new owner of the given token ID\\n     * @param tokenId uint256 ID of the token to be added to the tokens list of the given address\\n     */\\n    function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {\\n        uint256 length = ERC721.balanceOf(to);\\n        _ownedTokens[to][length] = tokenId;\\n        _ownedTokensIndex[tokenId] = length;\\n    }\\n\\n    /**\\n     * @dev Private function to add a token to this extension's token tracking data structures.\\n     * @param tokenId uint256 ID of the token to be added to the tokens list\\n     */\\n    function _addTokenToAllTokensEnumeration(uint256 tokenId) private {\\n        _allTokensIndex[tokenId] = _allTokens.length;\\n        _allTokens.push(tokenId);\\n    }\\n\\n    /**\\n     * @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\\n     * while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\\n     * gas optimizations e.g. when performing a transfer operation (avoiding double writes).\\n     * This has O(1) time complexity, but alters the order of the _ownedTokens array.\\n     * @param from address representing the previous owner of the given token ID\\n     * @param tokenId uint256 ID of the token to be removed from the tokens list of the given address\\n     */\\n    function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {\\n        // To prevent a gap in from's tokens array, we store the last token in the index of the token to delete, and\\n        // then delete the last slot (swap and pop).\\n\\n        uint256 lastTokenIndex = ERC721.balanceOf(from) - 1;\\n        uint256 tokenIndex = _ownedTokensIndex[tokenId];\\n\\n        // When the token to delete is the last token, the swap operation is unnecessary\\n        if (tokenIndex != lastTokenIndex) {\\n            uint256 lastTokenId = _ownedTokens[from][lastTokenIndex];\\n\\n            _ownedTokens[from][tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\\n            _ownedTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\\n        }\\n\\n        // This also deletes the contents at the last position of the array\\n        delete _ownedTokensIndex[tokenId];\\n        delete _ownedTokens[from][lastTokenIndex];\\n    }\\n\\n    /**\\n     * @dev Private function to remove a token from this extension's token tracking data structures.\\n     * This has O(1) time complexity, but alters the order of the _allTokens array.\\n     * @param tokenId uint256 ID of the token to be removed from the tokens list\\n     */\\n    function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {\\n        // To prevent a gap in the tokens array, we store the last token in the index of the token to delete, and\\n        // then delete the last slot (swap and pop).\\n\\n        uint256 lastTokenIndex = _allTokens.length - 1;\\n        uint256 tokenIndex = _allTokensIndex[tokenId];\\n\\n        // When the token to delete is the last token, the swap operation is unnecessary. However, since this occurs so\\n        // rarely (when the last minted token is burnt) that we still do the swap here to avoid the gas cost of adding\\n        // an 'if' statement (like in _removeTokenFromOwnerEnumeration)\\n        uint256 lastTokenId = _allTokens[lastTokenIndex];\\n\\n        _allTokens[tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\\n        _allTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\\n\\n        // This also deletes the contents at the last position of the array\\n        delete _allTokensIndex[tokenId];\\n        _allTokens.pop();\\n    }\\n}\\n\",\"keccak256\":\"0x0a79511df8151b10b0a0004d6a76ad956582d32824af4c0f4886bdbdfe5746e5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/extensions/ERC721URIStorage.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC721.sol\\\";\\n\\n/**\\n * @dev ERC721 token with storage based token URI management.\\n */\\nabstract contract ERC721URIStorage is ERC721 {\\n    using Strings for uint256;\\n\\n    // Optional mapping for token URIs\\n    mapping(uint256 => string) private _tokenURIs;\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory _tokenURI = _tokenURIs[tokenId];\\n        string memory base = _baseURI();\\n\\n        // If there is no base URI, return the token URI.\\n        if (bytes(base).length == 0) {\\n            return _tokenURI;\\n        }\\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\\n        if (bytes(_tokenURI).length > 0) {\\n            return string(abi.encodePacked(base, _tokenURI));\\n        }\\n\\n        return super.tokenURI(tokenId);\\n    }\\n\\n    /**\\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\\n        require(_exists(tokenId), \\\"ERC721URIStorage: URI set of nonexistent token\\\");\\n        _tokenURIs[tokenId] = _tokenURI;\\n    }\\n\\n    /**\\n     * @dev See {ERC721-_burn}. This override additionally checks to see if a\\n     * token-specific URI was set for the token, and if so, it deletes the token URI from\\n     * the storage mapping.\\n     */\\n    function _burn(uint256 tokenId) internal virtual override {\\n        super._burn(tokenId);\\n\\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\\n            delete _tokenURIs[tokenId];\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x5c3501c1b70fcfc64417e9da5cc6a3597191baa354781e508e1e14cc0e50a038\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC721/extensions/IERC721Enumerable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Enumerable is IERC721 {\\n    /**\\n     * @dev Returns the total amount of tokens stored by the contract.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\\n     */\\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\\n     * Use along with {totalSupply} to enumerate all tokens.\\n     */\\n    function tokenByIndex(uint256 index) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Counters.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title Counters\\n * @author Matt Condon (@shrugs)\\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\\n *\\n * Include with `using Counters for Counters.Counter;`\\n */\\nlibrary Counters {\\n    struct Counter {\\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\\n        uint256 _value; // default: 0\\n    }\\n\\n    function current(Counter storage counter) internal view returns (uint256) {\\n        return counter._value;\\n    }\\n\\n    function increment(Counter storage counter) internal {\\n        unchecked {\\n            counter._value += 1;\\n        }\\n    }\\n\\n    function decrement(Counter storage counter) internal {\\n        uint256 value = counter._value;\\n        require(value > 0, \\\"Counter: decrement overflow\\\");\\n        unchecked {\\n            counter._value = value - 1;\\n        }\\n    }\\n\\n    function reset(Counter storage counter) internal {\\n        counter._value = 0;\\n    }\\n}\\n\",\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/Certificate.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.18;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/utils/Counters.sol\\\";\\r\\n\\r\\n/// @title Certificate NFT Contract for Course Completion\\r\\n/// @dev ERC721 token that mints non-transferable course certificates\\r\\ncontract Certificate is ERC721Enumerable, ERC721URIStorage, Ownable {\\r\\n    using Counters for Counters.Counter;\\r\\n\\r\\n    // Token ID Counter\\r\\n    Counters.Counter private _tokenIds;\\r\\n\\r\\n    // Mapping to track if a user already received a certificate for a course\\r\\n    mapping(address => mapping(uint256 => bool)) public hasCertificate;\\r\\n\\r\\n    // Events\\r\\n    event CertificateMinted(address indexed user, uint256 indexed courseId, uint256 tokenId);\\r\\n\\r\\n    constructor(string memory name, string memory symbol) ERC721(name, symbol) {}\\r\\n\\r\\n    /// @notice Mint a certificate to a user for a specific course\\r\\n    /// @param user The address of the user receiving the certificate\\r\\n    /// @param courseId The ID of the completed course\\r\\n    /// @param tokenURI The metadata URI for the certificate\\r\\n    function mintCertificate(\\r\\n        address user,\\r\\n        uint256 courseId,\\r\\n        string memory tokenURI\\r\\n    ) external onlyOwner returns (uint256) {\\r\\n        require(!hasCertificate[user][courseId], \\\"Certificate already issued for this course\\\");\\r\\n\\r\\n        _tokenIds.increment();\\r\\n        uint256 newTokenId = _tokenIds.current();\\r\\n\\r\\n        // Mint the NFT certificate\\r\\n        _safeMint(user, newTokenId);\\r\\n        _setTokenURI(newTokenId, tokenURI);\\r\\n\\r\\n        // Mark the certificate as issued for this user and course\\r\\n        hasCertificate[user][courseId] = true;\\r\\n\\r\\n        emit CertificateMinted(user, courseId, newTokenId);\\r\\n        return newTokenId;\\r\\n    }\\r\\n\\r\\n    /// @notice Override required for ERC721URIStorage\\r\\n    function _burn(uint256 tokenId) internal override(ERC721, ERC721URIStorage) {\\r\\n        super._burn(tokenId);\\r\\n    }\\r\\n\\r\\n    /// @notice Override required for ERC721URIStorage\\r\\n    function tokenURI(uint256 tokenId)\\r\\n        public\\r\\n        view\\r\\n        override(ERC721, ERC721URIStorage)\\r\\n        returns (string memory)\\r\\n    {\\r\\n        return super.tokenURI(tokenId);\\r\\n    }\\r\\n\\r\\n    /// @notice Override required for ERC721Enumerable and ERC721URIStorage\\r\\n    function _beforeTokenTransfer(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 tokenId\\r\\n    ) internal override(ERC721, ERC721Enumerable) {\\r\\n        require(from == address(0) || to == address(0), \\\"Certificates are non-transferable\\\");\\r\\n        super._beforeTokenTransfer(from, to, tokenId);\\r\\n    }\\r\\n\\r\\n    /// @notice Override required for ERC721Enumerable\\r\\n    function supportsInterface(bytes4 interfaceId)\\r\\n        public\\r\\n        view\\r\\n        override(ERC721, ERC721Enumerable)\\r\\n        returns (bool)\\r\\n    {\\r\\n        return super.supportsInterface(interfaceId);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x35a9c4e7cebbcadf94ffcecba1e98464b4c98042aef61746c623d58e7916538e\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":138,"contract":"contracts/Certificate.sol:Certificate","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":140,"contract":"contracts/Certificate.sol:Certificate","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":144,"contract":"contracts/Certificate.sol:Certificate","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":148,"contract":"contracts/Certificate.sol:Certificate","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":152,"contract":"contracts/Certificate.sol:Certificate","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":158,"contract":"contracts/Certificate.sol:Certificate","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":1128,"contract":"contracts/Certificate.sol:Certificate","label":"_ownedTokens","offset":0,"slot":"6","type":"t_mapping(t_address,t_mapping(t_uint256,t_uint256))"},{"astId":1132,"contract":"contracts/Certificate.sol:Certificate","label":"_ownedTokensIndex","offset":0,"slot":"7","type":"t_mapping(t_uint256,t_uint256)"},{"astId":1135,"contract":"contracts/Certificate.sol:Certificate","label":"_allTokens","offset":0,"slot":"8","type":"t_array(t_uint256)dyn_storage"},{"astId":1139,"contract":"contracts/Certificate.sol:Certificate","label":"_allTokensIndex","offset":0,"slot":"9","type":"t_mapping(t_uint256,t_uint256)"},{"astId":1464,"contract":"contracts/Certificate.sol:Certificate","label":"_tokenURIs","offset":0,"slot":"10","type":"t_mapping(t_uint256,t_string_storage)"},{"astId":7,"contract":"contracts/Certificate.sol:Certificate","label":"_owner","offset":0,"slot":"11","type":"t_address"},{"astId":2365,"contract":"contracts/Certificate.sol:Certificate","label":"_tokenIds","offset":0,"slot":"12","type":"t_struct(Counter)1957_storage"},{"astId":2371,"contract":"contracts/Certificate.sol:Certificate","label":"hasCertificate","offset":0,"slot":"13","type":"t_mapping(t_address,t_mapping(t_uint256,t_bool))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)dyn_storage":{"base":"t_uint256","encoding":"dynamic_array","label":"uint256[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_mapping(t_uint256,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(uint256 => bool))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_bool)"},"t_mapping(t_address,t_mapping(t_uint256,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(uint256 => uint256))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint256,t_bool)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_uint256,t_string_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => string)","numberOfBytes":"32","value":"t_string_storage"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Counter)1957_storage":{"encoding":"inplace","label":"struct Counters.Counter","members":[{"astId":1956,"contract":"contracts/Certificate.sol:Certificate","label":"_value","offset":0,"slot":"0","type":"t_uint256"}],"numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{"mintCertificate(address,uint256,string)":{"notice":"Mint a certificate to a user for a specific course"},"supportsInterface(bytes4)":{"notice":"Override required for ERC721Enumerable"},"tokenURI(uint256)":{"notice":"Override required for ERC721URIStorage"}},"version":1}}},"contracts/Marketplace.sol":{"Marketplace":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"courseId","type":"uint256"},{"indexed":false,"internalType":"string","name":"uri","type":"string"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"maxSupply","type":"uint256"}],"name":"CourseCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"},{"indexed":true,"internalType":"address","name":"seller","type":"address"}],"name":"NFTListedForSale","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"courseId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":true,"internalType":"address","name":"owner","type":"address"}],"name":"NFTMinted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":true,"internalType":"address","name":"buyer","type":"address"},{"indexed":true,"internalType":"address","name":"seller","type":"address"}],"name":"NFTSold","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"buyNFT","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"courses","outputs":[{"internalType":"string","name":"uri","type":"string"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"maxSupply","type":"uint256"},{"internalType":"uint256","name":"minted","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"uri","type":"string"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"maxSupply","type":"uint256"}],"name":"createCourse","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"currentCourseId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"currentTokenId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"courseId","type":"uint256"}],"name":"getCourseDetails","outputs":[{"internalType":"string","name":"","type":"string"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getNFTOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getNFTSalePrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"getOwnedNFTs","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"}],"name":"listNFTForSale","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"courseId","type":"uint256"}],"name":"mintCourse","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"secondaryMarketPrices","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"secondaryMarketSellers","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"owner()":{"details":"Returns the address of the current owner."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenByIndex(uint256)":{"details":"See {IERC721Enumerable-tokenByIndex}."},"tokenOfOwnerByIndex(address,uint256)":{"details":"See {IERC721Enumerable-tokenOfOwnerByIndex}."},"totalSupply()":{"details":"See {IERC721Enumerable-totalSupply}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_175":{"entryPoint":null,"id":175,"parameterSlots":2,"returnSlots":0},"@_23":{"entryPoint":null,"id":23,"parameterSlots":0,"returnSlots":0},"@_2626":{"entryPoint":null,"id":2626,"parameterSlots":2,"returnSlots":0},"@_msgSender_1941":{"entryPoint":135,"id":1941,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_111":{"entryPoint":143,"id":111,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":618,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":693,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":744,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":489,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":341,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":520,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":988,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":877,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1309,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_uint256":{"entryPoint":1124,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1270,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":1144,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1464,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":574,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":1009,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":935,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1434,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":435,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":1134,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1402,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":888,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":388,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":1184,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":361,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":366,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":356,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":351,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":371,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":1025,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1389,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1242,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":1038,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":1194,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":1237,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8574:17","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:17","statements":[{"nodeType":"YulAssignment","src":"57:19:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:17"},"nodeType":"YulFunctionCall","src":"67:9:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:17"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:17","type":""}],"src":"7:75:17"},{"body":{"nodeType":"YulBlock","src":"177:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:17"},"nodeType":"YulFunctionCall","src":"187:12:17"},"nodeType":"YulExpressionStatement","src":"187:12:17"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:17"},{"body":{"nodeType":"YulBlock","src":"300:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:17"},"nodeType":"YulFunctionCall","src":"310:12:17"},"nodeType":"YulExpressionStatement","src":"310:12:17"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:17"},{"body":{"nodeType":"YulBlock","src":"423:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:17"},"nodeType":"YulFunctionCall","src":"433:12:17"},"nodeType":"YulExpressionStatement","src":"433:12:17"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:17"},{"body":{"nodeType":"YulBlock","src":"546:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:17"},"nodeType":"YulFunctionCall","src":"556:12:17"},"nodeType":"YulExpressionStatement","src":"556:12:17"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:17"},{"body":{"nodeType":"YulBlock","src":"628:54:17","statements":[{"nodeType":"YulAssignment","src":"638:38:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:17"},"nodeType":"YulFunctionCall","src":"652:14:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:17","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:17"},"nodeType":"YulFunctionCall","src":"668:7:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:17"},"nodeType":"YulFunctionCall","src":"648:28:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:17"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:17","type":""}],"src":"580:102:17"},{"body":{"nodeType":"YulBlock","src":"716:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:17"},"nodeType":"YulFunctionCall","src":"726:88:17"},"nodeType":"YulExpressionStatement","src":"726:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:17","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:17"},"nodeType":"YulFunctionCall","src":"823:15:17"},"nodeType":"YulExpressionStatement","src":"823:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:17"},"nodeType":"YulFunctionCall","src":"847:15:17"},"nodeType":"YulExpressionStatement","src":"847:15:17"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:17"},{"body":{"nodeType":"YulBlock","src":"917:238:17","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:17","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:17"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:17"},"nodeType":"YulFunctionCall","src":"957:27:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:17"},"nodeType":"YulFunctionCall","src":"945:40:17"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:17"},"nodeType":"YulFunctionCall","src":"1098:18:17"},"nodeType":"YulExpressionStatement","src":"1098:18:17"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:17"},"nodeType":"YulFunctionCall","src":"1036:34:17"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:17"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:17"},"nodeType":"YulFunctionCall","src":"1072:22:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:17"},"nodeType":"YulFunctionCall","src":"1033:62:17"},"nodeType":"YulIf","src":"1030:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:17","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:17"},"nodeType":"YulFunctionCall","src":"1127:22:17"},"nodeType":"YulExpressionStatement","src":"1127:22:17"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:17","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:17","type":""}],"src":"874:281:17"},{"body":{"nodeType":"YulBlock","src":"1202:88:17","statements":[{"nodeType":"YulAssignment","src":"1212:30:17","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:17"},"nodeType":"YulFunctionCall","src":"1222:20:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:17"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:17"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:17"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:17"},"nodeType":"YulFunctionCall","src":"1251:33:17"},"nodeType":"YulExpressionStatement","src":"1251:33:17"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:17","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:17","type":""}],"src":"1161:129:17"},{"body":{"nodeType":"YulBlock","src":"1363:241:17","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:17"},"nodeType":"YulFunctionCall","src":"1470:18:17"},"nodeType":"YulExpressionStatement","src":"1470:18:17"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:17"},"nodeType":"YulFunctionCall","src":"1437:30:17"},"nodeType":"YulIf","src":"1434:56:17"},{"nodeType":"YulAssignment","src":"1500:37:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:17"},"nodeType":"YulFunctionCall","src":"1508:29:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:17"}]},{"nodeType":"YulAssignment","src":"1574:23:17","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:17"},"nodeType":"YulFunctionCall","src":"1582:15:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:17"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:17","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:17","type":""}],"src":"1296:308:17"},{"body":{"nodeType":"YulBlock","src":"1672:184:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1682:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"1691:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1686:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"1751:63:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1776:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"1781:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:17"},"nodeType":"YulFunctionCall","src":"1772:11:17"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1795:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"1800:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1791:3:17"},"nodeType":"YulFunctionCall","src":"1791:11:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1785:5:17"},"nodeType":"YulFunctionCall","src":"1785:18:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1765:6:17"},"nodeType":"YulFunctionCall","src":"1765:39:17"},"nodeType":"YulExpressionStatement","src":"1765:39:17"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1712:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"1715:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1709:2:17"},"nodeType":"YulFunctionCall","src":"1709:13:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1723:19:17","statements":[{"nodeType":"YulAssignment","src":"1725:15:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1734:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"1737:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1730:3:17"},"nodeType":"YulFunctionCall","src":"1730:10:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1725:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"1705:3:17","statements":[]},"src":"1701:113:17"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1834:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"1839:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1830:3:17"},"nodeType":"YulFunctionCall","src":"1830:16:17"},{"kind":"number","nodeType":"YulLiteral","src":"1848:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1823:6:17"},"nodeType":"YulFunctionCall","src":"1823:27:17"},"nodeType":"YulExpressionStatement","src":"1823:27:17"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1654:3:17","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1659:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"1664:6:17","type":""}],"src":"1610:246:17"},{"body":{"nodeType":"YulBlock","src":"1957:339:17","statements":[{"nodeType":"YulAssignment","src":"1967:75:17","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2034:6:17"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1992:41:17"},"nodeType":"YulFunctionCall","src":"1992:49:17"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1976:15:17"},"nodeType":"YulFunctionCall","src":"1976:66:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1967:5:17"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2058:5:17"},{"name":"length","nodeType":"YulIdentifier","src":"2065:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2051:6:17"},"nodeType":"YulFunctionCall","src":"2051:21:17"},"nodeType":"YulExpressionStatement","src":"2051:21:17"},{"nodeType":"YulVariableDeclaration","src":"2081:27:17","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2096:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"2103:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2092:3:17"},"nodeType":"YulFunctionCall","src":"2092:16:17"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2085:3:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"2146:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2148:77:17"},"nodeType":"YulFunctionCall","src":"2148:79:17"},"nodeType":"YulExpressionStatement","src":"2148:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2127:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"2132:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2123:3:17"},"nodeType":"YulFunctionCall","src":"2123:16:17"},{"name":"end","nodeType":"YulIdentifier","src":"2141:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2120:2:17"},"nodeType":"YulFunctionCall","src":"2120:25:17"},"nodeType":"YulIf","src":"2117:112:17"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2273:3:17"},{"name":"dst","nodeType":"YulIdentifier","src":"2278:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"2283:6:17"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2238:34:17"},"nodeType":"YulFunctionCall","src":"2238:52:17"},"nodeType":"YulExpressionStatement","src":"2238:52:17"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1930:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"1935:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"1943:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1951:5:17","type":""}],"src":"1862:434:17"},{"body":{"nodeType":"YulBlock","src":"2389:282:17","statements":[{"body":{"nodeType":"YulBlock","src":"2438:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2440:77:17"},"nodeType":"YulFunctionCall","src":"2440:79:17"},"nodeType":"YulExpressionStatement","src":"2440:79:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2417:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"2425:4:17","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2413:3:17"},"nodeType":"YulFunctionCall","src":"2413:17:17"},{"name":"end","nodeType":"YulIdentifier","src":"2432:3:17"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2409:3:17"},"nodeType":"YulFunctionCall","src":"2409:27:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2402:6:17"},"nodeType":"YulFunctionCall","src":"2402:35:17"},"nodeType":"YulIf","src":"2399:122:17"},{"nodeType":"YulVariableDeclaration","src":"2530:27:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2550:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2544:5:17"},"nodeType":"YulFunctionCall","src":"2544:13:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2534:6:17","type":""}]},{"nodeType":"YulAssignment","src":"2566:99:17","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2638:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"2646:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2634:3:17"},"nodeType":"YulFunctionCall","src":"2634:17:17"},{"name":"length","nodeType":"YulIdentifier","src":"2653:6:17"},{"name":"end","nodeType":"YulIdentifier","src":"2661:3:17"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2575:58:17"},"nodeType":"YulFunctionCall","src":"2575:90:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2566:5:17"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2367:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"2375:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2383:5:17","type":""}],"src":"2316:355:17"},{"body":{"nodeType":"YulBlock","src":"2791:739:17","statements":[{"body":{"nodeType":"YulBlock","src":"2837:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2839:77:17"},"nodeType":"YulFunctionCall","src":"2839:79:17"},"nodeType":"YulExpressionStatement","src":"2839:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2812:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"2821:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2808:3:17"},"nodeType":"YulFunctionCall","src":"2808:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"2833:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2804:3:17"},"nodeType":"YulFunctionCall","src":"2804:32:17"},"nodeType":"YulIf","src":"2801:119:17"},{"nodeType":"YulBlock","src":"2930:291:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2945:38:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2969:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2980:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2965:3:17"},"nodeType":"YulFunctionCall","src":"2965:17:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2959:5:17"},"nodeType":"YulFunctionCall","src":"2959:24:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2949:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"3030:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3032:77:17"},"nodeType":"YulFunctionCall","src":"3032:79:17"},"nodeType":"YulExpressionStatement","src":"3032:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3002:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"3010:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2999:2:17"},"nodeType":"YulFunctionCall","src":"2999:30:17"},"nodeType":"YulIf","src":"2996:117:17"},{"nodeType":"YulAssignment","src":"3127:84:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3183:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"3194:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3179:3:17"},"nodeType":"YulFunctionCall","src":"3179:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3203:7:17"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3137:41:17"},"nodeType":"YulFunctionCall","src":"3137:74:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3127:6:17"}]}]},{"nodeType":"YulBlock","src":"3231:292:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3246:39:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3270:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3281:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3266:3:17"},"nodeType":"YulFunctionCall","src":"3266:18:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3260:5:17"},"nodeType":"YulFunctionCall","src":"3260:25:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3250:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"3332:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3334:77:17"},"nodeType":"YulFunctionCall","src":"3334:79:17"},"nodeType":"YulExpressionStatement","src":"3334:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3304:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"3312:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3301:2:17"},"nodeType":"YulFunctionCall","src":"3301:30:17"},"nodeType":"YulIf","src":"3298:117:17"},{"nodeType":"YulAssignment","src":"3429:84:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3485:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"3496:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3481:3:17"},"nodeType":"YulFunctionCall","src":"3481:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3505:7:17"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3439:41:17"},"nodeType":"YulFunctionCall","src":"3439:74:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3429:6:17"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2753:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2764:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2776:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2784:6:17","type":""}],"src":"2677:853:17"},{"body":{"nodeType":"YulBlock","src":"3595:40:17","statements":[{"nodeType":"YulAssignment","src":"3606:22:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3622:5:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3616:5:17"},"nodeType":"YulFunctionCall","src":"3616:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3606:6:17"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3578:5:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3588:6:17","type":""}],"src":"3536:99:17"},{"body":{"nodeType":"YulBlock","src":"3669:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3686:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3689:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3679:6:17"},"nodeType":"YulFunctionCall","src":"3679:88:17"},"nodeType":"YulExpressionStatement","src":"3679:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3783:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3786:4:17","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3776:6:17"},"nodeType":"YulFunctionCall","src":"3776:15:17"},"nodeType":"YulExpressionStatement","src":"3776:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3807:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3810:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3800:6:17"},"nodeType":"YulFunctionCall","src":"3800:15:17"},"nodeType":"YulExpressionStatement","src":"3800:15:17"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"3641:180:17"},{"body":{"nodeType":"YulBlock","src":"3878:269:17","statements":[{"nodeType":"YulAssignment","src":"3888:22:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3902:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"3908:1:17","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3898:3:17"},"nodeType":"YulFunctionCall","src":"3898:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3888:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"3919:38:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3949:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"3955:1:17","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3945:3:17"},"nodeType":"YulFunctionCall","src":"3945:12:17"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3923:18:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"3996:51:17","statements":[{"nodeType":"YulAssignment","src":"4010:27:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4024:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"4032:4:17","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4020:3:17"},"nodeType":"YulFunctionCall","src":"4020:17:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4010:6:17"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3976:18:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3969:6:17"},"nodeType":"YulFunctionCall","src":"3969:26:17"},"nodeType":"YulIf","src":"3966:81:17"},{"body":{"nodeType":"YulBlock","src":"4099:42:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"4113:16:17"},"nodeType":"YulFunctionCall","src":"4113:18:17"},"nodeType":"YulExpressionStatement","src":"4113:18:17"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4063:18:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4086:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"4094:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4083:2:17"},"nodeType":"YulFunctionCall","src":"4083:14:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4060:2:17"},"nodeType":"YulFunctionCall","src":"4060:38:17"},"nodeType":"YulIf","src":"4057:84:17"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3862:4:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3871:6:17","type":""}],"src":"3827:320:17"},{"body":{"nodeType":"YulBlock","src":"4207:87:17","statements":[{"nodeType":"YulAssignment","src":"4217:11:17","value":{"name":"ptr","nodeType":"YulIdentifier","src":"4225:3:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4217:4:17"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4245:1:17","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"4248:3:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4238:6:17"},"nodeType":"YulFunctionCall","src":"4238:14:17"},"nodeType":"YulExpressionStatement","src":"4238:14:17"},{"nodeType":"YulAssignment","src":"4261:26:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4279:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4282:4:17","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4269:9:17"},"nodeType":"YulFunctionCall","src":"4269:18:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4261:4:17"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"4194:3:17","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"4202:4:17","type":""}],"src":"4153:141:17"},{"body":{"nodeType":"YulBlock","src":"4344:49:17","statements":[{"nodeType":"YulAssignment","src":"4354:33:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4372:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"4379:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:17"},"nodeType":"YulFunctionCall","src":"4368:14:17"},{"kind":"number","nodeType":"YulLiteral","src":"4384:2:17","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4364:3:17"},"nodeType":"YulFunctionCall","src":"4364:23:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4354:6:17"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4327:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4337:6:17","type":""}],"src":"4300:93:17"},{"body":{"nodeType":"YulBlock","src":"4452:54:17","statements":[{"nodeType":"YulAssignment","src":"4462:37:17","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"4487:4:17"},{"name":"value","nodeType":"YulIdentifier","src":"4493:5:17"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4483:3:17"},"nodeType":"YulFunctionCall","src":"4483:16:17"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"4462:8:17"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"4427:4:17","type":""},{"name":"value","nodeType":"YulTypedName","src":"4433:5:17","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"4443:8:17","type":""}],"src":"4399:107:17"},{"body":{"nodeType":"YulBlock","src":"4588:317:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4598:35:17","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"4619:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"4631:1:17","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4615:3:17"},"nodeType":"YulFunctionCall","src":"4615:18:17"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"4602:9:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4642:109:17","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4673:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4684:66:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4654:18:17"},"nodeType":"YulFunctionCall","src":"4654:97:17"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"4646:4:17","type":""}]},{"nodeType":"YulAssignment","src":"4760:51:17","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4791:9:17"},{"name":"toInsert","nodeType":"YulIdentifier","src":"4802:8:17"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4772:18:17"},"nodeType":"YulFunctionCall","src":"4772:39:17"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4760:8:17"}]},{"nodeType":"YulAssignment","src":"4820:30:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4833:5:17"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"4844:4:17"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4840:3:17"},"nodeType":"YulFunctionCall","src":"4840:9:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4829:3:17"},"nodeType":"YulFunctionCall","src":"4829:21:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4820:5:17"}]},{"nodeType":"YulAssignment","src":"4859:40:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4872:5:17"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4883:8:17"},{"name":"mask","nodeType":"YulIdentifier","src":"4893:4:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4879:3:17"},"nodeType":"YulFunctionCall","src":"4879:19:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4869:2:17"},"nodeType":"YulFunctionCall","src":"4869:30:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4859:6:17"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4549:5:17","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"4556:10:17","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"4568:8:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4581:6:17","type":""}],"src":"4512:393:17"},{"body":{"nodeType":"YulBlock","src":"4956:32:17","statements":[{"nodeType":"YulAssignment","src":"4966:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"4977:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4966:7:17"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4938:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4948:7:17","type":""}],"src":"4911:77:17"},{"body":{"nodeType":"YulBlock","src":"5026:28:17","statements":[{"nodeType":"YulAssignment","src":"5036:12:17","value":{"name":"value","nodeType":"YulIdentifier","src":"5043:5:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5036:3:17"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5012:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5022:3:17","type":""}],"src":"4994:60:17"},{"body":{"nodeType":"YulBlock","src":"5120:82:17","statements":[{"nodeType":"YulAssignment","src":"5130:66:17","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5188:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5170:17:17"},"nodeType":"YulFunctionCall","src":"5170:24:17"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"5161:8:17"},"nodeType":"YulFunctionCall","src":"5161:34:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5143:17:17"},"nodeType":"YulFunctionCall","src":"5143:53:17"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5130:9:17"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5100:5:17","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5110:9:17","type":""}],"src":"5060:142:17"},{"body":{"nodeType":"YulBlock","src":"5255:28:17","statements":[{"nodeType":"YulAssignment","src":"5265:12:17","value":{"name":"value","nodeType":"YulIdentifier","src":"5272:5:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5265:3:17"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5241:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5251:3:17","type":""}],"src":"5208:75:17"},{"body":{"nodeType":"YulBlock","src":"5365:193:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5375:63:17","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"5430:7:17"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5399:30:17"},"nodeType":"YulFunctionCall","src":"5399:39:17"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"5379:16:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5454:4:17"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5494:4:17"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5488:5:17"},"nodeType":"YulFunctionCall","src":"5488:11:17"},{"name":"offset","nodeType":"YulIdentifier","src":"5501:6:17"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"5533:16:17"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"5509:23:17"},"nodeType":"YulFunctionCall","src":"5509:41:17"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"5460:27:17"},"nodeType":"YulFunctionCall","src":"5460:91:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5447:6:17"},"nodeType":"YulFunctionCall","src":"5447:105:17"},"nodeType":"YulExpressionStatement","src":"5447:105:17"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5342:4:17","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5348:6:17","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"5356:7:17","type":""}],"src":"5289:269:17"},{"body":{"nodeType":"YulBlock","src":"5613:24:17","statements":[{"nodeType":"YulAssignment","src":"5623:8:17","value":{"kind":"number","nodeType":"YulLiteral","src":"5630:1:17","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5623:3:17"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5609:3:17","type":""}],"src":"5564:73:17"},{"body":{"nodeType":"YulBlock","src":"5696:136:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5706:46:17","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"5720:30:17"},"nodeType":"YulFunctionCall","src":"5720:32:17"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"5710:6:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5805:4:17"},{"name":"offset","nodeType":"YulIdentifier","src":"5811:6:17"},{"name":"zero_0","nodeType":"YulIdentifier","src":"5819:6:17"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5761:43:17"},"nodeType":"YulFunctionCall","src":"5761:65:17"},"nodeType":"YulExpressionStatement","src":"5761:65:17"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5682:4:17","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5688:6:17","type":""}],"src":"5643:189:17"},{"body":{"nodeType":"YulBlock","src":"5888:136:17","statements":[{"body":{"nodeType":"YulBlock","src":"5955:63:17","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5999:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"6006:1:17","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"5969:29:17"},"nodeType":"YulFunctionCall","src":"5969:39:17"},"nodeType":"YulExpressionStatement","src":"5969:39:17"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5908:5:17"},{"name":"end","nodeType":"YulIdentifier","src":"5915:3:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5905:2:17"},"nodeType":"YulFunctionCall","src":"5905:14:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5920:26:17","statements":[{"nodeType":"YulAssignment","src":"5922:22:17","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5935:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"5942:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5931:3:17"},"nodeType":"YulFunctionCall","src":"5931:13:17"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"5922:5:17"}]}]},"pre":{"nodeType":"YulBlock","src":"5902:2:17","statements":[]},"src":"5898:120:17"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"5876:5:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"5883:3:17","type":""}],"src":"5838:186:17"},{"body":{"nodeType":"YulBlock","src":"6109:464:17","statements":[{"body":{"nodeType":"YulBlock","src":"6135:431:17","statements":[{"nodeType":"YulVariableDeclaration","src":"6149:54:17","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6197:5:17"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"6165:31:17"},"nodeType":"YulFunctionCall","src":"6165:38:17"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"6153:8:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6216:63:17","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6239:8:17"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6267:10:17"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6249:17:17"},"nodeType":"YulFunctionCall","src":"6249:29:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6235:3:17"},"nodeType":"YulFunctionCall","src":"6235:44:17"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"6220:11:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"6436:27:17","statements":[{"nodeType":"YulAssignment","src":"6438:23:17","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"6453:8:17"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6438:11:17"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6420:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"6432:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6417:2:17"},"nodeType":"YulFunctionCall","src":"6417:18:17"},"nodeType":"YulIf","src":"6414:49:17"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6505:11:17"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6522:8:17"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6550:3:17"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6532:17:17"},"nodeType":"YulFunctionCall","src":"6532:22:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6518:3:17"},"nodeType":"YulFunctionCall","src":"6518:37:17"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"6476:28:17"},"nodeType":"YulFunctionCall","src":"6476:80:17"},"nodeType":"YulExpressionStatement","src":"6476:80:17"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6126:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"6131:2:17","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6123:2:17"},"nodeType":"YulFunctionCall","src":"6123:11:17"},"nodeType":"YulIf","src":"6120:446:17"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"6085:5:17","type":""},{"name":"len","nodeType":"YulTypedName","src":"6092:3:17","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"6097:10:17","type":""}],"src":"6030:543:17"},{"body":{"nodeType":"YulBlock","src":"6642:54:17","statements":[{"nodeType":"YulAssignment","src":"6652:37:17","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"6677:4:17"},{"name":"value","nodeType":"YulIdentifier","src":"6683:5:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6673:3:17"},"nodeType":"YulFunctionCall","src":"6673:16:17"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"6652:8:17"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"6617:4:17","type":""},{"name":"value","nodeType":"YulTypedName","src":"6623:5:17","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"6633:8:17","type":""}],"src":"6579:117:17"},{"body":{"nodeType":"YulBlock","src":"6753:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"6763:68:17","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6812:1:17","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"6815:5:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6808:3:17"},"nodeType":"YulFunctionCall","src":"6808:13:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6827:1:17","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6823:3:17"},"nodeType":"YulFunctionCall","src":"6823:6:17"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"6779:28:17"},"nodeType":"YulFunctionCall","src":"6779:51:17"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6775:3:17"},"nodeType":"YulFunctionCall","src":"6775:56:17"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"6767:4:17","type":""}]},{"nodeType":"YulAssignment","src":"6840:25:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6854:4:17"},{"name":"mask","nodeType":"YulIdentifier","src":"6860:4:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6850:3:17"},"nodeType":"YulFunctionCall","src":"6850:15:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"6840:6:17"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6730:4:17","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"6736:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"6746:6:17","type":""}],"src":"6702:169:17"},{"body":{"nodeType":"YulBlock","src":"6957:214:17","statements":[{"nodeType":"YulAssignment","src":"7090:37:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7117:4:17"},{"name":"len","nodeType":"YulIdentifier","src":"7123:3:17"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"7098:18:17"},"nodeType":"YulFunctionCall","src":"7098:29:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7090:4:17"}]},{"nodeType":"YulAssignment","src":"7136:29:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7147:4:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7157:1:17","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"7160:3:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7153:3:17"},"nodeType":"YulFunctionCall","src":"7153:11:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7144:2:17"},"nodeType":"YulFunctionCall","src":"7144:21:17"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"7136:4:17"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6938:4:17","type":""},{"name":"len","nodeType":"YulTypedName","src":"6944:3:17","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"6952:4:17","type":""}],"src":"6876:295:17"},{"body":{"nodeType":"YulBlock","src":"7268:1303:17","statements":[{"nodeType":"YulVariableDeclaration","src":"7279:51:17","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7326:3:17"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7293:32:17"},"nodeType":"YulFunctionCall","src":"7293:37:17"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"7283:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"7415:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7417:16:17"},"nodeType":"YulFunctionCall","src":"7417:18:17"},"nodeType":"YulExpressionStatement","src":"7417:18:17"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7387:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"7395:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7384:2:17"},"nodeType":"YulFunctionCall","src":"7384:30:17"},"nodeType":"YulIf","src":"7381:56:17"},{"nodeType":"YulVariableDeclaration","src":"7447:52:17","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7493:4:17"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"7487:5:17"},"nodeType":"YulFunctionCall","src":"7487:11:17"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"7461:25:17"},"nodeType":"YulFunctionCall","src":"7461:38:17"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"7451:6:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7592:4:17"},{"name":"oldLen","nodeType":"YulIdentifier","src":"7598:6:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"7606:6:17"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"7546:45:17"},"nodeType":"YulFunctionCall","src":"7546:67:17"},"nodeType":"YulExpressionStatement","src":"7546:67:17"},{"nodeType":"YulVariableDeclaration","src":"7623:18:17","value":{"kind":"number","nodeType":"YulLiteral","src":"7640:1:17","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"7627:9:17","type":""}]},{"nodeType":"YulAssignment","src":"7651:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"7664:4:17","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"7651:9:17"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"7715:611:17","statements":[{"nodeType":"YulVariableDeclaration","src":"7729:37:17","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7748:6:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7760:4:17","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7756:3:17"},"nodeType":"YulFunctionCall","src":"7756:9:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7744:3:17"},"nodeType":"YulFunctionCall","src":"7744:22:17"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"7733:7:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7780:51:17","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7826:4:17"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"7794:31:17"},"nodeType":"YulFunctionCall","src":"7794:37:17"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"7784:6:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7844:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"7853:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7848:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"7912:163:17","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7937:6:17"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7955:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"7960:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7951:3:17"},"nodeType":"YulFunctionCall","src":"7951:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7945:5:17"},"nodeType":"YulFunctionCall","src":"7945:26:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7930:6:17"},"nodeType":"YulFunctionCall","src":"7930:42:17"},"nodeType":"YulExpressionStatement","src":"7930:42:17"},{"nodeType":"YulAssignment","src":"7989:24:17","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8003:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"8011:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7999:3:17"},"nodeType":"YulFunctionCall","src":"7999:14:17"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7989:6:17"}]},{"nodeType":"YulAssignment","src":"8030:31:17","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8047:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"8058:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8043:3:17"},"nodeType":"YulFunctionCall","src":"8043:18:17"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8030:9:17"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7878:1:17"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"7881:7:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7875:2:17"},"nodeType":"YulFunctionCall","src":"7875:14:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7890:21:17","statements":[{"nodeType":"YulAssignment","src":"7892:17:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7901:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"7904:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7897:3:17"},"nodeType":"YulFunctionCall","src":"7897:12:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7892:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"7871:3:17","statements":[]},"src":"7867:208:17"},{"body":{"nodeType":"YulBlock","src":"8111:156:17","statements":[{"nodeType":"YulVariableDeclaration","src":"8129:43:17","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8156:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8161:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8152:3:17"},"nodeType":"YulFunctionCall","src":"8152:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8146:5:17"},"nodeType":"YulFunctionCall","src":"8146:26:17"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"8133:9:17","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8196:6:17"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"8223:9:17"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8238:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"8246:4:17","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8234:3:17"},"nodeType":"YulFunctionCall","src":"8234:17:17"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"8204:18:17"},"nodeType":"YulFunctionCall","src":"8204:48:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8189:6:17"},"nodeType":"YulFunctionCall","src":"8189:64:17"},"nodeType":"YulExpressionStatement","src":"8189:64:17"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"8094:7:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"8103:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8091:2:17"},"nodeType":"YulFunctionCall","src":"8091:19:17"},"nodeType":"YulIf","src":"8088:179:17"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8287:4:17"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8301:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"8309:1:17","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8297:3:17"},"nodeType":"YulFunctionCall","src":"8297:14:17"},{"kind":"number","nodeType":"YulLiteral","src":"8313:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8293:3:17"},"nodeType":"YulFunctionCall","src":"8293:22:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8280:6:17"},"nodeType":"YulFunctionCall","src":"8280:36:17"},"nodeType":"YulExpressionStatement","src":"8280:36:17"}]},"nodeType":"YulCase","src":"7708:618:17","value":{"kind":"number","nodeType":"YulLiteral","src":"7713:1:17","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"8343:222:17","statements":[{"nodeType":"YulVariableDeclaration","src":"8357:14:17","value":{"kind":"number","nodeType":"YulLiteral","src":"8370:1:17","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8361:5:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"8394:67:17","statements":[{"nodeType":"YulAssignment","src":"8412:35:17","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8431:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8436:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8427:3:17"},"nodeType":"YulFunctionCall","src":"8427:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8421:5:17"},"nodeType":"YulFunctionCall","src":"8421:26:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8412:5:17"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"8387:6:17"},"nodeType":"YulIf","src":"8384:77:17"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8481:4:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8540:5:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"8547:6:17"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"8487:52:17"},"nodeType":"YulFunctionCall","src":"8487:67:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8474:6:17"},"nodeType":"YulFunctionCall","src":"8474:81:17"},"nodeType":"YulExpressionStatement","src":"8474:81:17"}]},"nodeType":"YulCase","src":"8335:230:17","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7688:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"7696:2:17","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7685:2:17"},"nodeType":"YulFunctionCall","src":"7685:14:17"},"nodeType":"YulSwitch","src":"7678:887:17"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"7257:4:17","type":""},{"name":"src","nodeType":"YulTypedName","src":"7263:3:17","type":""}],"src":"7176:1395:17"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":17,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162005178380380620051788339818101604052810190620000379190620002e8565b818181600090816200004a9190620005b8565b5080600190816200005c9190620005b8565b5050506200007f620000736200008760201b60201c565b6200008f60201b60201c565b50506200069f565b600033905090565b6000600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620001be8262000173565b810181811067ffffffffffffffff82111715620001e057620001df62000184565b5b80604052505050565b6000620001f562000155565b9050620002038282620001b3565b919050565b600067ffffffffffffffff82111562000226576200022562000184565b5b620002318262000173565b9050602081019050919050565b60005b838110156200025e57808201518184015260208101905062000241565b60008484015250505050565b6000620002816200027b8462000208565b620001e9565b905082815260208101848484011115620002a0576200029f6200016e565b5b620002ad8482856200023e565b509392505050565b600082601f830112620002cd57620002cc62000169565b5b8151620002df8482602086016200026a565b91505092915050565b600080604083850312156200030257620003016200015f565b5b600083015167ffffffffffffffff81111562000323576200032262000164565b5b6200033185828601620002b5565b925050602083015167ffffffffffffffff81111562000355576200035462000164565b5b6200036385828601620002b5565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620003c057607f821691505b602082108103620003d657620003d562000378565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620004407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000401565b6200044c868362000401565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600062000499620004936200048d8462000464565b6200046e565b62000464565b9050919050565b6000819050919050565b620004b58362000478565b620004cd620004c482620004a0565b8484546200040e565b825550505050565b600090565b620004e4620004d5565b620004f1818484620004aa565b505050565b5b8181101562000519576200050d600082620004da565b600181019050620004f7565b5050565b601f82111562000568576200053281620003dc565b6200053d84620003f1565b810160208510156200054d578190505b620005656200055c85620003f1565b830182620004f6565b50505b505050565b600082821c905092915050565b60006200058d600019846008026200056d565b1980831691505092915050565b6000620005a883836200057a565b9150826002028217905092915050565b620005c3826200036d565b67ffffffffffffffff811115620005df57620005de62000184565b5b620005eb8254620003a7565b620005f88282856200051d565b600060209050601f8311600181146200063057600084156200061b578287015190505b6200062785826200059a565b86555062000697565b601f1984166200064086620003dc565b60005b828110156200066a5784890151825560018201915060208501945060208101905062000643565b868310156200068a578489015162000686601f8916826200057a565b8355505b6001600288020188555050505b505050505050565b614ac980620006af6000396000f3fe6080604052600436106101e25760003560e01c806370a0823111610102578063b25360df11610095578063deaea2e311610064578063deaea2e31461075a578063e71ef65714610797578063e985e9c5146107b3578063f2fde38b146107f0576101e2565b8063b25360df1461068e578063b2733b39146106cb578063b88d4fde146106f4578063c87b56dd1461071d576101e2565b806395d89b41116100d157806395d89b41146105d157806396f979d2146105fc578063a22cb4651461063c578063ae0ec5e414610665576101e2565b806370a082311461051557806371267f1f14610552578063715018a61461058f5780638da5cb5b146105a6576101e2565b80632f745c591161017a57806350e351811161014957806350e351811461043f57806351ed82881461047c578063610b31a6146104985780636352211e146104d8576101e2565b80632f745c59146103715780632f77f003146103ae57806342842e0e146103d95780634f6ccce714610402576101e2565b8063095ea7b3116101b6578063095ea7b3146102b757806318148f1b146102e057806318160ddd1461031d57806323b872dd14610348576101e2565b80629a9b7b146101e757806301ffc9a71461021257806306fdde031461024f578063081812fc1461027a575b600080fd5b3480156101f357600080fd5b506101fc610819565b6040516102099190612f63565b60405180910390f35b34801561021e57600080fd5b5061023960048036038101906102349190612fea565b61081f565b6040516102469190613032565b60405180910390f35b34801561025b57600080fd5b50610264610831565b60405161027191906130dd565b60405180910390f35b34801561028657600080fd5b506102a1600480360381019061029c919061312b565b6108c3565b6040516102ae9190613199565b60405180910390f35b3480156102c357600080fd5b506102de60048036038101906102d991906131e0565b610909565b005b3480156102ec57600080fd5b5061030760048036038101906103029190613220565b610a20565b604051610314919061330b565b60405180910390f35b34801561032957600080fd5b50610332610ace565b60405161033f9190612f63565b60405180910390f35b34801561035457600080fd5b5061036f600480360381019061036a919061332d565b610adb565b005b34801561037d57600080fd5b50610398600480360381019061039391906131e0565b610b3b565b6040516103a59190612f63565b60405180910390f35b3480156103ba57600080fd5b506103c3610be0565b6040516103d09190612f63565b60405180910390f35b3480156103e557600080fd5b5061040060048036038101906103fb919061332d565b610be6565b005b34801561040e57600080fd5b506104296004803603810190610424919061312b565b610c06565b6040516104369190612f63565b60405180910390f35b34801561044b57600080fd5b506104666004803603810190610461919061312b565b610c77565b6040516104739190613199565b60405180910390f35b6104966004803603810190610491919061312b565b610caa565b005b3480156104a457600080fd5b506104bf60048036038101906104ba919061312b565b610f68565b6040516104cf9493929190613380565b60405180910390f35b3480156104e457600080fd5b506104ff60048036038101906104fa919061312b565b61107b565b60405161050c9190613199565b60405180910390f35b34801561052157600080fd5b5061053c60048036038101906105379190613220565b61112c565b6040516105499190612f63565b60405180910390f35b34801561055e57600080fd5b506105796004803603810190610574919061312b565b6111e3565b6040516105869190612f63565b60405180910390f35b34801561059b57600080fd5b506105a46111fb565b005b3480156105b257600080fd5b506105bb61120f565b6040516105c89190613199565b60405180910390f35b3480156105dd57600080fd5b506105e6611239565b6040516105f391906130dd565b60405180910390f35b34801561060857600080fd5b50610623600480360381019061061e919061312b565b6112cb565b6040516106339493929190613380565b60405180910390f35b34801561064857600080fd5b50610663600480360381019061065e91906133f8565b611383565b005b34801561067157600080fd5b5061068c6004803603810190610687919061356d565b611399565b005b34801561069a57600080fd5b506106b560048036038101906106b0919061312b565b611534565b6040516106c29190612f63565b60405180910390f35b3480156106d757600080fd5b506106f260048036038101906106ed91906135dc565b611551565b005b34801561070057600080fd5b5061071b600480360381019061071691906136bd565b6116c7565b005b34801561072957600080fd5b50610744600480360381019061073f919061312b565b611729565b60405161075191906130dd565b60405180910390f35b34801561076657600080fd5b50610781600480360381019061077c919061312b565b61173b565b60405161078e9190613199565b60405180910390f35b6107b160048036038101906107ac919061312b565b61174d565b005b3480156107bf57600080fd5b506107da60048036038101906107d59190613740565b611962565b6040516107e79190613032565b60405180910390f35b3480156107fc57600080fd5b5061081760048036038101906108129190613220565b6119f6565b005b600d5481565b600061082a82611a79565b9050919050565b606060008054610840906137af565b80601f016020809104026020016040519081016040528092919081815260200182805461086c906137af565b80156108b95780601f1061088e576101008083540402835291602001916108b9565b820191906000526020600020905b81548152906001019060200180831161089c57829003601f168201915b5050505050905090565b60006108ce82611af3565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006109148261107b565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610984576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097b90613852565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166109a3611b3e565b73ffffffffffffffffffffffffffffffffffffffff1614806109d257506109d1816109cc611b3e565b611962565b5b610a11576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a08906138e4565b60405180910390fd5b610a1b8383611b46565b505050565b60606000610a2d8361112c565b905060008167ffffffffffffffff811115610a4b57610a4a613442565b5b604051908082528060200260200182016040528015610a795781602001602082028036833780820191505090505b50905060005b82811015610ac357610a918582610b3b565b828281518110610aa457610aa3613904565b5b6020026020010181815250508080610abb90613962565b915050610a7f565b508092505050919050565b6000600880549050905090565b610aec610ae6611b3e565b82611bff565b610b2b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2290613a1c565b60405180910390fd5b610b36838383611c94565b505050565b6000610b468361112c565b8210610b87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7e90613aae565b60405180910390fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054905092915050565b600c5481565b610c01838383604051806020016040528060008152506116c7565b505050565b6000610c10610ace565b8210610c51576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4890613b40565b60405180910390fd5b60088281548110610c6557610c64613904565b5b90600052602060002001549050919050565b600f6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000601060008381526020019081526020016000205411610d00576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cf790613bac565b60405180910390fd5b60106000828152602001908152602001600020543414610d55576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4c90613c18565b60405180910390fd5b6000600f600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610dfc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610df390613c84565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6190613cf0565b60405180910390fd5b610e75813384611c94565b8073ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610ebb573d6000803e3d6000fd5b506010600083815260200190815260200160002060009055600f600083815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690558073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16837ff076e74c3b31fba126074acbffcdd9d113b723bf30ad339f58dfe3002a8310df60405160405180910390a45050565b6060600080600080600e600087815260200190815260200160002090506000816002015411610fcc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fc390613d5c565b60405180910390fd5b80600001816001015482600201548360030154838054610feb906137af565b80601f0160208091040260200160405190810160405280929190818152602001828054611017906137af565b80156110645780601f1061103957610100808354040283529160200191611064565b820191906000526020600020905b81548152906001019060200180831161104757829003601f168201915b505050505093509450945094509450509193509193565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611123576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111a90613dc8565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361119c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119390613e5a565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60106020528060005260406000206000915090505481565b611203611efa565b61120d6000611f78565b565b6000600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060018054611248906137af565b80601f0160208091040260200160405190810160405280929190818152602001828054611274906137af565b80156112c15780601f10611296576101008083540402835291602001916112c1565b820191906000526020600020905b8154815290600101906020018083116112a457829003601f168201915b5050505050905090565b600e6020528060005260406000206000915090508060000180546112ee906137af565b80601f016020809104026020016040519081016040528092919081815260200182805461131a906137af565b80156113675780601f1061133c57610100808354040283529160200191611367565b820191906000526020600020905b81548152906001019060200180831161134a57829003601f168201915b5050505050908060010154908060020154908060030154905084565b61139561138e611b3e565b838361203e565b5050565b6113a1611efa565b600081116113e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113db90613eec565b60405180910390fd5b60008211611427576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161141e90613f58565b60405180910390fd5b600083511161146b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161146290613fc4565b60405180910390fd5b600c600081548092919061147e90613962565b919050555060405180608001604052808481526020018381526020018281526020016000815250600e6000600c54815260200190815260200160002060008201518160000190816114cf9190614190565b50602082015181600101556040820151816002015560608201518160030155905050600c547f62a03295cf3254097619e4c525c459f4c5385f131ff770541e79b7e63ac9d3a184848460405161152793929190614262565b60405180910390a2505050565b600060106000838152602001908152602001600020549050919050565b3373ffffffffffffffffffffffffffffffffffffffff166115718361107b565b73ffffffffffffffffffffffffffffffffffffffff16146115c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115be90614312565b60405180910390fd5b6000811161160a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161160190613f58565b60405180910390fd5b33600f600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060106000848152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff16827ff78e8b672552c30bd4dc6a4d47324c771c972cde77a97fe66da1c8d7adbdbd16836040516116bb9190612f63565b60405180910390a35050565b6116d86116d2611b3e565b83611bff565b611717576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161170e90613a1c565b60405180910390fd5b611723848484846121aa565b50505050565b606061173482612206565b9050919050565b60006117468261107b565b9050919050565b6000600e6000838152602001908152602001600020905060008160020154116117ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117a290613d5c565b60405180910390fd5b80600201548160030154106117f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117ec9061437e565b60405180910390fd5b8060010154341461183b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161183290613c18565b60405180910390fd5b6000600d6000815461184c90613962565b919050819055905081600301600081548092919061186990613962565b91905055506118783382612318565b61190e8183600001805461188b906137af565b80601f01602080910402602001604051908101604052809291908181526020018280546118b7906137af565b80156119045780601f106118d957610100808354040283529160200191611904565b820191906000526020600020905b8154815290600101906020018083116118e757829003601f168201915b5050505050612336565b3373ffffffffffffffffffffffffffffffffffffffff16837ffca9437e237ca408a74cca23e3078fd1f6c700960dac7f09f8c6cf5177aefe1a836040516119559190612f63565b60405180910390a3505050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6119fe611efa565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611a6d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a6490614410565b60405180910390fd5b611a7681611f78565b50565b60007f780e9d63000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480611aec5750611aeb826123a3565b5b9050919050565b611afc81612485565b611b3b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b3290613dc8565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16611bb98361107b565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080611c0b8361107b565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611c4d5750611c4c8185611962565b5b80611c8b57508373ffffffffffffffffffffffffffffffffffffffff16611c73846108c3565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16611cb48261107b565b73ffffffffffffffffffffffffffffffffffffffff1614611d0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d01906144a2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611d79576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d7090614534565b60405180910390fd5b611d848383836124f1565b611d8f600082611b46565b6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611ddf9190614554565b925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611e369190614588565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4611ef5838383612501565b505050565b611f02611b3e565b73ffffffffffffffffffffffffffffffffffffffff16611f2061120f565b73ffffffffffffffffffffffffffffffffffffffff1614611f76576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f6d90614608565b60405180910390fd5b565b6000600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036120ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120a390614674565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161219d9190613032565b60405180910390a3505050565b6121b5848484611c94565b6121c184848484612506565b612200576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121f790614706565b60405180910390fd5b50505050565b606061221182611af3565b6000600a60008481526020019081526020016000208054612231906137af565b80601f016020809104026020016040519081016040528092919081815260200182805461225d906137af565b80156122aa5780601f1061227f576101008083540402835291602001916122aa565b820191906000526020600020905b81548152906001019060200180831161228d57829003601f168201915b5050505050905060006122bb61268d565b905060008151036122d0578192505050612313565b6000825111156123055780826040516020016122ed929190614762565b60405160208183030381529060405292505050612313565b61230e846126a4565b925050505b919050565b61233282826040518060200160405280600081525061270c565b5050565b61233f82612485565b61237e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612375906147f8565b60405180910390fd5b80600a6000848152602001908152602001600020908161239e9190614190565b505050565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061246e57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061247e575061247d82612767565b5b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b6124fc8383836127d1565b505050565b505050565b60006125278473ffffffffffffffffffffffffffffffffffffffff166128e3565b15612680578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02612550611b3e565b8786866040518563ffffffff1660e01b8152600401612572949392919061486d565b6020604051808303816000875af19250505080156125ae57506040513d601f19601f820116820180604052508101906125ab91906148ce565b60015b612630573d80600081146125de576040519150601f19603f3d011682016040523d82523d6000602084013e6125e3565b606091505b506000815103612628576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161261f90614706565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050612685565b600190505b949350505050565b606060405180602001604052806000815250905090565b60606126af82611af3565b60006126b961268d565b905060008151116126d95760405180602001604052806000815250612704565b806126e384612906565b6040516020016126f4929190614762565b6040516020818303038152906040525b915050919050565b6127168383612a66565b6127236000848484612506565b612762576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161275990614706565b60405180910390fd5b505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6127dc838383612c3f565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361281e5761281981612c44565b61285d565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461285c5761285b8382612c8d565b5b5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361289f5761289a81612dfa565b6128de565b8273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16146128dd576128dc8282612ecb565b5b5b505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60606000820361294d576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050612a61565b600082905060005b6000821461297f57808061296890613962565b915050600a82612978919061492a565b9150612955565b60008167ffffffffffffffff81111561299b5761299a613442565b5b6040519080825280601f01601f1916602001820160405280156129cd5781602001600182028036833780820191505090505b5090505b60008514612a5a576001826129e69190614554565b9150600a856129f5919061495b565b6030612a019190614588565b60f81b818381518110612a1757612a16613904565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a85612a53919061492a565b94506129d1565b8093505050505b919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612ad5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612acc906149d8565b60405180910390fd5b612ade81612485565b15612b1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612b1590614a44565b60405180910390fd5b612b2a600083836124f1565b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254612b7a9190614588565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4612c3b60008383612501565b5050565b505050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505060019003906000526020600020016000909190919091505550565b60006001612c9a8461112c565b612ca49190614554565b9050600060076000848152602001908152602001600020549050818114612d89576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002054905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002081905550816007600083815260200190815260200160002081905550505b6007600084815260200190815260200160002060009055600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206000905550505050565b60006001600880549050612e0e9190614554565b9050600060096000848152602001908152602001600020549050600060088381548110612e3e57612e3d613904565b5b906000526020600020015490508060088381548110612e6057612e5f613904565b5b906000526020600020018190555081600960008381526020019081526020016000208190555060096000858152602001908152602001600020600090556008805480612eaf57612eae614a64565b5b6001900381819060005260206000200160009055905550505050565b6000612ed68361112c565b905081600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002081905550806007600084815260200190815260200160002081905550505050565b6000819050919050565b612f5d81612f4a565b82525050565b6000602082019050612f786000830184612f54565b92915050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b612fc781612f92565b8114612fd257600080fd5b50565b600081359050612fe481612fbe565b92915050565b60006020828403121561300057612fff612f88565b5b600061300e84828501612fd5565b91505092915050565b60008115159050919050565b61302c81613017565b82525050565b60006020820190506130476000830184613023565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561308757808201518184015260208101905061306c565b60008484015250505050565b6000601f19601f8301169050919050565b60006130af8261304d565b6130b98185613058565b93506130c9818560208601613069565b6130d281613093565b840191505092915050565b600060208201905081810360008301526130f781846130a4565b905092915050565b61310881612f4a565b811461311357600080fd5b50565b600081359050613125816130ff565b92915050565b60006020828403121561314157613140612f88565b5b600061314f84828501613116565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061318382613158565b9050919050565b61319381613178565b82525050565b60006020820190506131ae600083018461318a565b92915050565b6131bd81613178565b81146131c857600080fd5b50565b6000813590506131da816131b4565b92915050565b600080604083850312156131f7576131f6612f88565b5b6000613205858286016131cb565b925050602061321685828601613116565b9150509250929050565b60006020828403121561323657613235612f88565b5b6000613244848285016131cb565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61328281612f4a565b82525050565b60006132948383613279565b60208301905092915050565b6000602082019050919050565b60006132b88261324d565b6132c28185613258565b93506132cd83613269565b8060005b838110156132fe5781516132e58882613288565b97506132f0836132a0565b9250506001810190506132d1565b5085935050505092915050565b6000602082019050818103600083015261332581846132ad565b905092915050565b60008060006060848603121561334657613345612f88565b5b6000613354868287016131cb565b9350506020613365868287016131cb565b925050604061337686828701613116565b9150509250925092565b6000608082019050818103600083015261339a81876130a4565b90506133a96020830186612f54565b6133b66040830185612f54565b6133c36060830184612f54565b95945050505050565b6133d581613017565b81146133e057600080fd5b50565b6000813590506133f2816133cc565b92915050565b6000806040838503121561340f5761340e612f88565b5b600061341d858286016131cb565b925050602061342e858286016133e3565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61347a82613093565b810181811067ffffffffffffffff8211171561349957613498613442565b5b80604052505050565b60006134ac612f7e565b90506134b88282613471565b919050565b600067ffffffffffffffff8211156134d8576134d7613442565b5b6134e182613093565b9050602081019050919050565b82818337600083830152505050565b600061351061350b846134bd565b6134a2565b90508281526020810184848401111561352c5761352b61343d565b5b6135378482856134ee565b509392505050565b600082601f83011261355457613553613438565b5b81356135648482602086016134fd565b91505092915050565b60008060006060848603121561358657613585612f88565b5b600084013567ffffffffffffffff8111156135a4576135a3612f8d565b5b6135b08682870161353f565b93505060206135c186828701613116565b92505060406135d286828701613116565b9150509250925092565b600080604083850312156135f3576135f2612f88565b5b600061360185828601613116565b925050602061361285828601613116565b9150509250929050565b600067ffffffffffffffff82111561363757613636613442565b5b61364082613093565b9050602081019050919050565b600061366061365b8461361c565b6134a2565b90508281526020810184848401111561367c5761367b61343d565b5b6136878482856134ee565b509392505050565b600082601f8301126136a4576136a3613438565b5b81356136b484826020860161364d565b91505092915050565b600080600080608085870312156136d7576136d6612f88565b5b60006136e5878288016131cb565b94505060206136f6878288016131cb565b935050604061370787828801613116565b925050606085013567ffffffffffffffff81111561372857613727612f8d565b5b6137348782880161368f565b91505092959194509250565b6000806040838503121561375757613756612f88565b5b6000613765858286016131cb565b9250506020613776858286016131cb565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806137c757607f821691505b6020821081036137da576137d9613780565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b600061383c602183613058565b9150613847826137e0565b604082019050919050565b6000602082019050818103600083015261386b8161382f565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c0000602082015250565b60006138ce603e83613058565b91506138d982613872565b604082019050919050565b600060208201905081810360008301526138fd816138c1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061396d82612f4a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361399f5761399e613933565b5b600182019050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206e6f7220617070726f766564000000000000000000000000000000000000602082015250565b6000613a06602e83613058565b9150613a11826139aa565b604082019050919050565b60006020820190508181036000830152613a35816139f9565b9050919050565b7f455243373231456e756d657261626c653a206f776e657220696e646578206f7560008201527f74206f6620626f756e6473000000000000000000000000000000000000000000602082015250565b6000613a98602b83613058565b9150613aa382613a3c565b604082019050919050565b60006020820190508181036000830152613ac781613a8b565b9050919050565b7f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60008201527f7574206f6620626f756e64730000000000000000000000000000000000000000602082015250565b6000613b2a602c83613058565b9150613b3582613ace565b604082019050919050565b60006020820190508181036000830152613b5981613b1d565b9050919050565b7f4e4654206973206e6f7420666f722073616c6500000000000000000000000000600082015250565b6000613b96601383613058565b9150613ba182613b60565b602082019050919050565b60006020820190508181036000830152613bc581613b89565b9050919050565b7f496e636f7272656374207061796d656e7420616d6f756e740000000000000000600082015250565b6000613c02601883613058565b9150613c0d82613bcc565b602082019050919050565b60006020820190508181036000830152613c3181613bf5565b9050919050565b7f53656c6c6572206164647265737320697320696e76616c696400000000000000600082015250565b6000613c6e601983613058565b9150613c7982613c38565b602082019050919050565b60006020820190508181036000830152613c9d81613c61565b9050919050565b7f43616e6e6f742062757920796f7572206f776e204e4654000000000000000000600082015250565b6000613cda601783613058565b9150613ce582613ca4565b602082019050919050565b60006020820190508181036000830152613d0981613ccd565b9050919050565b7f436f7572736520646f6573206e6f742065786973740000000000000000000000600082015250565b6000613d46601583613058565b9150613d5182613d10565b602082019050919050565b60006020820190508181036000830152613d7581613d39565b9050919050565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b6000613db2601883613058565b9150613dbd82613d7c565b602082019050919050565b60006020820190508181036000830152613de181613da5565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b6000613e44602983613058565b9150613e4f82613de8565b604082019050919050565b60006020820190508181036000830152613e7381613e37565b9050919050565b7f4d617820737570706c79206d7573742062652067726561746572207468616e2060008201527f7a65726f00000000000000000000000000000000000000000000000000000000602082015250565b6000613ed6602483613058565b9150613ee182613e7a565b604082019050919050565b60006020820190508181036000830152613f0581613ec9565b9050919050565b7f5072696365206d7573742062652067726561746572207468616e207a65726f00600082015250565b6000613f42601f83613058565b9150613f4d82613f0c565b602082019050919050565b60006020820190508181036000830152613f7181613f35565b9050919050565b7f5552492063616e6e6f7420626520656d70747900000000000000000000000000600082015250565b6000613fae601383613058565b9150613fb982613f78565b602082019050919050565b60006020820190508181036000830152613fdd81613fa1565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026140467fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82614009565b6140508683614009565b95508019841693508086168417925050509392505050565b6000819050919050565b600061408d61408861408384612f4a565b614068565b612f4a565b9050919050565b6000819050919050565b6140a783614072565b6140bb6140b382614094565b848454614016565b825550505050565b600090565b6140d06140c3565b6140db81848461409e565b505050565b5b818110156140ff576140f46000826140c8565b6001810190506140e1565b5050565b601f8211156141445761411581613fe4565b61411e84613ff9565b8101602085101561412d578190505b61414161413985613ff9565b8301826140e0565b50505b505050565b600082821c905092915050565b600061416760001984600802614149565b1980831691505092915050565b60006141808383614156565b9150826002028217905092915050565b6141998261304d565b67ffffffffffffffff8111156141b2576141b1613442565b5b6141bc82546137af565b6141c7828285614103565b600060209050601f8311600181146141fa57600084156141e8578287015190505b6141f28582614174565b86555061425a565b601f19841661420886613fe4565b60005b828110156142305784890151825560018201915060208501945060208101905061420b565b8683101561424d5784890151614249601f891682614156565b8355505b6001600288020188555050505b505050505050565b6000606082019050818103600083015261427c81866130a4565b905061428b6020830185612f54565b6142986040830184612f54565b949350505050565b7f596f7520617265206e6f7420746865206f776e6572206f662074686973204e4660008201527f5400000000000000000000000000000000000000000000000000000000000000602082015250565b60006142fc602183613058565b9150614307826142a0565b604082019050919050565b6000602082019050818103600083015261432b816142ef565b9050919050565b7f4d617820737570706c7920726561636865640000000000000000000000000000600082015250565b6000614368601283613058565b915061437382614332565b602082019050919050565b600060208201905081810360008301526143978161435b565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006143fa602683613058565b91506144058261439e565b604082019050919050565b60006020820190508181036000830152614429816143ed565b9050919050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b600061448c602583613058565b915061449782614430565b604082019050919050565b600060208201905081810360008301526144bb8161447f565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b600061451e602483613058565b9150614529826144c2565b604082019050919050565b6000602082019050818103600083015261454d81614511565b9050919050565b600061455f82612f4a565b915061456a83612f4a565b925082820390508181111561458257614581613933565b5b92915050565b600061459382612f4a565b915061459e83612f4a565b92508282019050808211156145b6576145b5613933565b5b92915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006145f2602083613058565b91506145fd826145bc565b602082019050919050565b60006020820190508181036000830152614621816145e5565b9050919050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b600061465e601983613058565b915061466982614628565b602082019050919050565b6000602082019050818103600083015261468d81614651565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b60006146f0603283613058565b91506146fb82614694565b604082019050919050565b6000602082019050818103600083015261471f816146e3565b9050919050565b600081905092915050565b600061473c8261304d565b6147468185614726565b9350614756818560208601613069565b80840191505092915050565b600061476e8285614731565b915061477a8284614731565b91508190509392505050565b7f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60008201527f6578697374656e7420746f6b656e000000000000000000000000000000000000602082015250565b60006147e2602e83613058565b91506147ed82614786565b604082019050919050565b60006020820190508181036000830152614811816147d5565b9050919050565b600081519050919050565b600082825260208201905092915050565b600061483f82614818565b6148498185614823565b9350614859818560208601613069565b61486281613093565b840191505092915050565b6000608082019050614882600083018761318a565b61488f602083018661318a565b61489c6040830185612f54565b81810360608301526148ae8184614834565b905095945050505050565b6000815190506148c881612fbe565b92915050565b6000602082840312156148e4576148e3612f88565b5b60006148f2848285016148b9565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061493582612f4a565b915061494083612f4a565b9250826149505761494f6148fb565b5b828204905092915050565b600061496682612f4a565b915061497183612f4a565b925082614981576149806148fb565b5b828206905092915050565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b60006149c2602083613058565b91506149cd8261498c565b602082019050919050565b600060208201905081810360008301526149f1816149b5565b9050919050565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b6000614a2e601c83613058565b9150614a39826149f8565b602082019050919050565b60006020820190508181036000830152614a5d81614a21565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220822777f5cb317dcec93261790d2952699717d6fc6b9a34bf3993d6c1fd09c9e264736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x5178 CODESIZE SUB DUP1 PUSH3 0x5178 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x2E8 JUMP JUMPDEST DUP2 DUP2 DUP2 PUSH1 0x0 SWAP1 DUP2 PUSH3 0x4A SWAP2 SWAP1 PUSH3 0x5B8 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0x5C SWAP2 SWAP1 PUSH3 0x5B8 JUMP JUMPDEST POP POP POP PUSH3 0x7F PUSH3 0x73 PUSH3 0x87 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x8F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH3 0x69F JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0xB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x1BE DUP3 PUSH3 0x173 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x1E0 JUMPI PUSH3 0x1DF PUSH3 0x184 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1F5 PUSH3 0x155 JUMP JUMPDEST SWAP1 POP PUSH3 0x203 DUP3 DUP3 PUSH3 0x1B3 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x226 JUMPI PUSH3 0x225 PUSH3 0x184 JUMP JUMPDEST JUMPDEST PUSH3 0x231 DUP3 PUSH3 0x173 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x25E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x241 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x281 PUSH3 0x27B DUP5 PUSH3 0x208 JUMP JUMPDEST PUSH3 0x1E9 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x2A0 JUMPI PUSH3 0x29F PUSH3 0x16E JUMP JUMPDEST JUMPDEST PUSH3 0x2AD DUP5 DUP3 DUP6 PUSH3 0x23E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x2CD JUMPI PUSH3 0x2CC PUSH3 0x169 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x2DF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x26A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x302 JUMPI PUSH3 0x301 PUSH3 0x15F JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x323 JUMPI PUSH3 0x322 PUSH3 0x164 JUMP JUMPDEST JUMPDEST PUSH3 0x331 DUP6 DUP3 DUP7 ADD PUSH3 0x2B5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x355 JUMPI PUSH3 0x354 PUSH3 0x164 JUMP JUMPDEST JUMPDEST PUSH3 0x363 DUP6 DUP3 DUP7 ADD PUSH3 0x2B5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x3C0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x3D6 JUMPI PUSH3 0x3D5 PUSH3 0x378 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x440 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x401 JUMP JUMPDEST PUSH3 0x44C DUP7 DUP4 PUSH3 0x401 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x499 PUSH3 0x493 PUSH3 0x48D DUP5 PUSH3 0x464 JUMP JUMPDEST PUSH3 0x46E JUMP JUMPDEST PUSH3 0x464 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x4B5 DUP4 PUSH3 0x478 JUMP JUMPDEST PUSH3 0x4CD PUSH3 0x4C4 DUP3 PUSH3 0x4A0 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x40E JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x4E4 PUSH3 0x4D5 JUMP JUMPDEST PUSH3 0x4F1 DUP2 DUP5 DUP5 PUSH3 0x4AA JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x519 JUMPI PUSH3 0x50D PUSH1 0x0 DUP3 PUSH3 0x4DA JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x4F7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x568 JUMPI PUSH3 0x532 DUP2 PUSH3 0x3DC JUMP JUMPDEST PUSH3 0x53D DUP5 PUSH3 0x3F1 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x54D JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x565 PUSH3 0x55C DUP6 PUSH3 0x3F1 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x4F6 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x58D PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x56D JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5A8 DUP4 DUP4 PUSH3 0x57A JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x5C3 DUP3 PUSH3 0x36D JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x5DF JUMPI PUSH3 0x5DE PUSH3 0x184 JUMP JUMPDEST JUMPDEST PUSH3 0x5EB DUP3 SLOAD PUSH3 0x3A7 JUMP JUMPDEST PUSH3 0x5F8 DUP3 DUP3 DUP6 PUSH3 0x51D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x630 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x61B JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x627 DUP6 DUP3 PUSH3 0x59A JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x697 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x640 DUP7 PUSH3 0x3DC JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x66A JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x643 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x68A JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x686 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x57A JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4AC9 DUP1 PUSH3 0x6AF PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E2 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x102 JUMPI DUP1 PUSH4 0xB25360DF GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xDEAEA2E3 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xDEAEA2E3 EQ PUSH2 0x75A JUMPI DUP1 PUSH4 0xE71EF657 EQ PUSH2 0x797 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x7B3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x7F0 JUMPI PUSH2 0x1E2 JUMP JUMPDEST DUP1 PUSH4 0xB25360DF EQ PUSH2 0x68E JUMPI DUP1 PUSH4 0xB2733B39 EQ PUSH2 0x6CB JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x6F4 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x71D JUMPI PUSH2 0x1E2 JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x5D1 JUMPI DUP1 PUSH4 0x96F979D2 EQ PUSH2 0x5FC JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x63C JUMPI DUP1 PUSH4 0xAE0EC5E4 EQ PUSH2 0x665 JUMPI PUSH2 0x1E2 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x515 JUMPI DUP1 PUSH4 0x71267F1F EQ PUSH2 0x552 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x58F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5A6 JUMPI PUSH2 0x1E2 JUMP JUMPDEST DUP1 PUSH4 0x2F745C59 GT PUSH2 0x17A JUMPI DUP1 PUSH4 0x50E35181 GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x50E35181 EQ PUSH2 0x43F JUMPI DUP1 PUSH4 0x51ED8288 EQ PUSH2 0x47C JUMPI DUP1 PUSH4 0x610B31A6 EQ PUSH2 0x498 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x4D8 JUMPI PUSH2 0x1E2 JUMP JUMPDEST DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0x2F77F003 EQ PUSH2 0x3AE JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x3D9 JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x402 JUMPI PUSH2 0x1E2 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0x18148F1B EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x348 JUMPI PUSH2 0x1E2 JUMP JUMPDEST DUP1 PUSH3 0x9A9B7B EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x27A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FC PUSH2 0x819 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x209 SWAP2 SWAP1 PUSH2 0x2F63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x239 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x2FEA JUMP JUMPDEST PUSH2 0x81F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x246 SWAP2 SWAP1 PUSH2 0x3032 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x264 PUSH2 0x831 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x30DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x286 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29C SWAP2 SWAP1 PUSH2 0x312B JUMP JUMPDEST PUSH2 0x8C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AE SWAP2 SWAP1 PUSH2 0x3199 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D9 SWAP2 SWAP1 PUSH2 0x31E0 JUMP JUMPDEST PUSH2 0x909 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x3220 JUMP JUMPDEST PUSH2 0xA20 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x314 SWAP2 SWAP1 PUSH2 0x330B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x329 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x332 PUSH2 0xACE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33F SWAP2 SWAP1 PUSH2 0x2F63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x354 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x36F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36A SWAP2 SWAP1 PUSH2 0x332D JUMP JUMPDEST PUSH2 0xADB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x398 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x393 SWAP2 SWAP1 PUSH2 0x31E0 JUMP JUMPDEST PUSH2 0xB3B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x2F63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C3 PUSH2 0xBE0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D0 SWAP2 SWAP1 PUSH2 0x2F63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x400 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3FB SWAP2 SWAP1 PUSH2 0x332D JUMP JUMPDEST PUSH2 0xBE6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x424 SWAP2 SWAP1 PUSH2 0x312B JUMP JUMPDEST PUSH2 0xC06 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x436 SWAP2 SWAP1 PUSH2 0x2F63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x466 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x461 SWAP2 SWAP1 PUSH2 0x312B JUMP JUMPDEST PUSH2 0xC77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x473 SWAP2 SWAP1 PUSH2 0x3199 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x496 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x491 SWAP2 SWAP1 PUSH2 0x312B JUMP JUMPDEST PUSH2 0xCAA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4BA SWAP2 SWAP1 PUSH2 0x312B JUMP JUMPDEST PUSH2 0xF68 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4CF SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3380 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4FA SWAP2 SWAP1 PUSH2 0x312B JUMP JUMPDEST PUSH2 0x107B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50C SWAP2 SWAP1 PUSH2 0x3199 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x521 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x53C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x537 SWAP2 SWAP1 PUSH2 0x3220 JUMP JUMPDEST PUSH2 0x112C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x549 SWAP2 SWAP1 PUSH2 0x2F63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x579 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x574 SWAP2 SWAP1 PUSH2 0x312B JUMP JUMPDEST PUSH2 0x11E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x586 SWAP2 SWAP1 PUSH2 0x2F63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5A4 PUSH2 0x11FB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5BB PUSH2 0x120F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C8 SWAP2 SWAP1 PUSH2 0x3199 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5E6 PUSH2 0x1239 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F3 SWAP2 SWAP1 PUSH2 0x30DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x608 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x623 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x61E SWAP2 SWAP1 PUSH2 0x312B JUMP JUMPDEST PUSH2 0x12CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x633 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3380 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x648 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x663 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x65E SWAP2 SWAP1 PUSH2 0x33F8 JUMP JUMPDEST PUSH2 0x1383 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x671 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x68C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x687 SWAP2 SWAP1 PUSH2 0x356D JUMP JUMPDEST PUSH2 0x1399 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x69A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6B0 SWAP2 SWAP1 PUSH2 0x312B JUMP JUMPDEST PUSH2 0x1534 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C2 SWAP2 SWAP1 PUSH2 0x2F63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6ED SWAP2 SWAP1 PUSH2 0x35DC JUMP JUMPDEST PUSH2 0x1551 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x700 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x71B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x716 SWAP2 SWAP1 PUSH2 0x36BD JUMP JUMPDEST PUSH2 0x16C7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x729 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x744 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x73F SWAP2 SWAP1 PUSH2 0x312B JUMP JUMPDEST PUSH2 0x1729 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x751 SWAP2 SWAP1 PUSH2 0x30DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x766 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x781 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x77C SWAP2 SWAP1 PUSH2 0x312B JUMP JUMPDEST PUSH2 0x173B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x78E SWAP2 SWAP1 PUSH2 0x3199 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7AC SWAP2 SWAP1 PUSH2 0x312B JUMP JUMPDEST PUSH2 0x174D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7D5 SWAP2 SWAP1 PUSH2 0x3740 JUMP JUMPDEST PUSH2 0x1962 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7E7 SWAP2 SWAP1 PUSH2 0x3032 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x817 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x812 SWAP2 SWAP1 PUSH2 0x3220 JUMP JUMPDEST PUSH2 0x19F6 JUMP JUMPDEST STOP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x82A DUP3 PUSH2 0x1A79 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x840 SWAP1 PUSH2 0x37AF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x86C SWAP1 PUSH2 0x37AF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8B9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x88E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8B9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x89C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8CE DUP3 PUSH2 0x1AF3 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x914 DUP3 PUSH2 0x107B JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x984 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x97B SWAP1 PUSH2 0x3852 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9A3 PUSH2 0x1B3E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x9D2 JUMPI POP PUSH2 0x9D1 DUP2 PUSH2 0x9CC PUSH2 0x1B3E JUMP JUMPDEST PUSH2 0x1962 JUMP JUMPDEST JUMPDEST PUSH2 0xA11 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA08 SWAP1 PUSH2 0x38E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA1B DUP4 DUP4 PUSH2 0x1B46 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xA2D DUP4 PUSH2 0x112C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA4B JUMPI PUSH2 0xA4A PUSH2 0x3442 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA79 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xAC3 JUMPI PUSH2 0xA91 DUP6 DUP3 PUSH2 0xB3B JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xAA4 JUMPI PUSH2 0xAA3 PUSH2 0x3904 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH2 0xABB SWAP1 PUSH2 0x3962 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA7F JUMP JUMPDEST POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xAEC PUSH2 0xAE6 PUSH2 0x1B3E JUMP JUMPDEST DUP3 PUSH2 0x1BFF JUMP JUMPDEST PUSH2 0xB2B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB22 SWAP1 PUSH2 0x3A1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB36 DUP4 DUP4 DUP4 PUSH2 0x1C94 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB46 DUP4 PUSH2 0x112C JUMP JUMPDEST DUP3 LT PUSH2 0xB87 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7E SWAP1 PUSH2 0x3AAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0xC01 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x16C7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC10 PUSH2 0xACE JUMP JUMPDEST DUP3 LT PUSH2 0xC51 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC48 SWAP1 PUSH2 0x3B40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xC65 JUMPI PUSH2 0xC64 PUSH2 0x3904 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x10 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT PUSH2 0xD00 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF7 SWAP1 PUSH2 0x3BAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x10 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD CALLVALUE EQ PUSH2 0xD55 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD4C SWAP1 PUSH2 0x3C18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDFC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF3 SWAP1 PUSH2 0x3C84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE6A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE61 SWAP1 PUSH2 0x3CF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE75 DUP2 CALLER DUP5 PUSH2 0x1C94 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xEBB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x10 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0xF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF076E74C3B31FBA126074ACBFFCDD9D113B723BF30AD339F58DFE3002A8310DF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x2 ADD SLOAD GT PUSH2 0xFCC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC3 SWAP1 PUSH2 0x3D5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 ADD DUP2 PUSH1 0x1 ADD SLOAD DUP3 PUSH1 0x2 ADD SLOAD DUP4 PUSH1 0x3 ADD SLOAD DUP4 DUP1 SLOAD PUSH2 0xFEB SWAP1 PUSH2 0x37AF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1017 SWAP1 PUSH2 0x37AF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1064 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1039 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1064 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1047 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP4 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1123 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111A SWAP1 PUSH2 0x3DC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x119C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1193 SWAP1 PUSH2 0x3E5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1203 PUSH2 0x1EFA JUMP JUMPDEST PUSH2 0x120D PUSH1 0x0 PUSH2 0x1F78 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x1248 SWAP1 PUSH2 0x37AF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1274 SWAP1 PUSH2 0x37AF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x12C1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1296 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x12C1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x12A4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x12EE SWAP1 PUSH2 0x37AF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x131A SWAP1 PUSH2 0x37AF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1367 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x133C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1367 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x134A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH2 0x1395 PUSH2 0x138E PUSH2 0x1B3E JUMP JUMPDEST DUP4 DUP4 PUSH2 0x203E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x13A1 PUSH2 0x1EFA JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x13E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13DB SWAP1 PUSH2 0x3EEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x1427 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x141E SWAP1 PUSH2 0x3F58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD GT PUSH2 0x146B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1462 SWAP1 PUSH2 0x3FC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x147E SWAP1 PUSH2 0x3962 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP PUSH1 0xE PUSH1 0x0 PUSH1 0xC SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x14CF SWAP2 SWAP1 PUSH2 0x4190 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE SWAP1 POP POP PUSH1 0xC SLOAD PUSH32 0x62A03295CF3254097619E4C525C459F4C5385F131FF770541E79B7E63AC9D3A1 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1527 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4262 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x10 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1571 DUP4 PUSH2 0x107B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x15C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15BE SWAP1 PUSH2 0x4312 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x160A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1601 SWAP1 PUSH2 0x3F58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0xF PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x10 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH32 0xF78E8B672552C30BD4DC6A4D47324C771C972CDE77A97FE66DA1C8D7ADBDBD16 DUP4 PUSH1 0x40 MLOAD PUSH2 0x16BB SWAP2 SWAP1 PUSH2 0x2F63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x16D8 PUSH2 0x16D2 PUSH2 0x1B3E JUMP JUMPDEST DUP4 PUSH2 0x1BFF JUMP JUMPDEST PUSH2 0x1717 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x170E SWAP1 PUSH2 0x3A1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1723 DUP5 DUP5 DUP5 DUP5 PUSH2 0x21AA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1734 DUP3 PUSH2 0x2206 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1746 DUP3 PUSH2 0x107B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x2 ADD SLOAD GT PUSH2 0x17AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17A2 SWAP1 PUSH2 0x3D5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 ADD SLOAD DUP2 PUSH1 0x3 ADD SLOAD LT PUSH2 0x17F5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17EC SWAP1 PUSH2 0x437E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD CALLVALUE EQ PUSH2 0x183B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1832 SWAP1 PUSH2 0x3C18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP2 SLOAD PUSH2 0x184C SWAP1 PUSH2 0x3962 JUMP JUMPDEST SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE SWAP1 POP DUP2 PUSH1 0x3 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1869 SWAP1 PUSH2 0x3962 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x1878 CALLER DUP3 PUSH2 0x2318 JUMP JUMPDEST PUSH2 0x190E DUP2 DUP4 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x188B SWAP1 PUSH2 0x37AF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x18B7 SWAP1 PUSH2 0x37AF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1904 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x18D9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1904 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x18E7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0x2336 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xFCA9437E237CA408A74CCA23E3078FD1F6C700960DAC7F09F8C6CF5177AEFE1A DUP4 PUSH1 0x40 MLOAD PUSH2 0x1955 SWAP2 SWAP1 PUSH2 0x2F63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19FE PUSH2 0x1EFA JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A6D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A64 SWAP1 PUSH2 0x4410 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A76 DUP2 PUSH2 0x1F78 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x780E9D6300000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x1AEC JUMPI POP PUSH2 0x1AEB DUP3 PUSH2 0x23A3 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AFC DUP2 PUSH2 0x2485 JUMP JUMPDEST PUSH2 0x1B3B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B32 SWAP1 PUSH2 0x3DC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1BB9 DUP4 PUSH2 0x107B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1C0B DUP4 PUSH2 0x107B JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1C4D JUMPI POP PUSH2 0x1C4C DUP2 DUP6 PUSH2 0x1962 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1C8B JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1C73 DUP5 PUSH2 0x8C3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1CB4 DUP3 PUSH2 0x107B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1D0A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D01 SWAP1 PUSH2 0x44A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D79 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D70 SWAP1 PUSH2 0x4534 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D84 DUP4 DUP4 DUP4 PUSH2 0x24F1 JUMP JUMPDEST PUSH2 0x1D8F PUSH1 0x0 DUP3 PUSH2 0x1B46 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1DDF SWAP2 SWAP1 PUSH2 0x4554 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1E36 SWAP2 SWAP1 PUSH2 0x4588 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1EF5 DUP4 DUP4 DUP4 PUSH2 0x2501 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1F02 PUSH2 0x1B3E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F20 PUSH2 0x120F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1F76 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F6D SWAP1 PUSH2 0x4608 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0xB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x20AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20A3 SWAP1 PUSH2 0x4674 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x219D SWAP2 SWAP1 PUSH2 0x3032 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x21B5 DUP5 DUP5 DUP5 PUSH2 0x1C94 JUMP JUMPDEST PUSH2 0x21C1 DUP5 DUP5 DUP5 DUP5 PUSH2 0x2506 JUMP JUMPDEST PUSH2 0x2200 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21F7 SWAP1 PUSH2 0x4706 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2211 DUP3 PUSH2 0x1AF3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x2231 SWAP1 PUSH2 0x37AF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x225D SWAP1 PUSH2 0x37AF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x22AA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x227F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x22AA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x228D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x22BB PUSH2 0x268D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x22D0 JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x2313 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x2305 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x22ED SWAP3 SWAP2 SWAP1 PUSH2 0x4762 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x2313 JUMP JUMPDEST PUSH2 0x230E DUP5 PUSH2 0x26A4 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2332 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x270C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x233F DUP3 PUSH2 0x2485 JUMP JUMPDEST PUSH2 0x237E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2375 SWAP1 PUSH2 0x47F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xA PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x239E SWAP2 SWAP1 PUSH2 0x4190 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x246E JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x247E JUMPI POP PUSH2 0x247D DUP3 PUSH2 0x2767 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24FC DUP4 DUP4 DUP4 PUSH2 0x27D1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2527 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x28E3 JUMP JUMPDEST ISZERO PUSH2 0x2680 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x2550 PUSH2 0x1B3E JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2572 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x486D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x25AE JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x25AB SWAP2 SWAP1 PUSH2 0x48CE JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2630 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x25DE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x25E3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x2628 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x261F SWAP1 PUSH2 0x4706 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x2685 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x26AF DUP3 PUSH2 0x1AF3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26B9 PUSH2 0x268D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x26D9 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x2704 JUMP JUMPDEST DUP1 PUSH2 0x26E3 DUP5 PUSH2 0x2906 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x26F4 SWAP3 SWAP2 SWAP1 PUSH2 0x4762 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2716 DUP4 DUP4 PUSH2 0x2A66 JUMP JUMPDEST PUSH2 0x2723 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x2506 JUMP JUMPDEST PUSH2 0x2762 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2759 SWAP1 PUSH2 0x4706 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27DC DUP4 DUP4 DUP4 PUSH2 0x2C3F JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x281E JUMPI PUSH2 0x2819 DUP2 PUSH2 0x2C44 JUMP JUMPDEST PUSH2 0x285D JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x285C JUMPI PUSH2 0x285B DUP4 DUP3 PUSH2 0x2C8D JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x289F JUMPI PUSH2 0x289A DUP2 PUSH2 0x2DFA JUMP JUMPDEST PUSH2 0x28DE JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x28DD JUMPI PUSH2 0x28DC DUP3 DUP3 PUSH2 0x2ECB JUMP JUMPDEST JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 SUB PUSH2 0x294D JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x2A61 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x297F JUMPI DUP1 DUP1 PUSH2 0x2968 SWAP1 PUSH2 0x3962 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x2978 SWAP2 SWAP1 PUSH2 0x492A JUMP JUMPDEST SWAP2 POP PUSH2 0x2955 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x299B JUMPI PUSH2 0x299A PUSH2 0x3442 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x29CD JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0x2A5A JUMPI PUSH1 0x1 DUP3 PUSH2 0x29E6 SWAP2 SWAP1 PUSH2 0x4554 JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x29F5 SWAP2 SWAP1 PUSH2 0x495B JUMP JUMPDEST PUSH1 0x30 PUSH2 0x2A01 SWAP2 SWAP1 PUSH2 0x4588 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2A17 JUMPI PUSH2 0x2A16 PUSH2 0x3904 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x2A53 SWAP2 SWAP1 PUSH2 0x492A JUMP JUMPDEST SWAP5 POP PUSH2 0x29D1 JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2AD5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2ACC SWAP1 PUSH2 0x49D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2ADE DUP2 PUSH2 0x2485 JUMP JUMPDEST ISZERO PUSH2 0x2B1E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B15 SWAP1 PUSH2 0x4A44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2B2A PUSH1 0x0 DUP4 DUP4 PUSH2 0x24F1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2B7A SWAP2 SWAP1 PUSH2 0x4588 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x2C3B PUSH1 0x0 DUP4 DUP4 PUSH2 0x2501 JUMP JUMPDEST POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD SWAP1 POP PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x8 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x2C9A DUP5 PUSH2 0x112C JUMP JUMPDEST PUSH2 0x2CA4 SWAP2 SWAP1 PUSH2 0x4554 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 EQ PUSH2 0x2D89 JUMPI PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP1 PUSH1 0x6 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x8 DUP1 SLOAD SWAP1 POP PUSH2 0x2E0E SWAP2 SWAP1 PUSH2 0x4554 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2E3E JUMPI PUSH2 0x2E3D PUSH2 0x3904 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2E60 JUMPI PUSH2 0x2E5F PUSH2 0x3904 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x9 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x8 DUP1 SLOAD DUP1 PUSH2 0x2EAF JUMPI PUSH2 0x2EAE PUSH2 0x4A64 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2ED6 DUP4 PUSH2 0x112C JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F5D DUP2 PUSH2 0x2F4A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2F78 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2F54 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2FC7 DUP2 PUSH2 0x2F92 JUMP JUMPDEST DUP2 EQ PUSH2 0x2FD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2FE4 DUP2 PUSH2 0x2FBE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3000 JUMPI PUSH2 0x2FFF PUSH2 0x2F88 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x300E DUP5 DUP3 DUP6 ADD PUSH2 0x2FD5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x302C DUP2 PUSH2 0x3017 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3047 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3023 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3087 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x306C JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30AF DUP3 PUSH2 0x304D JUMP JUMPDEST PUSH2 0x30B9 DUP2 DUP6 PUSH2 0x3058 JUMP JUMPDEST SWAP4 POP PUSH2 0x30C9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3069 JUMP JUMPDEST PUSH2 0x30D2 DUP2 PUSH2 0x3093 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x30F7 DUP2 DUP5 PUSH2 0x30A4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3108 DUP2 PUSH2 0x2F4A JUMP JUMPDEST DUP2 EQ PUSH2 0x3113 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3125 DUP2 PUSH2 0x30FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3141 JUMPI PUSH2 0x3140 PUSH2 0x2F88 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x314F DUP5 DUP3 DUP6 ADD PUSH2 0x3116 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3183 DUP3 PUSH2 0x3158 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3193 DUP2 PUSH2 0x3178 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x31AE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x318A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x31BD DUP2 PUSH2 0x3178 JUMP JUMPDEST DUP2 EQ PUSH2 0x31C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x31DA DUP2 PUSH2 0x31B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x31F7 JUMPI PUSH2 0x31F6 PUSH2 0x2F88 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3205 DUP6 DUP3 DUP7 ADD PUSH2 0x31CB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3216 DUP6 DUP3 DUP7 ADD PUSH2 0x3116 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3236 JUMPI PUSH2 0x3235 PUSH2 0x2F88 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3244 DUP5 DUP3 DUP6 ADD PUSH2 0x31CB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3282 DUP2 PUSH2 0x2F4A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3294 DUP4 DUP4 PUSH2 0x3279 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32B8 DUP3 PUSH2 0x324D JUMP JUMPDEST PUSH2 0x32C2 DUP2 DUP6 PUSH2 0x3258 JUMP JUMPDEST SWAP4 POP PUSH2 0x32CD DUP4 PUSH2 0x3269 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x32FE JUMPI DUP2 MLOAD PUSH2 0x32E5 DUP9 DUP3 PUSH2 0x3288 JUMP JUMPDEST SWAP8 POP PUSH2 0x32F0 DUP4 PUSH2 0x32A0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x32D1 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3325 DUP2 DUP5 PUSH2 0x32AD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3346 JUMPI PUSH2 0x3345 PUSH2 0x2F88 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3354 DUP7 DUP3 DUP8 ADD PUSH2 0x31CB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3365 DUP7 DUP3 DUP8 ADD PUSH2 0x31CB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3376 DUP7 DUP3 DUP8 ADD PUSH2 0x3116 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x339A DUP2 DUP8 PUSH2 0x30A4 JUMP JUMPDEST SWAP1 POP PUSH2 0x33A9 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2F54 JUMP JUMPDEST PUSH2 0x33B6 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2F54 JUMP JUMPDEST PUSH2 0x33C3 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2F54 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x33D5 DUP2 PUSH2 0x3017 JUMP JUMPDEST DUP2 EQ PUSH2 0x33E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x33F2 DUP2 PUSH2 0x33CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x340F JUMPI PUSH2 0x340E PUSH2 0x2F88 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x341D DUP6 DUP3 DUP7 ADD PUSH2 0x31CB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x342E DUP6 DUP3 DUP7 ADD PUSH2 0x33E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x347A DUP3 PUSH2 0x3093 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3499 JUMPI PUSH2 0x3498 PUSH2 0x3442 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34AC PUSH2 0x2F7E JUMP JUMPDEST SWAP1 POP PUSH2 0x34B8 DUP3 DUP3 PUSH2 0x3471 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x34D8 JUMPI PUSH2 0x34D7 PUSH2 0x3442 JUMP JUMPDEST JUMPDEST PUSH2 0x34E1 DUP3 PUSH2 0x3093 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3510 PUSH2 0x350B DUP5 PUSH2 0x34BD JUMP JUMPDEST PUSH2 0x34A2 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x352C JUMPI PUSH2 0x352B PUSH2 0x343D JUMP JUMPDEST JUMPDEST PUSH2 0x3537 DUP5 DUP3 DUP6 PUSH2 0x34EE JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3554 JUMPI PUSH2 0x3553 PUSH2 0x3438 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3564 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x34FD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3586 JUMPI PUSH2 0x3585 PUSH2 0x2F88 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x35A4 JUMPI PUSH2 0x35A3 PUSH2 0x2F8D JUMP JUMPDEST JUMPDEST PUSH2 0x35B0 DUP7 DUP3 DUP8 ADD PUSH2 0x353F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x35C1 DUP7 DUP3 DUP8 ADD PUSH2 0x3116 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x35D2 DUP7 DUP3 DUP8 ADD PUSH2 0x3116 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x35F3 JUMPI PUSH2 0x35F2 PUSH2 0x2F88 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3601 DUP6 DUP3 DUP7 ADD PUSH2 0x3116 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3612 DUP6 DUP3 DUP7 ADD PUSH2 0x3116 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3637 JUMPI PUSH2 0x3636 PUSH2 0x3442 JUMP JUMPDEST JUMPDEST PUSH2 0x3640 DUP3 PUSH2 0x3093 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3660 PUSH2 0x365B DUP5 PUSH2 0x361C JUMP JUMPDEST PUSH2 0x34A2 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x367C JUMPI PUSH2 0x367B PUSH2 0x343D JUMP JUMPDEST JUMPDEST PUSH2 0x3687 DUP5 DUP3 DUP6 PUSH2 0x34EE JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x36A4 JUMPI PUSH2 0x36A3 PUSH2 0x3438 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x36B4 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x364D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x36D7 JUMPI PUSH2 0x36D6 PUSH2 0x2F88 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x36E5 DUP8 DUP3 DUP9 ADD PUSH2 0x31CB JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x36F6 DUP8 DUP3 DUP9 ADD PUSH2 0x31CB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x3707 DUP8 DUP3 DUP9 ADD PUSH2 0x3116 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3728 JUMPI PUSH2 0x3727 PUSH2 0x2F8D JUMP JUMPDEST JUMPDEST PUSH2 0x3734 DUP8 DUP3 DUP9 ADD PUSH2 0x368F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3757 JUMPI PUSH2 0x3756 PUSH2 0x2F88 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3765 DUP6 DUP3 DUP7 ADD PUSH2 0x31CB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3776 DUP6 DUP3 DUP7 ADD PUSH2 0x31CB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x37C7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x37DA JUMPI PUSH2 0x37D9 PUSH2 0x3780 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x383C PUSH1 0x21 DUP4 PUSH2 0x3058 JUMP JUMPDEST SWAP2 POP PUSH2 0x3847 DUP3 PUSH2 0x37E0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x386B DUP2 PUSH2 0x382F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206E6F7220617070726F76656420666F7220616C6C0000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38CE PUSH1 0x3E DUP4 PUSH2 0x3058 JUMP JUMPDEST SWAP2 POP PUSH2 0x38D9 DUP3 PUSH2 0x3872 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x38FD DUP2 PUSH2 0x38C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x396D DUP3 PUSH2 0x2F4A JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x399F JUMPI PUSH2 0x399E PUSH2 0x3933 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206E6F7220617070726F766564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A06 PUSH1 0x2E DUP4 PUSH2 0x3058 JUMP JUMPDEST SWAP2 POP PUSH2 0x3A11 DUP3 PUSH2 0x39AA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3A35 DUP2 PUSH2 0x39F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243373231456E756D657261626C653A206F776E657220696E646578206F75 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x74206F6620626F756E6473000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A98 PUSH1 0x2B DUP4 PUSH2 0x3058 JUMP JUMPDEST SWAP2 POP PUSH2 0x3AA3 DUP3 PUSH2 0x3A3C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3AC7 DUP2 PUSH2 0x3A8B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7574206F6620626F756E64730000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B2A PUSH1 0x2C DUP4 PUSH2 0x3058 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B35 DUP3 PUSH2 0x3ACE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B59 DUP2 PUSH2 0x3B1D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E4654206973206E6F7420666F722073616C6500000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B96 PUSH1 0x13 DUP4 PUSH2 0x3058 JUMP JUMPDEST SWAP2 POP PUSH2 0x3BA1 DUP3 PUSH2 0x3B60 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3BC5 DUP2 PUSH2 0x3B89 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E636F7272656374207061796D656E7420616D6F756E740000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C02 PUSH1 0x18 DUP4 PUSH2 0x3058 JUMP JUMPDEST SWAP2 POP PUSH2 0x3C0D DUP3 PUSH2 0x3BCC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3C31 DUP2 PUSH2 0x3BF5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53656C6C6572206164647265737320697320696E76616C696400000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C6E PUSH1 0x19 DUP4 PUSH2 0x3058 JUMP JUMPDEST SWAP2 POP PUSH2 0x3C79 DUP3 PUSH2 0x3C38 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3C9D DUP2 PUSH2 0x3C61 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F742062757920796F7572206F776E204E4654000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CDA PUSH1 0x17 DUP4 PUSH2 0x3058 JUMP JUMPDEST SWAP2 POP PUSH2 0x3CE5 DUP3 PUSH2 0x3CA4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D09 DUP2 PUSH2 0x3CCD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F7572736520646F6573206E6F742065786973740000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D46 PUSH1 0x15 DUP4 PUSH2 0x3058 JUMP JUMPDEST SWAP2 POP PUSH2 0x3D51 DUP3 PUSH2 0x3D10 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D75 DUP2 PUSH2 0x3D39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DB2 PUSH1 0x18 DUP4 PUSH2 0x3058 JUMP JUMPDEST SWAP2 POP PUSH2 0x3DBD DUP3 PUSH2 0x3D7C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3DE1 DUP2 PUSH2 0x3DA5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E44 PUSH1 0x29 DUP4 PUSH2 0x3058 JUMP JUMPDEST SWAP2 POP PUSH2 0x3E4F DUP3 PUSH2 0x3DE8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3E73 DUP2 PUSH2 0x3E37 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D617820737570706C79206D7573742062652067726561746572207468616E20 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7A65726F00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3ED6 PUSH1 0x24 DUP4 PUSH2 0x3058 JUMP JUMPDEST SWAP2 POP PUSH2 0x3EE1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3F05 DUP2 PUSH2 0x3EC9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5072696365206D7573742062652067726561746572207468616E207A65726F00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F42 PUSH1 0x1F DUP4 PUSH2 0x3058 JUMP JUMPDEST SWAP2 POP PUSH2 0x3F4D DUP3 PUSH2 0x3F0C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3F71 DUP2 PUSH2 0x3F35 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5552492063616E6E6F7420626520656D70747900000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FAE PUSH1 0x13 DUP4 PUSH2 0x3058 JUMP JUMPDEST SWAP2 POP PUSH2 0x3FB9 DUP3 PUSH2 0x3F78 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3FDD DUP2 PUSH2 0x3FA1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x4046 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x4009 JUMP JUMPDEST PUSH2 0x4050 DUP7 DUP4 PUSH2 0x4009 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x408D PUSH2 0x4088 PUSH2 0x4083 DUP5 PUSH2 0x2F4A JUMP JUMPDEST PUSH2 0x4068 JUMP JUMPDEST PUSH2 0x2F4A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x40A7 DUP4 PUSH2 0x4072 JUMP JUMPDEST PUSH2 0x40BB PUSH2 0x40B3 DUP3 PUSH2 0x4094 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x4016 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x40D0 PUSH2 0x40C3 JUMP JUMPDEST PUSH2 0x40DB DUP2 DUP5 DUP5 PUSH2 0x409E JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x40FF JUMPI PUSH2 0x40F4 PUSH1 0x0 DUP3 PUSH2 0x40C8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x40E1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x4144 JUMPI PUSH2 0x4115 DUP2 PUSH2 0x3FE4 JUMP JUMPDEST PUSH2 0x411E DUP5 PUSH2 0x3FF9 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x412D JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x4141 PUSH2 0x4139 DUP6 PUSH2 0x3FF9 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x40E0 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4167 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x4149 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4180 DUP4 DUP4 PUSH2 0x4156 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4199 DUP3 PUSH2 0x304D JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x41B2 JUMPI PUSH2 0x41B1 PUSH2 0x3442 JUMP JUMPDEST JUMPDEST PUSH2 0x41BC DUP3 SLOAD PUSH2 0x37AF JUMP JUMPDEST PUSH2 0x41C7 DUP3 DUP3 DUP6 PUSH2 0x4103 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x41FA JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x41E8 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x41F2 DUP6 DUP3 PUSH2 0x4174 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x425A JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x4208 DUP7 PUSH2 0x3FE4 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4230 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x420B JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x424D JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x4249 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x4156 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x427C DUP2 DUP7 PUSH2 0x30A4 JUMP JUMPDEST SWAP1 POP PUSH2 0x428B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2F54 JUMP JUMPDEST PUSH2 0x4298 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2F54 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x596F7520617265206E6F7420746865206F776E6572206F662074686973204E46 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x5400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42FC PUSH1 0x21 DUP4 PUSH2 0x3058 JUMP JUMPDEST SWAP2 POP PUSH2 0x4307 DUP3 PUSH2 0x42A0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x432B DUP2 PUSH2 0x42EF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D617820737570706C7920726561636865640000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4368 PUSH1 0x12 DUP4 PUSH2 0x3058 JUMP JUMPDEST SWAP2 POP PUSH2 0x4373 DUP3 PUSH2 0x4332 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4397 DUP2 PUSH2 0x435B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43FA PUSH1 0x26 DUP4 PUSH2 0x3058 JUMP JUMPDEST SWAP2 POP PUSH2 0x4405 DUP3 PUSH2 0x439E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4429 DUP2 PUSH2 0x43ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x448C PUSH1 0x25 DUP4 PUSH2 0x3058 JUMP JUMPDEST SWAP2 POP PUSH2 0x4497 DUP3 PUSH2 0x4430 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x44BB DUP2 PUSH2 0x447F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x451E PUSH1 0x24 DUP4 PUSH2 0x3058 JUMP JUMPDEST SWAP2 POP PUSH2 0x4529 DUP3 PUSH2 0x44C2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x454D DUP2 PUSH2 0x4511 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x455F DUP3 PUSH2 0x2F4A JUMP JUMPDEST SWAP2 POP PUSH2 0x456A DUP4 PUSH2 0x2F4A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x4582 JUMPI PUSH2 0x4581 PUSH2 0x3933 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4593 DUP3 PUSH2 0x2F4A JUMP JUMPDEST SWAP2 POP PUSH2 0x459E DUP4 PUSH2 0x2F4A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x45B6 JUMPI PUSH2 0x45B5 PUSH2 0x3933 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45F2 PUSH1 0x20 DUP4 PUSH2 0x3058 JUMP JUMPDEST SWAP2 POP PUSH2 0x45FD DUP3 PUSH2 0x45BC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4621 DUP2 PUSH2 0x45E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x465E PUSH1 0x19 DUP4 PUSH2 0x3058 JUMP JUMPDEST SWAP2 POP PUSH2 0x4669 DUP3 PUSH2 0x4628 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x468D DUP2 PUSH2 0x4651 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46F0 PUSH1 0x32 DUP4 PUSH2 0x3058 JUMP JUMPDEST SWAP2 POP PUSH2 0x46FB DUP3 PUSH2 0x4694 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x471F DUP2 PUSH2 0x46E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x473C DUP3 PUSH2 0x304D JUMP JUMPDEST PUSH2 0x4746 DUP2 DUP6 PUSH2 0x4726 JUMP JUMPDEST SWAP4 POP PUSH2 0x4756 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3069 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x476E DUP3 DUP6 PUSH2 0x4731 JUMP JUMPDEST SWAP2 POP PUSH2 0x477A DUP3 DUP5 PUSH2 0x4731 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x45524337323155524953746F726167653A2055524920736574206F66206E6F6E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6578697374656E7420746F6B656E000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47E2 PUSH1 0x2E DUP4 PUSH2 0x3058 JUMP JUMPDEST SWAP2 POP PUSH2 0x47ED DUP3 PUSH2 0x4786 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4811 DUP2 PUSH2 0x47D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x483F DUP3 PUSH2 0x4818 JUMP JUMPDEST PUSH2 0x4849 DUP2 DUP6 PUSH2 0x4823 JUMP JUMPDEST SWAP4 POP PUSH2 0x4859 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3069 JUMP JUMPDEST PUSH2 0x4862 DUP2 PUSH2 0x3093 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x4882 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x318A JUMP JUMPDEST PUSH2 0x488F PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x318A JUMP JUMPDEST PUSH2 0x489C PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2F54 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x48AE DUP2 DUP5 PUSH2 0x4834 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x48C8 DUP2 PUSH2 0x2FBE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x48E4 JUMPI PUSH2 0x48E3 PUSH2 0x2F88 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x48F2 DUP5 DUP3 DUP6 ADD PUSH2 0x48B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4935 DUP3 PUSH2 0x2F4A JUMP JUMPDEST SWAP2 POP PUSH2 0x4940 DUP4 PUSH2 0x2F4A JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x4950 JUMPI PUSH2 0x494F PUSH2 0x48FB JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4966 DUP3 PUSH2 0x2F4A JUMP JUMPDEST SWAP2 POP PUSH2 0x4971 DUP4 PUSH2 0x2F4A JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x4981 JUMPI PUSH2 0x4980 PUSH2 0x48FB JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49C2 PUSH1 0x20 DUP4 PUSH2 0x3058 JUMP JUMPDEST SWAP2 POP PUSH2 0x49CD DUP3 PUSH2 0x498C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x49F1 DUP2 PUSH2 0x49B5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A2E PUSH1 0x1C DUP4 PUSH2 0x3058 JUMP JUMPDEST SWAP2 POP PUSH2 0x4A39 DUP3 PUSH2 0x49F8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4A5D DUP2 PUSH2 0x4A21 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP3 0x27 PUSH24 0xF5CB317DCEC93261790D2952699717D6FC6B9A34BF3993D6 0xC1 REVERT MULMOD 0xC9 0xE2 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"270:5158:16:-:0;;;1077:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1138:4;1144:6;1464:5:1;1456;:13;;;;;;:::i;:::-;;1489:7;1479;:17;;;;;;:::i;:::-;;1390:113;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;1077:77:16;;270:5158;;640:96:9;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;7:75:17:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:853::-;2776:6;2784;2833:2;2821:9;2812:7;2808:23;2804:32;2801:119;;;2839:79;;:::i;:::-;2801:119;2980:1;2969:9;2965:17;2959:24;3010:18;3002:6;2999:30;2996:117;;;3032:79;;:::i;:::-;2996:117;3137:74;3203:7;3194:6;3183:9;3179:22;3137:74;:::i;:::-;3127:84;;2930:291;3281:2;3270:9;3266:18;3260:25;3312:18;3304:6;3301:30;3298:117;;;3334:79;;:::i;:::-;3298:117;3439:74;3505:7;3496:6;3485:9;3481:22;3439:74;:::i;:::-;3429:84;;3231:292;2677:853;;;;;:::o;3536:99::-;3588:6;3622:5;3616:12;3606:22;;3536:99;;;:::o;3641:180::-;3689:77;3686:1;3679:88;3786:4;3783:1;3776:15;3810:4;3807:1;3800:15;3827:320;3871:6;3908:1;3902:4;3898:12;3888:22;;3955:1;3949:4;3945:12;3976:18;3966:81;;4032:4;4024:6;4020:17;4010:27;;3966:81;4094:2;4086:6;4083:14;4063:18;4060:38;4057:84;;4113:18;;:::i;:::-;4057:84;3878:269;3827:320;;;:::o;4153:141::-;4202:4;4225:3;4217:11;;4248:3;4245:1;4238:14;4282:4;4279:1;4269:18;4261:26;;4153:141;;;:::o;4300:93::-;4337:6;4384:2;4379;4372:5;4368:14;4364:23;4354:33;;4300:93;;;:::o;4399:107::-;4443:8;4493:5;4487:4;4483:16;4462:37;;4399:107;;;;:::o;4512:393::-;4581:6;4631:1;4619:10;4615:18;4654:97;4684:66;4673:9;4654:97;:::i;:::-;4772:39;4802:8;4791:9;4772:39;:::i;:::-;4760:51;;4844:4;4840:9;4833:5;4829:21;4820:30;;4893:4;4883:8;4879:19;4872:5;4869:30;4859:40;;4588:317;;4512:393;;;;;:::o;4911:77::-;4948:7;4977:5;4966:16;;4911:77;;;:::o;4994:60::-;5022:3;5043:5;5036:12;;4994:60;;;:::o;5060:142::-;5110:9;5143:53;5161:34;5170:24;5188:5;5170:24;:::i;:::-;5161:34;:::i;:::-;5143:53;:::i;:::-;5130:66;;5060:142;;;:::o;5208:75::-;5251:3;5272:5;5265:12;;5208:75;;;:::o;5289:269::-;5399:39;5430:7;5399:39;:::i;:::-;5460:91;5509:41;5533:16;5509:41;:::i;:::-;5501:6;5494:4;5488:11;5460:91;:::i;:::-;5454:4;5447:105;5365:193;5289:269;;;:::o;5564:73::-;5609:3;5564:73;:::o;5643:189::-;5720:32;;:::i;:::-;5761:65;5819:6;5811;5805:4;5761:65;:::i;:::-;5696:136;5643:189;;:::o;5838:186::-;5898:120;5915:3;5908:5;5905:14;5898:120;;;5969:39;6006:1;5999:5;5969:39;:::i;:::-;5942:1;5935:5;5931:13;5922:22;;5898:120;;;5838:186;;:::o;6030:543::-;6131:2;6126:3;6123:11;6120:446;;;6165:38;6197:5;6165:38;:::i;:::-;6249:29;6267:10;6249:29;:::i;:::-;6239:8;6235:44;6432:2;6420:10;6417:18;6414:49;;;6453:8;6438:23;;6414:49;6476:80;6532:22;6550:3;6532:22;:::i;:::-;6522:8;6518:37;6505:11;6476:80;:::i;:::-;6135:431;;6120:446;6030:543;;;:::o;6579:117::-;6633:8;6683:5;6677:4;6673:16;6652:37;;6579:117;;;;:::o;6702:169::-;6746:6;6779:51;6827:1;6823:6;6815:5;6812:1;6808:13;6779:51;:::i;:::-;6775:56;6860:4;6854;6850:15;6840:25;;6753:118;6702:169;;;;:::o;6876:295::-;6952:4;7098:29;7123:3;7117:4;7098:29;:::i;:::-;7090:37;;7160:3;7157:1;7153:11;7147:4;7144:21;7136:29;;6876:295;;;;:::o;7176:1395::-;7293:37;7326:3;7293:37;:::i;:::-;7395:18;7387:6;7384:30;7381:56;;;7417:18;;:::i;:::-;7381:56;7461:38;7493:4;7487:11;7461:38;:::i;:::-;7546:67;7606:6;7598;7592:4;7546:67;:::i;:::-;7640:1;7664:4;7651:17;;7696:2;7688:6;7685:14;7713:1;7708:618;;;;8370:1;8387:6;8384:77;;;8436:9;8431:3;8427:19;8421:26;8412:35;;8384:77;8487:67;8547:6;8540:5;8487:67;:::i;:::-;8481:4;8474:81;8343:222;7678:887;;7708:618;7760:4;7756:9;7748:6;7744:22;7794:37;7826:4;7794:37;:::i;:::-;7853:1;7867:208;7881:7;7878:1;7875:14;7867:208;;;7960:9;7955:3;7951:19;7945:26;7937:6;7930:42;8011:1;8003:6;7999:14;7989:24;;8058:2;8047:9;8043:18;8030:31;;7904:4;7901:1;7897:12;7892:17;;7867:208;;;8103:6;8094:7;8091:19;8088:179;;;8161:9;8156:3;8152:19;8146:26;8204:48;8246:4;8238:6;8234:17;8223:9;8204:48;:::i;:::-;8196:6;8189:64;8111:156;8088:179;8313:1;8309;8301:6;8297:14;8293:22;8287:4;8280:36;7715:611;;;7678:887;;7268:1303;;;7176:1395;;:::o;270:5158:16:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_addTokenToAllTokensEnumeration_1339":{"entryPoint":11332,"id":1339,"parameterSlots":1,"returnSlots":0},"@_addTokenToOwnerEnumeration_1319":{"entryPoint":11979,"id":1319,"parameterSlots":2,"returnSlots":0},"@_afterTokenTransfer_978":{"entryPoint":9473,"id":978,"parameterSlots":3,"returnSlots":0},"@_approve_848":{"entryPoint":6982,"id":848,"parameterSlots":2,"returnSlots":0},"@_baseURI_326":{"entryPoint":9869,"id":326,"parameterSlots":0,"returnSlots":1},"@_beforeTokenTransfer_1289":{"entryPoint":10193,"id":1289,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_2648":{"entryPoint":9457,"id":2648,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_967":{"entryPoint":11327,"id":967,"parameterSlots":3,"returnSlots":0},"@_checkOnERC721Received_956":{"entryPoint":9478,"id":956,"parameterSlots":4,"returnSlots":1},"@_checkOwner_54":{"entryPoint":7930,"id":54,"parameterSlots":0,"returnSlots":0},"@_exists_545":{"entryPoint":9349,"id":545,"parameterSlots":1,"returnSlots":1},"@_isApprovedOrOwner_579":{"entryPoint":7167,"id":579,"parameterSlots":2,"returnSlots":1},"@_mint_689":{"entryPoint":10854,"id":689,"parameterSlots":2,"returnSlots":0},"@_msgSender_1941":{"entryPoint":6974,"id":1941,"parameterSlots":0,"returnSlots":1},"@_removeTokenFromAllTokensEnumeration_1450":{"entryPoint":11770,"id":1450,"parameterSlots":1,"returnSlots":0},"@_removeTokenFromOwnerEnumeration_1402":{"entryPoint":11405,"id":1402,"parameterSlots":2,"returnSlots":0},"@_requireMinted_894":{"entryPoint":6899,"id":894,"parameterSlots":1,"returnSlots":0},"@_safeMint_594":{"entryPoint":8984,"id":594,"parameterSlots":2,"returnSlots":0},"@_safeMint_623":{"entryPoint":9996,"id":623,"parameterSlots":3,"returnSlots":0},"@_safeTransfer_527":{"entryPoint":8618,"id":527,"parameterSlots":4,"returnSlots":0},"@_setApprovalForAll_880":{"entryPoint":8254,"id":880,"parameterSlots":3,"returnSlots":0},"@_setTokenURI_1545":{"entryPoint":9014,"id":1545,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_111":{"entryPoint":8056,"id":111,"parameterSlots":1,"returnSlots":0},"@_transfer_824":{"entryPoint":7316,"id":824,"parameterSlots":3,"returnSlots":0},"@approve_369":{"entryPoint":2313,"id":369,"parameterSlots":2,"returnSlots":0},"@balanceOf_230":{"entryPoint":4396,"id":230,"parameterSlots":1,"returnSlots":1},"@buyNFT_2951":{"entryPoint":3242,"id":2951,"parameterSlots":1,"returnSlots":0},"@courses_2572":{"entryPoint":4811,"id":2572,"parameterSlots":0,"returnSlots":0},"@createCourse_2756":{"entryPoint":5017,"id":2756,"parameterSlots":3,"returnSlots":0},"@currentCourseId_2565":{"entryPoint":3040,"id":2565,"parameterSlots":0,"returnSlots":0},"@currentTokenId_2567":{"entryPoint":2073,"id":2567,"parameterSlots":0,"returnSlots":0},"@getApproved_387":{"entryPoint":2243,"id":387,"parameterSlots":1,"returnSlots":1},"@getCourseDetails_2990":{"entryPoint":3944,"id":2990,"parameterSlots":1,"returnSlots":4},"@getNFTOwner_3014":{"entryPoint":5947,"id":3014,"parameterSlots":1,"returnSlots":1},"@getNFTSalePrice_3002":{"entryPoint":5428,"id":3002,"parameterSlots":1,"returnSlots":1},"@getOwnedNFTs_3063":{"entryPoint":2592,"id":3063,"parameterSlots":1,"returnSlots":1},"@isApprovedForAll_422":{"entryPoint":6498,"id":422,"parameterSlots":2,"returnSlots":1},"@isContract_1652":{"entryPoint":10467,"id":1652,"parameterSlots":1,"returnSlots":1},"@listNFTForSale_2869":{"entryPoint":5457,"id":2869,"parameterSlots":2,"returnSlots":0},"@mintCourse_2824":{"entryPoint":5965,"id":2824,"parameterSlots":1,"returnSlots":0},"@name_268":{"entryPoint":2097,"id":268,"parameterSlots":0,"returnSlots":1},"@ownerOf_258":{"entryPoint":4219,"id":258,"parameterSlots":1,"returnSlots":1},"@owner_40":{"entryPoint":4623,"id":40,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_68":{"entryPoint":4603,"id":68,"parameterSlots":0,"returnSlots":0},"@safeTransferFrom_468":{"entryPoint":3046,"id":468,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_498":{"entryPoint":5831,"id":498,"parameterSlots":4,"returnSlots":0},"@secondaryMarketPrices_2580":{"entryPoint":4579,"id":2580,"parameterSlots":0,"returnSlots":0},"@secondaryMarketSellers_2576":{"entryPoint":3191,"id":2576,"parameterSlots":0,"returnSlots":0},"@setApprovalForAll_404":{"entryPoint":4995,"id":404,"parameterSlots":2,"returnSlots":0},"@supportsInterface_1163":{"entryPoint":6777,"id":1163,"parameterSlots":1,"returnSlots":1},"@supportsInterface_206":{"entryPoint":9123,"id":206,"parameterSlots":1,"returnSlots":1},"@supportsInterface_2274":{"entryPoint":10087,"id":2274,"parameterSlots":1,"returnSlots":1},"@supportsInterface_2698":{"entryPoint":2079,"id":2698,"parameterSlots":1,"returnSlots":1},"@symbol_278":{"entryPoint":4665,"id":278,"parameterSlots":0,"returnSlots":1},"@toString_2113":{"entryPoint":10502,"id":2113,"parameterSlots":1,"returnSlots":1},"@tokenByIndex_1225":{"entryPoint":3078,"id":1225,"parameterSlots":1,"returnSlots":1},"@tokenOfOwnerByIndex_1191":{"entryPoint":2875,"id":1191,"parameterSlots":2,"returnSlots":1},"@tokenURI_1523":{"entryPoint":8710,"id":1523,"parameterSlots":1,"returnSlots":1},"@tokenURI_2681":{"entryPoint":5929,"id":2681,"parameterSlots":1,"returnSlots":1},"@tokenURI_317":{"entryPoint":9892,"id":317,"parameterSlots":1,"returnSlots":1},"@totalSupply_1202":{"entryPoint":2766,"id":1202,"parameterSlots":0,"returnSlots":1},"@transferFrom_449":{"entryPoint":2779,"id":449,"parameterSlots":3,"returnSlots":0},"@transferOwnership_91":{"entryPoint":6646,"id":91,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":13901,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":13565,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":12747,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":13283,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":12245,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":18617,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":13967,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":13631,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":12566,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":12832,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":14144,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":13101,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":14013,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":13304,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":12768,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":12266,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":18638,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_uint256t_uint256":{"entryPoint":13677,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256":{"entryPoint":12587,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_uint256":{"entryPoint":13788,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":12936,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":12682,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":12973,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":12323,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":18484,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":12452,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":18225,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_035d4514157dcf2506923e1232babe38012bd57de24345ac363305b5db6b8231_to_t_string_memory_ptr_fromStack":{"entryPoint":16289,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c_to_t_string_memory_ptr_fromStack":{"entryPoint":14987,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0_to_t_string_memory_ptr_fromStack":{"entryPoint":16181,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack":{"entryPoint":18147,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":17389,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack":{"entryPoint":17535,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack":{"entryPoint":18977,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack":{"entryPoint":17681,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack":{"entryPoint":18001,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d_to_t_string_memory_ptr_fromStack":{"entryPoint":15349,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack":{"entryPoint":15927,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack":{"entryPoint":18389,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_834b432a4e87c587845860939bf8e755f9f318d7c4fb8e86316d9612e589ff75_to_t_string_memory_ptr_fromStack":{"entryPoint":15457,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack":{"entryPoint":14529,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack":{"entryPoint":18869,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":17893,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9a7dba745c3f0f725179d2251b074ed7a58cdde5cc676b2b7aa39aa411348738_to_t_string_memory_ptr_fromStack":{"entryPoint":15241,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab_to_t_string_memory_ptr_fromStack":{"entryPoint":17135,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ac3e45816bda8dc820919e382b7d1b646106c7d91795ad0d20f7673c058e493f_to_t_string_memory_ptr_fromStack":{"entryPoint":15565,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack":{"entryPoint":15781,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack":{"entryPoint":14383,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ccfca96006449b50817dba143e911165630be54db84ae071755573159103f718_to_t_string_memory_ptr_fromStack":{"entryPoint":15673,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_cf40cb9708e1320ee04bc59cb2f8b4ce47ba0c93638609957810c412abce51a7_to_t_string_memory_ptr_fromStack":{"entryPoint":17243,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc_to_t_string_memory_ptr_fromStack":{"entryPoint":15133,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack":{"entryPoint":14841,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ff2a6ad38fa379170c2ddbded7badfdd50fc7c2231d5868bae93e2c4ed779e10_to_t_string_memory_ptr_fromStack":{"entryPoint":16073,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":12921,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":12116,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":18274,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":12697,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":18541,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":13067,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":12338,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12509,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_uint256_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":16994,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":13184,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_stringliteral_035d4514157dcf2506923e1232babe38012bd57de24345ac363305b5db6b8231__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16324,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15022,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16216,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18182,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":17424,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":17570,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19012,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":17716,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18036,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15384,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15962,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18424,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_834b432a4e87c587845860939bf8e755f9f318d7c4fb8e86316d9612e589ff75__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15492,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14564,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18904,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":17928,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9a7dba745c3f0f725179d2251b074ed7a58cdde5cc676b2b7aa39aa411348738__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15276,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":17170,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ac3e45816bda8dc820919e382b7d1b646106c7d91795ad0d20f7673c058e493f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15600,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15816,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14418,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ccfca96006449b50817dba143e911165630be54db84ae071755573159103f718__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15708,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cf40cb9708e1320ee04bc59cb2f8b4ce47ba0c93638609957810c412abce51a7__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":17278,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15168,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14876,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ff2a6ad38fa379170c2ddbded7badfdd50fc7c2231d5868bae93e2c4ed779e10__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16108,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":12131,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":13474,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":12158,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":13852,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":13501,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":12905,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":16356,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":12877,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":18456,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":12365,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":12960,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":12888,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":18467,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":12376,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":18214,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":17800,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":18730,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":17748,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":16643,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":12664,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":12311,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":12178,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":12632,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":12106,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":16608,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":16498,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":16784,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":13550,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":12393,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":16377,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":14255,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":16756,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":13425,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":16488,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":14690,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":16726,"id":null,"parameterSlots":2,"returnSlots":1},"mod_t_uint256":{"entryPoint":18779,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":14643,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":18683,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":14208,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":19044,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":14596,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":13378,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":16532,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":13368,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":13373,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":12173,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":12168,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":12435,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":16393,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":16713,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":16584,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_035d4514157dcf2506923e1232babe38012bd57de24345ac363305b5db6b8231":{"entryPoint":16248,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c":{"entryPoint":14908,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0":{"entryPoint":16140,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e":{"entryPoint":18068,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":17310,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48":{"entryPoint":17456,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57":{"entryPoint":18936,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4":{"entryPoint":17602,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05":{"entryPoint":17960,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d":{"entryPoint":15308,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159":{"entryPoint":15848,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4":{"entryPoint":18310,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_834b432a4e87c587845860939bf8e755f9f318d7c4fb8e86316d9612e589ff75":{"entryPoint":15416,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304":{"entryPoint":14450,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6":{"entryPoint":18828,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":17852,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9a7dba745c3f0f725179d2251b074ed7a58cdde5cc676b2b7aa39aa411348738":{"entryPoint":15200,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab":{"entryPoint":17056,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ac3e45816bda8dc820919e382b7d1b646106c7d91795ad0d20f7673c058e493f":{"entryPoint":15524,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f":{"entryPoint":15740,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942":{"entryPoint":14304,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ccfca96006449b50817dba143e911165630be54db84ae071755573159103f718":{"entryPoint":15632,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_cf40cb9708e1320ee04bc59cb2f8b4ce47ba0c93638609957810c412abce51a7":{"entryPoint":17202,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc":{"entryPoint":15054,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b":{"entryPoint":14762,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ff2a6ad38fa379170c2ddbded7badfdd50fc7c2231d5868bae93e2c4ed779e10":{"entryPoint":15994,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":16406,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":16542,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":12724,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":13260,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":12222,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":12543,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":16579,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:51587:17","statements":[{"body":{"nodeType":"YulBlock","src":"52:32:17","statements":[{"nodeType":"YulAssignment","src":"62:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"73:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:17"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:17","type":""}],"src":"7:77:17"},{"body":{"nodeType":"YulBlock","src":"155:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"172:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"195:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"177:17:17"},"nodeType":"YulFunctionCall","src":"177:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"165:6:17"},"nodeType":"YulFunctionCall","src":"165:37:17"},"nodeType":"YulExpressionStatement","src":"165:37:17"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"143:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"150:3:17","type":""}],"src":"90:118:17"},{"body":{"nodeType":"YulBlock","src":"312:124:17","statements":[{"nodeType":"YulAssignment","src":"322:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"334:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"345:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"330:3:17"},"nodeType":"YulFunctionCall","src":"330:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"322:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"402:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"415:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"426:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"411:3:17"},"nodeType":"YulFunctionCall","src":"411:17:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"358:43:17"},"nodeType":"YulFunctionCall","src":"358:71:17"},"nodeType":"YulExpressionStatement","src":"358:71:17"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"284:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"296:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"307:4:17","type":""}],"src":"214:222:17"},{"body":{"nodeType":"YulBlock","src":"482:35:17","statements":[{"nodeType":"YulAssignment","src":"492:19:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"508:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"502:5:17"},"nodeType":"YulFunctionCall","src":"502:9:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"492:6:17"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"475:6:17","type":""}],"src":"442:75:17"},{"body":{"nodeType":"YulBlock","src":"612:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"629:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"632:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"622:6:17"},"nodeType":"YulFunctionCall","src":"622:12:17"},"nodeType":"YulExpressionStatement","src":"622:12:17"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"523:117:17"},{"body":{"nodeType":"YulBlock","src":"735:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"752:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"755:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"745:6:17"},"nodeType":"YulFunctionCall","src":"745:12:17"},"nodeType":"YulExpressionStatement","src":"745:12:17"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"646:117:17"},{"body":{"nodeType":"YulBlock","src":"813:105:17","statements":[{"nodeType":"YulAssignment","src":"823:89:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"838:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"845:66:17","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"834:3:17"},"nodeType":"YulFunctionCall","src":"834:78:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"823:7:17"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"795:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"805:7:17","type":""}],"src":"769:149:17"},{"body":{"nodeType":"YulBlock","src":"966:78:17","statements":[{"body":{"nodeType":"YulBlock","src":"1022:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1031:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1034:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1024:6:17"},"nodeType":"YulFunctionCall","src":"1024:12:17"},"nodeType":"YulExpressionStatement","src":"1024:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"989:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1013:5:17"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"996:16:17"},"nodeType":"YulFunctionCall","src":"996:23:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"986:2:17"},"nodeType":"YulFunctionCall","src":"986:34:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"979:6:17"},"nodeType":"YulFunctionCall","src":"979:42:17"},"nodeType":"YulIf","src":"976:62:17"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"959:5:17","type":""}],"src":"924:120:17"},{"body":{"nodeType":"YulBlock","src":"1101:86:17","statements":[{"nodeType":"YulAssignment","src":"1111:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1133:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1120:12:17"},"nodeType":"YulFunctionCall","src":"1120:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1111:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1175:5:17"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"1149:25:17"},"nodeType":"YulFunctionCall","src":"1149:32:17"},"nodeType":"YulExpressionStatement","src":"1149:32:17"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1079:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"1087:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1095:5:17","type":""}],"src":"1050:137:17"},{"body":{"nodeType":"YulBlock","src":"1258:262:17","statements":[{"body":{"nodeType":"YulBlock","src":"1304:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1306:77:17"},"nodeType":"YulFunctionCall","src":"1306:79:17"},"nodeType":"YulExpressionStatement","src":"1306:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1279:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"1288:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1275:3:17"},"nodeType":"YulFunctionCall","src":"1275:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"1300:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1271:3:17"},"nodeType":"YulFunctionCall","src":"1271:32:17"},"nodeType":"YulIf","src":"1268:119:17"},{"nodeType":"YulBlock","src":"1397:116:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1412:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"1426:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1416:6:17","type":""}]},{"nodeType":"YulAssignment","src":"1441:62:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1475:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"1486:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1471:3:17"},"nodeType":"YulFunctionCall","src":"1471:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1495:7:17"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1451:19:17"},"nodeType":"YulFunctionCall","src":"1451:52:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1441:6:17"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1228:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1239:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1251:6:17","type":""}],"src":"1193:327:17"},{"body":{"nodeType":"YulBlock","src":"1568:48:17","statements":[{"nodeType":"YulAssignment","src":"1578:32:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1603:5:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1596:6:17"},"nodeType":"YulFunctionCall","src":"1596:13:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1589:6:17"},"nodeType":"YulFunctionCall","src":"1589:21:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1578:7:17"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1550:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1560:7:17","type":""}],"src":"1526:90:17"},{"body":{"nodeType":"YulBlock","src":"1681:50:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1698:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1718:5:17"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1703:14:17"},"nodeType":"YulFunctionCall","src":"1703:21:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1691:6:17"},"nodeType":"YulFunctionCall","src":"1691:34:17"},"nodeType":"YulExpressionStatement","src":"1691:34:17"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1669:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1676:3:17","type":""}],"src":"1622:109:17"},{"body":{"nodeType":"YulBlock","src":"1829:118:17","statements":[{"nodeType":"YulAssignment","src":"1839:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1851:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1862:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1847:3:17"},"nodeType":"YulFunctionCall","src":"1847:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1839:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1913:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1926:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1937:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1922:3:17"},"nodeType":"YulFunctionCall","src":"1922:17:17"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1875:37:17"},"nodeType":"YulFunctionCall","src":"1875:65:17"},"nodeType":"YulExpressionStatement","src":"1875:65:17"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1801:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1813:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1824:4:17","type":""}],"src":"1737:210:17"},{"body":{"nodeType":"YulBlock","src":"2012:40:17","statements":[{"nodeType":"YulAssignment","src":"2023:22:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2039:5:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2033:5:17"},"nodeType":"YulFunctionCall","src":"2033:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2023:6:17"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1995:5:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2005:6:17","type":""}],"src":"1953:99:17"},{"body":{"nodeType":"YulBlock","src":"2154:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2171:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"2176:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2164:6:17"},"nodeType":"YulFunctionCall","src":"2164:19:17"},"nodeType":"YulExpressionStatement","src":"2164:19:17"},{"nodeType":"YulAssignment","src":"2192:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2211:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"2216:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2207:3:17"},"nodeType":"YulFunctionCall","src":"2207:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"2192:11:17"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2126:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"2131:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"2142:11:17","type":""}],"src":"2058:169:17"},{"body":{"nodeType":"YulBlock","src":"2295:184:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2305:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"2314:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2309:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"2374:63:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2399:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"2404:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2395:3:17"},"nodeType":"YulFunctionCall","src":"2395:11:17"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2418:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"2423:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2414:3:17"},"nodeType":"YulFunctionCall","src":"2414:11:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2408:5:17"},"nodeType":"YulFunctionCall","src":"2408:18:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2388:6:17"},"nodeType":"YulFunctionCall","src":"2388:39:17"},"nodeType":"YulExpressionStatement","src":"2388:39:17"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2335:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"2338:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2332:2:17"},"nodeType":"YulFunctionCall","src":"2332:13:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2346:19:17","statements":[{"nodeType":"YulAssignment","src":"2348:15:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2357:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"2360:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2353:3:17"},"nodeType":"YulFunctionCall","src":"2353:10:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2348:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"2328:3:17","statements":[]},"src":"2324:113:17"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2457:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"2462:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2453:3:17"},"nodeType":"YulFunctionCall","src":"2453:16:17"},{"kind":"number","nodeType":"YulLiteral","src":"2471:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2446:6:17"},"nodeType":"YulFunctionCall","src":"2446:27:17"},"nodeType":"YulExpressionStatement","src":"2446:27:17"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2277:3:17","type":""},{"name":"dst","nodeType":"YulTypedName","src":"2282:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"2287:6:17","type":""}],"src":"2233:246:17"},{"body":{"nodeType":"YulBlock","src":"2533:54:17","statements":[{"nodeType":"YulAssignment","src":"2543:38:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2561:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"2568:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2557:3:17"},"nodeType":"YulFunctionCall","src":"2557:14:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2577:2:17","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2573:3:17"},"nodeType":"YulFunctionCall","src":"2573:7:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2553:3:17"},"nodeType":"YulFunctionCall","src":"2553:28:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2543:6:17"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2516:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2526:6:17","type":""}],"src":"2485:102:17"},{"body":{"nodeType":"YulBlock","src":"2685:285:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2695:53:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2742:5:17"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2709:32:17"},"nodeType":"YulFunctionCall","src":"2709:39:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2699:6:17","type":""}]},{"nodeType":"YulAssignment","src":"2757:78:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2823:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"2828:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2764:58:17"},"nodeType":"YulFunctionCall","src":"2764:71:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2757:3:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2883:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"2890:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2879:3:17"},"nodeType":"YulFunctionCall","src":"2879:16:17"},{"name":"pos","nodeType":"YulIdentifier","src":"2897:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"2902:6:17"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2844:34:17"},"nodeType":"YulFunctionCall","src":"2844:65:17"},"nodeType":"YulExpressionStatement","src":"2844:65:17"},{"nodeType":"YulAssignment","src":"2918:46:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2929:3:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2956:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2934:21:17"},"nodeType":"YulFunctionCall","src":"2934:29:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2925:3:17"},"nodeType":"YulFunctionCall","src":"2925:39:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2918:3:17"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2666:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2673:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2681:3:17","type":""}],"src":"2593:377:17"},{"body":{"nodeType":"YulBlock","src":"3094:195:17","statements":[{"nodeType":"YulAssignment","src":"3104:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3116:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3127:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3112:3:17"},"nodeType":"YulFunctionCall","src":"3112:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3104:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3151:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3162:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3147:3:17"},"nodeType":"YulFunctionCall","src":"3147:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3170:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"3176:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3166:3:17"},"nodeType":"YulFunctionCall","src":"3166:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3140:6:17"},"nodeType":"YulFunctionCall","src":"3140:47:17"},"nodeType":"YulExpressionStatement","src":"3140:47:17"},{"nodeType":"YulAssignment","src":"3196:86:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3268:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"3277:4:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3204:63:17"},"nodeType":"YulFunctionCall","src":"3204:78:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3196:4:17"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3066:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3078:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3089:4:17","type":""}],"src":"2976:313:17"},{"body":{"nodeType":"YulBlock","src":"3338:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"3395:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3404:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3407:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3397:6:17"},"nodeType":"YulFunctionCall","src":"3397:12:17"},"nodeType":"YulExpressionStatement","src":"3397:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3361:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3386:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3368:17:17"},"nodeType":"YulFunctionCall","src":"3368:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3358:2:17"},"nodeType":"YulFunctionCall","src":"3358:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3351:6:17"},"nodeType":"YulFunctionCall","src":"3351:43:17"},"nodeType":"YulIf","src":"3348:63:17"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3331:5:17","type":""}],"src":"3295:122:17"},{"body":{"nodeType":"YulBlock","src":"3475:87:17","statements":[{"nodeType":"YulAssignment","src":"3485:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3507:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3494:12:17"},"nodeType":"YulFunctionCall","src":"3494:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3485:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3550:5:17"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3523:26:17"},"nodeType":"YulFunctionCall","src":"3523:33:17"},"nodeType":"YulExpressionStatement","src":"3523:33:17"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3453:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"3461:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3469:5:17","type":""}],"src":"3423:139:17"},{"body":{"nodeType":"YulBlock","src":"3634:263:17","statements":[{"body":{"nodeType":"YulBlock","src":"3680:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3682:77:17"},"nodeType":"YulFunctionCall","src":"3682:79:17"},"nodeType":"YulExpressionStatement","src":"3682:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3655:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"3664:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3651:3:17"},"nodeType":"YulFunctionCall","src":"3651:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"3676:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3647:3:17"},"nodeType":"YulFunctionCall","src":"3647:32:17"},"nodeType":"YulIf","src":"3644:119:17"},{"nodeType":"YulBlock","src":"3773:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3788:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"3802:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3792:6:17","type":""}]},{"nodeType":"YulAssignment","src":"3817:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3852:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"3863:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3848:3:17"},"nodeType":"YulFunctionCall","src":"3848:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3872:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3827:20:17"},"nodeType":"YulFunctionCall","src":"3827:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3817:6:17"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3604:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3615:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3627:6:17","type":""}],"src":"3568:329:17"},{"body":{"nodeType":"YulBlock","src":"3948:81:17","statements":[{"nodeType":"YulAssignment","src":"3958:65:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3973:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"3980:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3969:3:17"},"nodeType":"YulFunctionCall","src":"3969:54:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3958:7:17"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3930:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3940:7:17","type":""}],"src":"3903:126:17"},{"body":{"nodeType":"YulBlock","src":"4080:51:17","statements":[{"nodeType":"YulAssignment","src":"4090:35:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4119:5:17"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"4101:17:17"},"nodeType":"YulFunctionCall","src":"4101:24:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4090:7:17"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4062:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4072:7:17","type":""}],"src":"4035:96:17"},{"body":{"nodeType":"YulBlock","src":"4202:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4219:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4242:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4224:17:17"},"nodeType":"YulFunctionCall","src":"4224:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4212:6:17"},"nodeType":"YulFunctionCall","src":"4212:37:17"},"nodeType":"YulExpressionStatement","src":"4212:37:17"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4190:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4197:3:17","type":""}],"src":"4137:118:17"},{"body":{"nodeType":"YulBlock","src":"4359:124:17","statements":[{"nodeType":"YulAssignment","src":"4369:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4381:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4392:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4377:3:17"},"nodeType":"YulFunctionCall","src":"4377:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4369:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4449:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4462:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4473:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4458:3:17"},"nodeType":"YulFunctionCall","src":"4458:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4405:43:17"},"nodeType":"YulFunctionCall","src":"4405:71:17"},"nodeType":"YulExpressionStatement","src":"4405:71:17"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4331:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4343:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4354:4:17","type":""}],"src":"4261:222:17"},{"body":{"nodeType":"YulBlock","src":"4532:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"4589:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4598:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4601:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4591:6:17"},"nodeType":"YulFunctionCall","src":"4591:12:17"},"nodeType":"YulExpressionStatement","src":"4591:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4555:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4580:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4562:17:17"},"nodeType":"YulFunctionCall","src":"4562:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4552:2:17"},"nodeType":"YulFunctionCall","src":"4552:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4545:6:17"},"nodeType":"YulFunctionCall","src":"4545:43:17"},"nodeType":"YulIf","src":"4542:63:17"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4525:5:17","type":""}],"src":"4489:122:17"},{"body":{"nodeType":"YulBlock","src":"4669:87:17","statements":[{"nodeType":"YulAssignment","src":"4679:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4701:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4688:12:17"},"nodeType":"YulFunctionCall","src":"4688:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4679:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4744:5:17"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"4717:26:17"},"nodeType":"YulFunctionCall","src":"4717:33:17"},"nodeType":"YulExpressionStatement","src":"4717:33:17"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4647:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"4655:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4663:5:17","type":""}],"src":"4617:139:17"},{"body":{"nodeType":"YulBlock","src":"4845:391:17","statements":[{"body":{"nodeType":"YulBlock","src":"4891:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4893:77:17"},"nodeType":"YulFunctionCall","src":"4893:79:17"},"nodeType":"YulExpressionStatement","src":"4893:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4866:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"4875:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4862:3:17"},"nodeType":"YulFunctionCall","src":"4862:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"4887:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4858:3:17"},"nodeType":"YulFunctionCall","src":"4858:32:17"},"nodeType":"YulIf","src":"4855:119:17"},{"nodeType":"YulBlock","src":"4984:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4999:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"5013:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5003:6:17","type":""}]},{"nodeType":"YulAssignment","src":"5028:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5063:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"5074:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5059:3:17"},"nodeType":"YulFunctionCall","src":"5059:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5083:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5038:20:17"},"nodeType":"YulFunctionCall","src":"5038:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5028:6:17"}]}]},{"nodeType":"YulBlock","src":"5111:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5126:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"5140:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5130:6:17","type":""}]},{"nodeType":"YulAssignment","src":"5156:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5191:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"5202:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5187:3:17"},"nodeType":"YulFunctionCall","src":"5187:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5211:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5166:20:17"},"nodeType":"YulFunctionCall","src":"5166:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5156:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4807:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4818:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4830:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4838:6:17","type":""}],"src":"4762:474:17"},{"body":{"nodeType":"YulBlock","src":"5308:263:17","statements":[{"body":{"nodeType":"YulBlock","src":"5354:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5356:77:17"},"nodeType":"YulFunctionCall","src":"5356:79:17"},"nodeType":"YulExpressionStatement","src":"5356:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5329:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"5338:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5325:3:17"},"nodeType":"YulFunctionCall","src":"5325:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"5350:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5321:3:17"},"nodeType":"YulFunctionCall","src":"5321:32:17"},"nodeType":"YulIf","src":"5318:119:17"},{"nodeType":"YulBlock","src":"5447:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5462:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"5476:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5466:6:17","type":""}]},{"nodeType":"YulAssignment","src":"5491:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5526:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"5537:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5522:3:17"},"nodeType":"YulFunctionCall","src":"5522:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5546:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5501:20:17"},"nodeType":"YulFunctionCall","src":"5501:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5491:6:17"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5278:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5289:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5301:6:17","type":""}],"src":"5242:329:17"},{"body":{"nodeType":"YulBlock","src":"5651:40:17","statements":[{"nodeType":"YulAssignment","src":"5662:22:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5678:5:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5672:5:17"},"nodeType":"YulFunctionCall","src":"5672:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5662:6:17"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5634:5:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5644:6:17","type":""}],"src":"5577:114:17"},{"body":{"nodeType":"YulBlock","src":"5808:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5825:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"5830:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5818:6:17"},"nodeType":"YulFunctionCall","src":"5818:19:17"},"nodeType":"YulExpressionStatement","src":"5818:19:17"},{"nodeType":"YulAssignment","src":"5846:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5865:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"5870:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5861:3:17"},"nodeType":"YulFunctionCall","src":"5861:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"5846:11:17"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5780:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"5785:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"5796:11:17","type":""}],"src":"5697:184:17"},{"body":{"nodeType":"YulBlock","src":"5959:60:17","statements":[{"nodeType":"YulAssignment","src":"5969:11:17","value":{"name":"ptr","nodeType":"YulIdentifier","src":"5977:3:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"5969:4:17"}]},{"nodeType":"YulAssignment","src":"5990:22:17","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"6002:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"6007:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5998:3:17"},"nodeType":"YulFunctionCall","src":"5998:14:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"5990:4:17"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"5946:3:17","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"5954:4:17","type":""}],"src":"5887:132:17"},{"body":{"nodeType":"YulBlock","src":"6080:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6097:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6120:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6102:17:17"},"nodeType":"YulFunctionCall","src":"6102:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6090:6:17"},"nodeType":"YulFunctionCall","src":"6090:37:17"},"nodeType":"YulExpressionStatement","src":"6090:37:17"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6068:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6075:3:17","type":""}],"src":"6025:108:17"},{"body":{"nodeType":"YulBlock","src":"6219:99:17","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6263:6:17"},{"name":"pos","nodeType":"YulIdentifier","src":"6271:3:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"6229:33:17"},"nodeType":"YulFunctionCall","src":"6229:46:17"},"nodeType":"YulExpressionStatement","src":"6229:46:17"},{"nodeType":"YulAssignment","src":"6284:28:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6302:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"6307:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6298:3:17"},"nodeType":"YulFunctionCall","src":"6298:14:17"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"6284:10:17"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"6192:6:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6200:3:17","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"6208:10:17","type":""}],"src":"6139:179:17"},{"body":{"nodeType":"YulBlock","src":"6399:38:17","statements":[{"nodeType":"YulAssignment","src":"6409:22:17","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"6421:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"6426:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6417:3:17"},"nodeType":"YulFunctionCall","src":"6417:14:17"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"6409:4:17"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"6386:3:17","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"6394:4:17","type":""}],"src":"6324:113:17"},{"body":{"nodeType":"YulBlock","src":"6597:608:17","statements":[{"nodeType":"YulVariableDeclaration","src":"6607:68:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6669:5:17"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"6621:47:17"},"nodeType":"YulFunctionCall","src":"6621:54:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6611:6:17","type":""}]},{"nodeType":"YulAssignment","src":"6684:93:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6765:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"6770:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6691:73:17"},"nodeType":"YulFunctionCall","src":"6691:86:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6684:3:17"}]},{"nodeType":"YulVariableDeclaration","src":"6786:71:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6851:5:17"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"6801:49:17"},"nodeType":"YulFunctionCall","src":"6801:56:17"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"6790:7:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6866:21:17","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"6880:7:17"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"6870:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"6956:224:17","statements":[{"nodeType":"YulVariableDeclaration","src":"6970:34:17","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6997:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6991:5:17"},"nodeType":"YulFunctionCall","src":"6991:13:17"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"6974:13:17","type":""}]},{"nodeType":"YulAssignment","src":"7017:70:17","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"7068:13:17"},{"name":"pos","nodeType":"YulIdentifier","src":"7083:3:17"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"7024:43:17"},"nodeType":"YulFunctionCall","src":"7024:63:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7017:3:17"}]},{"nodeType":"YulAssignment","src":"7100:70:17","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"7163:6:17"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7110:52:17"},"nodeType":"YulFunctionCall","src":"7110:60:17"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"7100:6:17"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6918:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"6921:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6915:2:17"},"nodeType":"YulFunctionCall","src":"6915:13:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6929:18:17","statements":[{"nodeType":"YulAssignment","src":"6931:14:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6940:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"6943:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6936:3:17"},"nodeType":"YulFunctionCall","src":"6936:9:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6931:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"6900:14:17","statements":[{"nodeType":"YulVariableDeclaration","src":"6902:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"6911:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"6906:1:17","type":""}]}]},"src":"6896:284:17"},{"nodeType":"YulAssignment","src":"7189:10:17","value":{"name":"pos","nodeType":"YulIdentifier","src":"7196:3:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7189:3:17"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6576:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6583:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6592:3:17","type":""}],"src":"6473:732:17"},{"body":{"nodeType":"YulBlock","src":"7359:225:17","statements":[{"nodeType":"YulAssignment","src":"7369:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7381:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"7392:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7377:3:17"},"nodeType":"YulFunctionCall","src":"7377:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7369:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7416:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"7427:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7412:3:17"},"nodeType":"YulFunctionCall","src":"7412:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7435:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"7441:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7431:3:17"},"nodeType":"YulFunctionCall","src":"7431:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7405:6:17"},"nodeType":"YulFunctionCall","src":"7405:47:17"},"nodeType":"YulExpressionStatement","src":"7405:47:17"},{"nodeType":"YulAssignment","src":"7461:116:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7563:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"7572:4:17"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7469:93:17"},"nodeType":"YulFunctionCall","src":"7469:108:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7461:4:17"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7331:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7343:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7354:4:17","type":""}],"src":"7211:373:17"},{"body":{"nodeType":"YulBlock","src":"7690:519:17","statements":[{"body":{"nodeType":"YulBlock","src":"7736:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7738:77:17"},"nodeType":"YulFunctionCall","src":"7738:79:17"},"nodeType":"YulExpressionStatement","src":"7738:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7711:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"7720:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7707:3:17"},"nodeType":"YulFunctionCall","src":"7707:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"7732:2:17","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7703:3:17"},"nodeType":"YulFunctionCall","src":"7703:32:17"},"nodeType":"YulIf","src":"7700:119:17"},{"nodeType":"YulBlock","src":"7829:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"7844:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"7858:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7848:6:17","type":""}]},{"nodeType":"YulAssignment","src":"7873:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7908:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"7919:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7904:3:17"},"nodeType":"YulFunctionCall","src":"7904:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7928:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7883:20:17"},"nodeType":"YulFunctionCall","src":"7883:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7873:6:17"}]}]},{"nodeType":"YulBlock","src":"7956:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"7971:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"7985:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7975:6:17","type":""}]},{"nodeType":"YulAssignment","src":"8001:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8036:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"8047:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8032:3:17"},"nodeType":"YulFunctionCall","src":"8032:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8056:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8011:20:17"},"nodeType":"YulFunctionCall","src":"8011:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8001:6:17"}]}]},{"nodeType":"YulBlock","src":"8084:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"8099:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"8113:2:17","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8103:6:17","type":""}]},{"nodeType":"YulAssignment","src":"8129:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8164:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"8175:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8160:3:17"},"nodeType":"YulFunctionCall","src":"8160:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8184:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"8139:20:17"},"nodeType":"YulFunctionCall","src":"8139:53:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"8129:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7644:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7655:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7667:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7675:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7683:6:17","type":""}],"src":"7590:619:17"},{"body":{"nodeType":"YulBlock","src":"8417:442:17","statements":[{"nodeType":"YulAssignment","src":"8427:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8439:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"8450:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8435:3:17"},"nodeType":"YulFunctionCall","src":"8435:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8427:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8475:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"8486:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8471:3:17"},"nodeType":"YulFunctionCall","src":"8471:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8494:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"8500:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8490:3:17"},"nodeType":"YulFunctionCall","src":"8490:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8464:6:17"},"nodeType":"YulFunctionCall","src":"8464:47:17"},"nodeType":"YulExpressionStatement","src":"8464:47:17"},{"nodeType":"YulAssignment","src":"8520:86:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8592:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"8601:4:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8528:63:17"},"nodeType":"YulFunctionCall","src":"8528:78:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8520:4:17"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8660:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8673:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"8684:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8669:3:17"},"nodeType":"YulFunctionCall","src":"8669:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"8616:43:17"},"nodeType":"YulFunctionCall","src":"8616:72:17"},"nodeType":"YulExpressionStatement","src":"8616:72:17"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"8742:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8755:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"8766:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8751:3:17"},"nodeType":"YulFunctionCall","src":"8751:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"8698:43:17"},"nodeType":"YulFunctionCall","src":"8698:72:17"},"nodeType":"YulExpressionStatement","src":"8698:72:17"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"8824:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8837:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"8848:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8833:3:17"},"nodeType":"YulFunctionCall","src":"8833:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"8780:43:17"},"nodeType":"YulFunctionCall","src":"8780:72:17"},"nodeType":"YulExpressionStatement","src":"8780:72:17"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8365:9:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8377:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8385:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8393:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8401:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8412:4:17","type":""}],"src":"8215:644:17"},{"body":{"nodeType":"YulBlock","src":"8905:76:17","statements":[{"body":{"nodeType":"YulBlock","src":"8959:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8968:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8971:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8961:6:17"},"nodeType":"YulFunctionCall","src":"8961:12:17"},"nodeType":"YulExpressionStatement","src":"8961:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8928:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8950:5:17"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"8935:14:17"},"nodeType":"YulFunctionCall","src":"8935:21:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8925:2:17"},"nodeType":"YulFunctionCall","src":"8925:32:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8918:6:17"},"nodeType":"YulFunctionCall","src":"8918:40:17"},"nodeType":"YulIf","src":"8915:60:17"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8898:5:17","type":""}],"src":"8865:116:17"},{"body":{"nodeType":"YulBlock","src":"9036:84:17","statements":[{"nodeType":"YulAssignment","src":"9046:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9068:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9055:12:17"},"nodeType":"YulFunctionCall","src":"9055:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9046:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9108:5:17"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"9084:23:17"},"nodeType":"YulFunctionCall","src":"9084:30:17"},"nodeType":"YulExpressionStatement","src":"9084:30:17"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9014:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"9022:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"9030:5:17","type":""}],"src":"8987:133:17"},{"body":{"nodeType":"YulBlock","src":"9206:388:17","statements":[{"body":{"nodeType":"YulBlock","src":"9252:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9254:77:17"},"nodeType":"YulFunctionCall","src":"9254:79:17"},"nodeType":"YulExpressionStatement","src":"9254:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9227:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"9236:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9223:3:17"},"nodeType":"YulFunctionCall","src":"9223:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"9248:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9219:3:17"},"nodeType":"YulFunctionCall","src":"9219:32:17"},"nodeType":"YulIf","src":"9216:119:17"},{"nodeType":"YulBlock","src":"9345:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"9360:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"9374:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9364:6:17","type":""}]},{"nodeType":"YulAssignment","src":"9389:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9424:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"9435:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9420:3:17"},"nodeType":"YulFunctionCall","src":"9420:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9444:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9399:20:17"},"nodeType":"YulFunctionCall","src":"9399:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9389:6:17"}]}]},{"nodeType":"YulBlock","src":"9472:115:17","statements":[{"nodeType":"YulVariableDeclaration","src":"9487:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"9501:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9491:6:17","type":""}]},{"nodeType":"YulAssignment","src":"9517:60:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9549:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"9560:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9545:3:17"},"nodeType":"YulFunctionCall","src":"9545:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9569:7:17"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"9527:17:17"},"nodeType":"YulFunctionCall","src":"9527:50:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9517:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9168:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9179:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9191:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9199:6:17","type":""}],"src":"9126:468:17"},{"body":{"nodeType":"YulBlock","src":"9689:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9706:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9709:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9699:6:17"},"nodeType":"YulFunctionCall","src":"9699:12:17"},"nodeType":"YulExpressionStatement","src":"9699:12:17"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"9600:117:17"},{"body":{"nodeType":"YulBlock","src":"9812:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9829:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9832:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9822:6:17"},"nodeType":"YulFunctionCall","src":"9822:12:17"},"nodeType":"YulExpressionStatement","src":"9822:12:17"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"9723:117:17"},{"body":{"nodeType":"YulBlock","src":"9874:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9891:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9894:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9884:6:17"},"nodeType":"YulFunctionCall","src":"9884:88:17"},"nodeType":"YulExpressionStatement","src":"9884:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9988:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9991:4:17","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9981:6:17"},"nodeType":"YulFunctionCall","src":"9981:15:17"},"nodeType":"YulExpressionStatement","src":"9981:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10012:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10015:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10005:6:17"},"nodeType":"YulFunctionCall","src":"10005:15:17"},"nodeType":"YulExpressionStatement","src":"10005:15:17"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"9846:180:17"},{"body":{"nodeType":"YulBlock","src":"10075:238:17","statements":[{"nodeType":"YulVariableDeclaration","src":"10085:58:17","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10107:6:17"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"10137:4:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"10115:21:17"},"nodeType":"YulFunctionCall","src":"10115:27:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10103:3:17"},"nodeType":"YulFunctionCall","src":"10103:40:17"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"10089:10:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"10254:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"10256:16:17"},"nodeType":"YulFunctionCall","src":"10256:18:17"},"nodeType":"YulExpressionStatement","src":"10256:18:17"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"10197:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"10209:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10194:2:17"},"nodeType":"YulFunctionCall","src":"10194:34:17"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"10233:10:17"},{"name":"memPtr","nodeType":"YulIdentifier","src":"10245:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10230:2:17"},"nodeType":"YulFunctionCall","src":"10230:22:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"10191:2:17"},"nodeType":"YulFunctionCall","src":"10191:62:17"},"nodeType":"YulIf","src":"10188:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10292:2:17","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"10296:10:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10285:6:17"},"nodeType":"YulFunctionCall","src":"10285:22:17"},"nodeType":"YulExpressionStatement","src":"10285:22:17"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10061:6:17","type":""},{"name":"size","nodeType":"YulTypedName","src":"10069:4:17","type":""}],"src":"10032:281:17"},{"body":{"nodeType":"YulBlock","src":"10360:88:17","statements":[{"nodeType":"YulAssignment","src":"10370:30:17","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"10380:18:17"},"nodeType":"YulFunctionCall","src":"10380:20:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10370:6:17"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10429:6:17"},{"name":"size","nodeType":"YulIdentifier","src":"10437:4:17"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"10409:19:17"},"nodeType":"YulFunctionCall","src":"10409:33:17"},"nodeType":"YulExpressionStatement","src":"10409:33:17"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"10344:4:17","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"10353:6:17","type":""}],"src":"10319:129:17"},{"body":{"nodeType":"YulBlock","src":"10521:241:17","statements":[{"body":{"nodeType":"YulBlock","src":"10626:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"10628:16:17"},"nodeType":"YulFunctionCall","src":"10628:18:17"},"nodeType":"YulExpressionStatement","src":"10628:18:17"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10598:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"10606:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10595:2:17"},"nodeType":"YulFunctionCall","src":"10595:30:17"},"nodeType":"YulIf","src":"10592:56:17"},{"nodeType":"YulAssignment","src":"10658:37:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10688:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"10666:21:17"},"nodeType":"YulFunctionCall","src":"10666:29:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"10658:4:17"}]},{"nodeType":"YulAssignment","src":"10732:23:17","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"10744:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"10750:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10740:3:17"},"nodeType":"YulFunctionCall","src":"10740:15:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"10732:4:17"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"10505:6:17","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"10516:4:17","type":""}],"src":"10454:308:17"},{"body":{"nodeType":"YulBlock","src":"10832:82:17","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"10855:3:17"},{"name":"src","nodeType":"YulIdentifier","src":"10860:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"10865:6:17"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"10842:12:17"},"nodeType":"YulFunctionCall","src":"10842:30:17"},"nodeType":"YulExpressionStatement","src":"10842:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"10892:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"10897:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10888:3:17"},"nodeType":"YulFunctionCall","src":"10888:16:17"},{"kind":"number","nodeType":"YulLiteral","src":"10906:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10881:6:17"},"nodeType":"YulFunctionCall","src":"10881:27:17"},"nodeType":"YulExpressionStatement","src":"10881:27:17"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"10814:3:17","type":""},{"name":"dst","nodeType":"YulTypedName","src":"10819:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"10824:6:17","type":""}],"src":"10768:146:17"},{"body":{"nodeType":"YulBlock","src":"11004:341:17","statements":[{"nodeType":"YulAssignment","src":"11014:75:17","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11081:6:17"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"11039:41:17"},"nodeType":"YulFunctionCall","src":"11039:49:17"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"11023:15:17"},"nodeType":"YulFunctionCall","src":"11023:66:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"11014:5:17"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"11105:5:17"},{"name":"length","nodeType":"YulIdentifier","src":"11112:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11098:6:17"},"nodeType":"YulFunctionCall","src":"11098:21:17"},"nodeType":"YulExpressionStatement","src":"11098:21:17"},{"nodeType":"YulVariableDeclaration","src":"11128:27:17","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"11143:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"11150:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11139:3:17"},"nodeType":"YulFunctionCall","src":"11139:16:17"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"11132:3:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"11193:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"11195:77:17"},"nodeType":"YulFunctionCall","src":"11195:79:17"},"nodeType":"YulExpressionStatement","src":"11195:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11174:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"11179:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11170:3:17"},"nodeType":"YulFunctionCall","src":"11170:16:17"},{"name":"end","nodeType":"YulIdentifier","src":"11188:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11167:2:17"},"nodeType":"YulFunctionCall","src":"11167:25:17"},"nodeType":"YulIf","src":"11164:112:17"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11322:3:17"},{"name":"dst","nodeType":"YulIdentifier","src":"11327:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"11332:6:17"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"11285:36:17"},"nodeType":"YulFunctionCall","src":"11285:54:17"},"nodeType":"YulExpressionStatement","src":"11285:54:17"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"10977:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"10982:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"10990:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"10998:5:17","type":""}],"src":"10920:425:17"},{"body":{"nodeType":"YulBlock","src":"11427:278:17","statements":[{"body":{"nodeType":"YulBlock","src":"11476:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"11478:77:17"},"nodeType":"YulFunctionCall","src":"11478:79:17"},"nodeType":"YulExpressionStatement","src":"11478:79:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11455:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"11463:4:17","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11451:3:17"},"nodeType":"YulFunctionCall","src":"11451:17:17"},{"name":"end","nodeType":"YulIdentifier","src":"11470:3:17"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11447:3:17"},"nodeType":"YulFunctionCall","src":"11447:27:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11440:6:17"},"nodeType":"YulFunctionCall","src":"11440:35:17"},"nodeType":"YulIf","src":"11437:122:17"},{"nodeType":"YulVariableDeclaration","src":"11568:34:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11595:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11582:12:17"},"nodeType":"YulFunctionCall","src":"11582:20:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"11572:6:17","type":""}]},{"nodeType":"YulAssignment","src":"11611:88:17","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11672:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"11680:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11668:3:17"},"nodeType":"YulFunctionCall","src":"11668:17:17"},{"name":"length","nodeType":"YulIdentifier","src":"11687:6:17"},{"name":"end","nodeType":"YulIdentifier","src":"11695:3:17"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"11620:47:17"},"nodeType":"YulFunctionCall","src":"11620:79:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"11611:5:17"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"11405:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"11413:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"11421:5:17","type":""}],"src":"11365:340:17"},{"body":{"nodeType":"YulBlock","src":"11821:689:17","statements":[{"body":{"nodeType":"YulBlock","src":"11867:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11869:77:17"},"nodeType":"YulFunctionCall","src":"11869:79:17"},"nodeType":"YulExpressionStatement","src":"11869:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11842:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"11851:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11838:3:17"},"nodeType":"YulFunctionCall","src":"11838:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"11863:2:17","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11834:3:17"},"nodeType":"YulFunctionCall","src":"11834:32:17"},"nodeType":"YulIf","src":"11831:119:17"},{"nodeType":"YulBlock","src":"11960:287:17","statements":[{"nodeType":"YulVariableDeclaration","src":"11975:45:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12006:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"12017:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12002:3:17"},"nodeType":"YulFunctionCall","src":"12002:17:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11989:12:17"},"nodeType":"YulFunctionCall","src":"11989:31:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11979:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"12067:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"12069:77:17"},"nodeType":"YulFunctionCall","src":"12069:79:17"},"nodeType":"YulExpressionStatement","src":"12069:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12039:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"12047:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12036:2:17"},"nodeType":"YulFunctionCall","src":"12036:30:17"},"nodeType":"YulIf","src":"12033:117:17"},{"nodeType":"YulAssignment","src":"12164:73:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12209:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"12220:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12205:3:17"},"nodeType":"YulFunctionCall","src":"12205:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12229:7:17"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"12174:30:17"},"nodeType":"YulFunctionCall","src":"12174:63:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12164:6:17"}]}]},{"nodeType":"YulBlock","src":"12257:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"12272:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"12286:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12276:6:17","type":""}]},{"nodeType":"YulAssignment","src":"12302:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12337:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"12348:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12333:3:17"},"nodeType":"YulFunctionCall","src":"12333:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12357:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"12312:20:17"},"nodeType":"YulFunctionCall","src":"12312:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12302:6:17"}]}]},{"nodeType":"YulBlock","src":"12385:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"12400:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"12414:2:17","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12404:6:17","type":""}]},{"nodeType":"YulAssignment","src":"12430:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12465:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"12476:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12461:3:17"},"nodeType":"YulFunctionCall","src":"12461:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12485:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"12440:20:17"},"nodeType":"YulFunctionCall","src":"12440:53:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"12430:6:17"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11775:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11786:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11798:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11806:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11814:6:17","type":""}],"src":"11711:799:17"},{"body":{"nodeType":"YulBlock","src":"12599:391:17","statements":[{"body":{"nodeType":"YulBlock","src":"12645:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12647:77:17"},"nodeType":"YulFunctionCall","src":"12647:79:17"},"nodeType":"YulExpressionStatement","src":"12647:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12620:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"12629:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12616:3:17"},"nodeType":"YulFunctionCall","src":"12616:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"12641:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12612:3:17"},"nodeType":"YulFunctionCall","src":"12612:32:17"},"nodeType":"YulIf","src":"12609:119:17"},{"nodeType":"YulBlock","src":"12738:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"12753:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"12767:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12757:6:17","type":""}]},{"nodeType":"YulAssignment","src":"12782:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12817:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"12828:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12813:3:17"},"nodeType":"YulFunctionCall","src":"12813:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12837:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"12792:20:17"},"nodeType":"YulFunctionCall","src":"12792:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12782:6:17"}]}]},{"nodeType":"YulBlock","src":"12865:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"12880:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"12894:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12884:6:17","type":""}]},{"nodeType":"YulAssignment","src":"12910:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12945:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"12956:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12941:3:17"},"nodeType":"YulFunctionCall","src":"12941:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12965:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"12920:20:17"},"nodeType":"YulFunctionCall","src":"12920:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12910:6:17"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12561:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12572:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12584:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12592:6:17","type":""}],"src":"12516:474:17"},{"body":{"nodeType":"YulBlock","src":"13062:241:17","statements":[{"body":{"nodeType":"YulBlock","src":"13167:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"13169:16:17"},"nodeType":"YulFunctionCall","src":"13169:18:17"},"nodeType":"YulExpressionStatement","src":"13169:18:17"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13139:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"13147:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13136:2:17"},"nodeType":"YulFunctionCall","src":"13136:30:17"},"nodeType":"YulIf","src":"13133:56:17"},{"nodeType":"YulAssignment","src":"13199:37:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13229:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"13207:21:17"},"nodeType":"YulFunctionCall","src":"13207:29:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"13199:4:17"}]},{"nodeType":"YulAssignment","src":"13273:23:17","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"13285:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"13291:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13281:3:17"},"nodeType":"YulFunctionCall","src":"13281:15:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"13273:4:17"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"13046:6:17","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"13057:4:17","type":""}],"src":"12996:307:17"},{"body":{"nodeType":"YulBlock","src":"13392:340:17","statements":[{"nodeType":"YulAssignment","src":"13402:74:17","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13468:6:17"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"13427:40:17"},"nodeType":"YulFunctionCall","src":"13427:48:17"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"13411:15:17"},"nodeType":"YulFunctionCall","src":"13411:65:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"13402:5:17"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"13492:5:17"},{"name":"length","nodeType":"YulIdentifier","src":"13499:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13485:6:17"},"nodeType":"YulFunctionCall","src":"13485:21:17"},"nodeType":"YulExpressionStatement","src":"13485:21:17"},{"nodeType":"YulVariableDeclaration","src":"13515:27:17","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"13530:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"13537:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13526:3:17"},"nodeType":"YulFunctionCall","src":"13526:16:17"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"13519:3:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"13580:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"13582:77:17"},"nodeType":"YulFunctionCall","src":"13582:79:17"},"nodeType":"YulExpressionStatement","src":"13582:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"13561:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"13566:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13557:3:17"},"nodeType":"YulFunctionCall","src":"13557:16:17"},{"name":"end","nodeType":"YulIdentifier","src":"13575:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13554:2:17"},"nodeType":"YulFunctionCall","src":"13554:25:17"},"nodeType":"YulIf","src":"13551:112:17"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"13709:3:17"},{"name":"dst","nodeType":"YulIdentifier","src":"13714:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"13719:6:17"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"13672:36:17"},"nodeType":"YulFunctionCall","src":"13672:54:17"},"nodeType":"YulExpressionStatement","src":"13672:54:17"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"13365:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"13370:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"13378:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"13386:5:17","type":""}],"src":"13309:423:17"},{"body":{"nodeType":"YulBlock","src":"13812:277:17","statements":[{"body":{"nodeType":"YulBlock","src":"13861:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"13863:77:17"},"nodeType":"YulFunctionCall","src":"13863:79:17"},"nodeType":"YulExpressionStatement","src":"13863:79:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13840:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"13848:4:17","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13836:3:17"},"nodeType":"YulFunctionCall","src":"13836:17:17"},{"name":"end","nodeType":"YulIdentifier","src":"13855:3:17"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13832:3:17"},"nodeType":"YulFunctionCall","src":"13832:27:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13825:6:17"},"nodeType":"YulFunctionCall","src":"13825:35:17"},"nodeType":"YulIf","src":"13822:122:17"},{"nodeType":"YulVariableDeclaration","src":"13953:34:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13980:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13967:12:17"},"nodeType":"YulFunctionCall","src":"13967:20:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"13957:6:17","type":""}]},{"nodeType":"YulAssignment","src":"13996:87:17","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14056:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"14064:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14052:3:17"},"nodeType":"YulFunctionCall","src":"14052:17:17"},{"name":"length","nodeType":"YulIdentifier","src":"14071:6:17"},{"name":"end","nodeType":"YulIdentifier","src":"14079:3:17"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"14005:46:17"},"nodeType":"YulFunctionCall","src":"14005:78:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"13996:5:17"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"13790:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"13798:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"13806:5:17","type":""}],"src":"13751:338:17"},{"body":{"nodeType":"YulBlock","src":"14221:817:17","statements":[{"body":{"nodeType":"YulBlock","src":"14268:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"14270:77:17"},"nodeType":"YulFunctionCall","src":"14270:79:17"},"nodeType":"YulExpressionStatement","src":"14270:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"14242:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"14251:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14238:3:17"},"nodeType":"YulFunctionCall","src":"14238:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"14263:3:17","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14234:3:17"},"nodeType":"YulFunctionCall","src":"14234:33:17"},"nodeType":"YulIf","src":"14231:120:17"},{"nodeType":"YulBlock","src":"14361:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"14376:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"14390:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14380:6:17","type":""}]},{"nodeType":"YulAssignment","src":"14405:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14440:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"14451:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14436:3:17"},"nodeType":"YulFunctionCall","src":"14436:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14460:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"14415:20:17"},"nodeType":"YulFunctionCall","src":"14415:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"14405:6:17"}]}]},{"nodeType":"YulBlock","src":"14488:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"14503:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"14517:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14507:6:17","type":""}]},{"nodeType":"YulAssignment","src":"14533:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14568:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"14579:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14564:3:17"},"nodeType":"YulFunctionCall","src":"14564:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14588:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"14543:20:17"},"nodeType":"YulFunctionCall","src":"14543:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"14533:6:17"}]}]},{"nodeType":"YulBlock","src":"14616:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"14631:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"14645:2:17","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14635:6:17","type":""}]},{"nodeType":"YulAssignment","src":"14661:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14696:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"14707:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14692:3:17"},"nodeType":"YulFunctionCall","src":"14692:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14716:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"14671:20:17"},"nodeType":"YulFunctionCall","src":"14671:53:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"14661:6:17"}]}]},{"nodeType":"YulBlock","src":"14744:287:17","statements":[{"nodeType":"YulVariableDeclaration","src":"14759:46:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14790:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"14801:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14786:3:17"},"nodeType":"YulFunctionCall","src":"14786:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14773:12:17"},"nodeType":"YulFunctionCall","src":"14773:32:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14763:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"14852:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"14854:77:17"},"nodeType":"YulFunctionCall","src":"14854:79:17"},"nodeType":"YulExpressionStatement","src":"14854:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14824:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"14832:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14821:2:17"},"nodeType":"YulFunctionCall","src":"14821:30:17"},"nodeType":"YulIf","src":"14818:117:17"},{"nodeType":"YulAssignment","src":"14949:72:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14993:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"15004:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14989:3:17"},"nodeType":"YulFunctionCall","src":"14989:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15013:7:17"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"14959:29:17"},"nodeType":"YulFunctionCall","src":"14959:62:17"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"14949:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14167:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14178:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14190:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14198:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"14206:6:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"14214:6:17","type":""}],"src":"14095:943:17"},{"body":{"nodeType":"YulBlock","src":"15127:391:17","statements":[{"body":{"nodeType":"YulBlock","src":"15173:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"15175:77:17"},"nodeType":"YulFunctionCall","src":"15175:79:17"},"nodeType":"YulExpressionStatement","src":"15175:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15148:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"15157:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15144:3:17"},"nodeType":"YulFunctionCall","src":"15144:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"15169:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15140:3:17"},"nodeType":"YulFunctionCall","src":"15140:32:17"},"nodeType":"YulIf","src":"15137:119:17"},{"nodeType":"YulBlock","src":"15266:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"15281:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"15295:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15285:6:17","type":""}]},{"nodeType":"YulAssignment","src":"15310:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15345:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"15356:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15341:3:17"},"nodeType":"YulFunctionCall","src":"15341:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15365:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"15320:20:17"},"nodeType":"YulFunctionCall","src":"15320:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15310:6:17"}]}]},{"nodeType":"YulBlock","src":"15393:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"15408:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"15422:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15412:6:17","type":""}]},{"nodeType":"YulAssignment","src":"15438:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15473:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"15484:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15469:3:17"},"nodeType":"YulFunctionCall","src":"15469:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15493:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"15448:20:17"},"nodeType":"YulFunctionCall","src":"15448:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"15438:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15089:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15100:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15112:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15120:6:17","type":""}],"src":"15044:474:17"},{"body":{"nodeType":"YulBlock","src":"15552:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15569:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15572:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15562:6:17"},"nodeType":"YulFunctionCall","src":"15562:88:17"},"nodeType":"YulExpressionStatement","src":"15562:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15666:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15669:4:17","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15659:6:17"},"nodeType":"YulFunctionCall","src":"15659:15:17"},"nodeType":"YulExpressionStatement","src":"15659:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15690:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15693:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15683:6:17"},"nodeType":"YulFunctionCall","src":"15683:15:17"},"nodeType":"YulExpressionStatement","src":"15683:15:17"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"15524:180:17"},{"body":{"nodeType":"YulBlock","src":"15761:269:17","statements":[{"nodeType":"YulAssignment","src":"15771:22:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"15785:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"15791:1:17","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"15781:3:17"},"nodeType":"YulFunctionCall","src":"15781:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"15771:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"15802:38:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"15832:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"15838:1:17","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15828:3:17"},"nodeType":"YulFunctionCall","src":"15828:12:17"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"15806:18:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"15879:51:17","statements":[{"nodeType":"YulAssignment","src":"15893:27:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"15907:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"15915:4:17","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15903:3:17"},"nodeType":"YulFunctionCall","src":"15903:17:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"15893:6:17"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"15859:18:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15852:6:17"},"nodeType":"YulFunctionCall","src":"15852:26:17"},"nodeType":"YulIf","src":"15849:81:17"},{"body":{"nodeType":"YulBlock","src":"15982:42:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"15996:16:17"},"nodeType":"YulFunctionCall","src":"15996:18:17"},"nodeType":"YulExpressionStatement","src":"15996:18:17"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"15946:18:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"15969:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"15977:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15966:2:17"},"nodeType":"YulFunctionCall","src":"15966:14:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15943:2:17"},"nodeType":"YulFunctionCall","src":"15943:38:17"},"nodeType":"YulIf","src":"15940:84:17"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"15745:4:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"15754:6:17","type":""}],"src":"15710:320:17"},{"body":{"nodeType":"YulBlock","src":"16142:114:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16164:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"16172:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16160:3:17"},"nodeType":"YulFunctionCall","src":"16160:14:17"},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e65","kind":"string","nodeType":"YulLiteral","src":"16176:34:17","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16153:6:17"},"nodeType":"YulFunctionCall","src":"16153:58:17"},"nodeType":"YulExpressionStatement","src":"16153:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16232:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"16240:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16228:3:17"},"nodeType":"YulFunctionCall","src":"16228:15:17"},{"hexValue":"72","kind":"string","nodeType":"YulLiteral","src":"16245:3:17","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16221:6:17"},"nodeType":"YulFunctionCall","src":"16221:28:17"},"nodeType":"YulExpressionStatement","src":"16221:28:17"}]},"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16134:6:17","type":""}],"src":"16036:220:17"},{"body":{"nodeType":"YulBlock","src":"16408:220:17","statements":[{"nodeType":"YulAssignment","src":"16418:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16484:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"16489:2:17","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16425:58:17"},"nodeType":"YulFunctionCall","src":"16425:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16418:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16590:3:17"}],"functionName":{"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulIdentifier","src":"16501:88:17"},"nodeType":"YulFunctionCall","src":"16501:93:17"},"nodeType":"YulExpressionStatement","src":"16501:93:17"},{"nodeType":"YulAssignment","src":"16603:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16614:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"16619:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16610:3:17"},"nodeType":"YulFunctionCall","src":"16610:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16603:3:17"}]}]},"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16396:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16404:3:17","type":""}],"src":"16262:366:17"},{"body":{"nodeType":"YulBlock","src":"16805:248:17","statements":[{"nodeType":"YulAssignment","src":"16815:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16827:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"16838:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16823:3:17"},"nodeType":"YulFunctionCall","src":"16823:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16815:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16862:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"16873:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16858:3:17"},"nodeType":"YulFunctionCall","src":"16858:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16881:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"16887:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16877:3:17"},"nodeType":"YulFunctionCall","src":"16877:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16851:6:17"},"nodeType":"YulFunctionCall","src":"16851:47:17"},"nodeType":"YulExpressionStatement","src":"16851:47:17"},{"nodeType":"YulAssignment","src":"16907:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17041:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16915:124:17"},"nodeType":"YulFunctionCall","src":"16915:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16907:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16785:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16800:4:17","type":""}],"src":"16634:419:17"},{"body":{"nodeType":"YulBlock","src":"17165:143:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17187:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"17195:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17183:3:17"},"nodeType":"YulFunctionCall","src":"17183:14:17"},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f","kind":"string","nodeType":"YulLiteral","src":"17199:34:17","type":"","value":"ERC721: approve caller is not to"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17176:6:17"},"nodeType":"YulFunctionCall","src":"17176:58:17"},"nodeType":"YulExpressionStatement","src":"17176:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17255:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"17263:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17251:3:17"},"nodeType":"YulFunctionCall","src":"17251:15:17"},{"hexValue":"6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c","kind":"string","nodeType":"YulLiteral","src":"17268:32:17","type":"","value":"ken owner nor approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17244:6:17"},"nodeType":"YulFunctionCall","src":"17244:57:17"},"nodeType":"YulExpressionStatement","src":"17244:57:17"}]},"name":"store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17157:6:17","type":""}],"src":"17059:249:17"},{"body":{"nodeType":"YulBlock","src":"17460:220:17","statements":[{"nodeType":"YulAssignment","src":"17470:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17536:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"17541:2:17","type":"","value":"62"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17477:58:17"},"nodeType":"YulFunctionCall","src":"17477:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17470:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17642:3:17"}],"functionName":{"name":"store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304","nodeType":"YulIdentifier","src":"17553:88:17"},"nodeType":"YulFunctionCall","src":"17553:93:17"},"nodeType":"YulExpressionStatement","src":"17553:93:17"},{"nodeType":"YulAssignment","src":"17655:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17666:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"17671:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17662:3:17"},"nodeType":"YulFunctionCall","src":"17662:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17655:3:17"}]}]},"name":"abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17448:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17456:3:17","type":""}],"src":"17314:366:17"},{"body":{"nodeType":"YulBlock","src":"17857:248:17","statements":[{"nodeType":"YulAssignment","src":"17867:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17879:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"17890:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17875:3:17"},"nodeType":"YulFunctionCall","src":"17875:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17867:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17914:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"17925:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17910:3:17"},"nodeType":"YulFunctionCall","src":"17910:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17933:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"17939:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17929:3:17"},"nodeType":"YulFunctionCall","src":"17929:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17903:6:17"},"nodeType":"YulFunctionCall","src":"17903:47:17"},"nodeType":"YulExpressionStatement","src":"17903:47:17"},{"nodeType":"YulAssignment","src":"17959:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18093:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17967:124:17"},"nodeType":"YulFunctionCall","src":"17967:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17959:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17837:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17852:4:17","type":""}],"src":"17686:419:17"},{"body":{"nodeType":"YulBlock","src":"18139:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18156:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18159:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18149:6:17"},"nodeType":"YulFunctionCall","src":"18149:88:17"},"nodeType":"YulExpressionStatement","src":"18149:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18253:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"18256:4:17","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18246:6:17"},"nodeType":"YulFunctionCall","src":"18246:15:17"},"nodeType":"YulExpressionStatement","src":"18246:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18277:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18280:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18270:6:17"},"nodeType":"YulFunctionCall","src":"18270:15:17"},"nodeType":"YulExpressionStatement","src":"18270:15:17"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"18111:180:17"},{"body":{"nodeType":"YulBlock","src":"18325:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18342:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18345:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18335:6:17"},"nodeType":"YulFunctionCall","src":"18335:88:17"},"nodeType":"YulExpressionStatement","src":"18335:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18439:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"18442:4:17","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18432:6:17"},"nodeType":"YulFunctionCall","src":"18432:15:17"},"nodeType":"YulExpressionStatement","src":"18432:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18463:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18466:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18456:6:17"},"nodeType":"YulFunctionCall","src":"18456:15:17"},"nodeType":"YulExpressionStatement","src":"18456:15:17"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"18297:180:17"},{"body":{"nodeType":"YulBlock","src":"18526:190:17","statements":[{"nodeType":"YulAssignment","src":"18536:33:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18563:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"18545:17:17"},"nodeType":"YulFunctionCall","src":"18545:24:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"18536:5:17"}]},{"body":{"nodeType":"YulBlock","src":"18659:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"18661:16:17"},"nodeType":"YulFunctionCall","src":"18661:18:17"},"nodeType":"YulExpressionStatement","src":"18661:18:17"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18584:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"18591:66:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"18581:2:17"},"nodeType":"YulFunctionCall","src":"18581:77:17"},"nodeType":"YulIf","src":"18578:103:17"},{"nodeType":"YulAssignment","src":"18690:20:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18701:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"18708:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18697:3:17"},"nodeType":"YulFunctionCall","src":"18697:13:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"18690:3:17"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18512:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"18522:3:17","type":""}],"src":"18483:233:17"},{"body":{"nodeType":"YulBlock","src":"18828:127:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18850:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"18858:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18846:3:17"},"nodeType":"YulFunctionCall","src":"18846:14:17"},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65","kind":"string","nodeType":"YulLiteral","src":"18862:34:17","type":"","value":"ERC721: caller is not token owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18839:6:17"},"nodeType":"YulFunctionCall","src":"18839:58:17"},"nodeType":"YulExpressionStatement","src":"18839:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18918:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"18926:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18914:3:17"},"nodeType":"YulFunctionCall","src":"18914:15:17"},{"hexValue":"72206e6f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"18931:16:17","type":"","value":"r nor approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18907:6:17"},"nodeType":"YulFunctionCall","src":"18907:41:17"},"nodeType":"YulExpressionStatement","src":"18907:41:17"}]},"name":"store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18820:6:17","type":""}],"src":"18722:233:17"},{"body":{"nodeType":"YulBlock","src":"19107:220:17","statements":[{"nodeType":"YulAssignment","src":"19117:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19183:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"19188:2:17","type":"","value":"46"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19124:58:17"},"nodeType":"YulFunctionCall","src":"19124:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19117:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19289:3:17"}],"functionName":{"name":"store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b","nodeType":"YulIdentifier","src":"19200:88:17"},"nodeType":"YulFunctionCall","src":"19200:93:17"},"nodeType":"YulExpressionStatement","src":"19200:93:17"},{"nodeType":"YulAssignment","src":"19302:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19313:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"19318:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19309:3:17"},"nodeType":"YulFunctionCall","src":"19309:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19302:3:17"}]}]},"name":"abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19095:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19103:3:17","type":""}],"src":"18961:366:17"},{"body":{"nodeType":"YulBlock","src":"19504:248:17","statements":[{"nodeType":"YulAssignment","src":"19514:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19526:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"19537:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19522:3:17"},"nodeType":"YulFunctionCall","src":"19522:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19514:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19561:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"19572:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19557:3:17"},"nodeType":"YulFunctionCall","src":"19557:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19580:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"19586:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19576:3:17"},"nodeType":"YulFunctionCall","src":"19576:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19550:6:17"},"nodeType":"YulFunctionCall","src":"19550:47:17"},"nodeType":"YulExpressionStatement","src":"19550:47:17"},{"nodeType":"YulAssignment","src":"19606:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19740:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19614:124:17"},"nodeType":"YulFunctionCall","src":"19614:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19606:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19484:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19499:4:17","type":""}],"src":"19333:419:17"},{"body":{"nodeType":"YulBlock","src":"19864:124:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19886:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"19894:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19882:3:17"},"nodeType":"YulFunctionCall","src":"19882:14:17"},{"hexValue":"455243373231456e756d657261626c653a206f776e657220696e646578206f75","kind":"string","nodeType":"YulLiteral","src":"19898:34:17","type":"","value":"ERC721Enumerable: owner index ou"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19875:6:17"},"nodeType":"YulFunctionCall","src":"19875:58:17"},"nodeType":"YulExpressionStatement","src":"19875:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19954:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"19962:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19950:3:17"},"nodeType":"YulFunctionCall","src":"19950:15:17"},{"hexValue":"74206f6620626f756e6473","kind":"string","nodeType":"YulLiteral","src":"19967:13:17","type":"","value":"t of bounds"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19943:6:17"},"nodeType":"YulFunctionCall","src":"19943:38:17"},"nodeType":"YulExpressionStatement","src":"19943:38:17"}]},"name":"store_literal_in_memory_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19856:6:17","type":""}],"src":"19758:230:17"},{"body":{"nodeType":"YulBlock","src":"20140:220:17","statements":[{"nodeType":"YulAssignment","src":"20150:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20216:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"20221:2:17","type":"","value":"43"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20157:58:17"},"nodeType":"YulFunctionCall","src":"20157:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20150:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20322:3:17"}],"functionName":{"name":"store_literal_in_memory_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c","nodeType":"YulIdentifier","src":"20233:88:17"},"nodeType":"YulFunctionCall","src":"20233:93:17"},"nodeType":"YulExpressionStatement","src":"20233:93:17"},{"nodeType":"YulAssignment","src":"20335:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20346:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"20351:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20342:3:17"},"nodeType":"YulFunctionCall","src":"20342:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20335:3:17"}]}]},"name":"abi_encode_t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20128:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20136:3:17","type":""}],"src":"19994:366:17"},{"body":{"nodeType":"YulBlock","src":"20537:248:17","statements":[{"nodeType":"YulAssignment","src":"20547:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20559:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"20570:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20555:3:17"},"nodeType":"YulFunctionCall","src":"20555:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20547:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20594:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"20605:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20590:3:17"},"nodeType":"YulFunctionCall","src":"20590:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20613:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"20619:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20609:3:17"},"nodeType":"YulFunctionCall","src":"20609:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20583:6:17"},"nodeType":"YulFunctionCall","src":"20583:47:17"},"nodeType":"YulExpressionStatement","src":"20583:47:17"},{"nodeType":"YulAssignment","src":"20639:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20773:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20647:124:17"},"nodeType":"YulFunctionCall","src":"20647:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20639:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20517:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20532:4:17","type":""}],"src":"20366:419:17"},{"body":{"nodeType":"YulBlock","src":"20897:125:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20919:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"20927:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20915:3:17"},"nodeType":"YulFunctionCall","src":"20915:14:17"},{"hexValue":"455243373231456e756d657261626c653a20676c6f62616c20696e646578206f","kind":"string","nodeType":"YulLiteral","src":"20931:34:17","type":"","value":"ERC721Enumerable: global index o"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20908:6:17"},"nodeType":"YulFunctionCall","src":"20908:58:17"},"nodeType":"YulExpressionStatement","src":"20908:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20987:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"20995:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20983:3:17"},"nodeType":"YulFunctionCall","src":"20983:15:17"},{"hexValue":"7574206f6620626f756e6473","kind":"string","nodeType":"YulLiteral","src":"21000:14:17","type":"","value":"ut of bounds"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20976:6:17"},"nodeType":"YulFunctionCall","src":"20976:39:17"},"nodeType":"YulExpressionStatement","src":"20976:39:17"}]},"name":"store_literal_in_memory_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20889:6:17","type":""}],"src":"20791:231:17"},{"body":{"nodeType":"YulBlock","src":"21174:220:17","statements":[{"nodeType":"YulAssignment","src":"21184:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21250:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"21255:2:17","type":"","value":"44"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21191:58:17"},"nodeType":"YulFunctionCall","src":"21191:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21184:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21356:3:17"}],"functionName":{"name":"store_literal_in_memory_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc","nodeType":"YulIdentifier","src":"21267:88:17"},"nodeType":"YulFunctionCall","src":"21267:93:17"},"nodeType":"YulExpressionStatement","src":"21267:93:17"},{"nodeType":"YulAssignment","src":"21369:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21380:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"21385:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21376:3:17"},"nodeType":"YulFunctionCall","src":"21376:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21369:3:17"}]}]},"name":"abi_encode_t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21162:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21170:3:17","type":""}],"src":"21028:366:17"},{"body":{"nodeType":"YulBlock","src":"21571:248:17","statements":[{"nodeType":"YulAssignment","src":"21581:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21593:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"21604:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21589:3:17"},"nodeType":"YulFunctionCall","src":"21589:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21581:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21628:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"21639:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21624:3:17"},"nodeType":"YulFunctionCall","src":"21624:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21647:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"21653:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21643:3:17"},"nodeType":"YulFunctionCall","src":"21643:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21617:6:17"},"nodeType":"YulFunctionCall","src":"21617:47:17"},"nodeType":"YulExpressionStatement","src":"21617:47:17"},{"nodeType":"YulAssignment","src":"21673:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21807:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21681:124:17"},"nodeType":"YulFunctionCall","src":"21681:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21673:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21551:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21566:4:17","type":""}],"src":"21400:419:17"},{"body":{"nodeType":"YulBlock","src":"21931:63:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21953:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"21961:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21949:3:17"},"nodeType":"YulFunctionCall","src":"21949:14:17"},{"hexValue":"4e4654206973206e6f7420666f722073616c65","kind":"string","nodeType":"YulLiteral","src":"21965:21:17","type":"","value":"NFT is not for sale"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21942:6:17"},"nodeType":"YulFunctionCall","src":"21942:45:17"},"nodeType":"YulExpressionStatement","src":"21942:45:17"}]},"name":"store_literal_in_memory_9a7dba745c3f0f725179d2251b074ed7a58cdde5cc676b2b7aa39aa411348738","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21923:6:17","type":""}],"src":"21825:169:17"},{"body":{"nodeType":"YulBlock","src":"22146:220:17","statements":[{"nodeType":"YulAssignment","src":"22156:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22222:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"22227:2:17","type":"","value":"19"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22163:58:17"},"nodeType":"YulFunctionCall","src":"22163:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22156:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22328:3:17"}],"functionName":{"name":"store_literal_in_memory_9a7dba745c3f0f725179d2251b074ed7a58cdde5cc676b2b7aa39aa411348738","nodeType":"YulIdentifier","src":"22239:88:17"},"nodeType":"YulFunctionCall","src":"22239:93:17"},"nodeType":"YulExpressionStatement","src":"22239:93:17"},{"nodeType":"YulAssignment","src":"22341:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22352:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"22357:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22348:3:17"},"nodeType":"YulFunctionCall","src":"22348:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22341:3:17"}]}]},"name":"abi_encode_t_stringliteral_9a7dba745c3f0f725179d2251b074ed7a58cdde5cc676b2b7aa39aa411348738_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22134:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22142:3:17","type":""}],"src":"22000:366:17"},{"body":{"nodeType":"YulBlock","src":"22543:248:17","statements":[{"nodeType":"YulAssignment","src":"22553:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22565:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"22576:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22561:3:17"},"nodeType":"YulFunctionCall","src":"22561:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22553:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22600:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"22611:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22596:3:17"},"nodeType":"YulFunctionCall","src":"22596:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22619:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"22625:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22615:3:17"},"nodeType":"YulFunctionCall","src":"22615:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22589:6:17"},"nodeType":"YulFunctionCall","src":"22589:47:17"},"nodeType":"YulExpressionStatement","src":"22589:47:17"},{"nodeType":"YulAssignment","src":"22645:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22779:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_9a7dba745c3f0f725179d2251b074ed7a58cdde5cc676b2b7aa39aa411348738_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22653:124:17"},"nodeType":"YulFunctionCall","src":"22653:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22645:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_9a7dba745c3f0f725179d2251b074ed7a58cdde5cc676b2b7aa39aa411348738__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22523:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22538:4:17","type":""}],"src":"22372:419:17"},{"body":{"nodeType":"YulBlock","src":"22903:68:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22925:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"22933:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22921:3:17"},"nodeType":"YulFunctionCall","src":"22921:14:17"},{"hexValue":"496e636f7272656374207061796d656e7420616d6f756e74","kind":"string","nodeType":"YulLiteral","src":"22937:26:17","type":"","value":"Incorrect payment amount"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22914:6:17"},"nodeType":"YulFunctionCall","src":"22914:50:17"},"nodeType":"YulExpressionStatement","src":"22914:50:17"}]},"name":"store_literal_in_memory_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22895:6:17","type":""}],"src":"22797:174:17"},{"body":{"nodeType":"YulBlock","src":"23123:220:17","statements":[{"nodeType":"YulAssignment","src":"23133:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23199:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"23204:2:17","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23140:58:17"},"nodeType":"YulFunctionCall","src":"23140:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23133:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23305:3:17"}],"functionName":{"name":"store_literal_in_memory_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d","nodeType":"YulIdentifier","src":"23216:88:17"},"nodeType":"YulFunctionCall","src":"23216:93:17"},"nodeType":"YulExpressionStatement","src":"23216:93:17"},{"nodeType":"YulAssignment","src":"23318:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23329:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"23334:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23325:3:17"},"nodeType":"YulFunctionCall","src":"23325:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23318:3:17"}]}]},"name":"abi_encode_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23111:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23119:3:17","type":""}],"src":"22977:366:17"},{"body":{"nodeType":"YulBlock","src":"23520:248:17","statements":[{"nodeType":"YulAssignment","src":"23530:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23542:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"23553:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23538:3:17"},"nodeType":"YulFunctionCall","src":"23538:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23530:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23577:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"23588:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23573:3:17"},"nodeType":"YulFunctionCall","src":"23573:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23596:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"23602:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23592:3:17"},"nodeType":"YulFunctionCall","src":"23592:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23566:6:17"},"nodeType":"YulFunctionCall","src":"23566:47:17"},"nodeType":"YulExpressionStatement","src":"23566:47:17"},{"nodeType":"YulAssignment","src":"23622:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23756:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23630:124:17"},"nodeType":"YulFunctionCall","src":"23630:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23622:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23500:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23515:4:17","type":""}],"src":"23349:419:17"},{"body":{"nodeType":"YulBlock","src":"23880:69:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23902:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"23910:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23898:3:17"},"nodeType":"YulFunctionCall","src":"23898:14:17"},{"hexValue":"53656c6c6572206164647265737320697320696e76616c6964","kind":"string","nodeType":"YulLiteral","src":"23914:27:17","type":"","value":"Seller address is invalid"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23891:6:17"},"nodeType":"YulFunctionCall","src":"23891:51:17"},"nodeType":"YulExpressionStatement","src":"23891:51:17"}]},"name":"store_literal_in_memory_834b432a4e87c587845860939bf8e755f9f318d7c4fb8e86316d9612e589ff75","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23872:6:17","type":""}],"src":"23774:175:17"},{"body":{"nodeType":"YulBlock","src":"24101:220:17","statements":[{"nodeType":"YulAssignment","src":"24111:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24177:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"24182:2:17","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24118:58:17"},"nodeType":"YulFunctionCall","src":"24118:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24111:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24283:3:17"}],"functionName":{"name":"store_literal_in_memory_834b432a4e87c587845860939bf8e755f9f318d7c4fb8e86316d9612e589ff75","nodeType":"YulIdentifier","src":"24194:88:17"},"nodeType":"YulFunctionCall","src":"24194:93:17"},"nodeType":"YulExpressionStatement","src":"24194:93:17"},{"nodeType":"YulAssignment","src":"24296:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24307:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"24312:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24303:3:17"},"nodeType":"YulFunctionCall","src":"24303:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24296:3:17"}]}]},"name":"abi_encode_t_stringliteral_834b432a4e87c587845860939bf8e755f9f318d7c4fb8e86316d9612e589ff75_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24089:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24097:3:17","type":""}],"src":"23955:366:17"},{"body":{"nodeType":"YulBlock","src":"24498:248:17","statements":[{"nodeType":"YulAssignment","src":"24508:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24520:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"24531:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24516:3:17"},"nodeType":"YulFunctionCall","src":"24516:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24508:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24555:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"24566:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24551:3:17"},"nodeType":"YulFunctionCall","src":"24551:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24574:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"24580:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24570:3:17"},"nodeType":"YulFunctionCall","src":"24570:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24544:6:17"},"nodeType":"YulFunctionCall","src":"24544:47:17"},"nodeType":"YulExpressionStatement","src":"24544:47:17"},{"nodeType":"YulAssignment","src":"24600:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24734:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_834b432a4e87c587845860939bf8e755f9f318d7c4fb8e86316d9612e589ff75_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24608:124:17"},"nodeType":"YulFunctionCall","src":"24608:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24600:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_834b432a4e87c587845860939bf8e755f9f318d7c4fb8e86316d9612e589ff75__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24478:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24493:4:17","type":""}],"src":"24327:419:17"},{"body":{"nodeType":"YulBlock","src":"24858:67:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24880:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"24888:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24876:3:17"},"nodeType":"YulFunctionCall","src":"24876:14:17"},{"hexValue":"43616e6e6f742062757920796f7572206f776e204e4654","kind":"string","nodeType":"YulLiteral","src":"24892:25:17","type":"","value":"Cannot buy your own NFT"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24869:6:17"},"nodeType":"YulFunctionCall","src":"24869:49:17"},"nodeType":"YulExpressionStatement","src":"24869:49:17"}]},"name":"store_literal_in_memory_ac3e45816bda8dc820919e382b7d1b646106c7d91795ad0d20f7673c058e493f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24850:6:17","type":""}],"src":"24752:173:17"},{"body":{"nodeType":"YulBlock","src":"25077:220:17","statements":[{"nodeType":"YulAssignment","src":"25087:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25153:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"25158:2:17","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25094:58:17"},"nodeType":"YulFunctionCall","src":"25094:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25087:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25259:3:17"}],"functionName":{"name":"store_literal_in_memory_ac3e45816bda8dc820919e382b7d1b646106c7d91795ad0d20f7673c058e493f","nodeType":"YulIdentifier","src":"25170:88:17"},"nodeType":"YulFunctionCall","src":"25170:93:17"},"nodeType":"YulExpressionStatement","src":"25170:93:17"},{"nodeType":"YulAssignment","src":"25272:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25283:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"25288:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25279:3:17"},"nodeType":"YulFunctionCall","src":"25279:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25272:3:17"}]}]},"name":"abi_encode_t_stringliteral_ac3e45816bda8dc820919e382b7d1b646106c7d91795ad0d20f7673c058e493f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25065:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25073:3:17","type":""}],"src":"24931:366:17"},{"body":{"nodeType":"YulBlock","src":"25474:248:17","statements":[{"nodeType":"YulAssignment","src":"25484:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25496:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"25507:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25492:3:17"},"nodeType":"YulFunctionCall","src":"25492:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25484:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25531:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"25542:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25527:3:17"},"nodeType":"YulFunctionCall","src":"25527:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25550:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"25556:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25546:3:17"},"nodeType":"YulFunctionCall","src":"25546:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25520:6:17"},"nodeType":"YulFunctionCall","src":"25520:47:17"},"nodeType":"YulExpressionStatement","src":"25520:47:17"},{"nodeType":"YulAssignment","src":"25576:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25710:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_ac3e45816bda8dc820919e382b7d1b646106c7d91795ad0d20f7673c058e493f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25584:124:17"},"nodeType":"YulFunctionCall","src":"25584:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25576:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_ac3e45816bda8dc820919e382b7d1b646106c7d91795ad0d20f7673c058e493f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25454:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25469:4:17","type":""}],"src":"25303:419:17"},{"body":{"nodeType":"YulBlock","src":"25834:65:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25856:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"25864:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25852:3:17"},"nodeType":"YulFunctionCall","src":"25852:14:17"},{"hexValue":"436f7572736520646f6573206e6f74206578697374","kind":"string","nodeType":"YulLiteral","src":"25868:23:17","type":"","value":"Course does not exist"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25845:6:17"},"nodeType":"YulFunctionCall","src":"25845:47:17"},"nodeType":"YulExpressionStatement","src":"25845:47:17"}]},"name":"store_literal_in_memory_ccfca96006449b50817dba143e911165630be54db84ae071755573159103f718","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"25826:6:17","type":""}],"src":"25728:171:17"},{"body":{"nodeType":"YulBlock","src":"26051:220:17","statements":[{"nodeType":"YulAssignment","src":"26061:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26127:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"26132:2:17","type":"","value":"21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26068:58:17"},"nodeType":"YulFunctionCall","src":"26068:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26061:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26233:3:17"}],"functionName":{"name":"store_literal_in_memory_ccfca96006449b50817dba143e911165630be54db84ae071755573159103f718","nodeType":"YulIdentifier","src":"26144:88:17"},"nodeType":"YulFunctionCall","src":"26144:93:17"},"nodeType":"YulExpressionStatement","src":"26144:93:17"},{"nodeType":"YulAssignment","src":"26246:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26257:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"26262:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26253:3:17"},"nodeType":"YulFunctionCall","src":"26253:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26246:3:17"}]}]},"name":"abi_encode_t_stringliteral_ccfca96006449b50817dba143e911165630be54db84ae071755573159103f718_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26039:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26047:3:17","type":""}],"src":"25905:366:17"},{"body":{"nodeType":"YulBlock","src":"26448:248:17","statements":[{"nodeType":"YulAssignment","src":"26458:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26470:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"26481:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26466:3:17"},"nodeType":"YulFunctionCall","src":"26466:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26458:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26505:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"26516:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26501:3:17"},"nodeType":"YulFunctionCall","src":"26501:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26524:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"26530:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26520:3:17"},"nodeType":"YulFunctionCall","src":"26520:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26494:6:17"},"nodeType":"YulFunctionCall","src":"26494:47:17"},"nodeType":"YulExpressionStatement","src":"26494:47:17"},{"nodeType":"YulAssignment","src":"26550:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26684:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_ccfca96006449b50817dba143e911165630be54db84ae071755573159103f718_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26558:124:17"},"nodeType":"YulFunctionCall","src":"26558:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26550:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_ccfca96006449b50817dba143e911165630be54db84ae071755573159103f718__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26428:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26443:4:17","type":""}],"src":"26277:419:17"},{"body":{"nodeType":"YulBlock","src":"26808:68:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26830:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"26838:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26826:3:17"},"nodeType":"YulFunctionCall","src":"26826:14:17"},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","kind":"string","nodeType":"YulLiteral","src":"26842:26:17","type":"","value":"ERC721: invalid token ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26819:6:17"},"nodeType":"YulFunctionCall","src":"26819:50:17"},"nodeType":"YulExpressionStatement","src":"26819:50:17"}]},"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"26800:6:17","type":""}],"src":"26702:174:17"},{"body":{"nodeType":"YulBlock","src":"27028:220:17","statements":[{"nodeType":"YulAssignment","src":"27038:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27104:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"27109:2:17","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27045:58:17"},"nodeType":"YulFunctionCall","src":"27045:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27038:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27210:3:17"}],"functionName":{"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulIdentifier","src":"27121:88:17"},"nodeType":"YulFunctionCall","src":"27121:93:17"},"nodeType":"YulExpressionStatement","src":"27121:93:17"},{"nodeType":"YulAssignment","src":"27223:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27234:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"27239:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27230:3:17"},"nodeType":"YulFunctionCall","src":"27230:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"27223:3:17"}]}]},"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"27016:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"27024:3:17","type":""}],"src":"26882:366:17"},{"body":{"nodeType":"YulBlock","src":"27425:248:17","statements":[{"nodeType":"YulAssignment","src":"27435:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27447:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"27458:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27443:3:17"},"nodeType":"YulFunctionCall","src":"27443:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27435:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27482:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"27493:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27478:3:17"},"nodeType":"YulFunctionCall","src":"27478:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27501:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"27507:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27497:3:17"},"nodeType":"YulFunctionCall","src":"27497:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27471:6:17"},"nodeType":"YulFunctionCall","src":"27471:47:17"},"nodeType":"YulExpressionStatement","src":"27471:47:17"},{"nodeType":"YulAssignment","src":"27527:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27661:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27535:124:17"},"nodeType":"YulFunctionCall","src":"27535:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27527:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27405:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27420:4:17","type":""}],"src":"27254:419:17"},{"body":{"nodeType":"YulBlock","src":"27785:122:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27807:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"27815:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27803:3:17"},"nodeType":"YulFunctionCall","src":"27803:14:17"},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f742061207661","kind":"string","nodeType":"YulLiteral","src":"27819:34:17","type":"","value":"ERC721: address zero is not a va"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27796:6:17"},"nodeType":"YulFunctionCall","src":"27796:58:17"},"nodeType":"YulExpressionStatement","src":"27796:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27875:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"27883:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27871:3:17"},"nodeType":"YulFunctionCall","src":"27871:15:17"},{"hexValue":"6c6964206f776e6572","kind":"string","nodeType":"YulLiteral","src":"27888:11:17","type":"","value":"lid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27864:6:17"},"nodeType":"YulFunctionCall","src":"27864:36:17"},"nodeType":"YulExpressionStatement","src":"27864:36:17"}]},"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"27777:6:17","type":""}],"src":"27679:228:17"},{"body":{"nodeType":"YulBlock","src":"28059:220:17","statements":[{"nodeType":"YulAssignment","src":"28069:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28135:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"28140:2:17","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28076:58:17"},"nodeType":"YulFunctionCall","src":"28076:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28069:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28241:3:17"}],"functionName":{"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulIdentifier","src":"28152:88:17"},"nodeType":"YulFunctionCall","src":"28152:93:17"},"nodeType":"YulExpressionStatement","src":"28152:93:17"},{"nodeType":"YulAssignment","src":"28254:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28265:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"28270:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28261:3:17"},"nodeType":"YulFunctionCall","src":"28261:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"28254:3:17"}]}]},"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28047:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"28055:3:17","type":""}],"src":"27913:366:17"},{"body":{"nodeType":"YulBlock","src":"28456:248:17","statements":[{"nodeType":"YulAssignment","src":"28466:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28478:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"28489:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28474:3:17"},"nodeType":"YulFunctionCall","src":"28474:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28466:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28513:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"28524:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28509:3:17"},"nodeType":"YulFunctionCall","src":"28509:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28532:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"28538:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28528:3:17"},"nodeType":"YulFunctionCall","src":"28528:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28502:6:17"},"nodeType":"YulFunctionCall","src":"28502:47:17"},"nodeType":"YulExpressionStatement","src":"28502:47:17"},{"nodeType":"YulAssignment","src":"28558:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28692:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28566:124:17"},"nodeType":"YulFunctionCall","src":"28566:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28558:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28436:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28451:4:17","type":""}],"src":"28285:419:17"},{"body":{"nodeType":"YulBlock","src":"28816:117:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28838:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"28846:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28834:3:17"},"nodeType":"YulFunctionCall","src":"28834:14:17"},{"hexValue":"4d617820737570706c79206d7573742062652067726561746572207468616e20","kind":"string","nodeType":"YulLiteral","src":"28850:34:17","type":"","value":"Max supply must be greater than "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28827:6:17"},"nodeType":"YulFunctionCall","src":"28827:58:17"},"nodeType":"YulExpressionStatement","src":"28827:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28906:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"28914:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28902:3:17"},"nodeType":"YulFunctionCall","src":"28902:15:17"},{"hexValue":"7a65726f","kind":"string","nodeType":"YulLiteral","src":"28919:6:17","type":"","value":"zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28895:6:17"},"nodeType":"YulFunctionCall","src":"28895:31:17"},"nodeType":"YulExpressionStatement","src":"28895:31:17"}]},"name":"store_literal_in_memory_ff2a6ad38fa379170c2ddbded7badfdd50fc7c2231d5868bae93e2c4ed779e10","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"28808:6:17","type":""}],"src":"28710:223:17"},{"body":{"nodeType":"YulBlock","src":"29085:220:17","statements":[{"nodeType":"YulAssignment","src":"29095:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29161:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"29166:2:17","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29102:58:17"},"nodeType":"YulFunctionCall","src":"29102:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29095:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29267:3:17"}],"functionName":{"name":"store_literal_in_memory_ff2a6ad38fa379170c2ddbded7badfdd50fc7c2231d5868bae93e2c4ed779e10","nodeType":"YulIdentifier","src":"29178:88:17"},"nodeType":"YulFunctionCall","src":"29178:93:17"},"nodeType":"YulExpressionStatement","src":"29178:93:17"},{"nodeType":"YulAssignment","src":"29280:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29291:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"29296:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29287:3:17"},"nodeType":"YulFunctionCall","src":"29287:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"29280:3:17"}]}]},"name":"abi_encode_t_stringliteral_ff2a6ad38fa379170c2ddbded7badfdd50fc7c2231d5868bae93e2c4ed779e10_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29073:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"29081:3:17","type":""}],"src":"28939:366:17"},{"body":{"nodeType":"YulBlock","src":"29482:248:17","statements":[{"nodeType":"YulAssignment","src":"29492:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29504:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"29515:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29500:3:17"},"nodeType":"YulFunctionCall","src":"29500:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29492:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29539:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"29550:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29535:3:17"},"nodeType":"YulFunctionCall","src":"29535:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29558:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"29564:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29554:3:17"},"nodeType":"YulFunctionCall","src":"29554:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29528:6:17"},"nodeType":"YulFunctionCall","src":"29528:47:17"},"nodeType":"YulExpressionStatement","src":"29528:47:17"},{"nodeType":"YulAssignment","src":"29584:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29718:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_ff2a6ad38fa379170c2ddbded7badfdd50fc7c2231d5868bae93e2c4ed779e10_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29592:124:17"},"nodeType":"YulFunctionCall","src":"29592:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29584:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_ff2a6ad38fa379170c2ddbded7badfdd50fc7c2231d5868bae93e2c4ed779e10__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29462:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29477:4:17","type":""}],"src":"29311:419:17"},{"body":{"nodeType":"YulBlock","src":"29842:75:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29864:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"29872:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29860:3:17"},"nodeType":"YulFunctionCall","src":"29860:14:17"},{"hexValue":"5072696365206d7573742062652067726561746572207468616e207a65726f","kind":"string","nodeType":"YulLiteral","src":"29876:33:17","type":"","value":"Price must be greater than zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29853:6:17"},"nodeType":"YulFunctionCall","src":"29853:57:17"},"nodeType":"YulExpressionStatement","src":"29853:57:17"}]},"name":"store_literal_in_memory_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"29834:6:17","type":""}],"src":"29736:181:17"},{"body":{"nodeType":"YulBlock","src":"30069:220:17","statements":[{"nodeType":"YulAssignment","src":"30079:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30145:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"30150:2:17","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30086:58:17"},"nodeType":"YulFunctionCall","src":"30086:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30079:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30251:3:17"}],"functionName":{"name":"store_literal_in_memory_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0","nodeType":"YulIdentifier","src":"30162:88:17"},"nodeType":"YulFunctionCall","src":"30162:93:17"},"nodeType":"YulExpressionStatement","src":"30162:93:17"},{"nodeType":"YulAssignment","src":"30264:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30275:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"30280:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30271:3:17"},"nodeType":"YulFunctionCall","src":"30271:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"30264:3:17"}]}]},"name":"abi_encode_t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30057:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"30065:3:17","type":""}],"src":"29923:366:17"},{"body":{"nodeType":"YulBlock","src":"30466:248:17","statements":[{"nodeType":"YulAssignment","src":"30476:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30488:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"30499:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30484:3:17"},"nodeType":"YulFunctionCall","src":"30484:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30476:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30523:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"30534:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30519:3:17"},"nodeType":"YulFunctionCall","src":"30519:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30542:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"30548:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30538:3:17"},"nodeType":"YulFunctionCall","src":"30538:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30512:6:17"},"nodeType":"YulFunctionCall","src":"30512:47:17"},"nodeType":"YulExpressionStatement","src":"30512:47:17"},{"nodeType":"YulAssignment","src":"30568:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30702:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30576:124:17"},"nodeType":"YulFunctionCall","src":"30576:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30568:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30446:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30461:4:17","type":""}],"src":"30295:419:17"},{"body":{"nodeType":"YulBlock","src":"30826:63:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"30848:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"30856:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30844:3:17"},"nodeType":"YulFunctionCall","src":"30844:14:17"},{"hexValue":"5552492063616e6e6f7420626520656d707479","kind":"string","nodeType":"YulLiteral","src":"30860:21:17","type":"","value":"URI cannot be empty"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30837:6:17"},"nodeType":"YulFunctionCall","src":"30837:45:17"},"nodeType":"YulExpressionStatement","src":"30837:45:17"}]},"name":"store_literal_in_memory_035d4514157dcf2506923e1232babe38012bd57de24345ac363305b5db6b8231","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"30818:6:17","type":""}],"src":"30720:169:17"},{"body":{"nodeType":"YulBlock","src":"31041:220:17","statements":[{"nodeType":"YulAssignment","src":"31051:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31117:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"31122:2:17","type":"","value":"19"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31058:58:17"},"nodeType":"YulFunctionCall","src":"31058:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"31051:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31223:3:17"}],"functionName":{"name":"store_literal_in_memory_035d4514157dcf2506923e1232babe38012bd57de24345ac363305b5db6b8231","nodeType":"YulIdentifier","src":"31134:88:17"},"nodeType":"YulFunctionCall","src":"31134:93:17"},"nodeType":"YulExpressionStatement","src":"31134:93:17"},{"nodeType":"YulAssignment","src":"31236:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31247:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"31252:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31243:3:17"},"nodeType":"YulFunctionCall","src":"31243:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"31236:3:17"}]}]},"name":"abi_encode_t_stringliteral_035d4514157dcf2506923e1232babe38012bd57de24345ac363305b5db6b8231_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"31029:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"31037:3:17","type":""}],"src":"30895:366:17"},{"body":{"nodeType":"YulBlock","src":"31438:248:17","statements":[{"nodeType":"YulAssignment","src":"31448:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31460:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"31471:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31456:3:17"},"nodeType":"YulFunctionCall","src":"31456:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31448:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31495:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"31506:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31491:3:17"},"nodeType":"YulFunctionCall","src":"31491:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31514:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"31520:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31510:3:17"},"nodeType":"YulFunctionCall","src":"31510:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31484:6:17"},"nodeType":"YulFunctionCall","src":"31484:47:17"},"nodeType":"YulExpressionStatement","src":"31484:47:17"},{"nodeType":"YulAssignment","src":"31540:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31674:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_035d4514157dcf2506923e1232babe38012bd57de24345ac363305b5db6b8231_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31548:124:17"},"nodeType":"YulFunctionCall","src":"31548:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31540:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_035d4514157dcf2506923e1232babe38012bd57de24345ac363305b5db6b8231__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31418:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31433:4:17","type":""}],"src":"31267:419:17"},{"body":{"nodeType":"YulBlock","src":"31746:87:17","statements":[{"nodeType":"YulAssignment","src":"31756:11:17","value":{"name":"ptr","nodeType":"YulIdentifier","src":"31764:3:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"31756:4:17"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31784:1:17","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"31787:3:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31777:6:17"},"nodeType":"YulFunctionCall","src":"31777:14:17"},"nodeType":"YulExpressionStatement","src":"31777:14:17"},{"nodeType":"YulAssignment","src":"31800:26:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31818:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"31821:4:17","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"31808:9:17"},"nodeType":"YulFunctionCall","src":"31808:18:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"31800:4:17"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"31733:3:17","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"31741:4:17","type":""}],"src":"31692:141:17"},{"body":{"nodeType":"YulBlock","src":"31883:49:17","statements":[{"nodeType":"YulAssignment","src":"31893:33:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31911:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"31918:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31907:3:17"},"nodeType":"YulFunctionCall","src":"31907:14:17"},{"kind":"number","nodeType":"YulLiteral","src":"31923:2:17","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"31903:3:17"},"nodeType":"YulFunctionCall","src":"31903:23:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"31893:6:17"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"31866:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"31876:6:17","type":""}],"src":"31839:93:17"},{"body":{"nodeType":"YulBlock","src":"31991:54:17","statements":[{"nodeType":"YulAssignment","src":"32001:37:17","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"32026:4:17"},{"name":"value","nodeType":"YulIdentifier","src":"32032:5:17"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"32022:3:17"},"nodeType":"YulFunctionCall","src":"32022:16:17"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"32001:8:17"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"31966:4:17","type":""},{"name":"value","nodeType":"YulTypedName","src":"31972:5:17","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"31982:8:17","type":""}],"src":"31938:107:17"},{"body":{"nodeType":"YulBlock","src":"32127:317:17","statements":[{"nodeType":"YulVariableDeclaration","src":"32137:35:17","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"32158:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"32170:1:17","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"32154:3:17"},"nodeType":"YulFunctionCall","src":"32154:18:17"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"32141:9:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"32181:109:17","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"32212:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"32223:66:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"32193:18:17"},"nodeType":"YulFunctionCall","src":"32193:97:17"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"32185:4:17","type":""}]},{"nodeType":"YulAssignment","src":"32299:51:17","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"32330:9:17"},{"name":"toInsert","nodeType":"YulIdentifier","src":"32341:8:17"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"32311:18:17"},"nodeType":"YulFunctionCall","src":"32311:39:17"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"32299:8:17"}]},{"nodeType":"YulAssignment","src":"32359:30:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32372:5:17"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"32383:4:17"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"32379:3:17"},"nodeType":"YulFunctionCall","src":"32379:9:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"32368:3:17"},"nodeType":"YulFunctionCall","src":"32368:21:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"32359:5:17"}]},{"nodeType":"YulAssignment","src":"32398:40:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32411:5:17"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"32422:8:17"},{"name":"mask","nodeType":"YulIdentifier","src":"32432:4:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"32418:3:17"},"nodeType":"YulFunctionCall","src":"32418:19:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"32408:2:17"},"nodeType":"YulFunctionCall","src":"32408:30:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"32398:6:17"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"32088:5:17","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"32095:10:17","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"32107:8:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"32120:6:17","type":""}],"src":"32051:393:17"},{"body":{"nodeType":"YulBlock","src":"32482:28:17","statements":[{"nodeType":"YulAssignment","src":"32492:12:17","value":{"name":"value","nodeType":"YulIdentifier","src":"32499:5:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"32492:3:17"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"32468:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"32478:3:17","type":""}],"src":"32450:60:17"},{"body":{"nodeType":"YulBlock","src":"32576:82:17","statements":[{"nodeType":"YulAssignment","src":"32586:66:17","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32644:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"32626:17:17"},"nodeType":"YulFunctionCall","src":"32626:24:17"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"32617:8:17"},"nodeType":"YulFunctionCall","src":"32617:34:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"32599:17:17"},"nodeType":"YulFunctionCall","src":"32599:53:17"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"32586:9:17"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"32556:5:17","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"32566:9:17","type":""}],"src":"32516:142:17"},{"body":{"nodeType":"YulBlock","src":"32711:28:17","statements":[{"nodeType":"YulAssignment","src":"32721:12:17","value":{"name":"value","nodeType":"YulIdentifier","src":"32728:5:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"32721:3:17"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"32697:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"32707:3:17","type":""}],"src":"32664:75:17"},{"body":{"nodeType":"YulBlock","src":"32821:193:17","statements":[{"nodeType":"YulVariableDeclaration","src":"32831:63:17","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"32886:7:17"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"32855:30:17"},"nodeType":"YulFunctionCall","src":"32855:39:17"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"32835:16:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"32910:4:17"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"32950:4:17"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"32944:5:17"},"nodeType":"YulFunctionCall","src":"32944:11:17"},{"name":"offset","nodeType":"YulIdentifier","src":"32957:6:17"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"32989:16:17"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"32965:23:17"},"nodeType":"YulFunctionCall","src":"32965:41:17"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"32916:27:17"},"nodeType":"YulFunctionCall","src":"32916:91:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"32903:6:17"},"nodeType":"YulFunctionCall","src":"32903:105:17"},"nodeType":"YulExpressionStatement","src":"32903:105:17"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"32798:4:17","type":""},{"name":"offset","nodeType":"YulTypedName","src":"32804:6:17","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"32812:7:17","type":""}],"src":"32745:269:17"},{"body":{"nodeType":"YulBlock","src":"33069:24:17","statements":[{"nodeType":"YulAssignment","src":"33079:8:17","value":{"kind":"number","nodeType":"YulLiteral","src":"33086:1:17","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"33079:3:17"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"33065:3:17","type":""}],"src":"33020:73:17"},{"body":{"nodeType":"YulBlock","src":"33152:136:17","statements":[{"nodeType":"YulVariableDeclaration","src":"33162:46:17","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"33176:30:17"},"nodeType":"YulFunctionCall","src":"33176:32:17"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"33166:6:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"33261:4:17"},{"name":"offset","nodeType":"YulIdentifier","src":"33267:6:17"},{"name":"zero_0","nodeType":"YulIdentifier","src":"33275:6:17"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"33217:43:17"},"nodeType":"YulFunctionCall","src":"33217:65:17"},"nodeType":"YulExpressionStatement","src":"33217:65:17"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"33138:4:17","type":""},{"name":"offset","nodeType":"YulTypedName","src":"33144:6:17","type":""}],"src":"33099:189:17"},{"body":{"nodeType":"YulBlock","src":"33344:136:17","statements":[{"body":{"nodeType":"YulBlock","src":"33411:63:17","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"33455:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"33462:1:17","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"33425:29:17"},"nodeType":"YulFunctionCall","src":"33425:39:17"},"nodeType":"YulExpressionStatement","src":"33425:39:17"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"33364:5:17"},{"name":"end","nodeType":"YulIdentifier","src":"33371:3:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"33361:2:17"},"nodeType":"YulFunctionCall","src":"33361:14:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"33376:26:17","statements":[{"nodeType":"YulAssignment","src":"33378:22:17","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"33391:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"33398:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33387:3:17"},"nodeType":"YulFunctionCall","src":"33387:13:17"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"33378:5:17"}]}]},"pre":{"nodeType":"YulBlock","src":"33358:2:17","statements":[]},"src":"33354:120:17"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"33332:5:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"33339:3:17","type":""}],"src":"33294:186:17"},{"body":{"nodeType":"YulBlock","src":"33565:464:17","statements":[{"body":{"nodeType":"YulBlock","src":"33591:431:17","statements":[{"nodeType":"YulVariableDeclaration","src":"33605:54:17","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"33653:5:17"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"33621:31:17"},"nodeType":"YulFunctionCall","src":"33621:38:17"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"33609:8:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"33672:63:17","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"33695:8:17"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"33723:10:17"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"33705:17:17"},"nodeType":"YulFunctionCall","src":"33705:29:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33691:3:17"},"nodeType":"YulFunctionCall","src":"33691:44:17"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"33676:11:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"33892:27:17","statements":[{"nodeType":"YulAssignment","src":"33894:23:17","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"33909:8:17"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"33894:11:17"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"33876:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"33888:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"33873:2:17"},"nodeType":"YulFunctionCall","src":"33873:18:17"},"nodeType":"YulIf","src":"33870:49:17"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"33961:11:17"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"33978:8:17"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"34006:3:17"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"33988:17:17"},"nodeType":"YulFunctionCall","src":"33988:22:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33974:3:17"},"nodeType":"YulFunctionCall","src":"33974:37:17"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"33932:28:17"},"nodeType":"YulFunctionCall","src":"33932:80:17"},"nodeType":"YulExpressionStatement","src":"33932:80:17"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"33582:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"33587:2:17","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"33579:2:17"},"nodeType":"YulFunctionCall","src":"33579:11:17"},"nodeType":"YulIf","src":"33576:446:17"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"33541:5:17","type":""},{"name":"len","nodeType":"YulTypedName","src":"33548:3:17","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"33553:10:17","type":""}],"src":"33486:543:17"},{"body":{"nodeType":"YulBlock","src":"34098:54:17","statements":[{"nodeType":"YulAssignment","src":"34108:37:17","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"34133:4:17"},{"name":"value","nodeType":"YulIdentifier","src":"34139:5:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"34129:3:17"},"nodeType":"YulFunctionCall","src":"34129:16:17"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"34108:8:17"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"34073:4:17","type":""},{"name":"value","nodeType":"YulTypedName","src":"34079:5:17","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"34089:8:17","type":""}],"src":"34035:117:17"},{"body":{"nodeType":"YulBlock","src":"34209:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"34219:68:17","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34268:1:17","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"34271:5:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"34264:3:17"},"nodeType":"YulFunctionCall","src":"34264:13:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34283:1:17","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"34279:3:17"},"nodeType":"YulFunctionCall","src":"34279:6:17"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"34235:28:17"},"nodeType":"YulFunctionCall","src":"34235:51:17"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"34231:3:17"},"nodeType":"YulFunctionCall","src":"34231:56:17"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"34223:4:17","type":""}]},{"nodeType":"YulAssignment","src":"34296:25:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"34310:4:17"},{"name":"mask","nodeType":"YulIdentifier","src":"34316:4:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"34306:3:17"},"nodeType":"YulFunctionCall","src":"34306:15:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"34296:6:17"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"34186:4:17","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"34192:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"34202:6:17","type":""}],"src":"34158:169:17"},{"body":{"nodeType":"YulBlock","src":"34413:214:17","statements":[{"nodeType":"YulAssignment","src":"34546:37:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"34573:4:17"},{"name":"len","nodeType":"YulIdentifier","src":"34579:3:17"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"34554:18:17"},"nodeType":"YulFunctionCall","src":"34554:29:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"34546:4:17"}]},{"nodeType":"YulAssignment","src":"34592:29:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"34603:4:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34613:1:17","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"34616:3:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"34609:3:17"},"nodeType":"YulFunctionCall","src":"34609:11:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"34600:2:17"},"nodeType":"YulFunctionCall","src":"34600:21:17"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"34592:4:17"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"34394:4:17","type":""},{"name":"len","nodeType":"YulTypedName","src":"34400:3:17","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"34408:4:17","type":""}],"src":"34332:295:17"},{"body":{"nodeType":"YulBlock","src":"34724:1303:17","statements":[{"nodeType":"YulVariableDeclaration","src":"34735:51:17","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"34782:3:17"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"34749:32:17"},"nodeType":"YulFunctionCall","src":"34749:37:17"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"34739:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"34871:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"34873:16:17"},"nodeType":"YulFunctionCall","src":"34873:18:17"},"nodeType":"YulExpressionStatement","src":"34873:18:17"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"34843:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"34851:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"34840:2:17"},"nodeType":"YulFunctionCall","src":"34840:30:17"},"nodeType":"YulIf","src":"34837:56:17"},{"nodeType":"YulVariableDeclaration","src":"34903:52:17","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"34949:4:17"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"34943:5:17"},"nodeType":"YulFunctionCall","src":"34943:11:17"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"34917:25:17"},"nodeType":"YulFunctionCall","src":"34917:38:17"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"34907:6:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"35048:4:17"},{"name":"oldLen","nodeType":"YulIdentifier","src":"35054:6:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"35062:6:17"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"35002:45:17"},"nodeType":"YulFunctionCall","src":"35002:67:17"},"nodeType":"YulExpressionStatement","src":"35002:67:17"},{"nodeType":"YulVariableDeclaration","src":"35079:18:17","value":{"kind":"number","nodeType":"YulLiteral","src":"35096:1:17","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"35083:9:17","type":""}]},{"nodeType":"YulAssignment","src":"35107:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"35120:4:17","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"35107:9:17"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"35171:611:17","statements":[{"nodeType":"YulVariableDeclaration","src":"35185:37:17","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"35204:6:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"35216:4:17","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"35212:3:17"},"nodeType":"YulFunctionCall","src":"35212:9:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"35200:3:17"},"nodeType":"YulFunctionCall","src":"35200:22:17"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"35189:7:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"35236:51:17","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"35282:4:17"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"35250:31:17"},"nodeType":"YulFunctionCall","src":"35250:37:17"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"35240:6:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"35300:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"35309:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"35304:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"35368:163:17","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"35393:6:17"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"35411:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"35416:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35407:3:17"},"nodeType":"YulFunctionCall","src":"35407:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"35401:5:17"},"nodeType":"YulFunctionCall","src":"35401:26:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"35386:6:17"},"nodeType":"YulFunctionCall","src":"35386:42:17"},"nodeType":"YulExpressionStatement","src":"35386:42:17"},{"nodeType":"YulAssignment","src":"35445:24:17","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"35459:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"35467:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35455:3:17"},"nodeType":"YulFunctionCall","src":"35455:14:17"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"35445:6:17"}]},{"nodeType":"YulAssignment","src":"35486:31:17","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"35503:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"35514:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35499:3:17"},"nodeType":"YulFunctionCall","src":"35499:18:17"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"35486:9:17"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"35334:1:17"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"35337:7:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"35331:2:17"},"nodeType":"YulFunctionCall","src":"35331:14:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"35346:21:17","statements":[{"nodeType":"YulAssignment","src":"35348:17:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"35357:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"35360:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35353:3:17"},"nodeType":"YulFunctionCall","src":"35353:12:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"35348:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"35327:3:17","statements":[]},"src":"35323:208:17"},{"body":{"nodeType":"YulBlock","src":"35567:156:17","statements":[{"nodeType":"YulVariableDeclaration","src":"35585:43:17","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"35612:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"35617:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35608:3:17"},"nodeType":"YulFunctionCall","src":"35608:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"35602:5:17"},"nodeType":"YulFunctionCall","src":"35602:26:17"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"35589:9:17","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"35652:6:17"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"35679:9:17"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"35694:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"35702:4:17","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"35690:3:17"},"nodeType":"YulFunctionCall","src":"35690:17:17"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"35660:18:17"},"nodeType":"YulFunctionCall","src":"35660:48:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"35645:6:17"},"nodeType":"YulFunctionCall","src":"35645:64:17"},"nodeType":"YulExpressionStatement","src":"35645:64:17"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"35550:7:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"35559:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"35547:2:17"},"nodeType":"YulFunctionCall","src":"35547:19:17"},"nodeType":"YulIf","src":"35544:179:17"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"35743:4:17"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"35757:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"35765:1:17","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"35753:3:17"},"nodeType":"YulFunctionCall","src":"35753:14:17"},{"kind":"number","nodeType":"YulLiteral","src":"35769:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35749:3:17"},"nodeType":"YulFunctionCall","src":"35749:22:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"35736:6:17"},"nodeType":"YulFunctionCall","src":"35736:36:17"},"nodeType":"YulExpressionStatement","src":"35736:36:17"}]},"nodeType":"YulCase","src":"35164:618:17","value":{"kind":"number","nodeType":"YulLiteral","src":"35169:1:17","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"35799:222:17","statements":[{"nodeType":"YulVariableDeclaration","src":"35813:14:17","value":{"kind":"number","nodeType":"YulLiteral","src":"35826:1:17","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"35817:5:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"35850:67:17","statements":[{"nodeType":"YulAssignment","src":"35868:35:17","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"35887:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"35892:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35883:3:17"},"nodeType":"YulFunctionCall","src":"35883:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"35877:5:17"},"nodeType":"YulFunctionCall","src":"35877:26:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"35868:5:17"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"35843:6:17"},"nodeType":"YulIf","src":"35840:77:17"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"35937:4:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35996:5:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"36003:6:17"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"35943:52:17"},"nodeType":"YulFunctionCall","src":"35943:67:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"35930:6:17"},"nodeType":"YulFunctionCall","src":"35930:81:17"},"nodeType":"YulExpressionStatement","src":"35930:81:17"}]},"nodeType":"YulCase","src":"35791:230:17","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"35144:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"35152:2:17","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"35141:2:17"},"nodeType":"YulFunctionCall","src":"35141:14:17"},"nodeType":"YulSwitch","src":"35134:887:17"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"34713:4:17","type":""},{"name":"src","nodeType":"YulTypedName","src":"34719:3:17","type":""}],"src":"34632:1395:17"},{"body":{"nodeType":"YulBlock","src":"36207:359:17","statements":[{"nodeType":"YulAssignment","src":"36217:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36229:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"36240:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36225:3:17"},"nodeType":"YulFunctionCall","src":"36225:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36217:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36264:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"36275:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36260:3:17"},"nodeType":"YulFunctionCall","src":"36260:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"36283:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"36289:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"36279:3:17"},"nodeType":"YulFunctionCall","src":"36279:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36253:6:17"},"nodeType":"YulFunctionCall","src":"36253:47:17"},"nodeType":"YulExpressionStatement","src":"36253:47:17"},{"nodeType":"YulAssignment","src":"36309:86:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"36381:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"36390:4:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"36317:63:17"},"nodeType":"YulFunctionCall","src":"36317:78:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36309:4:17"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"36449:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36462:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"36473:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36458:3:17"},"nodeType":"YulFunctionCall","src":"36458:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"36405:43:17"},"nodeType":"YulFunctionCall","src":"36405:72:17"},"nodeType":"YulExpressionStatement","src":"36405:72:17"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"36531:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36544:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"36555:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36540:3:17"},"nodeType":"YulFunctionCall","src":"36540:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"36487:43:17"},"nodeType":"YulFunctionCall","src":"36487:72:17"},"nodeType":"YulExpressionStatement","src":"36487:72:17"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_uint256_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36163:9:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"36175:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"36183:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"36191:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"36202:4:17","type":""}],"src":"36033:533:17"},{"body":{"nodeType":"YulBlock","src":"36678:114:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"36700:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"36708:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36696:3:17"},"nodeType":"YulFunctionCall","src":"36696:14:17"},{"hexValue":"596f7520617265206e6f7420746865206f776e6572206f662074686973204e46","kind":"string","nodeType":"YulLiteral","src":"36712:34:17","type":"","value":"You are not the owner of this NF"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36689:6:17"},"nodeType":"YulFunctionCall","src":"36689:58:17"},"nodeType":"YulExpressionStatement","src":"36689:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"36768:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"36776:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36764:3:17"},"nodeType":"YulFunctionCall","src":"36764:15:17"},{"hexValue":"54","kind":"string","nodeType":"YulLiteral","src":"36781:3:17","type":"","value":"T"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36757:6:17"},"nodeType":"YulFunctionCall","src":"36757:28:17"},"nodeType":"YulExpressionStatement","src":"36757:28:17"}]},"name":"store_literal_in_memory_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"36670:6:17","type":""}],"src":"36572:220:17"},{"body":{"nodeType":"YulBlock","src":"36944:220:17","statements":[{"nodeType":"YulAssignment","src":"36954:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37020:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"37025:2:17","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"36961:58:17"},"nodeType":"YulFunctionCall","src":"36961:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36954:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37126:3:17"}],"functionName":{"name":"store_literal_in_memory_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab","nodeType":"YulIdentifier","src":"37037:88:17"},"nodeType":"YulFunctionCall","src":"37037:93:17"},"nodeType":"YulExpressionStatement","src":"37037:93:17"},{"nodeType":"YulAssignment","src":"37139:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37150:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"37155:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37146:3:17"},"nodeType":"YulFunctionCall","src":"37146:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"37139:3:17"}]}]},"name":"abi_encode_t_stringliteral_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"36932:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"36940:3:17","type":""}],"src":"36798:366:17"},{"body":{"nodeType":"YulBlock","src":"37341:248:17","statements":[{"nodeType":"YulAssignment","src":"37351:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37363:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"37374:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37359:3:17"},"nodeType":"YulFunctionCall","src":"37359:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37351:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37398:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"37409:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37394:3:17"},"nodeType":"YulFunctionCall","src":"37394:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"37417:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"37423:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"37413:3:17"},"nodeType":"YulFunctionCall","src":"37413:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37387:6:17"},"nodeType":"YulFunctionCall","src":"37387:47:17"},"nodeType":"YulExpressionStatement","src":"37387:47:17"},{"nodeType":"YulAssignment","src":"37443:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"37577:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"37451:124:17"},"nodeType":"YulFunctionCall","src":"37451:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37443:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"37321:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"37336:4:17","type":""}],"src":"37170:419:17"},{"body":{"nodeType":"YulBlock","src":"37701:62:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"37723:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"37731:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37719:3:17"},"nodeType":"YulFunctionCall","src":"37719:14:17"},{"hexValue":"4d617820737570706c792072656163686564","kind":"string","nodeType":"YulLiteral","src":"37735:20:17","type":"","value":"Max supply reached"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37712:6:17"},"nodeType":"YulFunctionCall","src":"37712:44:17"},"nodeType":"YulExpressionStatement","src":"37712:44:17"}]},"name":"store_literal_in_memory_cf40cb9708e1320ee04bc59cb2f8b4ce47ba0c93638609957810c412abce51a7","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"37693:6:17","type":""}],"src":"37595:168:17"},{"body":{"nodeType":"YulBlock","src":"37915:220:17","statements":[{"nodeType":"YulAssignment","src":"37925:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37991:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"37996:2:17","type":"","value":"18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"37932:58:17"},"nodeType":"YulFunctionCall","src":"37932:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"37925:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38097:3:17"}],"functionName":{"name":"store_literal_in_memory_cf40cb9708e1320ee04bc59cb2f8b4ce47ba0c93638609957810c412abce51a7","nodeType":"YulIdentifier","src":"38008:88:17"},"nodeType":"YulFunctionCall","src":"38008:93:17"},"nodeType":"YulExpressionStatement","src":"38008:93:17"},{"nodeType":"YulAssignment","src":"38110:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38121:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"38126:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38117:3:17"},"nodeType":"YulFunctionCall","src":"38117:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"38110:3:17"}]}]},"name":"abi_encode_t_stringliteral_cf40cb9708e1320ee04bc59cb2f8b4ce47ba0c93638609957810c412abce51a7_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"37903:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"37911:3:17","type":""}],"src":"37769:366:17"},{"body":{"nodeType":"YulBlock","src":"38312:248:17","statements":[{"nodeType":"YulAssignment","src":"38322:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38334:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"38345:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38330:3:17"},"nodeType":"YulFunctionCall","src":"38330:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38322:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38369:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"38380:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38365:3:17"},"nodeType":"YulFunctionCall","src":"38365:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"38388:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"38394:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"38384:3:17"},"nodeType":"YulFunctionCall","src":"38384:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38358:6:17"},"nodeType":"YulFunctionCall","src":"38358:47:17"},"nodeType":"YulExpressionStatement","src":"38358:47:17"},{"nodeType":"YulAssignment","src":"38414:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"38548:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_cf40cb9708e1320ee04bc59cb2f8b4ce47ba0c93638609957810c412abce51a7_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"38422:124:17"},"nodeType":"YulFunctionCall","src":"38422:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38414:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_cf40cb9708e1320ee04bc59cb2f8b4ce47ba0c93638609957810c412abce51a7__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"38292:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"38307:4:17","type":""}],"src":"38141:419:17"},{"body":{"nodeType":"YulBlock","src":"38672:119:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"38694:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"38702:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38690:3:17"},"nodeType":"YulFunctionCall","src":"38690:14:17"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"38706:34:17","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38683:6:17"},"nodeType":"YulFunctionCall","src":"38683:58:17"},"nodeType":"YulExpressionStatement","src":"38683:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"38762:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"38770:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38758:3:17"},"nodeType":"YulFunctionCall","src":"38758:15:17"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"38775:8:17","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38751:6:17"},"nodeType":"YulFunctionCall","src":"38751:33:17"},"nodeType":"YulExpressionStatement","src":"38751:33:17"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"38664:6:17","type":""}],"src":"38566:225:17"},{"body":{"nodeType":"YulBlock","src":"38943:220:17","statements":[{"nodeType":"YulAssignment","src":"38953:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39019:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"39024:2:17","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"38960:58:17"},"nodeType":"YulFunctionCall","src":"38960:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"38953:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39125:3:17"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"39036:88:17"},"nodeType":"YulFunctionCall","src":"39036:93:17"},"nodeType":"YulExpressionStatement","src":"39036:93:17"},{"nodeType":"YulAssignment","src":"39138:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39149:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"39154:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39145:3:17"},"nodeType":"YulFunctionCall","src":"39145:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"39138:3:17"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"38931:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"38939:3:17","type":""}],"src":"38797:366:17"},{"body":{"nodeType":"YulBlock","src":"39340:248:17","statements":[{"nodeType":"YulAssignment","src":"39350:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39362:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"39373:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39358:3:17"},"nodeType":"YulFunctionCall","src":"39358:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39350:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39397:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"39408:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39393:3:17"},"nodeType":"YulFunctionCall","src":"39393:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"39416:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"39422:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"39412:3:17"},"nodeType":"YulFunctionCall","src":"39412:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39386:6:17"},"nodeType":"YulFunctionCall","src":"39386:47:17"},"nodeType":"YulExpressionStatement","src":"39386:47:17"},{"nodeType":"YulAssignment","src":"39442:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"39576:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"39450:124:17"},"nodeType":"YulFunctionCall","src":"39450:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39442:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"39320:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"39335:4:17","type":""}],"src":"39169:419:17"},{"body":{"nodeType":"YulBlock","src":"39700:118:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"39722:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"39730:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39718:3:17"},"nodeType":"YulFunctionCall","src":"39718:14:17"},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f727265637420","kind":"string","nodeType":"YulLiteral","src":"39734:34:17","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39711:6:17"},"nodeType":"YulFunctionCall","src":"39711:58:17"},"nodeType":"YulExpressionStatement","src":"39711:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"39790:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"39798:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39786:3:17"},"nodeType":"YulFunctionCall","src":"39786:15:17"},{"hexValue":"6f776e6572","kind":"string","nodeType":"YulLiteral","src":"39803:7:17","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39779:6:17"},"nodeType":"YulFunctionCall","src":"39779:32:17"},"nodeType":"YulExpressionStatement","src":"39779:32:17"}]},"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"39692:6:17","type":""}],"src":"39594:224:17"},{"body":{"nodeType":"YulBlock","src":"39970:220:17","statements":[{"nodeType":"YulAssignment","src":"39980:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40046:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"40051:2:17","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"39987:58:17"},"nodeType":"YulFunctionCall","src":"39987:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"39980:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40152:3:17"}],"functionName":{"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulIdentifier","src":"40063:88:17"},"nodeType":"YulFunctionCall","src":"40063:93:17"},"nodeType":"YulExpressionStatement","src":"40063:93:17"},{"nodeType":"YulAssignment","src":"40165:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40176:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"40181:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40172:3:17"},"nodeType":"YulFunctionCall","src":"40172:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"40165:3:17"}]}]},"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"39958:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"39966:3:17","type":""}],"src":"39824:366:17"},{"body":{"nodeType":"YulBlock","src":"40367:248:17","statements":[{"nodeType":"YulAssignment","src":"40377:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40389:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"40400:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40385:3:17"},"nodeType":"YulFunctionCall","src":"40385:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40377:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40424:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"40435:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40420:3:17"},"nodeType":"YulFunctionCall","src":"40420:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"40443:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"40449:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"40439:3:17"},"nodeType":"YulFunctionCall","src":"40439:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40413:6:17"},"nodeType":"YulFunctionCall","src":"40413:47:17"},"nodeType":"YulExpressionStatement","src":"40413:47:17"},{"nodeType":"YulAssignment","src":"40469:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"40603:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"40477:124:17"},"nodeType":"YulFunctionCall","src":"40477:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40469:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"40347:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"40362:4:17","type":""}],"src":"40196:419:17"},{"body":{"nodeType":"YulBlock","src":"40727:117:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"40749:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"40757:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40745:3:17"},"nodeType":"YulFunctionCall","src":"40745:14:17"},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"40761:34:17","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40738:6:17"},"nodeType":"YulFunctionCall","src":"40738:58:17"},"nodeType":"YulExpressionStatement","src":"40738:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"40817:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"40825:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40813:3:17"},"nodeType":"YulFunctionCall","src":"40813:15:17"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"40830:6:17","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40806:6:17"},"nodeType":"YulFunctionCall","src":"40806:31:17"},"nodeType":"YulExpressionStatement","src":"40806:31:17"}]},"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"40719:6:17","type":""}],"src":"40621:223:17"},{"body":{"nodeType":"YulBlock","src":"40996:220:17","statements":[{"nodeType":"YulAssignment","src":"41006:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41072:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"41077:2:17","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"41013:58:17"},"nodeType":"YulFunctionCall","src":"41013:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"41006:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41178:3:17"}],"functionName":{"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulIdentifier","src":"41089:88:17"},"nodeType":"YulFunctionCall","src":"41089:93:17"},"nodeType":"YulExpressionStatement","src":"41089:93:17"},{"nodeType":"YulAssignment","src":"41191:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41202:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"41207:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41198:3:17"},"nodeType":"YulFunctionCall","src":"41198:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"41191:3:17"}]}]},"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"40984:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"40992:3:17","type":""}],"src":"40850:366:17"},{"body":{"nodeType":"YulBlock","src":"41393:248:17","statements":[{"nodeType":"YulAssignment","src":"41403:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41415:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"41426:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41411:3:17"},"nodeType":"YulFunctionCall","src":"41411:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"41403:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41450:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"41461:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41446:3:17"},"nodeType":"YulFunctionCall","src":"41446:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"41469:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"41475:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"41465:3:17"},"nodeType":"YulFunctionCall","src":"41465:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41439:6:17"},"nodeType":"YulFunctionCall","src":"41439:47:17"},"nodeType":"YulExpressionStatement","src":"41439:47:17"},{"nodeType":"YulAssignment","src":"41495:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"41629:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"41503:124:17"},"nodeType":"YulFunctionCall","src":"41503:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"41495:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"41373:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"41388:4:17","type":""}],"src":"41222:419:17"},{"body":{"nodeType":"YulBlock","src":"41692:149:17","statements":[{"nodeType":"YulAssignment","src":"41702:25:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"41725:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"41707:17:17"},"nodeType":"YulFunctionCall","src":"41707:20:17"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"41702:1:17"}]},{"nodeType":"YulAssignment","src":"41736:25:17","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"41759:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"41741:17:17"},"nodeType":"YulFunctionCall","src":"41741:20:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"41736:1:17"}]},{"nodeType":"YulAssignment","src":"41770:17:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"41782:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"41785:1:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"41778:3:17"},"nodeType":"YulFunctionCall","src":"41778:9:17"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"41770:4:17"}]},{"body":{"nodeType":"YulBlock","src":"41812:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"41814:16:17"},"nodeType":"YulFunctionCall","src":"41814:18:17"},"nodeType":"YulExpressionStatement","src":"41814:18:17"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"41803:4:17"},{"name":"x","nodeType":"YulIdentifier","src":"41809:1:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"41800:2:17"},"nodeType":"YulFunctionCall","src":"41800:11:17"},"nodeType":"YulIf","src":"41797:37:17"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"41678:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"41681:1:17","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"41687:4:17","type":""}],"src":"41647:194:17"},{"body":{"nodeType":"YulBlock","src":"41891:147:17","statements":[{"nodeType":"YulAssignment","src":"41901:25:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"41924:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"41906:17:17"},"nodeType":"YulFunctionCall","src":"41906:20:17"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"41901:1:17"}]},{"nodeType":"YulAssignment","src":"41935:25:17","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"41958:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"41940:17:17"},"nodeType":"YulFunctionCall","src":"41940:20:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"41935:1:17"}]},{"nodeType":"YulAssignment","src":"41969:16:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"41980:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"41983:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41976:3:17"},"nodeType":"YulFunctionCall","src":"41976:9:17"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"41969:3:17"}]},{"body":{"nodeType":"YulBlock","src":"42009:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"42011:16:17"},"nodeType":"YulFunctionCall","src":"42011:18:17"},"nodeType":"YulExpressionStatement","src":"42011:18:17"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"42001:1:17"},{"name":"sum","nodeType":"YulIdentifier","src":"42004:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"41998:2:17"},"nodeType":"YulFunctionCall","src":"41998:10:17"},"nodeType":"YulIf","src":"41995:36:17"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"41878:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"41881:1:17","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"41887:3:17","type":""}],"src":"41847:191:17"},{"body":{"nodeType":"YulBlock","src":"42150:76:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"42172:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"42180:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42168:3:17"},"nodeType":"YulFunctionCall","src":"42168:14:17"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"42184:34:17","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42161:6:17"},"nodeType":"YulFunctionCall","src":"42161:58:17"},"nodeType":"YulExpressionStatement","src":"42161:58:17"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"42142:6:17","type":""}],"src":"42044:182:17"},{"body":{"nodeType":"YulBlock","src":"42378:220:17","statements":[{"nodeType":"YulAssignment","src":"42388:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42454:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"42459:2:17","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"42395:58:17"},"nodeType":"YulFunctionCall","src":"42395:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"42388:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42560:3:17"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"42471:88:17"},"nodeType":"YulFunctionCall","src":"42471:93:17"},"nodeType":"YulExpressionStatement","src":"42471:93:17"},{"nodeType":"YulAssignment","src":"42573:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42584:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"42589:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42580:3:17"},"nodeType":"YulFunctionCall","src":"42580:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"42573:3:17"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"42366:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"42374:3:17","type":""}],"src":"42232:366:17"},{"body":{"nodeType":"YulBlock","src":"42775:248:17","statements":[{"nodeType":"YulAssignment","src":"42785:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42797:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"42808:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42793:3:17"},"nodeType":"YulFunctionCall","src":"42793:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"42785:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42832:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"42843:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42828:3:17"},"nodeType":"YulFunctionCall","src":"42828:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"42851:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"42857:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"42847:3:17"},"nodeType":"YulFunctionCall","src":"42847:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42821:6:17"},"nodeType":"YulFunctionCall","src":"42821:47:17"},"nodeType":"YulExpressionStatement","src":"42821:47:17"},{"nodeType":"YulAssignment","src":"42877:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"43011:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"42885:124:17"},"nodeType":"YulFunctionCall","src":"42885:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"42877:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"42755:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"42770:4:17","type":""}],"src":"42604:419:17"},{"body":{"nodeType":"YulBlock","src":"43135:69:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"43157:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"43165:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43153:3:17"},"nodeType":"YulFunctionCall","src":"43153:14:17"},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"43169:27:17","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43146:6:17"},"nodeType":"YulFunctionCall","src":"43146:51:17"},"nodeType":"YulExpressionStatement","src":"43146:51:17"}]},"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"43127:6:17","type":""}],"src":"43029:175:17"},{"body":{"nodeType":"YulBlock","src":"43356:220:17","statements":[{"nodeType":"YulAssignment","src":"43366:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"43432:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"43437:2:17","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"43373:58:17"},"nodeType":"YulFunctionCall","src":"43373:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"43366:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"43538:3:17"}],"functionName":{"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulIdentifier","src":"43449:88:17"},"nodeType":"YulFunctionCall","src":"43449:93:17"},"nodeType":"YulExpressionStatement","src":"43449:93:17"},{"nodeType":"YulAssignment","src":"43551:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"43562:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"43567:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43558:3:17"},"nodeType":"YulFunctionCall","src":"43558:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"43551:3:17"}]}]},"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"43344:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"43352:3:17","type":""}],"src":"43210:366:17"},{"body":{"nodeType":"YulBlock","src":"43753:248:17","statements":[{"nodeType":"YulAssignment","src":"43763:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43775:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"43786:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43771:3:17"},"nodeType":"YulFunctionCall","src":"43771:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"43763:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43810:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"43821:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43806:3:17"},"nodeType":"YulFunctionCall","src":"43806:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"43829:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"43835:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"43825:3:17"},"nodeType":"YulFunctionCall","src":"43825:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43799:6:17"},"nodeType":"YulFunctionCall","src":"43799:47:17"},"nodeType":"YulExpressionStatement","src":"43799:47:17"},{"nodeType":"YulAssignment","src":"43855:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"43989:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"43863:124:17"},"nodeType":"YulFunctionCall","src":"43863:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"43855:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"43733:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"43748:4:17","type":""}],"src":"43582:419:17"},{"body":{"nodeType":"YulBlock","src":"44113:131:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"44135:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"44143:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44131:3:17"},"nodeType":"YulFunctionCall","src":"44131:14:17"},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e204552433732315265","kind":"string","nodeType":"YulLiteral","src":"44147:34:17","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44124:6:17"},"nodeType":"YulFunctionCall","src":"44124:58:17"},"nodeType":"YulExpressionStatement","src":"44124:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"44203:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"44211:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44199:3:17"},"nodeType":"YulFunctionCall","src":"44199:15:17"},{"hexValue":"63656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"44216:20:17","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44192:6:17"},"nodeType":"YulFunctionCall","src":"44192:45:17"},"nodeType":"YulExpressionStatement","src":"44192:45:17"}]},"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"44105:6:17","type":""}],"src":"44007:237:17"},{"body":{"nodeType":"YulBlock","src":"44396:220:17","statements":[{"nodeType":"YulAssignment","src":"44406:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"44472:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"44477:2:17","type":"","value":"50"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"44413:58:17"},"nodeType":"YulFunctionCall","src":"44413:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"44406:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"44578:3:17"}],"functionName":{"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulIdentifier","src":"44489:88:17"},"nodeType":"YulFunctionCall","src":"44489:93:17"},"nodeType":"YulExpressionStatement","src":"44489:93:17"},{"nodeType":"YulAssignment","src":"44591:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"44602:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"44607:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44598:3:17"},"nodeType":"YulFunctionCall","src":"44598:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"44591:3:17"}]}]},"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"44384:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"44392:3:17","type":""}],"src":"44250:366:17"},{"body":{"nodeType":"YulBlock","src":"44793:248:17","statements":[{"nodeType":"YulAssignment","src":"44803:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44815:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"44826:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44811:3:17"},"nodeType":"YulFunctionCall","src":"44811:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"44803:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44850:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"44861:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44846:3:17"},"nodeType":"YulFunctionCall","src":"44846:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"44869:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"44875:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"44865:3:17"},"nodeType":"YulFunctionCall","src":"44865:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44839:6:17"},"nodeType":"YulFunctionCall","src":"44839:47:17"},"nodeType":"YulExpressionStatement","src":"44839:47:17"},{"nodeType":"YulAssignment","src":"44895:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"45029:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"44903:124:17"},"nodeType":"YulFunctionCall","src":"44903:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"44895:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"44773:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"44788:4:17","type":""}],"src":"44622:419:17"},{"body":{"nodeType":"YulBlock","src":"45161:34:17","statements":[{"nodeType":"YulAssignment","src":"45171:18:17","value":{"name":"pos","nodeType":"YulIdentifier","src":"45186:3:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"45171:11:17"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"45133:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"45138:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"45149:11:17","type":""}],"src":"45047:148:17"},{"body":{"nodeType":"YulBlock","src":"45311:280:17","statements":[{"nodeType":"YulVariableDeclaration","src":"45321:53:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"45368:5:17"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"45335:32:17"},"nodeType":"YulFunctionCall","src":"45335:39:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"45325:6:17","type":""}]},{"nodeType":"YulAssignment","src":"45383:96:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"45467:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"45472:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"45390:76:17"},"nodeType":"YulFunctionCall","src":"45390:89:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"45383:3:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"45527:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"45534:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45523:3:17"},"nodeType":"YulFunctionCall","src":"45523:16:17"},{"name":"pos","nodeType":"YulIdentifier","src":"45541:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"45546:6:17"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"45488:34:17"},"nodeType":"YulFunctionCall","src":"45488:65:17"},"nodeType":"YulExpressionStatement","src":"45488:65:17"},{"nodeType":"YulAssignment","src":"45562:23:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"45573:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"45578:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45569:3:17"},"nodeType":"YulFunctionCall","src":"45569:16:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"45562:3:17"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"45292:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"45299:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"45307:3:17","type":""}],"src":"45201:390:17"},{"body":{"nodeType":"YulBlock","src":"45781:251:17","statements":[{"nodeType":"YulAssignment","src":"45792:102:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"45881:6:17"},{"name":"pos","nodeType":"YulIdentifier","src":"45890:3:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"45799:81:17"},"nodeType":"YulFunctionCall","src":"45799:95:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"45792:3:17"}]},{"nodeType":"YulAssignment","src":"45904:102:17","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"45993:6:17"},{"name":"pos","nodeType":"YulIdentifier","src":"46002:3:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"45911:81:17"},"nodeType":"YulFunctionCall","src":"45911:95:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"45904:3:17"}]},{"nodeType":"YulAssignment","src":"46016:10:17","value":{"name":"pos","nodeType":"YulIdentifier","src":"46023:3:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"46016:3:17"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"45752:3:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"45758:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"45766:6:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"45777:3:17","type":""}],"src":"45597:435:17"},{"body":{"nodeType":"YulBlock","src":"46144:127:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"46166:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"46174:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46162:3:17"},"nodeType":"YulFunctionCall","src":"46162:14:17"},{"hexValue":"45524337323155524953746f726167653a2055524920736574206f66206e6f6e","kind":"string","nodeType":"YulLiteral","src":"46178:34:17","type":"","value":"ERC721URIStorage: URI set of non"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46155:6:17"},"nodeType":"YulFunctionCall","src":"46155:58:17"},"nodeType":"YulExpressionStatement","src":"46155:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"46234:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"46242:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46230:3:17"},"nodeType":"YulFunctionCall","src":"46230:15:17"},{"hexValue":"6578697374656e7420746f6b656e","kind":"string","nodeType":"YulLiteral","src":"46247:16:17","type":"","value":"existent token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46223:6:17"},"nodeType":"YulFunctionCall","src":"46223:41:17"},"nodeType":"YulExpressionStatement","src":"46223:41:17"}]},"name":"store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"46136:6:17","type":""}],"src":"46038:233:17"},{"body":{"nodeType":"YulBlock","src":"46423:220:17","statements":[{"nodeType":"YulAssignment","src":"46433:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46499:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"46504:2:17","type":"","value":"46"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"46440:58:17"},"nodeType":"YulFunctionCall","src":"46440:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"46433:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46605:3:17"}],"functionName":{"name":"store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","nodeType":"YulIdentifier","src":"46516:88:17"},"nodeType":"YulFunctionCall","src":"46516:93:17"},"nodeType":"YulExpressionStatement","src":"46516:93:17"},{"nodeType":"YulAssignment","src":"46618:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46629:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"46634:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46625:3:17"},"nodeType":"YulFunctionCall","src":"46625:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"46618:3:17"}]}]},"name":"abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"46411:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"46419:3:17","type":""}],"src":"46277:366:17"},{"body":{"nodeType":"YulBlock","src":"46820:248:17","statements":[{"nodeType":"YulAssignment","src":"46830:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46842:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"46853:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46838:3:17"},"nodeType":"YulFunctionCall","src":"46838:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"46830:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46877:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"46888:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46873:3:17"},"nodeType":"YulFunctionCall","src":"46873:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"46896:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"46902:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"46892:3:17"},"nodeType":"YulFunctionCall","src":"46892:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46866:6:17"},"nodeType":"YulFunctionCall","src":"46866:47:17"},"nodeType":"YulExpressionStatement","src":"46866:47:17"},{"nodeType":"YulAssignment","src":"46922:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"47056:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"46930:124:17"},"nodeType":"YulFunctionCall","src":"46930:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"46922:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"46800:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"46815:4:17","type":""}],"src":"46649:419:17"},{"body":{"nodeType":"YulBlock","src":"47132:40:17","statements":[{"nodeType":"YulAssignment","src":"47143:22:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"47159:5:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"47153:5:17"},"nodeType":"YulFunctionCall","src":"47153:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"47143:6:17"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"47115:5:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"47125:6:17","type":""}],"src":"47074:98:17"},{"body":{"nodeType":"YulBlock","src":"47273:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"47290:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"47295:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47283:6:17"},"nodeType":"YulFunctionCall","src":"47283:19:17"},"nodeType":"YulExpressionStatement","src":"47283:19:17"},{"nodeType":"YulAssignment","src":"47311:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"47330:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"47335:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47326:3:17"},"nodeType":"YulFunctionCall","src":"47326:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"47311:11:17"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"47245:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"47250:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"47261:11:17","type":""}],"src":"47178:168:17"},{"body":{"nodeType":"YulBlock","src":"47442:283:17","statements":[{"nodeType":"YulVariableDeclaration","src":"47452:52:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"47498:5:17"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"47466:31:17"},"nodeType":"YulFunctionCall","src":"47466:38:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"47456:6:17","type":""}]},{"nodeType":"YulAssignment","src":"47513:77:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"47578:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"47583:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"47520:57:17"},"nodeType":"YulFunctionCall","src":"47520:70:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"47513:3:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"47638:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"47645:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47634:3:17"},"nodeType":"YulFunctionCall","src":"47634:16:17"},{"name":"pos","nodeType":"YulIdentifier","src":"47652:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"47657:6:17"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"47599:34:17"},"nodeType":"YulFunctionCall","src":"47599:65:17"},"nodeType":"YulExpressionStatement","src":"47599:65:17"},{"nodeType":"YulAssignment","src":"47673:46:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"47684:3:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"47711:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"47689:21:17"},"nodeType":"YulFunctionCall","src":"47689:29:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47680:3:17"},"nodeType":"YulFunctionCall","src":"47680:39:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"47673:3:17"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"47423:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"47430:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"47438:3:17","type":""}],"src":"47352:373:17"},{"body":{"nodeType":"YulBlock","src":"47931:440:17","statements":[{"nodeType":"YulAssignment","src":"47941:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47953:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"47964:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47949:3:17"},"nodeType":"YulFunctionCall","src":"47949:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"47941:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"48022:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48035:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"48046:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48031:3:17"},"nodeType":"YulFunctionCall","src":"48031:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"47978:43:17"},"nodeType":"YulFunctionCall","src":"47978:71:17"},"nodeType":"YulExpressionStatement","src":"47978:71:17"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"48103:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48116:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"48127:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48112:3:17"},"nodeType":"YulFunctionCall","src":"48112:18:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"48059:43:17"},"nodeType":"YulFunctionCall","src":"48059:72:17"},"nodeType":"YulExpressionStatement","src":"48059:72:17"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"48185:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48198:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"48209:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48194:3:17"},"nodeType":"YulFunctionCall","src":"48194:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"48141:43:17"},"nodeType":"YulFunctionCall","src":"48141:72:17"},"nodeType":"YulExpressionStatement","src":"48141:72:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48234:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"48245:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48230:3:17"},"nodeType":"YulFunctionCall","src":"48230:18:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"48254:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"48260:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"48250:3:17"},"nodeType":"YulFunctionCall","src":"48250:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48223:6:17"},"nodeType":"YulFunctionCall","src":"48223:48:17"},"nodeType":"YulExpressionStatement","src":"48223:48:17"},{"nodeType":"YulAssignment","src":"48280:84:17","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"48350:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"48359:4:17"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"48288:61:17"},"nodeType":"YulFunctionCall","src":"48288:76:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"48280:4:17"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"47879:9:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"47891:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"47899:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"47907:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"47915:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"47926:4:17","type":""}],"src":"47731:640:17"},{"body":{"nodeType":"YulBlock","src":"48439:79:17","statements":[{"nodeType":"YulAssignment","src":"48449:22:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"48464:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"48458:5:17"},"nodeType":"YulFunctionCall","src":"48458:13:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"48449:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"48506:5:17"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"48480:25:17"},"nodeType":"YulFunctionCall","src":"48480:32:17"},"nodeType":"YulExpressionStatement","src":"48480:32:17"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"48417:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"48425:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"48433:5:17","type":""}],"src":"48377:141:17"},{"body":{"nodeType":"YulBlock","src":"48600:273:17","statements":[{"body":{"nodeType":"YulBlock","src":"48646:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"48648:77:17"},"nodeType":"YulFunctionCall","src":"48648:79:17"},"nodeType":"YulExpressionStatement","src":"48648:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"48621:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"48630:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"48617:3:17"},"nodeType":"YulFunctionCall","src":"48617:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"48642:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"48613:3:17"},"nodeType":"YulFunctionCall","src":"48613:32:17"},"nodeType":"YulIf","src":"48610:119:17"},{"nodeType":"YulBlock","src":"48739:127:17","statements":[{"nodeType":"YulVariableDeclaration","src":"48754:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"48768:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"48758:6:17","type":""}]},{"nodeType":"YulAssignment","src":"48783:73:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48828:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"48839:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48824:3:17"},"nodeType":"YulFunctionCall","src":"48824:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"48848:7:17"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"48793:30:17"},"nodeType":"YulFunctionCall","src":"48793:63:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"48783:6:17"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"48570:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"48581:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"48593:6:17","type":""}],"src":"48524:349:17"},{"body":{"nodeType":"YulBlock","src":"48907:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"48924:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"48927:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48917:6:17"},"nodeType":"YulFunctionCall","src":"48917:88:17"},"nodeType":"YulExpressionStatement","src":"48917:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"49021:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"49024:4:17","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49014:6:17"},"nodeType":"YulFunctionCall","src":"49014:15:17"},"nodeType":"YulExpressionStatement","src":"49014:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"49045:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"49048:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"49038:6:17"},"nodeType":"YulFunctionCall","src":"49038:15:17"},"nodeType":"YulExpressionStatement","src":"49038:15:17"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"48879:180:17"},{"body":{"nodeType":"YulBlock","src":"49107:143:17","statements":[{"nodeType":"YulAssignment","src":"49117:25:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"49140:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"49122:17:17"},"nodeType":"YulFunctionCall","src":"49122:20:17"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"49117:1:17"}]},{"nodeType":"YulAssignment","src":"49151:25:17","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"49174:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"49156:17:17"},"nodeType":"YulFunctionCall","src":"49156:20:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"49151:1:17"}]},{"body":{"nodeType":"YulBlock","src":"49198:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"49200:16:17"},"nodeType":"YulFunctionCall","src":"49200:18:17"},"nodeType":"YulExpressionStatement","src":"49200:18:17"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"49195:1:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"49188:6:17"},"nodeType":"YulFunctionCall","src":"49188:9:17"},"nodeType":"YulIf","src":"49185:35:17"},{"nodeType":"YulAssignment","src":"49230:14:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"49239:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"49242:1:17"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"49235:3:17"},"nodeType":"YulFunctionCall","src":"49235:9:17"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"49230:1:17"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"49096:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"49099:1:17","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"49105:1:17","type":""}],"src":"49065:185:17"},{"body":{"nodeType":"YulBlock","src":"49290:142:17","statements":[{"nodeType":"YulAssignment","src":"49300:25:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"49323:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"49305:17:17"},"nodeType":"YulFunctionCall","src":"49305:20:17"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"49300:1:17"}]},{"nodeType":"YulAssignment","src":"49334:25:17","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"49357:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"49339:17:17"},"nodeType":"YulFunctionCall","src":"49339:20:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"49334:1:17"}]},{"body":{"nodeType":"YulBlock","src":"49381:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"49383:16:17"},"nodeType":"YulFunctionCall","src":"49383:18:17"},"nodeType":"YulExpressionStatement","src":"49383:18:17"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"49378:1:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"49371:6:17"},"nodeType":"YulFunctionCall","src":"49371:9:17"},"nodeType":"YulIf","src":"49368:35:17"},{"nodeType":"YulAssignment","src":"49412:14:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"49421:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"49424:1:17"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"49417:3:17"},"nodeType":"YulFunctionCall","src":"49417:9:17"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"49412:1:17"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"49279:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"49282:1:17","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"49288:1:17","type":""}],"src":"49256:176:17"},{"body":{"nodeType":"YulBlock","src":"49544:76:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"49566:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"49574:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49562:3:17"},"nodeType":"YulFunctionCall","src":"49562:14:17"},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"49578:34:17","type":"","value":"ERC721: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49555:6:17"},"nodeType":"YulFunctionCall","src":"49555:58:17"},"nodeType":"YulExpressionStatement","src":"49555:58:17"}]},"name":"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"49536:6:17","type":""}],"src":"49438:182:17"},{"body":{"nodeType":"YulBlock","src":"49772:220:17","statements":[{"nodeType":"YulAssignment","src":"49782:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"49848:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"49853:2:17","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"49789:58:17"},"nodeType":"YulFunctionCall","src":"49789:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"49782:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"49954:3:17"}],"functionName":{"name":"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","nodeType":"YulIdentifier","src":"49865:88:17"},"nodeType":"YulFunctionCall","src":"49865:93:17"},"nodeType":"YulExpressionStatement","src":"49865:93:17"},{"nodeType":"YulAssignment","src":"49967:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"49978:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"49983:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49974:3:17"},"nodeType":"YulFunctionCall","src":"49974:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"49967:3:17"}]}]},"name":"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"49760:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"49768:3:17","type":""}],"src":"49626:366:17"},{"body":{"nodeType":"YulBlock","src":"50169:248:17","statements":[{"nodeType":"YulAssignment","src":"50179:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50191:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"50202:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50187:3:17"},"nodeType":"YulFunctionCall","src":"50187:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"50179:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50226:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"50237:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50222:3:17"},"nodeType":"YulFunctionCall","src":"50222:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"50245:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"50251:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"50241:3:17"},"nodeType":"YulFunctionCall","src":"50241:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"50215:6:17"},"nodeType":"YulFunctionCall","src":"50215:47:17"},"nodeType":"YulExpressionStatement","src":"50215:47:17"},{"nodeType":"YulAssignment","src":"50271:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"50405:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"50279:124:17"},"nodeType":"YulFunctionCall","src":"50279:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"50271:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"50149:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"50164:4:17","type":""}],"src":"49998:419:17"},{"body":{"nodeType":"YulBlock","src":"50529:72:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"50551:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"50559:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50547:3:17"},"nodeType":"YulFunctionCall","src":"50547:14:17"},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","kind":"string","nodeType":"YulLiteral","src":"50563:30:17","type":"","value":"ERC721: token already minted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"50540:6:17"},"nodeType":"YulFunctionCall","src":"50540:54:17"},"nodeType":"YulExpressionStatement","src":"50540:54:17"}]},"name":"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"50521:6:17","type":""}],"src":"50423:178:17"},{"body":{"nodeType":"YulBlock","src":"50753:220:17","statements":[{"nodeType":"YulAssignment","src":"50763:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"50829:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"50834:2:17","type":"","value":"28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"50770:58:17"},"nodeType":"YulFunctionCall","src":"50770:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"50763:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"50935:3:17"}],"functionName":{"name":"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","nodeType":"YulIdentifier","src":"50846:88:17"},"nodeType":"YulFunctionCall","src":"50846:93:17"},"nodeType":"YulExpressionStatement","src":"50846:93:17"},{"nodeType":"YulAssignment","src":"50948:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"50959:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"50964:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50955:3:17"},"nodeType":"YulFunctionCall","src":"50955:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"50948:3:17"}]}]},"name":"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"50741:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"50749:3:17","type":""}],"src":"50607:366:17"},{"body":{"nodeType":"YulBlock","src":"51150:248:17","statements":[{"nodeType":"YulAssignment","src":"51160:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"51172:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"51183:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51168:3:17"},"nodeType":"YulFunctionCall","src":"51168:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"51160:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"51207:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"51218:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51203:3:17"},"nodeType":"YulFunctionCall","src":"51203:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"51226:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"51232:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"51222:3:17"},"nodeType":"YulFunctionCall","src":"51222:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"51196:6:17"},"nodeType":"YulFunctionCall","src":"51196:47:17"},"nodeType":"YulExpressionStatement","src":"51196:47:17"},{"nodeType":"YulAssignment","src":"51252:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"51386:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"51260:124:17"},"nodeType":"YulFunctionCall","src":"51260:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"51252:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"51130:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"51145:4:17","type":""}],"src":"50979:419:17"},{"body":{"nodeType":"YulBlock","src":"51432:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"51449:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"51452:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"51442:6:17"},"nodeType":"YulFunctionCall","src":"51442:88:17"},"nodeType":"YulExpressionStatement","src":"51442:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"51546:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"51549:4:17","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"51539:6:17"},"nodeType":"YulFunctionCall","src":"51539:15:17"},"nodeType":"YulExpressionStatement","src":"51539:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"51570:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"51573:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"51563:6:17"},"nodeType":"YulFunctionCall","src":"51563:15:17"},"nodeType":"YulExpressionStatement","src":"51563:15:17"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"51404:180:17"}]},"contents":"{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not to\")\n\n        mstore(add(memPtr, 32), \"ken owner nor approved for all\")\n\n    }\n\n    function abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 62)\n        store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: caller is not token owne\")\n\n        mstore(add(memPtr, 32), \"r nor approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721Enumerable: owner index ou\")\n\n        mstore(add(memPtr, 32), \"t of bounds\")\n\n    }\n\n    function abi_encode_t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721Enumerable: global index o\")\n\n        mstore(add(memPtr, 32), \"ut of bounds\")\n\n    }\n\n    function abi_encode_t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9a7dba745c3f0f725179d2251b074ed7a58cdde5cc676b2b7aa39aa411348738(memPtr) {\n\n        mstore(add(memPtr, 0), \"NFT is not for sale\")\n\n    }\n\n    function abi_encode_t_stringliteral_9a7dba745c3f0f725179d2251b074ed7a58cdde5cc676b2b7aa39aa411348738_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_9a7dba745c3f0f725179d2251b074ed7a58cdde5cc676b2b7aa39aa411348738(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9a7dba745c3f0f725179d2251b074ed7a58cdde5cc676b2b7aa39aa411348738__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9a7dba745c3f0f725179d2251b074ed7a58cdde5cc676b2b7aa39aa411348738_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Incorrect payment amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_834b432a4e87c587845860939bf8e755f9f318d7c4fb8e86316d9612e589ff75(memPtr) {\n\n        mstore(add(memPtr, 0), \"Seller address is invalid\")\n\n    }\n\n    function abi_encode_t_stringliteral_834b432a4e87c587845860939bf8e755f9f318d7c4fb8e86316d9612e589ff75_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_834b432a4e87c587845860939bf8e755f9f318d7c4fb8e86316d9612e589ff75(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_834b432a4e87c587845860939bf8e755f9f318d7c4fb8e86316d9612e589ff75__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_834b432a4e87c587845860939bf8e755f9f318d7c4fb8e86316d9612e589ff75_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ac3e45816bda8dc820919e382b7d1b646106c7d91795ad0d20f7673c058e493f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot buy your own NFT\")\n\n    }\n\n    function abi_encode_t_stringliteral_ac3e45816bda8dc820919e382b7d1b646106c7d91795ad0d20f7673c058e493f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_ac3e45816bda8dc820919e382b7d1b646106c7d91795ad0d20f7673c058e493f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ac3e45816bda8dc820919e382b7d1b646106c7d91795ad0d20f7673c058e493f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ac3e45816bda8dc820919e382b7d1b646106c7d91795ad0d20f7673c058e493f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ccfca96006449b50817dba143e911165630be54db84ae071755573159103f718(memPtr) {\n\n        mstore(add(memPtr, 0), \"Course does not exist\")\n\n    }\n\n    function abi_encode_t_stringliteral_ccfca96006449b50817dba143e911165630be54db84ae071755573159103f718_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_ccfca96006449b50817dba143e911165630be54db84ae071755573159103f718(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ccfca96006449b50817dba143e911165630be54db84ae071755573159103f718__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ccfca96006449b50817dba143e911165630be54db84ae071755573159103f718_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: invalid token ID\")\n\n    }\n\n    function abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: address zero is not a va\")\n\n        mstore(add(memPtr, 32), \"lid owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ff2a6ad38fa379170c2ddbded7badfdd50fc7c2231d5868bae93e2c4ed779e10(memPtr) {\n\n        mstore(add(memPtr, 0), \"Max supply must be greater than \")\n\n        mstore(add(memPtr, 32), \"zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_ff2a6ad38fa379170c2ddbded7badfdd50fc7c2231d5868bae93e2c4ed779e10_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_ff2a6ad38fa379170c2ddbded7badfdd50fc7c2231d5868bae93e2c4ed779e10(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ff2a6ad38fa379170c2ddbded7badfdd50fc7c2231d5868bae93e2c4ed779e10__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ff2a6ad38fa379170c2ddbded7badfdd50fc7c2231d5868bae93e2c4ed779e10_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Price must be greater than zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_035d4514157dcf2506923e1232babe38012bd57de24345ac363305b5db6b8231(memPtr) {\n\n        mstore(add(memPtr, 0), \"URI cannot be empty\")\n\n    }\n\n    function abi_encode_t_stringliteral_035d4514157dcf2506923e1232babe38012bd57de24345ac363305b5db6b8231_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_035d4514157dcf2506923e1232babe38012bd57de24345ac363305b5db6b8231(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_035d4514157dcf2506923e1232babe38012bd57de24345ac363305b5db6b8231__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_035d4514157dcf2506923e1232babe38012bd57de24345ac363305b5db6b8231_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_uint256_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab(memPtr) {\n\n        mstore(add(memPtr, 0), \"You are not the owner of this NF\")\n\n        mstore(add(memPtr, 32), \"T\")\n\n    }\n\n    function abi_encode_t_stringliteral_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_cf40cb9708e1320ee04bc59cb2f8b4ce47ba0c93638609957810c412abce51a7(memPtr) {\n\n        mstore(add(memPtr, 0), \"Max supply reached\")\n\n    }\n\n    function abi_encode_t_stringliteral_cf40cb9708e1320ee04bc59cb2f8b4ce47ba0c93638609957810c412abce51a7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_cf40cb9708e1320ee04bc59cb2f8b4ce47ba0c93638609957810c412abce51a7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cf40cb9708e1320ee04bc59cb2f8b4ce47ba0c93638609957810c412abce51a7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cf40cb9708e1320ee04bc59cb2f8b4ce47ba0c93638609957810c412abce51a7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer from incorrect \")\n\n        mstore(add(memPtr, 32), \"owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721URIStorage: URI set of non\")\n\n        mstore(add(memPtr, 32), \"existent token\")\n\n    }\n\n    function abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: token already minted\")\n\n    }\n\n    function abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n}\n","id":17,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106101e25760003560e01c806370a0823111610102578063b25360df11610095578063deaea2e311610064578063deaea2e31461075a578063e71ef65714610797578063e985e9c5146107b3578063f2fde38b146107f0576101e2565b8063b25360df1461068e578063b2733b39146106cb578063b88d4fde146106f4578063c87b56dd1461071d576101e2565b806395d89b41116100d157806395d89b41146105d157806396f979d2146105fc578063a22cb4651461063c578063ae0ec5e414610665576101e2565b806370a082311461051557806371267f1f14610552578063715018a61461058f5780638da5cb5b146105a6576101e2565b80632f745c591161017a57806350e351811161014957806350e351811461043f57806351ed82881461047c578063610b31a6146104985780636352211e146104d8576101e2565b80632f745c59146103715780632f77f003146103ae57806342842e0e146103d95780634f6ccce714610402576101e2565b8063095ea7b3116101b6578063095ea7b3146102b757806318148f1b146102e057806318160ddd1461031d57806323b872dd14610348576101e2565b80629a9b7b146101e757806301ffc9a71461021257806306fdde031461024f578063081812fc1461027a575b600080fd5b3480156101f357600080fd5b506101fc610819565b6040516102099190612f63565b60405180910390f35b34801561021e57600080fd5b5061023960048036038101906102349190612fea565b61081f565b6040516102469190613032565b60405180910390f35b34801561025b57600080fd5b50610264610831565b60405161027191906130dd565b60405180910390f35b34801561028657600080fd5b506102a1600480360381019061029c919061312b565b6108c3565b6040516102ae9190613199565b60405180910390f35b3480156102c357600080fd5b506102de60048036038101906102d991906131e0565b610909565b005b3480156102ec57600080fd5b5061030760048036038101906103029190613220565b610a20565b604051610314919061330b565b60405180910390f35b34801561032957600080fd5b50610332610ace565b60405161033f9190612f63565b60405180910390f35b34801561035457600080fd5b5061036f600480360381019061036a919061332d565b610adb565b005b34801561037d57600080fd5b50610398600480360381019061039391906131e0565b610b3b565b6040516103a59190612f63565b60405180910390f35b3480156103ba57600080fd5b506103c3610be0565b6040516103d09190612f63565b60405180910390f35b3480156103e557600080fd5b5061040060048036038101906103fb919061332d565b610be6565b005b34801561040e57600080fd5b506104296004803603810190610424919061312b565b610c06565b6040516104369190612f63565b60405180910390f35b34801561044b57600080fd5b506104666004803603810190610461919061312b565b610c77565b6040516104739190613199565b60405180910390f35b6104966004803603810190610491919061312b565b610caa565b005b3480156104a457600080fd5b506104bf60048036038101906104ba919061312b565b610f68565b6040516104cf9493929190613380565b60405180910390f35b3480156104e457600080fd5b506104ff60048036038101906104fa919061312b565b61107b565b60405161050c9190613199565b60405180910390f35b34801561052157600080fd5b5061053c60048036038101906105379190613220565b61112c565b6040516105499190612f63565b60405180910390f35b34801561055e57600080fd5b506105796004803603810190610574919061312b565b6111e3565b6040516105869190612f63565b60405180910390f35b34801561059b57600080fd5b506105a46111fb565b005b3480156105b257600080fd5b506105bb61120f565b6040516105c89190613199565b60405180910390f35b3480156105dd57600080fd5b506105e6611239565b6040516105f391906130dd565b60405180910390f35b34801561060857600080fd5b50610623600480360381019061061e919061312b565b6112cb565b6040516106339493929190613380565b60405180910390f35b34801561064857600080fd5b50610663600480360381019061065e91906133f8565b611383565b005b34801561067157600080fd5b5061068c6004803603810190610687919061356d565b611399565b005b34801561069a57600080fd5b506106b560048036038101906106b0919061312b565b611534565b6040516106c29190612f63565b60405180910390f35b3480156106d757600080fd5b506106f260048036038101906106ed91906135dc565b611551565b005b34801561070057600080fd5b5061071b600480360381019061071691906136bd565b6116c7565b005b34801561072957600080fd5b50610744600480360381019061073f919061312b565b611729565b60405161075191906130dd565b60405180910390f35b34801561076657600080fd5b50610781600480360381019061077c919061312b565b61173b565b60405161078e9190613199565b60405180910390f35b6107b160048036038101906107ac919061312b565b61174d565b005b3480156107bf57600080fd5b506107da60048036038101906107d59190613740565b611962565b6040516107e79190613032565b60405180910390f35b3480156107fc57600080fd5b5061081760048036038101906108129190613220565b6119f6565b005b600d5481565b600061082a82611a79565b9050919050565b606060008054610840906137af565b80601f016020809104026020016040519081016040528092919081815260200182805461086c906137af565b80156108b95780601f1061088e576101008083540402835291602001916108b9565b820191906000526020600020905b81548152906001019060200180831161089c57829003601f168201915b5050505050905090565b60006108ce82611af3565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006109148261107b565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610984576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097b90613852565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166109a3611b3e565b73ffffffffffffffffffffffffffffffffffffffff1614806109d257506109d1816109cc611b3e565b611962565b5b610a11576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a08906138e4565b60405180910390fd5b610a1b8383611b46565b505050565b60606000610a2d8361112c565b905060008167ffffffffffffffff811115610a4b57610a4a613442565b5b604051908082528060200260200182016040528015610a795781602001602082028036833780820191505090505b50905060005b82811015610ac357610a918582610b3b565b828281518110610aa457610aa3613904565b5b6020026020010181815250508080610abb90613962565b915050610a7f565b508092505050919050565b6000600880549050905090565b610aec610ae6611b3e565b82611bff565b610b2b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2290613a1c565b60405180910390fd5b610b36838383611c94565b505050565b6000610b468361112c565b8210610b87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7e90613aae565b60405180910390fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054905092915050565b600c5481565b610c01838383604051806020016040528060008152506116c7565b505050565b6000610c10610ace565b8210610c51576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4890613b40565b60405180910390fd5b60088281548110610c6557610c64613904565b5b90600052602060002001549050919050565b600f6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000601060008381526020019081526020016000205411610d00576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cf790613bac565b60405180910390fd5b60106000828152602001908152602001600020543414610d55576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4c90613c18565b60405180910390fd5b6000600f600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610dfc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610df390613c84565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6190613cf0565b60405180910390fd5b610e75813384611c94565b8073ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610ebb573d6000803e3d6000fd5b506010600083815260200190815260200160002060009055600f600083815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690558073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16837ff076e74c3b31fba126074acbffcdd9d113b723bf30ad339f58dfe3002a8310df60405160405180910390a45050565b6060600080600080600e600087815260200190815260200160002090506000816002015411610fcc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fc390613d5c565b60405180910390fd5b80600001816001015482600201548360030154838054610feb906137af565b80601f0160208091040260200160405190810160405280929190818152602001828054611017906137af565b80156110645780601f1061103957610100808354040283529160200191611064565b820191906000526020600020905b81548152906001019060200180831161104757829003601f168201915b505050505093509450945094509450509193509193565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611123576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111a90613dc8565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361119c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119390613e5a565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60106020528060005260406000206000915090505481565b611203611efa565b61120d6000611f78565b565b6000600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060018054611248906137af565b80601f0160208091040260200160405190810160405280929190818152602001828054611274906137af565b80156112c15780601f10611296576101008083540402835291602001916112c1565b820191906000526020600020905b8154815290600101906020018083116112a457829003601f168201915b5050505050905090565b600e6020528060005260406000206000915090508060000180546112ee906137af565b80601f016020809104026020016040519081016040528092919081815260200182805461131a906137af565b80156113675780601f1061133c57610100808354040283529160200191611367565b820191906000526020600020905b81548152906001019060200180831161134a57829003601f168201915b5050505050908060010154908060020154908060030154905084565b61139561138e611b3e565b838361203e565b5050565b6113a1611efa565b600081116113e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113db90613eec565b60405180910390fd5b60008211611427576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161141e90613f58565b60405180910390fd5b600083511161146b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161146290613fc4565b60405180910390fd5b600c600081548092919061147e90613962565b919050555060405180608001604052808481526020018381526020018281526020016000815250600e6000600c54815260200190815260200160002060008201518160000190816114cf9190614190565b50602082015181600101556040820151816002015560608201518160030155905050600c547f62a03295cf3254097619e4c525c459f4c5385f131ff770541e79b7e63ac9d3a184848460405161152793929190614262565b60405180910390a2505050565b600060106000838152602001908152602001600020549050919050565b3373ffffffffffffffffffffffffffffffffffffffff166115718361107b565b73ffffffffffffffffffffffffffffffffffffffff16146115c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115be90614312565b60405180910390fd5b6000811161160a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161160190613f58565b60405180910390fd5b33600f600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060106000848152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff16827ff78e8b672552c30bd4dc6a4d47324c771c972cde77a97fe66da1c8d7adbdbd16836040516116bb9190612f63565b60405180910390a35050565b6116d86116d2611b3e565b83611bff565b611717576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161170e90613a1c565b60405180910390fd5b611723848484846121aa565b50505050565b606061173482612206565b9050919050565b60006117468261107b565b9050919050565b6000600e6000838152602001908152602001600020905060008160020154116117ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117a290613d5c565b60405180910390fd5b80600201548160030154106117f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117ec9061437e565b60405180910390fd5b8060010154341461183b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161183290613c18565b60405180910390fd5b6000600d6000815461184c90613962565b919050819055905081600301600081548092919061186990613962565b91905055506118783382612318565b61190e8183600001805461188b906137af565b80601f01602080910402602001604051908101604052809291908181526020018280546118b7906137af565b80156119045780601f106118d957610100808354040283529160200191611904565b820191906000526020600020905b8154815290600101906020018083116118e757829003601f168201915b5050505050612336565b3373ffffffffffffffffffffffffffffffffffffffff16837ffca9437e237ca408a74cca23e3078fd1f6c700960dac7f09f8c6cf5177aefe1a836040516119559190612f63565b60405180910390a3505050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6119fe611efa565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611a6d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a6490614410565b60405180910390fd5b611a7681611f78565b50565b60007f780e9d63000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480611aec5750611aeb826123a3565b5b9050919050565b611afc81612485565b611b3b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b3290613dc8565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16611bb98361107b565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080611c0b8361107b565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611c4d5750611c4c8185611962565b5b80611c8b57508373ffffffffffffffffffffffffffffffffffffffff16611c73846108c3565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16611cb48261107b565b73ffffffffffffffffffffffffffffffffffffffff1614611d0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d01906144a2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611d79576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d7090614534565b60405180910390fd5b611d848383836124f1565b611d8f600082611b46565b6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611ddf9190614554565b925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611e369190614588565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4611ef5838383612501565b505050565b611f02611b3e565b73ffffffffffffffffffffffffffffffffffffffff16611f2061120f565b73ffffffffffffffffffffffffffffffffffffffff1614611f76576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f6d90614608565b60405180910390fd5b565b6000600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036120ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120a390614674565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161219d9190613032565b60405180910390a3505050565b6121b5848484611c94565b6121c184848484612506565b612200576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121f790614706565b60405180910390fd5b50505050565b606061221182611af3565b6000600a60008481526020019081526020016000208054612231906137af565b80601f016020809104026020016040519081016040528092919081815260200182805461225d906137af565b80156122aa5780601f1061227f576101008083540402835291602001916122aa565b820191906000526020600020905b81548152906001019060200180831161228d57829003601f168201915b5050505050905060006122bb61268d565b905060008151036122d0578192505050612313565b6000825111156123055780826040516020016122ed929190614762565b60405160208183030381529060405292505050612313565b61230e846126a4565b925050505b919050565b61233282826040518060200160405280600081525061270c565b5050565b61233f82612485565b61237e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612375906147f8565b60405180910390fd5b80600a6000848152602001908152602001600020908161239e9190614190565b505050565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061246e57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061247e575061247d82612767565b5b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b6124fc8383836127d1565b505050565b505050565b60006125278473ffffffffffffffffffffffffffffffffffffffff166128e3565b15612680578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02612550611b3e565b8786866040518563ffffffff1660e01b8152600401612572949392919061486d565b6020604051808303816000875af19250505080156125ae57506040513d601f19601f820116820180604052508101906125ab91906148ce565b60015b612630573d80600081146125de576040519150601f19603f3d011682016040523d82523d6000602084013e6125e3565b606091505b506000815103612628576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161261f90614706565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050612685565b600190505b949350505050565b606060405180602001604052806000815250905090565b60606126af82611af3565b60006126b961268d565b905060008151116126d95760405180602001604052806000815250612704565b806126e384612906565b6040516020016126f4929190614762565b6040516020818303038152906040525b915050919050565b6127168383612a66565b6127236000848484612506565b612762576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161275990614706565b60405180910390fd5b505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6127dc838383612c3f565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361281e5761281981612c44565b61285d565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461285c5761285b8382612c8d565b5b5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361289f5761289a81612dfa565b6128de565b8273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16146128dd576128dc8282612ecb565b5b5b505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60606000820361294d576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050612a61565b600082905060005b6000821461297f57808061296890613962565b915050600a82612978919061492a565b9150612955565b60008167ffffffffffffffff81111561299b5761299a613442565b5b6040519080825280601f01601f1916602001820160405280156129cd5781602001600182028036833780820191505090505b5090505b60008514612a5a576001826129e69190614554565b9150600a856129f5919061495b565b6030612a019190614588565b60f81b818381518110612a1757612a16613904565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a85612a53919061492a565b94506129d1565b8093505050505b919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612ad5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612acc906149d8565b60405180910390fd5b612ade81612485565b15612b1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612b1590614a44565b60405180910390fd5b612b2a600083836124f1565b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254612b7a9190614588565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4612c3b60008383612501565b5050565b505050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505060019003906000526020600020016000909190919091505550565b60006001612c9a8461112c565b612ca49190614554565b9050600060076000848152602001908152602001600020549050818114612d89576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002054905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002081905550816007600083815260200190815260200160002081905550505b6007600084815260200190815260200160002060009055600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206000905550505050565b60006001600880549050612e0e9190614554565b9050600060096000848152602001908152602001600020549050600060088381548110612e3e57612e3d613904565b5b906000526020600020015490508060088381548110612e6057612e5f613904565b5b906000526020600020018190555081600960008381526020019081526020016000208190555060096000858152602001908152602001600020600090556008805480612eaf57612eae614a64565b5b6001900381819060005260206000200160009055905550505050565b6000612ed68361112c565b905081600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002081905550806007600084815260200190815260200160002081905550505050565b6000819050919050565b612f5d81612f4a565b82525050565b6000602082019050612f786000830184612f54565b92915050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b612fc781612f92565b8114612fd257600080fd5b50565b600081359050612fe481612fbe565b92915050565b60006020828403121561300057612fff612f88565b5b600061300e84828501612fd5565b91505092915050565b60008115159050919050565b61302c81613017565b82525050565b60006020820190506130476000830184613023565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561308757808201518184015260208101905061306c565b60008484015250505050565b6000601f19601f8301169050919050565b60006130af8261304d565b6130b98185613058565b93506130c9818560208601613069565b6130d281613093565b840191505092915050565b600060208201905081810360008301526130f781846130a4565b905092915050565b61310881612f4a565b811461311357600080fd5b50565b600081359050613125816130ff565b92915050565b60006020828403121561314157613140612f88565b5b600061314f84828501613116565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061318382613158565b9050919050565b61319381613178565b82525050565b60006020820190506131ae600083018461318a565b92915050565b6131bd81613178565b81146131c857600080fd5b50565b6000813590506131da816131b4565b92915050565b600080604083850312156131f7576131f6612f88565b5b6000613205858286016131cb565b925050602061321685828601613116565b9150509250929050565b60006020828403121561323657613235612f88565b5b6000613244848285016131cb565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61328281612f4a565b82525050565b60006132948383613279565b60208301905092915050565b6000602082019050919050565b60006132b88261324d565b6132c28185613258565b93506132cd83613269565b8060005b838110156132fe5781516132e58882613288565b97506132f0836132a0565b9250506001810190506132d1565b5085935050505092915050565b6000602082019050818103600083015261332581846132ad565b905092915050565b60008060006060848603121561334657613345612f88565b5b6000613354868287016131cb565b9350506020613365868287016131cb565b925050604061337686828701613116565b9150509250925092565b6000608082019050818103600083015261339a81876130a4565b90506133a96020830186612f54565b6133b66040830185612f54565b6133c36060830184612f54565b95945050505050565b6133d581613017565b81146133e057600080fd5b50565b6000813590506133f2816133cc565b92915050565b6000806040838503121561340f5761340e612f88565b5b600061341d858286016131cb565b925050602061342e858286016133e3565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61347a82613093565b810181811067ffffffffffffffff8211171561349957613498613442565b5b80604052505050565b60006134ac612f7e565b90506134b88282613471565b919050565b600067ffffffffffffffff8211156134d8576134d7613442565b5b6134e182613093565b9050602081019050919050565b82818337600083830152505050565b600061351061350b846134bd565b6134a2565b90508281526020810184848401111561352c5761352b61343d565b5b6135378482856134ee565b509392505050565b600082601f83011261355457613553613438565b5b81356135648482602086016134fd565b91505092915050565b60008060006060848603121561358657613585612f88565b5b600084013567ffffffffffffffff8111156135a4576135a3612f8d565b5b6135b08682870161353f565b93505060206135c186828701613116565b92505060406135d286828701613116565b9150509250925092565b600080604083850312156135f3576135f2612f88565b5b600061360185828601613116565b925050602061361285828601613116565b9150509250929050565b600067ffffffffffffffff82111561363757613636613442565b5b61364082613093565b9050602081019050919050565b600061366061365b8461361c565b6134a2565b90508281526020810184848401111561367c5761367b61343d565b5b6136878482856134ee565b509392505050565b600082601f8301126136a4576136a3613438565b5b81356136b484826020860161364d565b91505092915050565b600080600080608085870312156136d7576136d6612f88565b5b60006136e5878288016131cb565b94505060206136f6878288016131cb565b935050604061370787828801613116565b925050606085013567ffffffffffffffff81111561372857613727612f8d565b5b6137348782880161368f565b91505092959194509250565b6000806040838503121561375757613756612f88565b5b6000613765858286016131cb565b9250506020613776858286016131cb565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806137c757607f821691505b6020821081036137da576137d9613780565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b600061383c602183613058565b9150613847826137e0565b604082019050919050565b6000602082019050818103600083015261386b8161382f565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c0000602082015250565b60006138ce603e83613058565b91506138d982613872565b604082019050919050565b600060208201905081810360008301526138fd816138c1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061396d82612f4a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361399f5761399e613933565b5b600182019050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206e6f7220617070726f766564000000000000000000000000000000000000602082015250565b6000613a06602e83613058565b9150613a11826139aa565b604082019050919050565b60006020820190508181036000830152613a35816139f9565b9050919050565b7f455243373231456e756d657261626c653a206f776e657220696e646578206f7560008201527f74206f6620626f756e6473000000000000000000000000000000000000000000602082015250565b6000613a98602b83613058565b9150613aa382613a3c565b604082019050919050565b60006020820190508181036000830152613ac781613a8b565b9050919050565b7f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60008201527f7574206f6620626f756e64730000000000000000000000000000000000000000602082015250565b6000613b2a602c83613058565b9150613b3582613ace565b604082019050919050565b60006020820190508181036000830152613b5981613b1d565b9050919050565b7f4e4654206973206e6f7420666f722073616c6500000000000000000000000000600082015250565b6000613b96601383613058565b9150613ba182613b60565b602082019050919050565b60006020820190508181036000830152613bc581613b89565b9050919050565b7f496e636f7272656374207061796d656e7420616d6f756e740000000000000000600082015250565b6000613c02601883613058565b9150613c0d82613bcc565b602082019050919050565b60006020820190508181036000830152613c3181613bf5565b9050919050565b7f53656c6c6572206164647265737320697320696e76616c696400000000000000600082015250565b6000613c6e601983613058565b9150613c7982613c38565b602082019050919050565b60006020820190508181036000830152613c9d81613c61565b9050919050565b7f43616e6e6f742062757920796f7572206f776e204e4654000000000000000000600082015250565b6000613cda601783613058565b9150613ce582613ca4565b602082019050919050565b60006020820190508181036000830152613d0981613ccd565b9050919050565b7f436f7572736520646f6573206e6f742065786973740000000000000000000000600082015250565b6000613d46601583613058565b9150613d5182613d10565b602082019050919050565b60006020820190508181036000830152613d7581613d39565b9050919050565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b6000613db2601883613058565b9150613dbd82613d7c565b602082019050919050565b60006020820190508181036000830152613de181613da5565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b6000613e44602983613058565b9150613e4f82613de8565b604082019050919050565b60006020820190508181036000830152613e7381613e37565b9050919050565b7f4d617820737570706c79206d7573742062652067726561746572207468616e2060008201527f7a65726f00000000000000000000000000000000000000000000000000000000602082015250565b6000613ed6602483613058565b9150613ee182613e7a565b604082019050919050565b60006020820190508181036000830152613f0581613ec9565b9050919050565b7f5072696365206d7573742062652067726561746572207468616e207a65726f00600082015250565b6000613f42601f83613058565b9150613f4d82613f0c565b602082019050919050565b60006020820190508181036000830152613f7181613f35565b9050919050565b7f5552492063616e6e6f7420626520656d70747900000000000000000000000000600082015250565b6000613fae601383613058565b9150613fb982613f78565b602082019050919050565b60006020820190508181036000830152613fdd81613fa1565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026140467fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82614009565b6140508683614009565b95508019841693508086168417925050509392505050565b6000819050919050565b600061408d61408861408384612f4a565b614068565b612f4a565b9050919050565b6000819050919050565b6140a783614072565b6140bb6140b382614094565b848454614016565b825550505050565b600090565b6140d06140c3565b6140db81848461409e565b505050565b5b818110156140ff576140f46000826140c8565b6001810190506140e1565b5050565b601f8211156141445761411581613fe4565b61411e84613ff9565b8101602085101561412d578190505b61414161413985613ff9565b8301826140e0565b50505b505050565b600082821c905092915050565b600061416760001984600802614149565b1980831691505092915050565b60006141808383614156565b9150826002028217905092915050565b6141998261304d565b67ffffffffffffffff8111156141b2576141b1613442565b5b6141bc82546137af565b6141c7828285614103565b600060209050601f8311600181146141fa57600084156141e8578287015190505b6141f28582614174565b86555061425a565b601f19841661420886613fe4565b60005b828110156142305784890151825560018201915060208501945060208101905061420b565b8683101561424d5784890151614249601f891682614156565b8355505b6001600288020188555050505b505050505050565b6000606082019050818103600083015261427c81866130a4565b905061428b6020830185612f54565b6142986040830184612f54565b949350505050565b7f596f7520617265206e6f7420746865206f776e6572206f662074686973204e4660008201527f5400000000000000000000000000000000000000000000000000000000000000602082015250565b60006142fc602183613058565b9150614307826142a0565b604082019050919050565b6000602082019050818103600083015261432b816142ef565b9050919050565b7f4d617820737570706c7920726561636865640000000000000000000000000000600082015250565b6000614368601283613058565b915061437382614332565b602082019050919050565b600060208201905081810360008301526143978161435b565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006143fa602683613058565b91506144058261439e565b604082019050919050565b60006020820190508181036000830152614429816143ed565b9050919050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b600061448c602583613058565b915061449782614430565b604082019050919050565b600060208201905081810360008301526144bb8161447f565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b600061451e602483613058565b9150614529826144c2565b604082019050919050565b6000602082019050818103600083015261454d81614511565b9050919050565b600061455f82612f4a565b915061456a83612f4a565b925082820390508181111561458257614581613933565b5b92915050565b600061459382612f4a565b915061459e83612f4a565b92508282019050808211156145b6576145b5613933565b5b92915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006145f2602083613058565b91506145fd826145bc565b602082019050919050565b60006020820190508181036000830152614621816145e5565b9050919050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b600061465e601983613058565b915061466982614628565b602082019050919050565b6000602082019050818103600083015261468d81614651565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b60006146f0603283613058565b91506146fb82614694565b604082019050919050565b6000602082019050818103600083015261471f816146e3565b9050919050565b600081905092915050565b600061473c8261304d565b6147468185614726565b9350614756818560208601613069565b80840191505092915050565b600061476e8285614731565b915061477a8284614731565b91508190509392505050565b7f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60008201527f6578697374656e7420746f6b656e000000000000000000000000000000000000602082015250565b60006147e2602e83613058565b91506147ed82614786565b604082019050919050565b60006020820190508181036000830152614811816147d5565b9050919050565b600081519050919050565b600082825260208201905092915050565b600061483f82614818565b6148498185614823565b9350614859818560208601613069565b61486281613093565b840191505092915050565b6000608082019050614882600083018761318a565b61488f602083018661318a565b61489c6040830185612f54565b81810360608301526148ae8184614834565b905095945050505050565b6000815190506148c881612fbe565b92915050565b6000602082840312156148e4576148e3612f88565b5b60006148f2848285016148b9565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061493582612f4a565b915061494083612f4a565b9250826149505761494f6148fb565b5b828204905092915050565b600061496682612f4a565b915061497183612f4a565b925082614981576149806148fb565b5b828206905092915050565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b60006149c2602083613058565b91506149cd8261498c565b602082019050919050565b600060208201905081810360008301526149f1816149b5565b9050919050565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b6000614a2e601c83613058565b9150614a39826149f8565b602082019050919050565b60006020820190508181036000830152614a5d81614a21565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220822777f5cb317dcec93261790d2952699717d6fc6b9a34bf3993d6c1fd09c9e264736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E2 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x102 JUMPI DUP1 PUSH4 0xB25360DF GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xDEAEA2E3 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xDEAEA2E3 EQ PUSH2 0x75A JUMPI DUP1 PUSH4 0xE71EF657 EQ PUSH2 0x797 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x7B3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x7F0 JUMPI PUSH2 0x1E2 JUMP JUMPDEST DUP1 PUSH4 0xB25360DF EQ PUSH2 0x68E JUMPI DUP1 PUSH4 0xB2733B39 EQ PUSH2 0x6CB JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x6F4 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x71D JUMPI PUSH2 0x1E2 JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x5D1 JUMPI DUP1 PUSH4 0x96F979D2 EQ PUSH2 0x5FC JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x63C JUMPI DUP1 PUSH4 0xAE0EC5E4 EQ PUSH2 0x665 JUMPI PUSH2 0x1E2 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x515 JUMPI DUP1 PUSH4 0x71267F1F EQ PUSH2 0x552 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x58F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5A6 JUMPI PUSH2 0x1E2 JUMP JUMPDEST DUP1 PUSH4 0x2F745C59 GT PUSH2 0x17A JUMPI DUP1 PUSH4 0x50E35181 GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x50E35181 EQ PUSH2 0x43F JUMPI DUP1 PUSH4 0x51ED8288 EQ PUSH2 0x47C JUMPI DUP1 PUSH4 0x610B31A6 EQ PUSH2 0x498 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x4D8 JUMPI PUSH2 0x1E2 JUMP JUMPDEST DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0x2F77F003 EQ PUSH2 0x3AE JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x3D9 JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x402 JUMPI PUSH2 0x1E2 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0x18148F1B EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x348 JUMPI PUSH2 0x1E2 JUMP JUMPDEST DUP1 PUSH3 0x9A9B7B EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x27A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FC PUSH2 0x819 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x209 SWAP2 SWAP1 PUSH2 0x2F63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x239 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x2FEA JUMP JUMPDEST PUSH2 0x81F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x246 SWAP2 SWAP1 PUSH2 0x3032 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x264 PUSH2 0x831 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x30DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x286 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29C SWAP2 SWAP1 PUSH2 0x312B JUMP JUMPDEST PUSH2 0x8C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AE SWAP2 SWAP1 PUSH2 0x3199 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D9 SWAP2 SWAP1 PUSH2 0x31E0 JUMP JUMPDEST PUSH2 0x909 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x3220 JUMP JUMPDEST PUSH2 0xA20 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x314 SWAP2 SWAP1 PUSH2 0x330B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x329 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x332 PUSH2 0xACE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33F SWAP2 SWAP1 PUSH2 0x2F63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x354 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x36F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36A SWAP2 SWAP1 PUSH2 0x332D JUMP JUMPDEST PUSH2 0xADB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x398 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x393 SWAP2 SWAP1 PUSH2 0x31E0 JUMP JUMPDEST PUSH2 0xB3B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x2F63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C3 PUSH2 0xBE0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D0 SWAP2 SWAP1 PUSH2 0x2F63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x400 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3FB SWAP2 SWAP1 PUSH2 0x332D JUMP JUMPDEST PUSH2 0xBE6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x424 SWAP2 SWAP1 PUSH2 0x312B JUMP JUMPDEST PUSH2 0xC06 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x436 SWAP2 SWAP1 PUSH2 0x2F63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x466 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x461 SWAP2 SWAP1 PUSH2 0x312B JUMP JUMPDEST PUSH2 0xC77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x473 SWAP2 SWAP1 PUSH2 0x3199 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x496 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x491 SWAP2 SWAP1 PUSH2 0x312B JUMP JUMPDEST PUSH2 0xCAA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4BA SWAP2 SWAP1 PUSH2 0x312B JUMP JUMPDEST PUSH2 0xF68 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4CF SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3380 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4FA SWAP2 SWAP1 PUSH2 0x312B JUMP JUMPDEST PUSH2 0x107B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50C SWAP2 SWAP1 PUSH2 0x3199 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x521 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x53C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x537 SWAP2 SWAP1 PUSH2 0x3220 JUMP JUMPDEST PUSH2 0x112C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x549 SWAP2 SWAP1 PUSH2 0x2F63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x579 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x574 SWAP2 SWAP1 PUSH2 0x312B JUMP JUMPDEST PUSH2 0x11E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x586 SWAP2 SWAP1 PUSH2 0x2F63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5A4 PUSH2 0x11FB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5BB PUSH2 0x120F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C8 SWAP2 SWAP1 PUSH2 0x3199 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5E6 PUSH2 0x1239 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F3 SWAP2 SWAP1 PUSH2 0x30DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x608 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x623 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x61E SWAP2 SWAP1 PUSH2 0x312B JUMP JUMPDEST PUSH2 0x12CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x633 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3380 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x648 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x663 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x65E SWAP2 SWAP1 PUSH2 0x33F8 JUMP JUMPDEST PUSH2 0x1383 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x671 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x68C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x687 SWAP2 SWAP1 PUSH2 0x356D JUMP JUMPDEST PUSH2 0x1399 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x69A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6B0 SWAP2 SWAP1 PUSH2 0x312B JUMP JUMPDEST PUSH2 0x1534 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C2 SWAP2 SWAP1 PUSH2 0x2F63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6ED SWAP2 SWAP1 PUSH2 0x35DC JUMP JUMPDEST PUSH2 0x1551 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x700 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x71B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x716 SWAP2 SWAP1 PUSH2 0x36BD JUMP JUMPDEST PUSH2 0x16C7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x729 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x744 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x73F SWAP2 SWAP1 PUSH2 0x312B JUMP JUMPDEST PUSH2 0x1729 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x751 SWAP2 SWAP1 PUSH2 0x30DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x766 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x781 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x77C SWAP2 SWAP1 PUSH2 0x312B JUMP JUMPDEST PUSH2 0x173B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x78E SWAP2 SWAP1 PUSH2 0x3199 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7AC SWAP2 SWAP1 PUSH2 0x312B JUMP JUMPDEST PUSH2 0x174D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7D5 SWAP2 SWAP1 PUSH2 0x3740 JUMP JUMPDEST PUSH2 0x1962 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7E7 SWAP2 SWAP1 PUSH2 0x3032 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x817 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x812 SWAP2 SWAP1 PUSH2 0x3220 JUMP JUMPDEST PUSH2 0x19F6 JUMP JUMPDEST STOP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x82A DUP3 PUSH2 0x1A79 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x840 SWAP1 PUSH2 0x37AF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x86C SWAP1 PUSH2 0x37AF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8B9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x88E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8B9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x89C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8CE DUP3 PUSH2 0x1AF3 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x914 DUP3 PUSH2 0x107B JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x984 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x97B SWAP1 PUSH2 0x3852 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9A3 PUSH2 0x1B3E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x9D2 JUMPI POP PUSH2 0x9D1 DUP2 PUSH2 0x9CC PUSH2 0x1B3E JUMP JUMPDEST PUSH2 0x1962 JUMP JUMPDEST JUMPDEST PUSH2 0xA11 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA08 SWAP1 PUSH2 0x38E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA1B DUP4 DUP4 PUSH2 0x1B46 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xA2D DUP4 PUSH2 0x112C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA4B JUMPI PUSH2 0xA4A PUSH2 0x3442 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA79 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xAC3 JUMPI PUSH2 0xA91 DUP6 DUP3 PUSH2 0xB3B JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xAA4 JUMPI PUSH2 0xAA3 PUSH2 0x3904 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH2 0xABB SWAP1 PUSH2 0x3962 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA7F JUMP JUMPDEST POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xAEC PUSH2 0xAE6 PUSH2 0x1B3E JUMP JUMPDEST DUP3 PUSH2 0x1BFF JUMP JUMPDEST PUSH2 0xB2B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB22 SWAP1 PUSH2 0x3A1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB36 DUP4 DUP4 DUP4 PUSH2 0x1C94 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB46 DUP4 PUSH2 0x112C JUMP JUMPDEST DUP3 LT PUSH2 0xB87 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7E SWAP1 PUSH2 0x3AAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0xC01 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x16C7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC10 PUSH2 0xACE JUMP JUMPDEST DUP3 LT PUSH2 0xC51 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC48 SWAP1 PUSH2 0x3B40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xC65 JUMPI PUSH2 0xC64 PUSH2 0x3904 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x10 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT PUSH2 0xD00 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF7 SWAP1 PUSH2 0x3BAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x10 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD CALLVALUE EQ PUSH2 0xD55 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD4C SWAP1 PUSH2 0x3C18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDFC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF3 SWAP1 PUSH2 0x3C84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE6A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE61 SWAP1 PUSH2 0x3CF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE75 DUP2 CALLER DUP5 PUSH2 0x1C94 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xEBB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x10 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0xF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF076E74C3B31FBA126074ACBFFCDD9D113B723BF30AD339F58DFE3002A8310DF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x2 ADD SLOAD GT PUSH2 0xFCC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC3 SWAP1 PUSH2 0x3D5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 ADD DUP2 PUSH1 0x1 ADD SLOAD DUP3 PUSH1 0x2 ADD SLOAD DUP4 PUSH1 0x3 ADD SLOAD DUP4 DUP1 SLOAD PUSH2 0xFEB SWAP1 PUSH2 0x37AF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1017 SWAP1 PUSH2 0x37AF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1064 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1039 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1064 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1047 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP4 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1123 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111A SWAP1 PUSH2 0x3DC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x119C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1193 SWAP1 PUSH2 0x3E5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1203 PUSH2 0x1EFA JUMP JUMPDEST PUSH2 0x120D PUSH1 0x0 PUSH2 0x1F78 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x1248 SWAP1 PUSH2 0x37AF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1274 SWAP1 PUSH2 0x37AF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x12C1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1296 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x12C1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x12A4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x12EE SWAP1 PUSH2 0x37AF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x131A SWAP1 PUSH2 0x37AF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1367 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x133C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1367 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x134A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH2 0x1395 PUSH2 0x138E PUSH2 0x1B3E JUMP JUMPDEST DUP4 DUP4 PUSH2 0x203E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x13A1 PUSH2 0x1EFA JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x13E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13DB SWAP1 PUSH2 0x3EEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x1427 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x141E SWAP1 PUSH2 0x3F58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD GT PUSH2 0x146B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1462 SWAP1 PUSH2 0x3FC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x147E SWAP1 PUSH2 0x3962 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP PUSH1 0xE PUSH1 0x0 PUSH1 0xC SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x14CF SWAP2 SWAP1 PUSH2 0x4190 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE SWAP1 POP POP PUSH1 0xC SLOAD PUSH32 0x62A03295CF3254097619E4C525C459F4C5385F131FF770541E79B7E63AC9D3A1 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1527 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4262 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x10 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1571 DUP4 PUSH2 0x107B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x15C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15BE SWAP1 PUSH2 0x4312 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x160A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1601 SWAP1 PUSH2 0x3F58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0xF PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x10 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH32 0xF78E8B672552C30BD4DC6A4D47324C771C972CDE77A97FE66DA1C8D7ADBDBD16 DUP4 PUSH1 0x40 MLOAD PUSH2 0x16BB SWAP2 SWAP1 PUSH2 0x2F63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x16D8 PUSH2 0x16D2 PUSH2 0x1B3E JUMP JUMPDEST DUP4 PUSH2 0x1BFF JUMP JUMPDEST PUSH2 0x1717 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x170E SWAP1 PUSH2 0x3A1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1723 DUP5 DUP5 DUP5 DUP5 PUSH2 0x21AA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1734 DUP3 PUSH2 0x2206 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1746 DUP3 PUSH2 0x107B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x2 ADD SLOAD GT PUSH2 0x17AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17A2 SWAP1 PUSH2 0x3D5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 ADD SLOAD DUP2 PUSH1 0x3 ADD SLOAD LT PUSH2 0x17F5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17EC SWAP1 PUSH2 0x437E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD CALLVALUE EQ PUSH2 0x183B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1832 SWAP1 PUSH2 0x3C18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP2 SLOAD PUSH2 0x184C SWAP1 PUSH2 0x3962 JUMP JUMPDEST SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE SWAP1 POP DUP2 PUSH1 0x3 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1869 SWAP1 PUSH2 0x3962 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x1878 CALLER DUP3 PUSH2 0x2318 JUMP JUMPDEST PUSH2 0x190E DUP2 DUP4 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x188B SWAP1 PUSH2 0x37AF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x18B7 SWAP1 PUSH2 0x37AF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1904 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x18D9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1904 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x18E7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0x2336 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xFCA9437E237CA408A74CCA23E3078FD1F6C700960DAC7F09F8C6CF5177AEFE1A DUP4 PUSH1 0x40 MLOAD PUSH2 0x1955 SWAP2 SWAP1 PUSH2 0x2F63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19FE PUSH2 0x1EFA JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A6D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A64 SWAP1 PUSH2 0x4410 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A76 DUP2 PUSH2 0x1F78 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x780E9D6300000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x1AEC JUMPI POP PUSH2 0x1AEB DUP3 PUSH2 0x23A3 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AFC DUP2 PUSH2 0x2485 JUMP JUMPDEST PUSH2 0x1B3B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B32 SWAP1 PUSH2 0x3DC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1BB9 DUP4 PUSH2 0x107B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1C0B DUP4 PUSH2 0x107B JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1C4D JUMPI POP PUSH2 0x1C4C DUP2 DUP6 PUSH2 0x1962 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1C8B JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1C73 DUP5 PUSH2 0x8C3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1CB4 DUP3 PUSH2 0x107B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1D0A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D01 SWAP1 PUSH2 0x44A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D79 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D70 SWAP1 PUSH2 0x4534 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D84 DUP4 DUP4 DUP4 PUSH2 0x24F1 JUMP JUMPDEST PUSH2 0x1D8F PUSH1 0x0 DUP3 PUSH2 0x1B46 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1DDF SWAP2 SWAP1 PUSH2 0x4554 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1E36 SWAP2 SWAP1 PUSH2 0x4588 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1EF5 DUP4 DUP4 DUP4 PUSH2 0x2501 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1F02 PUSH2 0x1B3E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F20 PUSH2 0x120F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1F76 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F6D SWAP1 PUSH2 0x4608 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0xB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x20AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20A3 SWAP1 PUSH2 0x4674 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x219D SWAP2 SWAP1 PUSH2 0x3032 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x21B5 DUP5 DUP5 DUP5 PUSH2 0x1C94 JUMP JUMPDEST PUSH2 0x21C1 DUP5 DUP5 DUP5 DUP5 PUSH2 0x2506 JUMP JUMPDEST PUSH2 0x2200 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21F7 SWAP1 PUSH2 0x4706 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2211 DUP3 PUSH2 0x1AF3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x2231 SWAP1 PUSH2 0x37AF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x225D SWAP1 PUSH2 0x37AF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x22AA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x227F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x22AA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x228D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x22BB PUSH2 0x268D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x22D0 JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x2313 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x2305 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x22ED SWAP3 SWAP2 SWAP1 PUSH2 0x4762 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x2313 JUMP JUMPDEST PUSH2 0x230E DUP5 PUSH2 0x26A4 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2332 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x270C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x233F DUP3 PUSH2 0x2485 JUMP JUMPDEST PUSH2 0x237E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2375 SWAP1 PUSH2 0x47F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xA PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x239E SWAP2 SWAP1 PUSH2 0x4190 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x246E JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x247E JUMPI POP PUSH2 0x247D DUP3 PUSH2 0x2767 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24FC DUP4 DUP4 DUP4 PUSH2 0x27D1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2527 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x28E3 JUMP JUMPDEST ISZERO PUSH2 0x2680 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x2550 PUSH2 0x1B3E JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2572 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x486D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x25AE JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x25AB SWAP2 SWAP1 PUSH2 0x48CE JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2630 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x25DE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x25E3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x2628 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x261F SWAP1 PUSH2 0x4706 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x2685 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x26AF DUP3 PUSH2 0x1AF3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26B9 PUSH2 0x268D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x26D9 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x2704 JUMP JUMPDEST DUP1 PUSH2 0x26E3 DUP5 PUSH2 0x2906 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x26F4 SWAP3 SWAP2 SWAP1 PUSH2 0x4762 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2716 DUP4 DUP4 PUSH2 0x2A66 JUMP JUMPDEST PUSH2 0x2723 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x2506 JUMP JUMPDEST PUSH2 0x2762 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2759 SWAP1 PUSH2 0x4706 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27DC DUP4 DUP4 DUP4 PUSH2 0x2C3F JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x281E JUMPI PUSH2 0x2819 DUP2 PUSH2 0x2C44 JUMP JUMPDEST PUSH2 0x285D JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x285C JUMPI PUSH2 0x285B DUP4 DUP3 PUSH2 0x2C8D JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x289F JUMPI PUSH2 0x289A DUP2 PUSH2 0x2DFA JUMP JUMPDEST PUSH2 0x28DE JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x28DD JUMPI PUSH2 0x28DC DUP3 DUP3 PUSH2 0x2ECB JUMP JUMPDEST JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 SUB PUSH2 0x294D JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x2A61 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x297F JUMPI DUP1 DUP1 PUSH2 0x2968 SWAP1 PUSH2 0x3962 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x2978 SWAP2 SWAP1 PUSH2 0x492A JUMP JUMPDEST SWAP2 POP PUSH2 0x2955 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x299B JUMPI PUSH2 0x299A PUSH2 0x3442 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x29CD JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0x2A5A JUMPI PUSH1 0x1 DUP3 PUSH2 0x29E6 SWAP2 SWAP1 PUSH2 0x4554 JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x29F5 SWAP2 SWAP1 PUSH2 0x495B JUMP JUMPDEST PUSH1 0x30 PUSH2 0x2A01 SWAP2 SWAP1 PUSH2 0x4588 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2A17 JUMPI PUSH2 0x2A16 PUSH2 0x3904 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x2A53 SWAP2 SWAP1 PUSH2 0x492A JUMP JUMPDEST SWAP5 POP PUSH2 0x29D1 JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2AD5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2ACC SWAP1 PUSH2 0x49D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2ADE DUP2 PUSH2 0x2485 JUMP JUMPDEST ISZERO PUSH2 0x2B1E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B15 SWAP1 PUSH2 0x4A44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2B2A PUSH1 0x0 DUP4 DUP4 PUSH2 0x24F1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2B7A SWAP2 SWAP1 PUSH2 0x4588 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x2C3B PUSH1 0x0 DUP4 DUP4 PUSH2 0x2501 JUMP JUMPDEST POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD SWAP1 POP PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x8 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x2C9A DUP5 PUSH2 0x112C JUMP JUMPDEST PUSH2 0x2CA4 SWAP2 SWAP1 PUSH2 0x4554 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 EQ PUSH2 0x2D89 JUMPI PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP1 PUSH1 0x6 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x8 DUP1 SLOAD SWAP1 POP PUSH2 0x2E0E SWAP2 SWAP1 PUSH2 0x4554 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2E3E JUMPI PUSH2 0x2E3D PUSH2 0x3904 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2E60 JUMPI PUSH2 0x2E5F PUSH2 0x3904 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x9 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x8 DUP1 SLOAD DUP1 PUSH2 0x2EAF JUMPI PUSH2 0x2EAE PUSH2 0x4A64 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2ED6 DUP4 PUSH2 0x112C JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F5D DUP2 PUSH2 0x2F4A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2F78 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2F54 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2FC7 DUP2 PUSH2 0x2F92 JUMP JUMPDEST DUP2 EQ PUSH2 0x2FD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2FE4 DUP2 PUSH2 0x2FBE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3000 JUMPI PUSH2 0x2FFF PUSH2 0x2F88 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x300E DUP5 DUP3 DUP6 ADD PUSH2 0x2FD5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x302C DUP2 PUSH2 0x3017 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3047 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3023 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3087 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x306C JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30AF DUP3 PUSH2 0x304D JUMP JUMPDEST PUSH2 0x30B9 DUP2 DUP6 PUSH2 0x3058 JUMP JUMPDEST SWAP4 POP PUSH2 0x30C9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3069 JUMP JUMPDEST PUSH2 0x30D2 DUP2 PUSH2 0x3093 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x30F7 DUP2 DUP5 PUSH2 0x30A4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3108 DUP2 PUSH2 0x2F4A JUMP JUMPDEST DUP2 EQ PUSH2 0x3113 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3125 DUP2 PUSH2 0x30FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3141 JUMPI PUSH2 0x3140 PUSH2 0x2F88 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x314F DUP5 DUP3 DUP6 ADD PUSH2 0x3116 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3183 DUP3 PUSH2 0x3158 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3193 DUP2 PUSH2 0x3178 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x31AE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x318A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x31BD DUP2 PUSH2 0x3178 JUMP JUMPDEST DUP2 EQ PUSH2 0x31C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x31DA DUP2 PUSH2 0x31B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x31F7 JUMPI PUSH2 0x31F6 PUSH2 0x2F88 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3205 DUP6 DUP3 DUP7 ADD PUSH2 0x31CB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3216 DUP6 DUP3 DUP7 ADD PUSH2 0x3116 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3236 JUMPI PUSH2 0x3235 PUSH2 0x2F88 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3244 DUP5 DUP3 DUP6 ADD PUSH2 0x31CB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3282 DUP2 PUSH2 0x2F4A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3294 DUP4 DUP4 PUSH2 0x3279 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32B8 DUP3 PUSH2 0x324D JUMP JUMPDEST PUSH2 0x32C2 DUP2 DUP6 PUSH2 0x3258 JUMP JUMPDEST SWAP4 POP PUSH2 0x32CD DUP4 PUSH2 0x3269 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x32FE JUMPI DUP2 MLOAD PUSH2 0x32E5 DUP9 DUP3 PUSH2 0x3288 JUMP JUMPDEST SWAP8 POP PUSH2 0x32F0 DUP4 PUSH2 0x32A0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x32D1 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3325 DUP2 DUP5 PUSH2 0x32AD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3346 JUMPI PUSH2 0x3345 PUSH2 0x2F88 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3354 DUP7 DUP3 DUP8 ADD PUSH2 0x31CB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3365 DUP7 DUP3 DUP8 ADD PUSH2 0x31CB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3376 DUP7 DUP3 DUP8 ADD PUSH2 0x3116 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x339A DUP2 DUP8 PUSH2 0x30A4 JUMP JUMPDEST SWAP1 POP PUSH2 0x33A9 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2F54 JUMP JUMPDEST PUSH2 0x33B6 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2F54 JUMP JUMPDEST PUSH2 0x33C3 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2F54 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x33D5 DUP2 PUSH2 0x3017 JUMP JUMPDEST DUP2 EQ PUSH2 0x33E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x33F2 DUP2 PUSH2 0x33CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x340F JUMPI PUSH2 0x340E PUSH2 0x2F88 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x341D DUP6 DUP3 DUP7 ADD PUSH2 0x31CB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x342E DUP6 DUP3 DUP7 ADD PUSH2 0x33E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x347A DUP3 PUSH2 0x3093 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3499 JUMPI PUSH2 0x3498 PUSH2 0x3442 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34AC PUSH2 0x2F7E JUMP JUMPDEST SWAP1 POP PUSH2 0x34B8 DUP3 DUP3 PUSH2 0x3471 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x34D8 JUMPI PUSH2 0x34D7 PUSH2 0x3442 JUMP JUMPDEST JUMPDEST PUSH2 0x34E1 DUP3 PUSH2 0x3093 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3510 PUSH2 0x350B DUP5 PUSH2 0x34BD JUMP JUMPDEST PUSH2 0x34A2 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x352C JUMPI PUSH2 0x352B PUSH2 0x343D JUMP JUMPDEST JUMPDEST PUSH2 0x3537 DUP5 DUP3 DUP6 PUSH2 0x34EE JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3554 JUMPI PUSH2 0x3553 PUSH2 0x3438 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3564 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x34FD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3586 JUMPI PUSH2 0x3585 PUSH2 0x2F88 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x35A4 JUMPI PUSH2 0x35A3 PUSH2 0x2F8D JUMP JUMPDEST JUMPDEST PUSH2 0x35B0 DUP7 DUP3 DUP8 ADD PUSH2 0x353F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x35C1 DUP7 DUP3 DUP8 ADD PUSH2 0x3116 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x35D2 DUP7 DUP3 DUP8 ADD PUSH2 0x3116 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x35F3 JUMPI PUSH2 0x35F2 PUSH2 0x2F88 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3601 DUP6 DUP3 DUP7 ADD PUSH2 0x3116 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3612 DUP6 DUP3 DUP7 ADD PUSH2 0x3116 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3637 JUMPI PUSH2 0x3636 PUSH2 0x3442 JUMP JUMPDEST JUMPDEST PUSH2 0x3640 DUP3 PUSH2 0x3093 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3660 PUSH2 0x365B DUP5 PUSH2 0x361C JUMP JUMPDEST PUSH2 0x34A2 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x367C JUMPI PUSH2 0x367B PUSH2 0x343D JUMP JUMPDEST JUMPDEST PUSH2 0x3687 DUP5 DUP3 DUP6 PUSH2 0x34EE JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x36A4 JUMPI PUSH2 0x36A3 PUSH2 0x3438 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x36B4 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x364D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x36D7 JUMPI PUSH2 0x36D6 PUSH2 0x2F88 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x36E5 DUP8 DUP3 DUP9 ADD PUSH2 0x31CB JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x36F6 DUP8 DUP3 DUP9 ADD PUSH2 0x31CB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x3707 DUP8 DUP3 DUP9 ADD PUSH2 0x3116 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3728 JUMPI PUSH2 0x3727 PUSH2 0x2F8D JUMP JUMPDEST JUMPDEST PUSH2 0x3734 DUP8 DUP3 DUP9 ADD PUSH2 0x368F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3757 JUMPI PUSH2 0x3756 PUSH2 0x2F88 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3765 DUP6 DUP3 DUP7 ADD PUSH2 0x31CB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3776 DUP6 DUP3 DUP7 ADD PUSH2 0x31CB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x37C7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x37DA JUMPI PUSH2 0x37D9 PUSH2 0x3780 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x383C PUSH1 0x21 DUP4 PUSH2 0x3058 JUMP JUMPDEST SWAP2 POP PUSH2 0x3847 DUP3 PUSH2 0x37E0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x386B DUP2 PUSH2 0x382F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206E6F7220617070726F76656420666F7220616C6C0000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38CE PUSH1 0x3E DUP4 PUSH2 0x3058 JUMP JUMPDEST SWAP2 POP PUSH2 0x38D9 DUP3 PUSH2 0x3872 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x38FD DUP2 PUSH2 0x38C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x396D DUP3 PUSH2 0x2F4A JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x399F JUMPI PUSH2 0x399E PUSH2 0x3933 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206E6F7220617070726F766564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A06 PUSH1 0x2E DUP4 PUSH2 0x3058 JUMP JUMPDEST SWAP2 POP PUSH2 0x3A11 DUP3 PUSH2 0x39AA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3A35 DUP2 PUSH2 0x39F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243373231456E756D657261626C653A206F776E657220696E646578206F75 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x74206F6620626F756E6473000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A98 PUSH1 0x2B DUP4 PUSH2 0x3058 JUMP JUMPDEST SWAP2 POP PUSH2 0x3AA3 DUP3 PUSH2 0x3A3C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3AC7 DUP2 PUSH2 0x3A8B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7574206F6620626F756E64730000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B2A PUSH1 0x2C DUP4 PUSH2 0x3058 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B35 DUP3 PUSH2 0x3ACE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B59 DUP2 PUSH2 0x3B1D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E4654206973206E6F7420666F722073616C6500000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B96 PUSH1 0x13 DUP4 PUSH2 0x3058 JUMP JUMPDEST SWAP2 POP PUSH2 0x3BA1 DUP3 PUSH2 0x3B60 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3BC5 DUP2 PUSH2 0x3B89 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E636F7272656374207061796D656E7420616D6F756E740000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C02 PUSH1 0x18 DUP4 PUSH2 0x3058 JUMP JUMPDEST SWAP2 POP PUSH2 0x3C0D DUP3 PUSH2 0x3BCC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3C31 DUP2 PUSH2 0x3BF5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53656C6C6572206164647265737320697320696E76616C696400000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C6E PUSH1 0x19 DUP4 PUSH2 0x3058 JUMP JUMPDEST SWAP2 POP PUSH2 0x3C79 DUP3 PUSH2 0x3C38 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3C9D DUP2 PUSH2 0x3C61 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F742062757920796F7572206F776E204E4654000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CDA PUSH1 0x17 DUP4 PUSH2 0x3058 JUMP JUMPDEST SWAP2 POP PUSH2 0x3CE5 DUP3 PUSH2 0x3CA4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D09 DUP2 PUSH2 0x3CCD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F7572736520646F6573206E6F742065786973740000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D46 PUSH1 0x15 DUP4 PUSH2 0x3058 JUMP JUMPDEST SWAP2 POP PUSH2 0x3D51 DUP3 PUSH2 0x3D10 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D75 DUP2 PUSH2 0x3D39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DB2 PUSH1 0x18 DUP4 PUSH2 0x3058 JUMP JUMPDEST SWAP2 POP PUSH2 0x3DBD DUP3 PUSH2 0x3D7C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3DE1 DUP2 PUSH2 0x3DA5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E44 PUSH1 0x29 DUP4 PUSH2 0x3058 JUMP JUMPDEST SWAP2 POP PUSH2 0x3E4F DUP3 PUSH2 0x3DE8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3E73 DUP2 PUSH2 0x3E37 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D617820737570706C79206D7573742062652067726561746572207468616E20 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7A65726F00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3ED6 PUSH1 0x24 DUP4 PUSH2 0x3058 JUMP JUMPDEST SWAP2 POP PUSH2 0x3EE1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3F05 DUP2 PUSH2 0x3EC9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5072696365206D7573742062652067726561746572207468616E207A65726F00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F42 PUSH1 0x1F DUP4 PUSH2 0x3058 JUMP JUMPDEST SWAP2 POP PUSH2 0x3F4D DUP3 PUSH2 0x3F0C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3F71 DUP2 PUSH2 0x3F35 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5552492063616E6E6F7420626520656D70747900000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FAE PUSH1 0x13 DUP4 PUSH2 0x3058 JUMP JUMPDEST SWAP2 POP PUSH2 0x3FB9 DUP3 PUSH2 0x3F78 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3FDD DUP2 PUSH2 0x3FA1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x4046 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x4009 JUMP JUMPDEST PUSH2 0x4050 DUP7 DUP4 PUSH2 0x4009 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x408D PUSH2 0x4088 PUSH2 0x4083 DUP5 PUSH2 0x2F4A JUMP JUMPDEST PUSH2 0x4068 JUMP JUMPDEST PUSH2 0x2F4A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x40A7 DUP4 PUSH2 0x4072 JUMP JUMPDEST PUSH2 0x40BB PUSH2 0x40B3 DUP3 PUSH2 0x4094 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x4016 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x40D0 PUSH2 0x40C3 JUMP JUMPDEST PUSH2 0x40DB DUP2 DUP5 DUP5 PUSH2 0x409E JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x40FF JUMPI PUSH2 0x40F4 PUSH1 0x0 DUP3 PUSH2 0x40C8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x40E1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x4144 JUMPI PUSH2 0x4115 DUP2 PUSH2 0x3FE4 JUMP JUMPDEST PUSH2 0x411E DUP5 PUSH2 0x3FF9 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x412D JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x4141 PUSH2 0x4139 DUP6 PUSH2 0x3FF9 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x40E0 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4167 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x4149 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4180 DUP4 DUP4 PUSH2 0x4156 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4199 DUP3 PUSH2 0x304D JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x41B2 JUMPI PUSH2 0x41B1 PUSH2 0x3442 JUMP JUMPDEST JUMPDEST PUSH2 0x41BC DUP3 SLOAD PUSH2 0x37AF JUMP JUMPDEST PUSH2 0x41C7 DUP3 DUP3 DUP6 PUSH2 0x4103 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x41FA JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x41E8 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x41F2 DUP6 DUP3 PUSH2 0x4174 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x425A JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x4208 DUP7 PUSH2 0x3FE4 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4230 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x420B JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x424D JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x4249 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x4156 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x427C DUP2 DUP7 PUSH2 0x30A4 JUMP JUMPDEST SWAP1 POP PUSH2 0x428B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2F54 JUMP JUMPDEST PUSH2 0x4298 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2F54 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x596F7520617265206E6F7420746865206F776E6572206F662074686973204E46 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x5400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42FC PUSH1 0x21 DUP4 PUSH2 0x3058 JUMP JUMPDEST SWAP2 POP PUSH2 0x4307 DUP3 PUSH2 0x42A0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x432B DUP2 PUSH2 0x42EF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D617820737570706C7920726561636865640000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4368 PUSH1 0x12 DUP4 PUSH2 0x3058 JUMP JUMPDEST SWAP2 POP PUSH2 0x4373 DUP3 PUSH2 0x4332 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4397 DUP2 PUSH2 0x435B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43FA PUSH1 0x26 DUP4 PUSH2 0x3058 JUMP JUMPDEST SWAP2 POP PUSH2 0x4405 DUP3 PUSH2 0x439E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4429 DUP2 PUSH2 0x43ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x448C PUSH1 0x25 DUP4 PUSH2 0x3058 JUMP JUMPDEST SWAP2 POP PUSH2 0x4497 DUP3 PUSH2 0x4430 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x44BB DUP2 PUSH2 0x447F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x451E PUSH1 0x24 DUP4 PUSH2 0x3058 JUMP JUMPDEST SWAP2 POP PUSH2 0x4529 DUP3 PUSH2 0x44C2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x454D DUP2 PUSH2 0x4511 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x455F DUP3 PUSH2 0x2F4A JUMP JUMPDEST SWAP2 POP PUSH2 0x456A DUP4 PUSH2 0x2F4A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x4582 JUMPI PUSH2 0x4581 PUSH2 0x3933 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4593 DUP3 PUSH2 0x2F4A JUMP JUMPDEST SWAP2 POP PUSH2 0x459E DUP4 PUSH2 0x2F4A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x45B6 JUMPI PUSH2 0x45B5 PUSH2 0x3933 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45F2 PUSH1 0x20 DUP4 PUSH2 0x3058 JUMP JUMPDEST SWAP2 POP PUSH2 0x45FD DUP3 PUSH2 0x45BC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4621 DUP2 PUSH2 0x45E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x465E PUSH1 0x19 DUP4 PUSH2 0x3058 JUMP JUMPDEST SWAP2 POP PUSH2 0x4669 DUP3 PUSH2 0x4628 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x468D DUP2 PUSH2 0x4651 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46F0 PUSH1 0x32 DUP4 PUSH2 0x3058 JUMP JUMPDEST SWAP2 POP PUSH2 0x46FB DUP3 PUSH2 0x4694 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x471F DUP2 PUSH2 0x46E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x473C DUP3 PUSH2 0x304D JUMP JUMPDEST PUSH2 0x4746 DUP2 DUP6 PUSH2 0x4726 JUMP JUMPDEST SWAP4 POP PUSH2 0x4756 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3069 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x476E DUP3 DUP6 PUSH2 0x4731 JUMP JUMPDEST SWAP2 POP PUSH2 0x477A DUP3 DUP5 PUSH2 0x4731 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x45524337323155524953746F726167653A2055524920736574206F66206E6F6E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6578697374656E7420746F6B656E000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47E2 PUSH1 0x2E DUP4 PUSH2 0x3058 JUMP JUMPDEST SWAP2 POP PUSH2 0x47ED DUP3 PUSH2 0x4786 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4811 DUP2 PUSH2 0x47D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x483F DUP3 PUSH2 0x4818 JUMP JUMPDEST PUSH2 0x4849 DUP2 DUP6 PUSH2 0x4823 JUMP JUMPDEST SWAP4 POP PUSH2 0x4859 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3069 JUMP JUMPDEST PUSH2 0x4862 DUP2 PUSH2 0x3093 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x4882 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x318A JUMP JUMPDEST PUSH2 0x488F PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x318A JUMP JUMPDEST PUSH2 0x489C PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2F54 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x48AE DUP2 DUP5 PUSH2 0x4834 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x48C8 DUP2 PUSH2 0x2FBE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x48E4 JUMPI PUSH2 0x48E3 PUSH2 0x2F88 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x48F2 DUP5 DUP3 DUP6 ADD PUSH2 0x48B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4935 DUP3 PUSH2 0x2F4A JUMP JUMPDEST SWAP2 POP PUSH2 0x4940 DUP4 PUSH2 0x2F4A JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x4950 JUMPI PUSH2 0x494F PUSH2 0x48FB JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4966 DUP3 PUSH2 0x2F4A JUMP JUMPDEST SWAP2 POP PUSH2 0x4971 DUP4 PUSH2 0x2F4A JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x4981 JUMPI PUSH2 0x4980 PUSH2 0x48FB JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49C2 PUSH1 0x20 DUP4 PUSH2 0x3058 JUMP JUMPDEST SWAP2 POP PUSH2 0x49CD DUP3 PUSH2 0x498C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x49F1 DUP2 PUSH2 0x49B5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A2E PUSH1 0x1C DUP4 PUSH2 0x3058 JUMP JUMPDEST SWAP2 POP PUSH2 0x4A39 DUP3 PUSH2 0x49F8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4A5D DUP2 PUSH2 0x4A21 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP3 0x27 PUSH24 0xF5CB317DCEC93261790D2952699717D6FC6B9A34BF3993D6 0xC1 REVERT MULMOD 0xC9 0xE2 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"270:5158:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;501:29;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1905:205;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2470:98:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3935:167;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3467:407;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5098:328:16;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1615:111:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4612:327:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1291:253:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;465:30:16;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5005:179:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1798:230:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;583:57:16;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3672:656;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4363:333;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;2190:218:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1929:204;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;646:56:16;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:0;;;;;;;;;;;;;:::i;:::-;;1201:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2632:102:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;536:41:16;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;4169:153:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2146:463:16;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4751:126;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3242:382;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5250:315:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1664:189:16;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4930:108;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2645:554;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4388:162:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;501:29:16;;;;:::o;1905:205::-;2040:4;2067:36;2091:11;2067:23;:36::i;:::-;2060:43;;1905:205;;;:::o;2470:98:1:-;2524:13;2556:5;2549:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2470:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;4071:15;:24;4087:7;4071:24;;;;;;;;;;;;;;;;;;;;;4064:31;;3935:167;;;:::o;3467:407::-;3547:13;3563:23;3578:7;3563:14;:23::i;:::-;3547:39;;3610:5;3604:11;;:2;:11;;;3596:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3701:5;3685:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3710:37;3727:5;3734:12;:10;:12::i;:::-;3710:16;:37::i;:::-;3685:62;3664:171;;;;;;;;;;;;:::i;:::-;;;;;;;;;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3537:337;3467:407;;:::o;5098:328:16:-;5156:16;5184:15;5202:16;5212:5;5202:9;:16::i;:::-;5184:34;;5228:25;5270:7;5256:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5228:50;;5294:9;5289:106;5313:7;5309:1;:11;5289:106;;;5355:29;5375:5;5382:1;5355:19;:29::i;:::-;5341:8;5350:1;5341:11;;;;;;;;:::i;:::-;;;;;;;:43;;;;;5322:3;;;;;:::i;:::-;;;;5289:106;;;;5411:8;5404:15;;;;5098:328;;;:::o;1615:111:4:-;1676:7;1702:10;:17;;;;1695:24;;1615:111;:::o;4612:327:1:-;4801:41;4820:12;:10;:12::i;:::-;4834:7;4801:18;:41::i;:::-;4793:100;;;;;;;;;;;;:::i;:::-;;;;;;;;;4904:28;4914:4;4920:2;4924:7;4904:9;:28::i;:::-;4612:327;;;:::o;1291:253:4:-;1388:7;1423:23;1440:5;1423:16;:23::i;:::-;1415:5;:31;1407:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;1511:12;:19;1524:5;1511:19;;;;;;;;;;;;;;;:26;1531:5;1511:26;;;;;;;;;;;;1504:33;;1291:253;;;;:::o;465:30:16:-;;;;:::o;5005:179:1:-;5138:39;5155:4;5161:2;5165:7;5138:39;;;;;;;;;;;;:16;:39::i;:::-;5005:179;;;:::o;1798:230:4:-;1873:7;1908:30;:28;:30::i;:::-;1900:5;:38;1892:95;;;;;;;;;;;;:::i;:::-;;;;;;;;;2004:10;2015:5;2004:17;;;;;;;;:::i;:::-;;;;;;;;;;1997:24;;1798:230;;;:::o;583:57:16:-;;;;;;;;;;;;;;;;;;;;;;:::o;3672:656::-;3771:1;3738:21;:30;3760:7;3738:30;;;;;;;;;;;;:34;3730:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;3827:21;:30;3849:7;3827:30;;;;;;;;;;;;3814:9;:43;3806:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;3897:14;3914:22;:31;3937:7;3914:31;;;;;;;;;;;;;;;;;;;;;3897:48;;3981:1;3963:20;;:6;:20;;;3955:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;4041:10;4031:20;;:6;:20;;;4023:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;4090:38;4100:6;4108:10;4120:7;4090:9;:38::i;:::-;4146:6;4138:24;;:35;4163:9;4138:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4191:21;:30;4213:7;4191:30;;;;;;;;;;;4184:37;;;4238:22;:31;4261:7;4238:31;;;;;;;;;;;;4231:38;;;;;;;;;;;4314:6;4285:36;;4302:10;4285:36;;4293:7;4285:36;;;;;;;;;;3720:608;3672:656;:::o;4363:333::-;4452:13;4467:7;4476;4485;4508:21;4532:7;:17;4540:8;4532:17;;;;;;;;;;;4508:41;;4586:1;4567:6;:16;;;:20;4559:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;4631:6;:10;;4643:6;:12;;;4657:6;:16;;;4675:6;:13;;;4623:66;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4363:333;;;;;:::o;2190:218:1:-;2262:7;2281:13;2297:7;:16;2305:7;2297:16;;;;;;;;;;;;;;;;;;;;;2281:32;;2348:1;2331:19;;:5;:19;;;2323:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2396:5;2389:12;;;2190:218;;;:::o;1929:204::-;2001:7;2045:1;2028:19;;:5;:19;;;2020:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2110:9;:16;2120:5;2110:16;;;;;;;;;;;;;;;;2103:23;;1929:204;;;:::o;646:56:16:-;;;;;;;;;;;;;;;;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1201:85::-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;2632:102:1:-;2688:13;2720:7;2713:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2632:102;:::o;536:41:16:-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4169:153:1:-;4263:52;4282:12;:10;:12::i;:::-;4296:8;4306;4263:18;:52::i;:::-;4169:153;;:::o;2146:463:16:-;1094:13:0;:11;:13::i;:::-;2268:1:16::1;2256:9;:13;2248:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;2336:1;2328:5;:9;2320:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;2411:1;2397:3;2391:17;:21;2383:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;2447:15;;:17;;;;;;;;;:::i;:::-;;;;;;2501:32;;;;;;;;2508:3;2501:32;;;;2513:5;2501:32;;;;2520:9;2501:32;;;;2531:1;2501:32;;::::0;2474:7:::1;:24;2482:15;;2474:24;;;;;;;;;;;:59;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2563:15;;2549:53;2580:3;2585:5;2592:9;2549:53;;;;;;;;:::i;:::-;;;;;;;;2146:463:::0;;;:::o;4751:126::-;4814:7;4840:21;:30;4862:7;4840:30;;;;;;;;;;;;4833:37;;4751:126;;;:::o;3242:382::-;3343:10;3323:30;;:16;3331:7;3323;:16::i;:::-;:30;;;3315:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;3417:1;3409:5;:9;3401:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;3499:10;3465:22;:31;3488:7;3465:31;;;;;;;;;;;;:44;;;;;;;;;;;;;;;;;;3552:5;3519:21;:30;3541:7;3519:30;;;;;;;;;;;:38;;;;3606:10;3573:44;;3590:7;3573:44;3599:5;3573:44;;;;;;:::i;:::-;;;;;;;;3242:382;;:::o;5250:315:1:-;5418:41;5437:12;:10;:12::i;:::-;5451:7;5418:18;:41::i;:::-;5410:100;;;;;;;;;;;;:::i;:::-;;;;;;;;;5520:38;5534:4;5540:2;5544:7;5553:4;5520:13;:38::i;:::-;5250:315;;;;:::o;1664:189:16:-;1787:13;1823:23;1838:7;1823:14;:23::i;:::-;1816:30;;1664:189;;;:::o;4930:108::-;4989:7;5015:16;5023:7;5015;:16::i;:::-;5008:23;;4930:108;;;:::o;2645:554::-;2708:21;2732:7;:17;2740:8;2732:17;;;;;;;;;;;2708:41;;2786:1;2767:6;:16;;;:20;2759:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;2847:6;:16;;;2831:6;:13;;;:32;2823:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;2917:6;:12;;;2904:9;:25;2896:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;2969:15;2989:14;;2987:16;;;;;:::i;:::-;;;;;;;2969:34;;3013:6;:13;;;:15;;;;;;;;;:::i;:::-;;;;;;3039:30;3049:10;3061:7;3039:9;:30::i;:::-;3079:33;3092:7;3101:6;:10;;3079:33;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:12;:33::i;:::-;3181:10;3152:40;;3162:8;3152:40;3172:7;3152:40;;;;;;:::i;:::-;;;;;;;;2698:501;;2645:554;:::o;4388:162:1:-;4485:4;4508:18;:25;4527:5;4508:25;;;;;;;;;;;;;;;:35;4534:8;4508:35;;;;;;;;;;;;;;;;;;;;;;;;;4501:42;;4388:162;;;;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;::::0;2161:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;990:222:4:-;1092:4;1130:35;1115:50;;;:11;:50;;;;:90;;;;1169:36;1193:11;1169:23;:36::i;:::-;1115:90;1108:97;;990:222;;;:::o;11657:133:1:-;11738:16;11746:7;11738;:16::i;:::-;11730:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;11657:133;:::o;640:96:9:-;693:7;719:10;712:17;;640:96;:::o;10959:171:1:-;11060:2;11033:15;:24;11049:7;11033:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;11115:7;11111:2;11077:46;;11086:23;11101:7;11086:14;:23::i;:::-;11077:46;;;;;;;;;;;;10959:171;;:::o;7317:261::-;7410:4;7426:13;7442:23;7457:7;7442:14;:23::i;:::-;7426:39;;7494:5;7483:16;;:7;:16;;;:52;;;;7503:32;7520:5;7527:7;7503:16;:32::i;:::-;7483:52;:87;;;;7563:7;7539:31;;:20;7551:7;7539:11;:20::i;:::-;:31;;;7483:87;7475:96;;;7317:261;;;;:::o;10242:605::-;10396:4;10369:31;;:23;10384:7;10369:14;:23::i;:::-;:31;;;10361:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;10474:1;10460:16;;:2;:16;;;10452:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;10528:39;10549:4;10555:2;10559:7;10528:20;:39::i;:::-;10629:29;10646:1;10650:7;10629:8;:29::i;:::-;10688:1;10669:9;:15;10679:4;10669:15;;;;;;;;;;;;;;;;:20;;;;;;;:::i;:::-;;;;;;;;10716:1;10699:9;:13;10709:2;10699:13;;;;;;;;;;;;;;;;:18;;;;;;;:::i;:::-;;;;;;;;10746:2;10727:7;:16;10735:7;10727:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;10783:7;10779:2;10764:27;;10773:4;10764:27;;;;;;;;;;;;10802:38;10822:4;10828:2;10832:7;10802:19;:38::i;:::-;10242:605;;;:::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;11266:307:1:-;11416:8;11407:17;;:5;:17;;;11399:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;11502:8;11464:18;:25;11483:5;11464:25;;;;;;;;;;;;;;;:35;11490:8;11464:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;11547:8;11525:41;;11540:5;11525:41;;;11557:8;11525:41;;;;;;:::i;:::-;;;;;;;;11266:307;;;:::o;6426:305::-;6576:28;6586:4;6592:2;6596:7;6576:9;:28::i;:::-;6622:47;6645:4;6651:2;6655:7;6664:4;6622:22;:47::i;:::-;6614:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;6426:305;;;;:::o;482:608:5:-;555:13;580:23;595:7;580:14;:23::i;:::-;614;640:10;:19;651:7;640:19;;;;;;;;;;;614:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;669:18;690:10;:8;:10::i;:::-;669:31;;795:1;779:4;773:18;:23;769:70;;819:9;812:16;;;;;;769:70;967:1;947:9;941:23;:27;937:106;;;1015:4;1021:9;998:33;;;;;;;;;:::i;:::-;;;;;;;;;;;;;984:48;;;;;;937:106;1060:23;1075:7;1060:14;:23::i;:::-;1053:30;;;;482:608;;;;:::o;7908:108:1:-;7983:26;7993:2;7997:7;7983:26;;;;;;;;;;;;:9;:26::i;:::-;7908:108;;:::o;1237:214:5:-;1336:16;1344:7;1336;:16::i;:::-;1328:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;1435:9;1413:10;:19;1424:7;1413:19;;;;;;;;;;;:31;;;;;;:::i;:::-;;1237:214;;:::o;1570:300:1:-;1672:4;1722:25;1707:40;;;:11;:40;;;;:104;;;;1778:33;1763:48;;;:11;:48;;;;1707:104;:156;;;;1827:36;1851:11;1827:23;:36::i;:::-;1707:156;1688:175;;1570:300;;;:::o;7034:125::-;7099:4;7150:1;7122:30;;:7;:16;7130:7;7122:16;;;;;;;;;;;;;;;;;;;;;:30;;;;7115:37;;7034:125;;;:::o;1227:209:16:-;1384:45;1411:4;1417:2;1421:7;1384:26;:45::i;:::-;1227:209;;;:::o;14223:121:1:-;;;;:::o;12342:831::-;12491:4;12511:15;:2;:13;;;:15::i;:::-;12507:660;;;12562:2;12546:36;;;12583:12;:10;:12::i;:::-;12597:4;12603:7;12612:4;12546:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;12542:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12801:1;12784:6;:13;:18;12780:321;;12826:60;;;;;;;;;;:::i;:::-;;;;;;;;12780:321;13053:6;13047:13;13038:6;13034:2;13030:15;13023:38;12542:573;12677:41;;;12667:51;;;:6;:51;;;;12660:58;;;;;12507:660;13152:4;13145:11;;12342:831;;;;;;;:::o;3318:92::-;3369:13;3394:9;;;;;;;;;;;;;;3318:92;:::o;2800:276::-;2873:13;2898:23;2913:7;2898:14;:23::i;:::-;2932:21;2956:10;:8;:10::i;:::-;2932:34;;3007:1;2989:7;2983:21;:25;:86;;;;;;;;;;;;;;;;;3035:7;3044:18;:7;:16;:18::i;:::-;3018:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2983:86;2976:93;;;2800:276;;;:::o;8237:309::-;8361:18;8367:2;8371:7;8361:5;:18::i;:::-;8410:53;8441:1;8445:2;8449:7;8458:4;8410:22;:53::i;:::-;8389:150;;;;;;;;;;;;:::i;:::-;;;;;;;;;8237:309;;;:::o;829:155:12:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;2624:572:4:-;2763:45;2790:4;2796:2;2800:7;2763:26;:45::i;:::-;2839:1;2823:18;;:4;:18;;;2819:183;;2857:40;2889:7;2857:31;:40::i;:::-;2819:183;;;2926:2;2918:10;;:4;:10;;;2914:88;;2944:47;2977:4;2983:7;2944:32;:47::i;:::-;2914:88;2819:183;3029:1;3015:16;;:2;:16;;;3011:179;;3047:45;3084:7;3047:36;:45::i;:::-;3011:179;;;3119:4;3113:10;;:2;:10;;;3109:81;;3139:40;3167:2;3171:7;3139:27;:40::i;:::-;3109:81;3011:179;2624:572;;;:::o;1175:320:8:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;392:703:11:-;448:13;674:1;665:5;:10;661:51;;691:10;;;;;;;;;;;;;;;;;;;;;661:51;721:12;736:5;721:20;;751:14;775:75;790:1;782:4;:9;775:75;;807:8;;;;;:::i;:::-;;;;837:2;829:10;;;;;:::i;:::-;;;775:75;;;859:19;891:6;881:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;859:39;;908:150;924:1;915:5;:10;908:150;;951:1;941:11;;;;;:::i;:::-;;;1017:2;1009:5;:10;;;;:::i;:::-;996:2;:24;;;;:::i;:::-;983:39;;966:6;973;966:14;;;;;;;;:::i;:::-;;;;;:56;;;;;;;;;;;1045:2;1036:11;;;;;:::i;:::-;;;908:150;;;1081:6;1067:21;;;;;392:703;;;;:::o;8868:427:1:-;8961:1;8947:16;;:2;:16;;;8939:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;9019:16;9027:7;9019;:16::i;:::-;9018:17;9010:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;9079:45;9108:1;9112:2;9116:7;9079:20;:45::i;:::-;9152:1;9135:9;:13;9145:2;9135:13;;;;;;;;;;;;;;;;:18;;;;;;;:::i;:::-;;;;;;;;9182:2;9163:7;:16;9171:7;9163:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9225:7;9221:2;9200:33;;9217:1;9200:33;;;;;;;;;;;;9244:44;9272:1;9276:2;9280:7;9244:19;:44::i;:::-;8868:427;;:::o;13729:122::-;;;;:::o;3902:161:4:-;4005:10;:17;;;;3978:15;:24;3994:7;3978:24;;;;;;;;;;;:44;;;;4032:10;4048:7;4032:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3902:161;:::o;4680:970::-;4942:22;4992:1;4967:22;4984:4;4967:16;:22::i;:::-;:26;;;;:::i;:::-;4942:51;;5003:18;5024:17;:26;5042:7;5024:26;;;;;;;;;;;;5003:47;;5168:14;5154:10;:28;5150:323;;5198:19;5220:12;:18;5233:4;5220:18;;;;;;;;;;;;;;;:34;5239:14;5220:34;;;;;;;;;;;;5198:56;;5302:11;5269:12;:18;5282:4;5269:18;;;;;;;;;;;;;;;:30;5288:10;5269:30;;;;;;;;;;;:44;;;;5418:10;5385:17;:30;5403:11;5385:30;;;;;;;;;;;:43;;;;5184:289;5150:323;5566:17;:26;5584:7;5566:26;;;;;;;;;;;5559:33;;;5609:12;:18;5622:4;5609:18;;;;;;;;;;;;;;;:34;5628:14;5609:34;;;;;;;;;;;5602:41;;;4761:889;;4680:970;;:::o;5938:1061::-;6187:22;6232:1;6212:10;:17;;;;:21;;;;:::i;:::-;6187:46;;6243:18;6264:15;:24;6280:7;6264:24;;;;;;;;;;;;6243:45;;6610:19;6632:10;6643:14;6632:26;;;;;;;;:::i;:::-;;;;;;;;;;6610:48;;6694:11;6669:10;6680;6669:22;;;;;;;;:::i;:::-;;;;;;;;;:36;;;;6804:10;6773:15;:28;6789:11;6773:28;;;;;;;;;;;:41;;;;6942:15;:24;6958:7;6942:24;;;;;;;;;;;6935:31;;;6976:10;:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6009:990;;;5938:1061;:::o;3490:217::-;3574:14;3591:20;3608:2;3591:16;:20::i;:::-;3574:37;;3648:7;3621:12;:16;3634:2;3621:16;;;;;;;;;;;;;;;:24;3638:6;3621:24;;;;;;;;;;;:34;;;;3694:6;3665:17;:26;3683:7;3665:26;;;;;;;;;;;:35;;;;3564:143;3490:217;;:::o;7:77:17:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:75::-;475:6;508:2;502:9;492:19;;442:75;:::o;523:117::-;632:1;629;622:12;646:117;755:1;752;745:12;769:149;805:7;845:66;838:5;834:78;823:89;;769:149;;;:::o;924:120::-;996:23;1013:5;996:23;:::i;:::-;989:5;986:34;976:62;;1034:1;1031;1024:12;976:62;924:120;:::o;1050:137::-;1095:5;1133:6;1120:20;1111:29;;1149:32;1175:5;1149:32;:::i;:::-;1050:137;;;;:::o;1193:327::-;1251:6;1300:2;1288:9;1279:7;1275:23;1271:32;1268:119;;;1306:79;;:::i;:::-;1268:119;1426:1;1451:52;1495:7;1486:6;1475:9;1471:22;1451:52;:::i;:::-;1441:62;;1397:116;1193:327;;;;:::o;1526:90::-;1560:7;1603:5;1596:13;1589:21;1578:32;;1526:90;;;:::o;1622:109::-;1703:21;1718:5;1703:21;:::i;:::-;1698:3;1691:34;1622:109;;:::o;1737:210::-;1824:4;1862:2;1851:9;1847:18;1839:26;;1875:65;1937:1;1926:9;1922:17;1913:6;1875:65;:::i;:::-;1737:210;;;;:::o;1953:99::-;2005:6;2039:5;2033:12;2023:22;;1953:99;;;:::o;2058:169::-;2142:11;2176:6;2171:3;2164:19;2216:4;2211:3;2207:14;2192:29;;2058:169;;;;:::o;2233:246::-;2314:1;2324:113;2338:6;2335:1;2332:13;2324:113;;;2423:1;2418:3;2414:11;2408:18;2404:1;2399:3;2395:11;2388:39;2360:2;2357:1;2353:10;2348:15;;2324:113;;;2471:1;2462:6;2457:3;2453:16;2446:27;2295:184;2233:246;;;:::o;2485:102::-;2526:6;2577:2;2573:7;2568:2;2561:5;2557:14;2553:28;2543:38;;2485:102;;;:::o;2593:377::-;2681:3;2709:39;2742:5;2709:39;:::i;:::-;2764:71;2828:6;2823:3;2764:71;:::i;:::-;2757:78;;2844:65;2902:6;2897:3;2890:4;2883:5;2879:16;2844:65;:::i;:::-;2934:29;2956:6;2934:29;:::i;:::-;2929:3;2925:39;2918:46;;2685:285;2593:377;;;;:::o;2976:313::-;3089:4;3127:2;3116:9;3112:18;3104:26;;3176:9;3170:4;3166:20;3162:1;3151:9;3147:17;3140:47;3204:78;3277:4;3268:6;3204:78;:::i;:::-;3196:86;;2976:313;;;;:::o;3295:122::-;3368:24;3386:5;3368:24;:::i;:::-;3361:5;3358:35;3348:63;;3407:1;3404;3397:12;3348:63;3295:122;:::o;3423:139::-;3469:5;3507:6;3494:20;3485:29;;3523:33;3550:5;3523:33;:::i;:::-;3423:139;;;;:::o;3568:329::-;3627:6;3676:2;3664:9;3655:7;3651:23;3647:32;3644:119;;;3682:79;;:::i;:::-;3644:119;3802:1;3827:53;3872:7;3863:6;3852:9;3848:22;3827:53;:::i;:::-;3817:63;;3773:117;3568:329;;;;:::o;3903:126::-;3940:7;3980:42;3973:5;3969:54;3958:65;;3903:126;;;:::o;4035:96::-;4072:7;4101:24;4119:5;4101:24;:::i;:::-;4090:35;;4035:96;;;:::o;4137:118::-;4224:24;4242:5;4224:24;:::i;:::-;4219:3;4212:37;4137:118;;:::o;4261:222::-;4354:4;4392:2;4381:9;4377:18;4369:26;;4405:71;4473:1;4462:9;4458:17;4449:6;4405:71;:::i;:::-;4261:222;;;;:::o;4489:122::-;4562:24;4580:5;4562:24;:::i;:::-;4555:5;4552:35;4542:63;;4601:1;4598;4591:12;4542:63;4489:122;:::o;4617:139::-;4663:5;4701:6;4688:20;4679:29;;4717:33;4744:5;4717:33;:::i;:::-;4617:139;;;;:::o;4762:474::-;4830:6;4838;4887:2;4875:9;4866:7;4862:23;4858:32;4855:119;;;4893:79;;:::i;:::-;4855:119;5013:1;5038:53;5083:7;5074:6;5063:9;5059:22;5038:53;:::i;:::-;5028:63;;4984:117;5140:2;5166:53;5211:7;5202:6;5191:9;5187:22;5166:53;:::i;:::-;5156:63;;5111:118;4762:474;;;;;:::o;5242:329::-;5301:6;5350:2;5338:9;5329:7;5325:23;5321:32;5318:119;;;5356:79;;:::i;:::-;5318:119;5476:1;5501:53;5546:7;5537:6;5526:9;5522:22;5501:53;:::i;:::-;5491:63;;5447:117;5242:329;;;;:::o;5577:114::-;5644:6;5678:5;5672:12;5662:22;;5577:114;;;:::o;5697:184::-;5796:11;5830:6;5825:3;5818:19;5870:4;5865:3;5861:14;5846:29;;5697:184;;;;:::o;5887:132::-;5954:4;5977:3;5969:11;;6007:4;6002:3;5998:14;5990:22;;5887:132;;;:::o;6025:108::-;6102:24;6120:5;6102:24;:::i;:::-;6097:3;6090:37;6025:108;;:::o;6139:179::-;6208:10;6229:46;6271:3;6263:6;6229:46;:::i;:::-;6307:4;6302:3;6298:14;6284:28;;6139:179;;;;:::o;6324:113::-;6394:4;6426;6421:3;6417:14;6409:22;;6324:113;;;:::o;6473:732::-;6592:3;6621:54;6669:5;6621:54;:::i;:::-;6691:86;6770:6;6765:3;6691:86;:::i;:::-;6684:93;;6801:56;6851:5;6801:56;:::i;:::-;6880:7;6911:1;6896:284;6921:6;6918:1;6915:13;6896:284;;;6997:6;6991:13;7024:63;7083:3;7068:13;7024:63;:::i;:::-;7017:70;;7110:60;7163:6;7110:60;:::i;:::-;7100:70;;6956:224;6943:1;6940;6936:9;6931:14;;6896:284;;;6900:14;7196:3;7189:10;;6597:608;;;6473:732;;;;:::o;7211:373::-;7354:4;7392:2;7381:9;7377:18;7369:26;;7441:9;7435:4;7431:20;7427:1;7416:9;7412:17;7405:47;7469:108;7572:4;7563:6;7469:108;:::i;:::-;7461:116;;7211:373;;;;:::o;7590:619::-;7667:6;7675;7683;7732:2;7720:9;7711:7;7707:23;7703:32;7700:119;;;7738:79;;:::i;:::-;7700:119;7858:1;7883:53;7928:7;7919:6;7908:9;7904:22;7883:53;:::i;:::-;7873:63;;7829:117;7985:2;8011:53;8056:7;8047:6;8036:9;8032:22;8011:53;:::i;:::-;8001:63;;7956:118;8113:2;8139:53;8184:7;8175:6;8164:9;8160:22;8139:53;:::i;:::-;8129:63;;8084:118;7590:619;;;;;:::o;8215:644::-;8412:4;8450:3;8439:9;8435:19;8427:27;;8500:9;8494:4;8490:20;8486:1;8475:9;8471:17;8464:47;8528:78;8601:4;8592:6;8528:78;:::i;:::-;8520:86;;8616:72;8684:2;8673:9;8669:18;8660:6;8616:72;:::i;:::-;8698;8766:2;8755:9;8751:18;8742:6;8698:72;:::i;:::-;8780;8848:2;8837:9;8833:18;8824:6;8780:72;:::i;:::-;8215:644;;;;;;;:::o;8865:116::-;8935:21;8950:5;8935:21;:::i;:::-;8928:5;8925:32;8915:60;;8971:1;8968;8961:12;8915:60;8865:116;:::o;8987:133::-;9030:5;9068:6;9055:20;9046:29;;9084:30;9108:5;9084:30;:::i;:::-;8987:133;;;;:::o;9126:468::-;9191:6;9199;9248:2;9236:9;9227:7;9223:23;9219:32;9216:119;;;9254:79;;:::i;:::-;9216:119;9374:1;9399:53;9444:7;9435:6;9424:9;9420:22;9399:53;:::i;:::-;9389:63;;9345:117;9501:2;9527:50;9569:7;9560:6;9549:9;9545:22;9527:50;:::i;:::-;9517:60;;9472:115;9126:468;;;;;:::o;9600:117::-;9709:1;9706;9699:12;9723:117;9832:1;9829;9822:12;9846:180;9894:77;9891:1;9884:88;9991:4;9988:1;9981:15;10015:4;10012:1;10005:15;10032:281;10115:27;10137:4;10115:27;:::i;:::-;10107:6;10103:40;10245:6;10233:10;10230:22;10209:18;10197:10;10194:34;10191:62;10188:88;;;10256:18;;:::i;:::-;10188:88;10296:10;10292:2;10285:22;10075:238;10032:281;;:::o;10319:129::-;10353:6;10380:20;;:::i;:::-;10370:30;;10409:33;10437:4;10429:6;10409:33;:::i;:::-;10319:129;;;:::o;10454:308::-;10516:4;10606:18;10598:6;10595:30;10592:56;;;10628:18;;:::i;:::-;10592:56;10666:29;10688:6;10666:29;:::i;:::-;10658:37;;10750:4;10744;10740:15;10732:23;;10454:308;;;:::o;10768:146::-;10865:6;10860:3;10855;10842:30;10906:1;10897:6;10892:3;10888:16;10881:27;10768:146;;;:::o;10920:425::-;10998:5;11023:66;11039:49;11081:6;11039:49;:::i;:::-;11023:66;:::i;:::-;11014:75;;11112:6;11105:5;11098:21;11150:4;11143:5;11139:16;11188:3;11179:6;11174:3;11170:16;11167:25;11164:112;;;11195:79;;:::i;:::-;11164:112;11285:54;11332:6;11327:3;11322;11285:54;:::i;:::-;11004:341;10920:425;;;;;:::o;11365:340::-;11421:5;11470:3;11463:4;11455:6;11451:17;11447:27;11437:122;;11478:79;;:::i;:::-;11437:122;11595:6;11582:20;11620:79;11695:3;11687:6;11680:4;11672:6;11668:17;11620:79;:::i;:::-;11611:88;;11427:278;11365:340;;;;:::o;11711:799::-;11798:6;11806;11814;11863:2;11851:9;11842:7;11838:23;11834:32;11831:119;;;11869:79;;:::i;:::-;11831:119;12017:1;12006:9;12002:17;11989:31;12047:18;12039:6;12036:30;12033:117;;;12069:79;;:::i;:::-;12033:117;12174:63;12229:7;12220:6;12209:9;12205:22;12174:63;:::i;:::-;12164:73;;11960:287;12286:2;12312:53;12357:7;12348:6;12337:9;12333:22;12312:53;:::i;:::-;12302:63;;12257:118;12414:2;12440:53;12485:7;12476:6;12465:9;12461:22;12440:53;:::i;:::-;12430:63;;12385:118;11711:799;;;;;:::o;12516:474::-;12584:6;12592;12641:2;12629:9;12620:7;12616:23;12612:32;12609:119;;;12647:79;;:::i;:::-;12609:119;12767:1;12792:53;12837:7;12828:6;12817:9;12813:22;12792:53;:::i;:::-;12782:63;;12738:117;12894:2;12920:53;12965:7;12956:6;12945:9;12941:22;12920:53;:::i;:::-;12910:63;;12865:118;12516:474;;;;;:::o;12996:307::-;13057:4;13147:18;13139:6;13136:30;13133:56;;;13169:18;;:::i;:::-;13133:56;13207:29;13229:6;13207:29;:::i;:::-;13199:37;;13291:4;13285;13281:15;13273:23;;12996:307;;;:::o;13309:423::-;13386:5;13411:65;13427:48;13468:6;13427:48;:::i;:::-;13411:65;:::i;:::-;13402:74;;13499:6;13492:5;13485:21;13537:4;13530:5;13526:16;13575:3;13566:6;13561:3;13557:16;13554:25;13551:112;;;13582:79;;:::i;:::-;13551:112;13672:54;13719:6;13714:3;13709;13672:54;:::i;:::-;13392:340;13309:423;;;;;:::o;13751:338::-;13806:5;13855:3;13848:4;13840:6;13836:17;13832:27;13822:122;;13863:79;;:::i;:::-;13822:122;13980:6;13967:20;14005:78;14079:3;14071:6;14064:4;14056:6;14052:17;14005:78;:::i;:::-;13996:87;;13812:277;13751:338;;;;:::o;14095:943::-;14190:6;14198;14206;14214;14263:3;14251:9;14242:7;14238:23;14234:33;14231:120;;;14270:79;;:::i;:::-;14231:120;14390:1;14415:53;14460:7;14451:6;14440:9;14436:22;14415:53;:::i;:::-;14405:63;;14361:117;14517:2;14543:53;14588:7;14579:6;14568:9;14564:22;14543:53;:::i;:::-;14533:63;;14488:118;14645:2;14671:53;14716:7;14707:6;14696:9;14692:22;14671:53;:::i;:::-;14661:63;;14616:118;14801:2;14790:9;14786:18;14773:32;14832:18;14824:6;14821:30;14818:117;;;14854:79;;:::i;:::-;14818:117;14959:62;15013:7;15004:6;14993:9;14989:22;14959:62;:::i;:::-;14949:72;;14744:287;14095:943;;;;;;;:::o;15044:474::-;15112:6;15120;15169:2;15157:9;15148:7;15144:23;15140:32;15137:119;;;15175:79;;:::i;:::-;15137:119;15295:1;15320:53;15365:7;15356:6;15345:9;15341:22;15320:53;:::i;:::-;15310:63;;15266:117;15422:2;15448:53;15493:7;15484:6;15473:9;15469:22;15448:53;:::i;:::-;15438:63;;15393:118;15044:474;;;;;:::o;15524:180::-;15572:77;15569:1;15562:88;15669:4;15666:1;15659:15;15693:4;15690:1;15683:15;15710:320;15754:6;15791:1;15785:4;15781:12;15771:22;;15838:1;15832:4;15828:12;15859:18;15849:81;;15915:4;15907:6;15903:17;15893:27;;15849:81;15977:2;15969:6;15966:14;15946:18;15943:38;15940:84;;15996:18;;:::i;:::-;15940:84;15761:269;15710:320;;;:::o;16036:220::-;16176:34;16172:1;16164:6;16160:14;16153:58;16245:3;16240:2;16232:6;16228:15;16221:28;16036:220;:::o;16262:366::-;16404:3;16425:67;16489:2;16484:3;16425:67;:::i;:::-;16418:74;;16501:93;16590:3;16501:93;:::i;:::-;16619:2;16614:3;16610:12;16603:19;;16262:366;;;:::o;16634:419::-;16800:4;16838:2;16827:9;16823:18;16815:26;;16887:9;16881:4;16877:20;16873:1;16862:9;16858:17;16851:47;16915:131;17041:4;16915:131;:::i;:::-;16907:139;;16634:419;;;:::o;17059:249::-;17199:34;17195:1;17187:6;17183:14;17176:58;17268:32;17263:2;17255:6;17251:15;17244:57;17059:249;:::o;17314:366::-;17456:3;17477:67;17541:2;17536:3;17477:67;:::i;:::-;17470:74;;17553:93;17642:3;17553:93;:::i;:::-;17671:2;17666:3;17662:12;17655:19;;17314:366;;;:::o;17686:419::-;17852:4;17890:2;17879:9;17875:18;17867:26;;17939:9;17933:4;17929:20;17925:1;17914:9;17910:17;17903:47;17967:131;18093:4;17967:131;:::i;:::-;17959:139;;17686:419;;;:::o;18111:180::-;18159:77;18156:1;18149:88;18256:4;18253:1;18246:15;18280:4;18277:1;18270:15;18297:180;18345:77;18342:1;18335:88;18442:4;18439:1;18432:15;18466:4;18463:1;18456:15;18483:233;18522:3;18545:24;18563:5;18545:24;:::i;:::-;18536:33;;18591:66;18584:5;18581:77;18578:103;;18661:18;;:::i;:::-;18578:103;18708:1;18701:5;18697:13;18690:20;;18483:233;;;:::o;18722:::-;18862:34;18858:1;18850:6;18846:14;18839:58;18931:16;18926:2;18918:6;18914:15;18907:41;18722:233;:::o;18961:366::-;19103:3;19124:67;19188:2;19183:3;19124:67;:::i;:::-;19117:74;;19200:93;19289:3;19200:93;:::i;:::-;19318:2;19313:3;19309:12;19302:19;;18961:366;;;:::o;19333:419::-;19499:4;19537:2;19526:9;19522:18;19514:26;;19586:9;19580:4;19576:20;19572:1;19561:9;19557:17;19550:47;19614:131;19740:4;19614:131;:::i;:::-;19606:139;;19333:419;;;:::o;19758:230::-;19898:34;19894:1;19886:6;19882:14;19875:58;19967:13;19962:2;19954:6;19950:15;19943:38;19758:230;:::o;19994:366::-;20136:3;20157:67;20221:2;20216:3;20157:67;:::i;:::-;20150:74;;20233:93;20322:3;20233:93;:::i;:::-;20351:2;20346:3;20342:12;20335:19;;19994:366;;;:::o;20366:419::-;20532:4;20570:2;20559:9;20555:18;20547:26;;20619:9;20613:4;20609:20;20605:1;20594:9;20590:17;20583:47;20647:131;20773:4;20647:131;:::i;:::-;20639:139;;20366:419;;;:::o;20791:231::-;20931:34;20927:1;20919:6;20915:14;20908:58;21000:14;20995:2;20987:6;20983:15;20976:39;20791:231;:::o;21028:366::-;21170:3;21191:67;21255:2;21250:3;21191:67;:::i;:::-;21184:74;;21267:93;21356:3;21267:93;:::i;:::-;21385:2;21380:3;21376:12;21369:19;;21028:366;;;:::o;21400:419::-;21566:4;21604:2;21593:9;21589:18;21581:26;;21653:9;21647:4;21643:20;21639:1;21628:9;21624:17;21617:47;21681:131;21807:4;21681:131;:::i;:::-;21673:139;;21400:419;;;:::o;21825:169::-;21965:21;21961:1;21953:6;21949:14;21942:45;21825:169;:::o;22000:366::-;22142:3;22163:67;22227:2;22222:3;22163:67;:::i;:::-;22156:74;;22239:93;22328:3;22239:93;:::i;:::-;22357:2;22352:3;22348:12;22341:19;;22000:366;;;:::o;22372:419::-;22538:4;22576:2;22565:9;22561:18;22553:26;;22625:9;22619:4;22615:20;22611:1;22600:9;22596:17;22589:47;22653:131;22779:4;22653:131;:::i;:::-;22645:139;;22372:419;;;:::o;22797:174::-;22937:26;22933:1;22925:6;22921:14;22914:50;22797:174;:::o;22977:366::-;23119:3;23140:67;23204:2;23199:3;23140:67;:::i;:::-;23133:74;;23216:93;23305:3;23216:93;:::i;:::-;23334:2;23329:3;23325:12;23318:19;;22977:366;;;:::o;23349:419::-;23515:4;23553:2;23542:9;23538:18;23530:26;;23602:9;23596:4;23592:20;23588:1;23577:9;23573:17;23566:47;23630:131;23756:4;23630:131;:::i;:::-;23622:139;;23349:419;;;:::o;23774:175::-;23914:27;23910:1;23902:6;23898:14;23891:51;23774:175;:::o;23955:366::-;24097:3;24118:67;24182:2;24177:3;24118:67;:::i;:::-;24111:74;;24194:93;24283:3;24194:93;:::i;:::-;24312:2;24307:3;24303:12;24296:19;;23955:366;;;:::o;24327:419::-;24493:4;24531:2;24520:9;24516:18;24508:26;;24580:9;24574:4;24570:20;24566:1;24555:9;24551:17;24544:47;24608:131;24734:4;24608:131;:::i;:::-;24600:139;;24327:419;;;:::o;24752:173::-;24892:25;24888:1;24880:6;24876:14;24869:49;24752:173;:::o;24931:366::-;25073:3;25094:67;25158:2;25153:3;25094:67;:::i;:::-;25087:74;;25170:93;25259:3;25170:93;:::i;:::-;25288:2;25283:3;25279:12;25272:19;;24931:366;;;:::o;25303:419::-;25469:4;25507:2;25496:9;25492:18;25484:26;;25556:9;25550:4;25546:20;25542:1;25531:9;25527:17;25520:47;25584:131;25710:4;25584:131;:::i;:::-;25576:139;;25303:419;;;:::o;25728:171::-;25868:23;25864:1;25856:6;25852:14;25845:47;25728:171;:::o;25905:366::-;26047:3;26068:67;26132:2;26127:3;26068:67;:::i;:::-;26061:74;;26144:93;26233:3;26144:93;:::i;:::-;26262:2;26257:3;26253:12;26246:19;;25905:366;;;:::o;26277:419::-;26443:4;26481:2;26470:9;26466:18;26458:26;;26530:9;26524:4;26520:20;26516:1;26505:9;26501:17;26494:47;26558:131;26684:4;26558:131;:::i;:::-;26550:139;;26277:419;;;:::o;26702:174::-;26842:26;26838:1;26830:6;26826:14;26819:50;26702:174;:::o;26882:366::-;27024:3;27045:67;27109:2;27104:3;27045:67;:::i;:::-;27038:74;;27121:93;27210:3;27121:93;:::i;:::-;27239:2;27234:3;27230:12;27223:19;;26882:366;;;:::o;27254:419::-;27420:4;27458:2;27447:9;27443:18;27435:26;;27507:9;27501:4;27497:20;27493:1;27482:9;27478:17;27471:47;27535:131;27661:4;27535:131;:::i;:::-;27527:139;;27254:419;;;:::o;27679:228::-;27819:34;27815:1;27807:6;27803:14;27796:58;27888:11;27883:2;27875:6;27871:15;27864:36;27679:228;:::o;27913:366::-;28055:3;28076:67;28140:2;28135:3;28076:67;:::i;:::-;28069:74;;28152:93;28241:3;28152:93;:::i;:::-;28270:2;28265:3;28261:12;28254:19;;27913:366;;;:::o;28285:419::-;28451:4;28489:2;28478:9;28474:18;28466:26;;28538:9;28532:4;28528:20;28524:1;28513:9;28509:17;28502:47;28566:131;28692:4;28566:131;:::i;:::-;28558:139;;28285:419;;;:::o;28710:223::-;28850:34;28846:1;28838:6;28834:14;28827:58;28919:6;28914:2;28906:6;28902:15;28895:31;28710:223;:::o;28939:366::-;29081:3;29102:67;29166:2;29161:3;29102:67;:::i;:::-;29095:74;;29178:93;29267:3;29178:93;:::i;:::-;29296:2;29291:3;29287:12;29280:19;;28939:366;;;:::o;29311:419::-;29477:4;29515:2;29504:9;29500:18;29492:26;;29564:9;29558:4;29554:20;29550:1;29539:9;29535:17;29528:47;29592:131;29718:4;29592:131;:::i;:::-;29584:139;;29311:419;;;:::o;29736:181::-;29876:33;29872:1;29864:6;29860:14;29853:57;29736:181;:::o;29923:366::-;30065:3;30086:67;30150:2;30145:3;30086:67;:::i;:::-;30079:74;;30162:93;30251:3;30162:93;:::i;:::-;30280:2;30275:3;30271:12;30264:19;;29923:366;;;:::o;30295:419::-;30461:4;30499:2;30488:9;30484:18;30476:26;;30548:9;30542:4;30538:20;30534:1;30523:9;30519:17;30512:47;30576:131;30702:4;30576:131;:::i;:::-;30568:139;;30295:419;;;:::o;30720:169::-;30860:21;30856:1;30848:6;30844:14;30837:45;30720:169;:::o;30895:366::-;31037:3;31058:67;31122:2;31117:3;31058:67;:::i;:::-;31051:74;;31134:93;31223:3;31134:93;:::i;:::-;31252:2;31247:3;31243:12;31236:19;;30895:366;;;:::o;31267:419::-;31433:4;31471:2;31460:9;31456:18;31448:26;;31520:9;31514:4;31510:20;31506:1;31495:9;31491:17;31484:47;31548:131;31674:4;31548:131;:::i;:::-;31540:139;;31267:419;;;:::o;31692:141::-;31741:4;31764:3;31756:11;;31787:3;31784:1;31777:14;31821:4;31818:1;31808:18;31800:26;;31692:141;;;:::o;31839:93::-;31876:6;31923:2;31918;31911:5;31907:14;31903:23;31893:33;;31839:93;;;:::o;31938:107::-;31982:8;32032:5;32026:4;32022:16;32001:37;;31938:107;;;;:::o;32051:393::-;32120:6;32170:1;32158:10;32154:18;32193:97;32223:66;32212:9;32193:97;:::i;:::-;32311:39;32341:8;32330:9;32311:39;:::i;:::-;32299:51;;32383:4;32379:9;32372:5;32368:21;32359:30;;32432:4;32422:8;32418:19;32411:5;32408:30;32398:40;;32127:317;;32051:393;;;;;:::o;32450:60::-;32478:3;32499:5;32492:12;;32450:60;;;:::o;32516:142::-;32566:9;32599:53;32617:34;32626:24;32644:5;32626:24;:::i;:::-;32617:34;:::i;:::-;32599:53;:::i;:::-;32586:66;;32516:142;;;:::o;32664:75::-;32707:3;32728:5;32721:12;;32664:75;;;:::o;32745:269::-;32855:39;32886:7;32855:39;:::i;:::-;32916:91;32965:41;32989:16;32965:41;:::i;:::-;32957:6;32950:4;32944:11;32916:91;:::i;:::-;32910:4;32903:105;32821:193;32745:269;;;:::o;33020:73::-;33065:3;33020:73;:::o;33099:189::-;33176:32;;:::i;:::-;33217:65;33275:6;33267;33261:4;33217:65;:::i;:::-;33152:136;33099:189;;:::o;33294:186::-;33354:120;33371:3;33364:5;33361:14;33354:120;;;33425:39;33462:1;33455:5;33425:39;:::i;:::-;33398:1;33391:5;33387:13;33378:22;;33354:120;;;33294:186;;:::o;33486:543::-;33587:2;33582:3;33579:11;33576:446;;;33621:38;33653:5;33621:38;:::i;:::-;33705:29;33723:10;33705:29;:::i;:::-;33695:8;33691:44;33888:2;33876:10;33873:18;33870:49;;;33909:8;33894:23;;33870:49;33932:80;33988:22;34006:3;33988:22;:::i;:::-;33978:8;33974:37;33961:11;33932:80;:::i;:::-;33591:431;;33576:446;33486:543;;;:::o;34035:117::-;34089:8;34139:5;34133:4;34129:16;34108:37;;34035:117;;;;:::o;34158:169::-;34202:6;34235:51;34283:1;34279:6;34271:5;34268:1;34264:13;34235:51;:::i;:::-;34231:56;34316:4;34310;34306:15;34296:25;;34209:118;34158:169;;;;:::o;34332:295::-;34408:4;34554:29;34579:3;34573:4;34554:29;:::i;:::-;34546:37;;34616:3;34613:1;34609:11;34603:4;34600:21;34592:29;;34332:295;;;;:::o;34632:1395::-;34749:37;34782:3;34749:37;:::i;:::-;34851:18;34843:6;34840:30;34837:56;;;34873:18;;:::i;:::-;34837:56;34917:38;34949:4;34943:11;34917:38;:::i;:::-;35002:67;35062:6;35054;35048:4;35002:67;:::i;:::-;35096:1;35120:4;35107:17;;35152:2;35144:6;35141:14;35169:1;35164:618;;;;35826:1;35843:6;35840:77;;;35892:9;35887:3;35883:19;35877:26;35868:35;;35840:77;35943:67;36003:6;35996:5;35943:67;:::i;:::-;35937:4;35930:81;35799:222;35134:887;;35164:618;35216:4;35212:9;35204:6;35200:22;35250:37;35282:4;35250:37;:::i;:::-;35309:1;35323:208;35337:7;35334:1;35331:14;35323:208;;;35416:9;35411:3;35407:19;35401:26;35393:6;35386:42;35467:1;35459:6;35455:14;35445:24;;35514:2;35503:9;35499:18;35486:31;;35360:4;35357:1;35353:12;35348:17;;35323:208;;;35559:6;35550:7;35547:19;35544:179;;;35617:9;35612:3;35608:19;35602:26;35660:48;35702:4;35694:6;35690:17;35679:9;35660:48;:::i;:::-;35652:6;35645:64;35567:156;35544:179;35769:1;35765;35757:6;35753:14;35749:22;35743:4;35736:36;35171:611;;;35134:887;;34724:1303;;;34632:1395;;:::o;36033:533::-;36202:4;36240:2;36229:9;36225:18;36217:26;;36289:9;36283:4;36279:20;36275:1;36264:9;36260:17;36253:47;36317:78;36390:4;36381:6;36317:78;:::i;:::-;36309:86;;36405:72;36473:2;36462:9;36458:18;36449:6;36405:72;:::i;:::-;36487;36555:2;36544:9;36540:18;36531:6;36487:72;:::i;:::-;36033:533;;;;;;:::o;36572:220::-;36712:34;36708:1;36700:6;36696:14;36689:58;36781:3;36776:2;36768:6;36764:15;36757:28;36572:220;:::o;36798:366::-;36940:3;36961:67;37025:2;37020:3;36961:67;:::i;:::-;36954:74;;37037:93;37126:3;37037:93;:::i;:::-;37155:2;37150:3;37146:12;37139:19;;36798:366;;;:::o;37170:419::-;37336:4;37374:2;37363:9;37359:18;37351:26;;37423:9;37417:4;37413:20;37409:1;37398:9;37394:17;37387:47;37451:131;37577:4;37451:131;:::i;:::-;37443:139;;37170:419;;;:::o;37595:168::-;37735:20;37731:1;37723:6;37719:14;37712:44;37595:168;:::o;37769:366::-;37911:3;37932:67;37996:2;37991:3;37932:67;:::i;:::-;37925:74;;38008:93;38097:3;38008:93;:::i;:::-;38126:2;38121:3;38117:12;38110:19;;37769:366;;;:::o;38141:419::-;38307:4;38345:2;38334:9;38330:18;38322:26;;38394:9;38388:4;38384:20;38380:1;38369:9;38365:17;38358:47;38422:131;38548:4;38422:131;:::i;:::-;38414:139;;38141:419;;;:::o;38566:225::-;38706:34;38702:1;38694:6;38690:14;38683:58;38775:8;38770:2;38762:6;38758:15;38751:33;38566:225;:::o;38797:366::-;38939:3;38960:67;39024:2;39019:3;38960:67;:::i;:::-;38953:74;;39036:93;39125:3;39036:93;:::i;:::-;39154:2;39149:3;39145:12;39138:19;;38797:366;;;:::o;39169:419::-;39335:4;39373:2;39362:9;39358:18;39350:26;;39422:9;39416:4;39412:20;39408:1;39397:9;39393:17;39386:47;39450:131;39576:4;39450:131;:::i;:::-;39442:139;;39169:419;;;:::o;39594:224::-;39734:34;39730:1;39722:6;39718:14;39711:58;39803:7;39798:2;39790:6;39786:15;39779:32;39594:224;:::o;39824:366::-;39966:3;39987:67;40051:2;40046:3;39987:67;:::i;:::-;39980:74;;40063:93;40152:3;40063:93;:::i;:::-;40181:2;40176:3;40172:12;40165:19;;39824:366;;;:::o;40196:419::-;40362:4;40400:2;40389:9;40385:18;40377:26;;40449:9;40443:4;40439:20;40435:1;40424:9;40420:17;40413:47;40477:131;40603:4;40477:131;:::i;:::-;40469:139;;40196:419;;;:::o;40621:223::-;40761:34;40757:1;40749:6;40745:14;40738:58;40830:6;40825:2;40817:6;40813:15;40806:31;40621:223;:::o;40850:366::-;40992:3;41013:67;41077:2;41072:3;41013:67;:::i;:::-;41006:74;;41089:93;41178:3;41089:93;:::i;:::-;41207:2;41202:3;41198:12;41191:19;;40850:366;;;:::o;41222:419::-;41388:4;41426:2;41415:9;41411:18;41403:26;;41475:9;41469:4;41465:20;41461:1;41450:9;41446:17;41439:47;41503:131;41629:4;41503:131;:::i;:::-;41495:139;;41222:419;;;:::o;41647:194::-;41687:4;41707:20;41725:1;41707:20;:::i;:::-;41702:25;;41741:20;41759:1;41741:20;:::i;:::-;41736:25;;41785:1;41782;41778:9;41770:17;;41809:1;41803:4;41800:11;41797:37;;;41814:18;;:::i;:::-;41797:37;41647:194;;;;:::o;41847:191::-;41887:3;41906:20;41924:1;41906:20;:::i;:::-;41901:25;;41940:20;41958:1;41940:20;:::i;:::-;41935:25;;41983:1;41980;41976:9;41969:16;;42004:3;42001:1;41998:10;41995:36;;;42011:18;;:::i;:::-;41995:36;41847:191;;;;:::o;42044:182::-;42184:34;42180:1;42172:6;42168:14;42161:58;42044:182;:::o;42232:366::-;42374:3;42395:67;42459:2;42454:3;42395:67;:::i;:::-;42388:74;;42471:93;42560:3;42471:93;:::i;:::-;42589:2;42584:3;42580:12;42573:19;;42232:366;;;:::o;42604:419::-;42770:4;42808:2;42797:9;42793:18;42785:26;;42857:9;42851:4;42847:20;42843:1;42832:9;42828:17;42821:47;42885:131;43011:4;42885:131;:::i;:::-;42877:139;;42604:419;;;:::o;43029:175::-;43169:27;43165:1;43157:6;43153:14;43146:51;43029:175;:::o;43210:366::-;43352:3;43373:67;43437:2;43432:3;43373:67;:::i;:::-;43366:74;;43449:93;43538:3;43449:93;:::i;:::-;43567:2;43562:3;43558:12;43551:19;;43210:366;;;:::o;43582:419::-;43748:4;43786:2;43775:9;43771:18;43763:26;;43835:9;43829:4;43825:20;43821:1;43810:9;43806:17;43799:47;43863:131;43989:4;43863:131;:::i;:::-;43855:139;;43582:419;;;:::o;44007:237::-;44147:34;44143:1;44135:6;44131:14;44124:58;44216:20;44211:2;44203:6;44199:15;44192:45;44007:237;:::o;44250:366::-;44392:3;44413:67;44477:2;44472:3;44413:67;:::i;:::-;44406:74;;44489:93;44578:3;44489:93;:::i;:::-;44607:2;44602:3;44598:12;44591:19;;44250:366;;;:::o;44622:419::-;44788:4;44826:2;44815:9;44811:18;44803:26;;44875:9;44869:4;44865:20;44861:1;44850:9;44846:17;44839:47;44903:131;45029:4;44903:131;:::i;:::-;44895:139;;44622:419;;;:::o;45047:148::-;45149:11;45186:3;45171:18;;45047:148;;;;:::o;45201:390::-;45307:3;45335:39;45368:5;45335:39;:::i;:::-;45390:89;45472:6;45467:3;45390:89;:::i;:::-;45383:96;;45488:65;45546:6;45541:3;45534:4;45527:5;45523:16;45488:65;:::i;:::-;45578:6;45573:3;45569:16;45562:23;;45311:280;45201:390;;;;:::o;45597:435::-;45777:3;45799:95;45890:3;45881:6;45799:95;:::i;:::-;45792:102;;45911:95;46002:3;45993:6;45911:95;:::i;:::-;45904:102;;46023:3;46016:10;;45597:435;;;;;:::o;46038:233::-;46178:34;46174:1;46166:6;46162:14;46155:58;46247:16;46242:2;46234:6;46230:15;46223:41;46038:233;:::o;46277:366::-;46419:3;46440:67;46504:2;46499:3;46440:67;:::i;:::-;46433:74;;46516:93;46605:3;46516:93;:::i;:::-;46634:2;46629:3;46625:12;46618:19;;46277:366;;;:::o;46649:419::-;46815:4;46853:2;46842:9;46838:18;46830:26;;46902:9;46896:4;46892:20;46888:1;46877:9;46873:17;46866:47;46930:131;47056:4;46930:131;:::i;:::-;46922:139;;46649:419;;;:::o;47074:98::-;47125:6;47159:5;47153:12;47143:22;;47074:98;;;:::o;47178:168::-;47261:11;47295:6;47290:3;47283:19;47335:4;47330:3;47326:14;47311:29;;47178:168;;;;:::o;47352:373::-;47438:3;47466:38;47498:5;47466:38;:::i;:::-;47520:70;47583:6;47578:3;47520:70;:::i;:::-;47513:77;;47599:65;47657:6;47652:3;47645:4;47638:5;47634:16;47599:65;:::i;:::-;47689:29;47711:6;47689:29;:::i;:::-;47684:3;47680:39;47673:46;;47442:283;47352:373;;;;:::o;47731:640::-;47926:4;47964:3;47953:9;47949:19;47941:27;;47978:71;48046:1;48035:9;48031:17;48022:6;47978:71;:::i;:::-;48059:72;48127:2;48116:9;48112:18;48103:6;48059:72;:::i;:::-;48141;48209:2;48198:9;48194:18;48185:6;48141:72;:::i;:::-;48260:9;48254:4;48250:20;48245:2;48234:9;48230:18;48223:48;48288:76;48359:4;48350:6;48288:76;:::i;:::-;48280:84;;47731:640;;;;;;;:::o;48377:141::-;48433:5;48464:6;48458:13;48449:22;;48480:32;48506:5;48480:32;:::i;:::-;48377:141;;;;:::o;48524:349::-;48593:6;48642:2;48630:9;48621:7;48617:23;48613:32;48610:119;;;48648:79;;:::i;:::-;48610:119;48768:1;48793:63;48848:7;48839:6;48828:9;48824:22;48793:63;:::i;:::-;48783:73;;48739:127;48524:349;;;;:::o;48879:180::-;48927:77;48924:1;48917:88;49024:4;49021:1;49014:15;49048:4;49045:1;49038:15;49065:185;49105:1;49122:20;49140:1;49122:20;:::i;:::-;49117:25;;49156:20;49174:1;49156:20;:::i;:::-;49151:25;;49195:1;49185:35;;49200:18;;:::i;:::-;49185:35;49242:1;49239;49235:9;49230:14;;49065:185;;;;:::o;49256:176::-;49288:1;49305:20;49323:1;49305:20;:::i;:::-;49300:25;;49339:20;49357:1;49339:20;:::i;:::-;49334:25;;49378:1;49368:35;;49383:18;;:::i;:::-;49368:35;49424:1;49421;49417:9;49412:14;;49256:176;;;;:::o;49438:182::-;49578:34;49574:1;49566:6;49562:14;49555:58;49438:182;:::o;49626:366::-;49768:3;49789:67;49853:2;49848:3;49789:67;:::i;:::-;49782:74;;49865:93;49954:3;49865:93;:::i;:::-;49983:2;49978:3;49974:12;49967:19;;49626:366;;;:::o;49998:419::-;50164:4;50202:2;50191:9;50187:18;50179:26;;50251:9;50245:4;50241:20;50237:1;50226:9;50222:17;50215:47;50279:131;50405:4;50279:131;:::i;:::-;50271:139;;49998:419;;;:::o;50423:178::-;50563:30;50559:1;50551:6;50547:14;50540:54;50423:178;:::o;50607:366::-;50749:3;50770:67;50834:2;50829:3;50770:67;:::i;:::-;50763:74;;50846:93;50935:3;50846:93;:::i;:::-;50964:2;50959:3;50955:12;50948:19;;50607:366;;;:::o;50979:419::-;51145:4;51183:2;51172:9;51168:18;51160:26;;51232:9;51226:4;51222:20;51218:1;51207:9;51203:17;51196:47;51260:131;51386:4;51260:131;:::i;:::-;51252:139;;50979:419;;;:::o;51404:180::-;51452:77;51449:1;51442:88;51549:4;51546:1;51539:15;51573:4;51570:1;51563:15"},"gasEstimates":{"creation":{"codeDepositCost":"3829000","executionCost":"infinite","totalCost":"infinite"},"external":{"approve(address,uint256)":"infinite","balanceOf(address)":"2922","buyNFT(uint256)":"infinite","courses(uint256)":"infinite","createCourse(string,uint256,uint256)":"infinite","currentCourseId()":"2497","currentTokenId()":"2476","getApproved(uint256)":"5302","getCourseDetails(uint256)":"infinite","getNFTOwner(uint256)":"3021","getNFTSalePrice(uint256)":"infinite","getOwnedNFTs(address)":"infinite","isApprovedForAll(address,address)":"infinite","listNFTForSale(uint256,uint256)":"infinite","mintCourse(uint256)":"infinite","name()":"infinite","owner()":"2634","ownerOf(uint256)":"3067","renounceOwnership()":"30488","safeTransferFrom(address,address,uint256)":"infinite","safeTransferFrom(address,address,uint256,bytes)":"infinite","secondaryMarketPrices(uint256)":"infinite","secondaryMarketSellers(uint256)":"2884","setApprovalForAll(address,bool)":"infinite","supportsInterface(bytes4)":"974","symbol()":"infinite","tokenByIndex(uint256)":"infinite","tokenOfOwnerByIndex(address,uint256)":"infinite","tokenURI(uint256)":"infinite","totalSupply()":"2535","transferFrom(address,address,uint256)":"infinite","transferOwnership(address)":"30854"},"internal":{"_beforeTokenTransfer(address,address,uint256)":"infinite","_burn(uint256)":"infinite"}},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","buyNFT(uint256)":"51ed8288","courses(uint256)":"96f979d2","createCourse(string,uint256,uint256)":"ae0ec5e4","currentCourseId()":"2f77f003","currentTokenId()":"009a9b7b","getApproved(uint256)":"081812fc","getCourseDetails(uint256)":"610b31a6","getNFTOwner(uint256)":"deaea2e3","getNFTSalePrice(uint256)":"b25360df","getOwnedNFTs(address)":"18148f1b","isApprovedForAll(address,address)":"e985e9c5","listNFTForSale(uint256,uint256)":"b2733b39","mintCourse(uint256)":"e71ef657","name()":"06fdde03","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","renounceOwnership()":"715018a6","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","secondaryMarketPrices(uint256)":"71267f1f","secondaryMarketSellers(uint256)":"50e35181","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenByIndex(uint256)":"4f6ccce7","tokenOfOwnerByIndex(address,uint256)":"2f745c59","tokenURI(uint256)":"c87b56dd","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"courseId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"}],\"name\":\"CourseCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"name\":\"NFTListedForSale\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"courseId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"NFTMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"name\":\"NFTSold\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"buyNFT\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"courses\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minted\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"}],\"name\":\"createCourse\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentCourseId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"courseId\",\"type\":\"uint256\"}],\"name\":\"getCourseDetails\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getNFTOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getNFTSalePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getOwnedNFTs\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"listNFTForSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"courseId\",\"type\":\"uint256\"}],\"name\":\"mintCourse\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"secondaryMarketPrices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"secondaryMarketSellers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"supportsInterface(bytes4)\":{\"notice\":\"Override for ERC721Enumerable\"},\"tokenURI(uint256)\":{\"notice\":\"Override for ERC721URIStorage\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Marketplace.sol\":\"Marketplace\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: address zero is not a valid owner\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _owners[tokenId];\\n        require(owner != address(0), \\\"ERC721: invalid token ID\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not token owner nor approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        _requireMinted(tokenId);\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner nor approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner nor approved\\\");\\n        _safeTransfer(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _owners[tokenId] != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId);\\n\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId);\\n\\n        // Clear approvals\\n        _approve(address(0), tokenId);\\n\\n        _balances[owner] -= 1;\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId);\\n\\n        // Clear approvals from the previous owner\\n        _approve(address(0), tokenId);\\n\\n        _balances[from] -= 1;\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(\\n        address owner,\\n        address operator,\\n        bool approved\\n    ) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` has not been minted yet.\\n     */\\n    function _requireMinted(uint256 tokenId) internal view virtual {\\n        require(_exists(tokenId), \\\"ERC721: invalid token ID\\\");\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x0b606994df12f0ce35f6d2f6dcdde7e55e6899cdef7e00f180980caa81e3844e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/ERC721Enumerable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC721.sol\\\";\\nimport \\\"./IERC721Enumerable.sol\\\";\\n\\n/**\\n * @dev This implements an optional extension of {ERC721} defined in the EIP that adds\\n * enumerability of all the token ids in the contract as well as all token ids owned by each\\n * account.\\n */\\nabstract contract ERC721Enumerable is ERC721, IERC721Enumerable {\\n    // Mapping from owner to list of owned token IDs\\n    mapping(address => mapping(uint256 => uint256)) private _ownedTokens;\\n\\n    // Mapping from token ID to index of the owner tokens list\\n    mapping(uint256 => uint256) private _ownedTokensIndex;\\n\\n    // Array with all token ids, used for enumeration\\n    uint256[] private _allTokens;\\n\\n    // Mapping from token id to position in the allTokens array\\n    mapping(uint256 => uint256) private _allTokensIndex;\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {\\n        return interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.\\n     */\\n    function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual override returns (uint256) {\\n        require(index < ERC721.balanceOf(owner), \\\"ERC721Enumerable: owner index out of bounds\\\");\\n        return _ownedTokens[owner][index];\\n    }\\n\\n    /**\\n     * @dev See {IERC721Enumerable-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _allTokens.length;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Enumerable-tokenByIndex}.\\n     */\\n    function tokenByIndex(uint256 index) public view virtual override returns (uint256) {\\n        require(index < ERC721Enumerable.totalSupply(), \\\"ERC721Enumerable: global index out of bounds\\\");\\n        return _allTokens[index];\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual override {\\n        super._beforeTokenTransfer(from, to, tokenId);\\n\\n        if (from == address(0)) {\\n            _addTokenToAllTokensEnumeration(tokenId);\\n        } else if (from != to) {\\n            _removeTokenFromOwnerEnumeration(from, tokenId);\\n        }\\n        if (to == address(0)) {\\n            _removeTokenFromAllTokensEnumeration(tokenId);\\n        } else if (to != from) {\\n            _addTokenToOwnerEnumeration(to, tokenId);\\n        }\\n    }\\n\\n    /**\\n     * @dev Private function to add a token to this extension's ownership-tracking data structures.\\n     * @param to address representing the new owner of the given token ID\\n     * @param tokenId uint256 ID of the token to be added to the tokens list of the given address\\n     */\\n    function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {\\n        uint256 length = ERC721.balanceOf(to);\\n        _ownedTokens[to][length] = tokenId;\\n        _ownedTokensIndex[tokenId] = length;\\n    }\\n\\n    /**\\n     * @dev Private function to add a token to this extension's token tracking data structures.\\n     * @param tokenId uint256 ID of the token to be added to the tokens list\\n     */\\n    function _addTokenToAllTokensEnumeration(uint256 tokenId) private {\\n        _allTokensIndex[tokenId] = _allTokens.length;\\n        _allTokens.push(tokenId);\\n    }\\n\\n    /**\\n     * @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\\n     * while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\\n     * gas optimizations e.g. when performing a transfer operation (avoiding double writes).\\n     * This has O(1) time complexity, but alters the order of the _ownedTokens array.\\n     * @param from address representing the previous owner of the given token ID\\n     * @param tokenId uint256 ID of the token to be removed from the tokens list of the given address\\n     */\\n    function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {\\n        // To prevent a gap in from's tokens array, we store the last token in the index of the token to delete, and\\n        // then delete the last slot (swap and pop).\\n\\n        uint256 lastTokenIndex = ERC721.balanceOf(from) - 1;\\n        uint256 tokenIndex = _ownedTokensIndex[tokenId];\\n\\n        // When the token to delete is the last token, the swap operation is unnecessary\\n        if (tokenIndex != lastTokenIndex) {\\n            uint256 lastTokenId = _ownedTokens[from][lastTokenIndex];\\n\\n            _ownedTokens[from][tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\\n            _ownedTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\\n        }\\n\\n        // This also deletes the contents at the last position of the array\\n        delete _ownedTokensIndex[tokenId];\\n        delete _ownedTokens[from][lastTokenIndex];\\n    }\\n\\n    /**\\n     * @dev Private function to remove a token from this extension's token tracking data structures.\\n     * This has O(1) time complexity, but alters the order of the _allTokens array.\\n     * @param tokenId uint256 ID of the token to be removed from the tokens list\\n     */\\n    function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {\\n        // To prevent a gap in the tokens array, we store the last token in the index of the token to delete, and\\n        // then delete the last slot (swap and pop).\\n\\n        uint256 lastTokenIndex = _allTokens.length - 1;\\n        uint256 tokenIndex = _allTokensIndex[tokenId];\\n\\n        // When the token to delete is the last token, the swap operation is unnecessary. However, since this occurs so\\n        // rarely (when the last minted token is burnt) that we still do the swap here to avoid the gas cost of adding\\n        // an 'if' statement (like in _removeTokenFromOwnerEnumeration)\\n        uint256 lastTokenId = _allTokens[lastTokenIndex];\\n\\n        _allTokens[tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\\n        _allTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\\n\\n        // This also deletes the contents at the last position of the array\\n        delete _allTokensIndex[tokenId];\\n        _allTokens.pop();\\n    }\\n}\\n\",\"keccak256\":\"0x0a79511df8151b10b0a0004d6a76ad956582d32824af4c0f4886bdbdfe5746e5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/extensions/ERC721URIStorage.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC721.sol\\\";\\n\\n/**\\n * @dev ERC721 token with storage based token URI management.\\n */\\nabstract contract ERC721URIStorage is ERC721 {\\n    using Strings for uint256;\\n\\n    // Optional mapping for token URIs\\n    mapping(uint256 => string) private _tokenURIs;\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory _tokenURI = _tokenURIs[tokenId];\\n        string memory base = _baseURI();\\n\\n        // If there is no base URI, return the token URI.\\n        if (bytes(base).length == 0) {\\n            return _tokenURI;\\n        }\\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\\n        if (bytes(_tokenURI).length > 0) {\\n            return string(abi.encodePacked(base, _tokenURI));\\n        }\\n\\n        return super.tokenURI(tokenId);\\n    }\\n\\n    /**\\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\\n        require(_exists(tokenId), \\\"ERC721URIStorage: URI set of nonexistent token\\\");\\n        _tokenURIs[tokenId] = _tokenURI;\\n    }\\n\\n    /**\\n     * @dev See {ERC721-_burn}. This override additionally checks to see if a\\n     * token-specific URI was set for the token, and if so, it deletes the token URI from\\n     * the storage mapping.\\n     */\\n    function _burn(uint256 tokenId) internal virtual override {\\n        super._burn(tokenId);\\n\\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\\n            delete _tokenURIs[tokenId];\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x5c3501c1b70fcfc64417e9da5cc6a3597191baa354781e508e1e14cc0e50a038\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC721/extensions/IERC721Enumerable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Enumerable is IERC721 {\\n    /**\\n     * @dev Returns the total amount of tokens stored by the contract.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\\n     */\\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\\n     * Use along with {totalSupply} to enumerate all tokens.\\n     */\\n    function tokenByIndex(uint256 index) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/Marketplace.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.18;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract Marketplace is ERC721Enumerable, ERC721URIStorage, Ownable {\\n    struct Course {\\n        string uri;\\n        uint256 price;\\n        uint256 maxSupply;\\n        uint256 minted;\\n    }\\n\\n    uint256 public currentCourseId;\\n    uint256 public currentTokenId;\\n    mapping(uint256 => Course) public courses;\\n    mapping(uint256 => address) public secondaryMarketSellers;\\n    mapping(uint256 => uint256) public secondaryMarketPrices;\\n\\n    event CourseCreated(uint256 indexed courseId, string uri, uint256 price, uint256 maxSupply);\\n    event NFTMinted(uint256 indexed courseId, uint256 tokenId, address indexed owner);\\n    event NFTListedForSale(uint256 indexed tokenId, uint256 price, address indexed seller);\\n    event NFTSold(uint256 indexed tokenId, address indexed buyer, address indexed seller);\\n\\n    constructor(string memory name, string memory symbol) ERC721(name, symbol) {}\\n\\n    /// @notice Override for ERC721Enumerable and ERC721URIStorage\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal override(ERC721, ERC721Enumerable) {\\n        super._beforeTokenTransfer(from, to, tokenId);\\n    }\\n\\n    /// @notice Override for ERC721URIStorage and ERC721\\n    function _burn(uint256 tokenId) internal override(ERC721, ERC721URIStorage) {\\n        super._burn(tokenId);\\n    }\\n\\n    /// @notice Override for ERC721URIStorage\\n    function tokenURI(uint256 tokenId)\\n        public\\n        view\\n        override(ERC721, ERC721URIStorage)\\n        returns (string memory)\\n    {\\n        return super.tokenURI(tokenId);\\n    }\\n\\n    /// @notice Override for ERC721Enumerable\\n    function supportsInterface(bytes4 interfaceId)\\n        public\\n        view\\n        override(ERC721, ERC721Enumerable)\\n        returns (bool)\\n    {\\n        return super.supportsInterface(interfaceId);\\n    }\\n\\n    // Yeni bir kurs olu\\u015ftur\\n    function createCourse(string memory uri, uint256 price, uint256 maxSupply) public onlyOwner {\\n        require(maxSupply > 0, \\\"Max supply must be greater than zero\\\");\\n        require(price > 0, \\\"Price must be greater than zero\\\");\\n        require(bytes(uri).length > 0, \\\"URI cannot be empty\\\");\\n\\n        currentCourseId++;\\n        courses[currentCourseId] = Course(uri, price, maxSupply, 0);\\n\\n        emit CourseCreated(currentCourseId, uri, price, maxSupply);\\n    }\\n\\n    // Kurs i\\u00e7in NFT mint et\\n    function mintCourse(uint256 courseId) public payable {\\n        Course storage course = courses[courseId];\\n        require(course.maxSupply > 0, \\\"Course does not exist\\\");\\n        require(course.minted < course.maxSupply, \\\"Max supply reached\\\");\\n        require(msg.value == course.price, \\\"Incorrect payment amount\\\");\\n\\n        uint256 tokenId = ++currentTokenId;\\n        course.minted++;\\n\\n        _safeMint(msg.sender, tokenId);\\n        _setTokenURI(tokenId, course.uri); // URI'yi NFT'ye ba\\u011fla\\n\\n        emit NFTMinted(courseId, tokenId, msg.sender);\\n    }\\n\\n    // NFT'yi ikinci el sat\\u0131\\u015fa koy\\n    function listNFTForSale(uint256 tokenId, uint256 price) public {\\n        require(ownerOf(tokenId) == msg.sender, \\\"You are not the owner of this NFT\\\");\\n        require(price > 0, \\\"Price must be greater than zero\\\");\\n\\n        secondaryMarketSellers[tokenId] = msg.sender;\\n        secondaryMarketPrices[tokenId] = price;\\n\\n        emit NFTListedForSale(tokenId, price, msg.sender);\\n    }\\n\\n    // \\u0130kinci el piyasadan NFT sat\\u0131n al\\n    function buyNFT(uint256 tokenId) public payable {\\n        require(secondaryMarketPrices[tokenId] > 0, \\\"NFT is not for sale\\\");\\n        require(msg.value == secondaryMarketPrices[tokenId], \\\"Incorrect payment amount\\\");\\n\\n        address seller = secondaryMarketSellers[tokenId];\\n        require(seller != address(0), \\\"Seller address is invalid\\\");\\n        require(seller != msg.sender, \\\"Cannot buy your own NFT\\\");\\n\\n        _transfer(seller, msg.sender, tokenId);\\n        payable(seller).transfer(msg.value);\\n\\n        delete secondaryMarketPrices[tokenId];\\n        delete secondaryMarketSellers[tokenId];\\n\\n        emit NFTSold(tokenId, msg.sender, seller);\\n    }\\n\\n    // Kurs detaylar\\u0131n\\u0131 al\\n    function getCourseDetails(uint256 courseId)\\n        public\\n        view\\n        returns (string memory, uint256, uint256, uint256)\\n    {\\n        Course storage course = courses[courseId];\\n        require(course.maxSupply > 0, \\\"Course does not exist\\\");\\n        return (course.uri, course.price, course.maxSupply, course.minted);\\n    }\\n\\n    // Belirli bir NFT'nin sat\\u0131\\u015f fiyat\\u0131n\\u0131 al\\n    function getNFTSalePrice(uint256 tokenId) public view returns (uint256) {\\n        return secondaryMarketPrices[tokenId];\\n    }\\n\\n    // Belirli bir NFT'nin sahibini kontrol et\\n    function getNFTOwner(uint256 tokenId) public view returns (address) {\\n        return ownerOf(tokenId);\\n    }\\n\\n    // Kullan\\u0131c\\u0131n\\u0131n sahip oldu\\u011fu NFT'leri listele\\n    function getOwnedNFTs(address owner) public view returns (uint256[] memory) {\\n        uint256 balance = balanceOf(owner);\\n        uint256[] memory tokenIds = new uint256[](balance);\\n\\n        for (uint256 i = 0; i < balance; i++) {\\n            tokenIds[i] = tokenOfOwnerByIndex(owner, i);\\n        }\\n        return tokenIds;\\n    }\\n}\\n\",\"keccak256\":\"0x74035da5463571b23fb4a5f022f9332fbdd3a81663c4aa222a6bfe9947e62fd4\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":138,"contract":"contracts/Marketplace.sol:Marketplace","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":140,"contract":"contracts/Marketplace.sol:Marketplace","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":144,"contract":"contracts/Marketplace.sol:Marketplace","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":148,"contract":"contracts/Marketplace.sol:Marketplace","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":152,"contract":"contracts/Marketplace.sol:Marketplace","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":158,"contract":"contracts/Marketplace.sol:Marketplace","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":1128,"contract":"contracts/Marketplace.sol:Marketplace","label":"_ownedTokens","offset":0,"slot":"6","type":"t_mapping(t_address,t_mapping(t_uint256,t_uint256))"},{"astId":1132,"contract":"contracts/Marketplace.sol:Marketplace","label":"_ownedTokensIndex","offset":0,"slot":"7","type":"t_mapping(t_uint256,t_uint256)"},{"astId":1135,"contract":"contracts/Marketplace.sol:Marketplace","label":"_allTokens","offset":0,"slot":"8","type":"t_array(t_uint256)dyn_storage"},{"astId":1139,"contract":"contracts/Marketplace.sol:Marketplace","label":"_allTokensIndex","offset":0,"slot":"9","type":"t_mapping(t_uint256,t_uint256)"},{"astId":1464,"contract":"contracts/Marketplace.sol:Marketplace","label":"_tokenURIs","offset":0,"slot":"10","type":"t_mapping(t_uint256,t_string_storage)"},{"astId":7,"contract":"contracts/Marketplace.sol:Marketplace","label":"_owner","offset":0,"slot":"11","type":"t_address"},{"astId":2565,"contract":"contracts/Marketplace.sol:Marketplace","label":"currentCourseId","offset":0,"slot":"12","type":"t_uint256"},{"astId":2567,"contract":"contracts/Marketplace.sol:Marketplace","label":"currentTokenId","offset":0,"slot":"13","type":"t_uint256"},{"astId":2572,"contract":"contracts/Marketplace.sol:Marketplace","label":"courses","offset":0,"slot":"14","type":"t_mapping(t_uint256,t_struct(Course)2563_storage)"},{"astId":2576,"contract":"contracts/Marketplace.sol:Marketplace","label":"secondaryMarketSellers","offset":0,"slot":"15","type":"t_mapping(t_uint256,t_address)"},{"astId":2580,"contract":"contracts/Marketplace.sol:Marketplace","label":"secondaryMarketPrices","offset":0,"slot":"16","type":"t_mapping(t_uint256,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)dyn_storage":{"base":"t_uint256","encoding":"dynamic_array","label":"uint256[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_mapping(t_uint256,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(uint256 => uint256))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint256,t_string_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => string)","numberOfBytes":"32","value":"t_string_storage"},"t_mapping(t_uint256,t_struct(Course)2563_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct Marketplace.Course)","numberOfBytes":"32","value":"t_struct(Course)2563_storage"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Course)2563_storage":{"encoding":"inplace","label":"struct Marketplace.Course","members":[{"astId":2556,"contract":"contracts/Marketplace.sol:Marketplace","label":"uri","offset":0,"slot":"0","type":"t_string_storage"},{"astId":2558,"contract":"contracts/Marketplace.sol:Marketplace","label":"price","offset":0,"slot":"1","type":"t_uint256"},{"astId":2560,"contract":"contracts/Marketplace.sol:Marketplace","label":"maxSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":2562,"contract":"contracts/Marketplace.sol:Marketplace","label":"minted","offset":0,"slot":"3","type":"t_uint256"}],"numberOfBytes":"128"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{"supportsInterface(bytes4)":{"notice":"Override for ERC721Enumerable"},"tokenURI(uint256)":{"notice":"Override for ERC721URIStorage"}},"version":1}}}}}}